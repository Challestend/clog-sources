{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123095924037-1618037447.png","path":"img/1309909-20180123095924037-1618037447.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123095955350-1680422636.png","path":"img/1309909-20180123095955350-1680422636.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123101901740-2118178734.png","path":"img/1309909-20180123101901740-2118178734.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123110136115-1112016464.png","path":"img/1309909-20180123110136115-1112016464.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123110156272-1242463729.png","path":"img/1309909-20180123110156272-1242463729.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123110209772-2057141058.png","path":"img/1309909-20180123110209772-2057141058.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/1309909-20180123110213709-49169640.png","path":"img/1309909-20180123110213709-49169640.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20181011211750.jpg","path":"img/TIM图片20181011211750.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20181023195537.jpg","path":"img/TIM图片20181023195537.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20181209192946.jpg","path":"img/TIM图片20181209192946.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20190103092627.png","path":"img/TIM图片20190103092627.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20190123161752.jpg","path":"img/TIM图片20190123161752.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190116111347.png","path":"img/TIM截图20190116111347.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190214152934.png","path":"img/TIM截图20190214152934.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190215193107.png","path":"img/TIM截图20190215193107.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190318124131.png","path":"img/TIM截图20190318124131.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190319161404.png","path":"img/TIM截图20190319161404.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190319161900.png","path":"img/TIM截图20190319161900.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190319171721.png","path":"img/TIM截图20190319171721.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM截图20190804192526.png","path":"img/TIM截图20190804192526.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/The Kid.png","path":"img/The Kid.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/algolia_logo.svg","path":"img/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/apple-touch-icon-next.png","path":"img/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/avatar.gif","path":"img/avatar.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-by.svg","path":"img/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/circleBullet.png","path":"img/circleBullet.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/favicon-16x16-next.png","path":"img/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/favicon-32x32-next.png","path":"img/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/logo copy.svg","path":"img/logo copy.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/placeholder.gif","path":"img/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/player.png","path":"img/player.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/quote-l.svg","path":"img/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/quote-r.svg","path":"img/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/searchicon.png","path":"img/searchicon.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/thumbnail.svg","path":"img/thumbnail.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/图片1.png","path":"img/图片1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/图片2.png","path":"img/图片2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/潮语-1.png","path":"img/潮语-1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/潮语-2.png","path":"img/潮语-2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/TIM图片20190409113807.jpg","path":"img/TIM图片20190409113807.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/chao1.png","path":"img/chao1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/chao2.png","path":"img/chao2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/chao3.png","path":"img/chao3.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/图片3.png","path":"img/图片3.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/20210404190314_1.jpg","path":"img/20210404190314_1.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/20210404190325_1.jpg","path":"img/20210404190325_1.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/KyoukoKasodani.png","path":"img/KyoukoKasodani.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/20210404190640_1.jpg","path":"img/20210404190640_1.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/Remilia_.png","path":"img/Remilia_.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/20210404190455_1.jpg","path":"img/20210404190455_1.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/寒波0.png","path":"img/SCCS/寒波0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/流星0.png","path":"img/SCCS/流星0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/月相0.png","path":"img/SCCS/月相0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/星条0.png","path":"img/SCCS/星条0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/电中1.png","path":"img/SCCS/电中1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/阳光0.png","path":"img/SCCS/阳光0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/乾坤0.png","path":"img/SCCS/乾坤0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/乾坤1.png","path":"img/SCCS/乾坤1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动4.png","path":"img/SCCS/变动4.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/把驻0.png","path":"img/SCCS/把驻0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/雷鱼0.png","path":"img/SCCS/雷鱼0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/增幅0.png","path":"img/SCCS/增幅0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/日星0.png","path":"img/SCCS/日星0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/星条1.png","path":"img/SCCS/星条1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/残响0.png","path":"img/SCCS/残响0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/电中0.png","path":"img/SCCS/电中0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/突风0.png","path":"img/SCCS/突风0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动5.png","path":"img/SCCS/变动5.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/怪奇0.png","path":"img/SCCS/怪奇0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/结晶0.png","path":"img/SCCS/结晶0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/辻风0.png","path":"img/SCCS/辻风0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/雷庭0.png","path":"img/SCCS/雷庭0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/北风0.png","path":"img/SCCS/北风0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/反击0.png","path":"img/SCCS/反击0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/转移0.png","path":"img/SCCS/转移0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/转移1.png","path":"img/SCCS/转移1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/转移2.png","path":"img/SCCS/转移2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/魔涡0.png","path":"img/SCCS/魔涡0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/击沉0.png","path":"img/SCCS/击沉0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动0.png","path":"img/SCCS/变动0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动1.png","path":"img/SCCS/变动1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/咆哮0.png","path":"img/SCCS/咆哮0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/咆哮1.png","path":"img/SCCS/咆哮1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/现像0.png","path":"img/SCCS/现像0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/神鸟0.png","path":"img/SCCS/神鸟0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/经年的憎恶0.png","path":"img/SCCS/经年的憎恶0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动2.png","path":"img/SCCS/变动2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/日星1.png","path":"img/SCCS/日星1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/爪痕0.png","path":"img/SCCS/爪痕0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/狱炎0.png","path":"img/SCCS/狱炎0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/传说0.png","path":"img/SCCS/传说0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/击沉1.png","path":"img/SCCS/击沉1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动6.png","path":"img/SCCS/变动6.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/电中2.png","path":"img/SCCS/电中2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/祈愿0.png","path":"img/SCCS/祈愿0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/突风1.png","path":"img/SCCS/突风1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/击沉2.png","path":"img/SCCS/击沉2.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/原初之光0.png","path":"img/SCCS/原初之光0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/秘术0.png","path":"img/SCCS/秘术0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/秘术1.png","path":"img/SCCS/秘术1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/离散0.png","path":"img/SCCS/离散0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/雷庭1.png","path":"img/SCCS/雷庭1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/变动3.png","path":"img/SCCS/变动3.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/星月0.png","path":"img/SCCS/星月0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/月日0.png","path":"img/SCCS/月日0.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/击沉3.png","path":"img/SCCS/击沉3.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/神鸟1.png","path":"img/SCCS/神鸟1.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/SCCS/结界0.png","path":"img/SCCS/结界0.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/icarus/.gitignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589752348513},{"_id":"source/404.html","hash":"e91ccc2a50435ccc7ffc974659743c95de3131b1","modified":1589717224659},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1589749022788},{"_id":"themes/icarus/.eslintrc.json","hash":"b6de6612836a7814bae9a51a5089609853cc44a2","modified":1589749022797},{"_id":"themes/icarus/.travis.yml","hash":"d7c64bd876f0af1288d855a6d61d691d27770560","modified":1589749022797},{"_id":"themes/icarus/LICENSE","hash":"62e3701684087bc9a66f0b20386036ede9b430b7","modified":1589749022797},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"6498cecab7b128e8f61061ec1ab1c6f3cb635507","modified":1589749022797},{"_id":"themes/icarus/README.md","hash":"1eafb0e93832f63e9d2baeaf2bb7f8de40e04843","modified":1589749022797},{"_id":"themes/icarus/_config.yml","hash":"cc48b50e778cdfff769d35f7bac2cc1762c9b346","modified":1590675932236},{"_id":"themes/icarus/package.json","hash":"003f8c1f8dfa1e280892683b6a6d60ce649bb403","modified":1589749022858},{"_id":"source/_posts/2018-09-27-hello-world.md","hash":"81b6e3f4e06b7c30c06f958546aa4c6edceaa29e","modified":1589717224659},{"_id":"source/_posts/2018-09-27-luogu-t47720-solution.md","hash":"5f716215ce82c57a65c9a98b65aea3e808138fd8","modified":1589717224669},{"_id":"source/_posts/2018-10-04-luogu-p4900-solution.md","hash":"0b2dbcd331f46c3c60be3383f03a880d046625a4","modified":1589717224669},{"_id":"source/_posts/2018-09-29-luogu-p3924-solution.md","hash":"a682285cddd42187942514510d03ebb918fe4efe","modified":1589717224669},{"_id":"source/_posts/2018-10-12-luogu-p2154-solution.md","hash":"45ff86c4f039067cca16b60184206cd2645d08eb","modified":1589717224669},{"_id":"source/_posts/2018-10-13-chtholly-tree-learning-notes.md","hash":"a184d28ffa501bff4e6e62aa1278cf84c071fd39","modified":1589717224669},{"_id":"source/_posts/2018-10-24-status-compression-learning-notes.md","hash":"76ede568d8c5ebb5063f65703ae9e83dd80edd32","modified":1589717224669},{"_id":"source/_posts/2018-11-08-luogu-p5009-solution.md","hash":"ccdda725a846b493000dfc63c7e9400eca919991","modified":1589717224669},{"_id":"source/_posts/2018-11-09-noip-2018-notes.md","hash":"b7c4bd5121883fefc6a7746b9f7ca03b145ab624","modified":1589717224669},{"_id":"source/_posts/2018-11-29-number-theory-learning-notes.md","hash":"24caa8f83d99e59d67f9714194821323fbe8e623","modified":1589717224669},{"_id":"source/_posts/2018-12-08-future-algorithm-ep1.md","hash":"4beee1109e7f79e7ea85c5297a38fc5b2a36734e","modified":1589717224669},{"_id":"source/_posts/2018-12-19-polynomial-learning-notes-pt1.md","hash":"f223bc35d083f52ccb0c283c03d8e8d2145f24be","modified":1589717224669},{"_id":"source/_posts/2018-12-19-sqrt-decomposition-complexity-optimization.md","hash":"a9df1d970c089a9c5a88ea20dc058e7b3a8b482f","modified":1589717224669},{"_id":"source/_posts/2018-12-20-polynomial-learning-notes-pt2.md","hash":"d0311fa32972694ae17cfdc526ed704d15a45a66","modified":1589717224669},{"_id":"source/_posts/2018-12-24-block-decomposition.md","hash":"f0cd05d2697db56cc7137f9ef37ffa8fb3879219","modified":1589717224669},{"_id":"source/_posts/2018-12-26-timuzu-solutions.md","hash":"2d596466f799085f7089b7a6b44535f844193c04","modified":1589717224669},{"_id":"source/_posts/2019-01-02-luogu-p5162-solution.md","hash":"c002d1e7d23e8891d39410f97a6a639ef2782abc","modified":1589717224669},{"_id":"source/_posts/2019-01-04-luogu-p3723-solution.md","hash":"374f8d95ef7874fc947c3b813950a8e952681d47","modified":1589717224669},{"_id":"source/_posts/2019-01-10-similar-euclid-algorithm-learning-notes.md","hash":"9212fa8e75f72df050bccc2a106ae61475c3aaea","modified":1589717224669},{"_id":"source/_posts/2019-01-07-luogu-p4113-solution.md","hash":"d57f8cffa253488c1ede9affb00804c1116eb97a","modified":1589717224669},{"_id":"source/_posts/2019-01-14-something-about-network-flow-learning-notes.md","hash":"b9712af0962d59ba95ec90a32c0575b3e77297a1","modified":1589717224669},{"_id":"source/_posts/2019-01-17-luogu-p4091-solution.md","hash":"030b6a57e09fc34dbb9ce1c77ddd83697d05bc9a","modified":1589717224669},{"_id":"source/_posts/2019-01-20-lolioi-2019-01-20-solutions.md","hash":"54083069b3a44873e94bfce1f8a37d3dfa8b40c2","modified":1589717224669},{"_id":"source/_posts/2019-02-13-min-25-sieve-learning-notes.md","hash":"277fe29cd83e2adc3dcd1c7406bd405b64c50087","modified":1589717224669},{"_id":"source/_posts/2019-01-21-link-cut-tree-learning-notes.md","hash":"be6bdc02d69e21ef75b4fb2e420150bf3654de05","modified":1589717224669},{"_id":"source/_posts/2019-02-15-luogu-p3613-solution.md","hash":"f824fc1a5b868872ba7bcd5d0645b3a368b22b1f","modified":1589717224669},{"_id":"source/_posts/2019-02-21-network-flow-learning-notes-pt2.md","hash":"15cd4bcdb8ca375c16398df4d7875a46c1b01058","modified":1589717224679},{"_id":"source/_posts/2019-03-12-luogu-p4705-solution.md","hash":"eb2899c882605828d767bd14de7afbd830cfa88a","modified":1589717224679},{"_id":"source/_posts/2019-03-15-generating-function-learning-notes.md","hash":"3b47031dce614406253b47452fc1aaf87a5751e2","modified":1589717224679},{"_id":"source/_posts/2019-03-19-luogu-p5066-solution-not.md","hash":"5eb2e0e1afd85a25bde4d7c3f05bda0969006b3f","modified":1589717224679},{"_id":"source/_posts/2019-03-17-polynomial-triangle-function.md","hash":"74a40b07992633e6d1f9a4cc344c4a3270472844","modified":1589717224679},{"_id":"source/_posts/2019-03-25-suffix-array-learning-notes.md","hash":"ac7d7fc289154d44e82ec94d2df85f85542c6502","modified":1589717224679},{"_id":"source/_posts/2019-03-29-at987-solution.md","hash":"433db1e0ac690eb70f7b80fcf4aa0dd98a422527","modified":1589717224679},{"_id":"source/_posts/2019-03-31-bernoulli-number-learning-notes.md","hash":"c13daa40136bc161b8a6376f7d2f3610d01acf01","modified":1589717224679},{"_id":"source/_posts/2019-04-09-sdoi2019r1-notes.md","hash":"a99ef7e583893be1faa7bad0ee02520b15bb8ae6","modified":1589717224679},{"_id":"source/_posts/2019-04-11-fwt-learning-notes.md","hash":"258405a4e8e129ce0c820545ecd71696370df50c","modified":1589717224679},{"_id":"source/_posts/2019-04-14-luogu-p1587-solution.md","hash":"34c8e0eb9fa63d47ed0a69b47a801ef93a61ef42","modified":1589717224679},{"_id":"source/_posts/2019-04-26-bzoj4487-solution.md","hash":"00451a5c90e71b290520182d7b29fe4f577c85bf","modified":1589717224679},{"_id":"source/_posts/2019-04-27-luogu-p5176-solution.md","hash":"c31c839753bd7254543bb901b0bb7380d997df2e","modified":1589717224679},{"_id":"source/_posts/2019-04-27-luogu-p4920-solving-notes.md","hash":"1054d93a8a98f7d5ad93b72c6080db165f97bbf5","modified":1589717224679},{"_id":"source/_posts/2019-05-09-sdoi2019r2-notes.md","hash":"efddc9c53161488d77f00fd5a8925ad6c8c86eab","modified":1589717224679},{"_id":"source/_posts/2019-05-11-cf570d-solution.md","hash":"a282518e0fb0043ff9bd97d922ef2084a497e205","modified":1589717224679},{"_id":"source/_posts/2019-05-22-polynomial-xxx-notes.md","hash":"2b6f5c4a476f037daace3c23ed9fcbadc8b42183","modified":1589717224679},{"_id":"source/_posts/2019-08-02-linear-ditui-learning-notes.md","hash":"540f6a49276752d46a7311233fc0c22491844c8b","modified":1589717224689},{"_id":"source/_posts/2019-05-24-strling-number-notes.md","hash":"00f345e7e9b12fe6eceff0d63fc030c5ee147d43","modified":1589717224689},{"_id":"source/_posts/2019-08-05-luogu-p5349-solution.md","hash":"fd70ba2929ad9b8512d25290514802027db5105d","modified":1589717224689},{"_id":"source/_posts/2019-08-05-luogu-p5439-solution-probably.md","hash":"94f40e1a6d79ddd7edec1b25b1096a743bb15aa0","modified":1589717224689},{"_id":"source/_posts/2019-08-07-cf1114e-solution.md","hash":"245bdaa8831c3dade78592bbd93c6125a2a0ff7c","modified":1589717224689},{"_id":"source/_posts/2019-08-15-solving-problems-in-brain.md","hash":"59cd23c57591e4f90d90bbe58db06faf371f6251","modified":1589717224689},{"_id":"source/_posts/2020-05-21-touhou-saikotan-servants-of-harvest-wish.md","hash":"9079b2e207940aae8ef133a974a70c433cadf73a","modified":1590068751119},{"_id":"source/_posts/2020-06-02-sdoi2020-notes.md","hash":"95569d27a880a0f9d963c0b2071af1687b8dd7c7","modified":1592882330532},{"_id":"source/_posts/2020-06-21-sdoi2020-d1t2-solution.md","hash":"53bbb06a79e0f8b018cf7214a04eaeebc5b4aa4b","modified":1592975067339},{"_id":"source/_posts/2020-07-30-spell-cards-collection-second.md","hash":"c9f2569e24a4eda5de86b42c8e9605a2457502ff","modified":1596084717574},{"_id":"source/_posts/2020-09-09-touhou-kisouken-infinite-blade-pavilion.md","hash":"e3445d2d76e880114364cd765d895462a3376a6b","modified":1599830729257},{"_id":"source/_posts/2021-04-04-fan-made-virtual-autography.md","hash":"eadfbb4b76c713964256622177871f2d299224b0","modified":1617534925282},{"_id":"source/about/index.md","hash":"6a8d4e81694f601f0fea3eda4d2d1720139f1c1e","modified":1589717224689},{"_id":"source/karin-no-kimyou-na-bouken/index.md","hash":"bac87833d119c7826a061f0871a37b16cd6764b8","modified":1591720005478},{"_id":"source/categories/index.md","hash":"bb9d86125e219f393b779c61e59290b8109cf89d","modified":1589717224689},{"_id":"source/tags/index.md","hash":"2acdf51df555c20efdf0579484266bd962817e3c","modified":1589717224689},{"_id":"source/log/index.md","hash":"01c4563bd37540826508619e7da193b6b067a9ad","modified":1590682031899},{"_id":"themes/icarus/.github/stale.yml","hash":"bbf3abd0d342022c1d62a66cb5f4211b43eab47a","modified":1589749022797},{"_id":"themes/icarus/include/config.js","hash":"bd4b10b7ad360ac09912646c04efc021ff3d45ad","modified":1589749022797},{"_id":"themes/icarus/include/dependency.js","hash":"239871703ff1d23cd59aa9213c5fa0a0ed2706c0","modified":1589749022807},{"_id":"themes/icarus/include/register.js","hash":"dc4dca98a5b84f40679e7af1a8f1d55f8d634b40","modified":1589749022807},{"_id":"themes/icarus/languages/de.yml","hash":"ef43979c403b3a221585d5dd0b7205627437818e","modified":1589749022828},{"_id":"themes/icarus/languages/en.yml","hash":"9d14e90a3f3dde00b982fa56becd8e63925ff6cd","modified":1589749022828},{"_id":"themes/icarus/languages/es.yml","hash":"f0ea2c482a8bc5ed43452ecc7ebe601504e0cc54","modified":1589749022828},{"_id":"themes/icarus/languages/fr.yml","hash":"b85a2d4fcc790a8b84326235850eb54532f6b75e","modified":1589749022828},{"_id":"themes/icarus/languages/id.yml","hash":"ee655e6a045eb28ea480a348bbefd10ef115494b","modified":1589749022828},{"_id":"themes/icarus/languages/pl.yml","hash":"a6dbd568cb18104685b20ab7b5767f455628f61c","modified":1589749022837},{"_id":"themes/icarus/languages/ko.yml","hash":"2d12f3975b576afb025df773e30521b58abd015e","modified":1589749022837},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"28ae713d8d26ab875104684e604592f4c495b638","modified":1589749022837},{"_id":"themes/icarus/languages/ja.yml","hash":"3c921f24b19a797b2ae23cf621a35bb9b043ddf9","modified":1589749022837},{"_id":"themes/icarus/languages/ru.yml","hash":"62451109780acfe2db8630248005697c10a68a61","modified":1589749022837},{"_id":"themes/icarus/languages/tr.yml","hash":"2e334f0f98756256754f48d8dff3baa045700283","modified":1589749022837},{"_id":"themes/icarus/languages/vn.yml","hash":"cd2d57a3fe6389bdd76f193c6c662d242960ed02","modified":1589749022837},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"915b3868a8fa5af2d4a81bebaec1fce9c160c530","modified":1589749022837},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"eaede43f04878974f43eff4d41cb28bf4c2908fe","modified":1589749022837},{"_id":"themes/icarus/layout/archive.jsx","hash":"eef212d92edd1f10d3f0756cd153771ea925dbbc","modified":1589749022837},{"_id":"themes/icarus/layout/categories.jsx","hash":"50d81072a5b5508a906b2c96289982d081a59edd","modified":1589749022837},{"_id":"themes/icarus/layout/category.jsx","hash":"16c8cf03fd976d839242dcf9240ccaf59b843daa","modified":1589749022837},{"_id":"themes/icarus/layout/index.jsx","hash":"c2e7008020c4358f491c8e2ad871aa2274a427d0","modified":1589749022848},{"_id":"themes/icarus/layout/layout.jsx","hash":"4103d29daf78d4d36aef428ad57ed82f5f108d1a","modified":1589749022858},{"_id":"themes/icarus/layout/page.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1589749022858},{"_id":"themes/icarus/layout/post.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1589749022858},{"_id":"themes/icarus/layout/tag.jsx","hash":"49c04b040ba0ff138ad36d6478bd76e18edc8085","modified":1589749022858},{"_id":"themes/icarus/layout/tags.jsx","hash":"5bd27a87fc6e456beb3e56e1dcdbd1f7ac010ce1","modified":1589749022858},{"_id":"themes/icarus/scripts/index.js","hash":"6156ee1e29064e851aeef66305302103a379cae3","modified":1589749022858},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022837},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022848},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022858},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022858},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022858},{"_id":"source/karin-no-kimyou-na-bouken/asulan-debuer/index.md","hash":"835cc7e2beff2962a16976d1c434a7ba46f2a8ed","modified":1591107132355},{"_id":"source/karin-no-kimyou-na-bouken/chatian-shizhi/index.md","hash":"247e13495022cef574f47cfe48dd5aa86e2bceb5","modified":1590926508052},{"_id":"source/karin-no-kimyou-na-bouken/feichedangdashu/index.md","hash":"e21d32fb06b4ebe2bcc2581527ab5762adabbe9c","modified":1591015664150},{"_id":"source/karin-no-kimyou-na-bouken/huajingyuan-lan/index.md","hash":"711f969c6ad84e6c77a9639b7b589b95c04bbf9a","modified":1591719592570},{"_id":"source/karin-no-kimyou-na-bouken/j-p-polnareff/index.md","hash":"3515ec61131380d8e112d97d3dd7b114557cb959","modified":1591719928853},{"_id":"source/karin-no-kimyou-na-bouken/qiangjianfanpangzi/index.md","hash":"755711384c4a13061bb986e3d79045a0fc8d130e","modified":1590926053881},{"_id":"source/karin-no-kimyou-na-bouken/shijia-yangai/index.md","hash":"9fd2895641c036b1292838e34fdc526f39ae4e1e","modified":1591720400627},{"_id":"source/karin-no-kimyou-na-bouken/tangmi-kelasi/index.md","hash":"6048fa3deddfaaaf646e8ca339577e83bdcfd3ad","modified":1590939685842},{"_id":"source/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei/index.md","hash":"e924b80cd01247ab85329e16072494b9bef84a35","modified":1590844296720},{"_id":"source/karin-no-kimyou-na-bouken/zhuoer-jiniersi/index.md","hash":"2f27b6ab16247b6e1089f81a5f2d8312dd5b524d","modified":1591015673973},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"f132b847b60e4a0b0831b142bf5c6611e0dc7108","modified":1589749022797},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"d802c5ab45baeaebd4d1157d4c4019464dcafbf2","modified":1589749022797},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"5da42c65d575a85dbae576e5dd918efc9bb470b3","modified":1589749022797},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"9426e6bc533d7c7ce6469f0e9af3116d16f8ebe5","modified":1589749022807},{"_id":"themes/icarus/include/migration/head.js","hash":"c32df32ae70cd5e522de5481cde4e7c416b4dbec","modified":1589749022807},{"_id":"themes/icarus/include/schema/config.json","hash":"0b4810adae5ad713c535a5abe126bfb044c861e7","modified":1589749022818},{"_id":"themes/icarus/include/style/article.styl","hash":"5990348fe849fb8bb6801731be46fe0ad0c93c58","modified":1589749022818},{"_id":"themes/icarus/include/style/base.styl","hash":"df8a656161faf57827a66bda933c2f03d5487c94","modified":1589749022818},{"_id":"themes/icarus/include/style/button.styl","hash":"f9e52370ee7801b35682d76071f98f7ce6126231","modified":1589749022828},{"_id":"themes/icarus/include/style/card.styl","hash":"6feb59420aa2fd67e52dd5b917623dc2fcb75bda","modified":1589749022828},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"62e452b7d7aa5ac6233798a690026b526cb245a7","modified":1589749022828},{"_id":"themes/icarus/include/style/donate.styl","hash":"41495808091511b475d35e3b3491e2d345584601","modified":1589749022828},{"_id":"themes/icarus/include/style/footer.styl","hash":"d90d5137f29841ca4dc48c62e344bebe0cd7aa76","modified":1589749022828},{"_id":"themes/icarus/include/style/navbar.styl","hash":"ae0e3a559e4aed6bb33ccb81765677ac30d535da","modified":1589749022828},{"_id":"themes/icarus/include/style/helper.styl","hash":"960e9d3dd349147a02a92bc68a5aec19544bb1e1","modified":1589749022828},{"_id":"themes/icarus/include/style/pagination.styl","hash":"7e1aba7d4442b5ba39b82569341c4e939a8005cc","modified":1589749022828},{"_id":"themes/icarus/include/style/plugin.styl","hash":"f23c80665bcef81640eeb635f265418fa0f66ace","modified":1589749022828},{"_id":"themes/icarus/include/style/responsive.styl","hash":"9a481311478b788851d437b82a934fcfce758f9f","modified":1589749022828},{"_id":"themes/icarus/include/style/search.styl","hash":"ff947d107b57b5d8865680be1301f6c49abcc3e1","modified":1589749022828},{"_id":"themes/icarus/include/style/timeline.styl","hash":"0f15f648821abe412e2105e157c9810bb4834aa4","modified":1589749022828},{"_id":"themes/icarus/include/util/console.js","hash":"9bd6d4691b56012ea17146db577e27ae20e0c335","modified":1589749022828},{"_id":"themes/icarus/layout/common/article.jsx","hash":"0240bbc1411cd88aa57d5ce601b6e6450ed6315b","modified":1589749022837},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"0ab94bbc55bda6f3f284cbd208efa4ed8205481c","modified":1589749022837},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"c026449e4bc757fbd9edb5b870d56f7b7a349497","modified":1589749022848},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"583a29899f56f278caf3afbe019a17e1ec7fc027","modified":1589749022848},{"_id":"themes/icarus/layout/common/head.jsx","hash":"02a8772175167f67f5ef779e84dd57335ca9a965","modified":1589749022848},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"59786a8510709ff43f2af0e01ff9715cdebc26fd","modified":1589749022848},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"fedab3e147ae1ed2d730a559c29e72b2315db5c1","modified":1589749022848},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"a40608473a1674de2ed05c5dc5627ab1d7a12744","modified":1589749022848},{"_id":"themes/icarus/layout/common/search.jsx","hash":"82a0cf309dbe5257f30c95621dd4e6521b912cbc","modified":1589749022848},{"_id":"themes/icarus/layout/common/share.jsx","hash":"ed9aba6def6515df79b77e231f8620b0e209e30c","modified":1589749022848},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"ec282a8d470b29cce2415c0a9bddcfb41cedafcf","modified":1589749022848},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"bd2b9209051a03e5cb3bdf2c97e6c16d0d75cb8a","modified":1589749022858},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"efff826b01ac0f8fc2619b6c43660ef8d6de6c3f","modified":1589749022858},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"7a739aa78b637512f6e08bc9c4f0cc347af4a6f4","modified":1589749022858},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"13b12c6024a67561a3678d1480113dfdf48f0269","modified":1589749022858},{"_id":"themes/icarus/source/css/default.styl","hash":"b2d886eacd43ab395ae3221e92bc0a9d23eff3a0","modified":1589749022858},{"_id":"themes/icarus/source/css/style.styl","hash":"4c1e1734d85fa68b3ebcb5347c32f79e443ddcba","modified":1589749022858},{"_id":"themes/icarus/source/img/1309909-20180123095924037-1618037447.png","hash":"5ee810abb59e8db835b1dcfdee0ebe2af27ca798","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123095955350-1680422636.png","hash":"d2dd7a73bd28c95f817f26c85f6ffcf8530a8165","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123101901740-2118178734.png","hash":"d472e6f4f11884ed90efedfaa0e8433ee5a971b5","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123110136115-1112016464.png","hash":"e7aca1268b63998cbb3db07421ca674331381363","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123110156272-1242463729.png","hash":"937f4340c26c86f4ebad97a98af5adc69b9a9c88","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123110209772-2057141058.png","hash":"2d9834c8e294848d304f0a57d1f4cfb8c1370de0","modified":1589750468555},{"_id":"themes/icarus/source/img/1309909-20180123110213709-49169640.png","hash":"f94a543e4d57058bd3b2a7911f05abacfe897816","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM图片20181011211750.jpg","hash":"b3e610c3bea9a11ffb51ca5f1bd5cd538092a813","modified":1589750468565},{"_id":"themes/icarus/source/img/TIM图片20181023195537.jpg","hash":"6fb73e6c8ac291398911366bcc11d275820e866a","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM图片20181209192946.jpg","hash":"7726adf714e53f596ce2ab149ebc5380beb5abe4","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM图片20190103092627.png","hash":"302582079f123bc1a7074bc8ae84ce027181b49a","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM图片20190123161752.jpg","hash":"751cb3479aaa194a0c3093efc4cafa9aa38d3b8d","modified":1589750468570},{"_id":"themes/icarus/source/img/TIM截图20190116111347.png","hash":"718d56a312712097da85b4d0e286cab9bcb222be","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190214152934.png","hash":"c3426aa6be73ef9639734f927ec5eb0a661556e6","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190215193107.png","hash":"230f65c221d97be0a295cbe3b3efdf3d839b44c9","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190318124131.png","hash":"f014010197db27cd634bb417e56cc2f8a916d5ea","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190319161404.png","hash":"ff21f37a101fb6752c5887aba62b55a9907e3af0","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190319161900.png","hash":"590b34826f3c24b12e9a7d3c5bf0b45d2661c61e","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190319171721.png","hash":"98d0ef1aa7d5ae123d45afb3e81513d60003adbb","modified":1589750468555},{"_id":"themes/icarus/source/img/TIM截图20190804192526.png","hash":"74dad39ac624a40d990df5d8a514a849e0a1c9a5","modified":1589750468555},{"_id":"themes/icarus/source/img/The Kid.png","hash":"f77ecb69e448ec420da9cf8ca5d3f8979d4ea991","modified":1589750468555},{"_id":"themes/icarus/source/img/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1589750468555},{"_id":"themes/icarus/source/img/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1589750468555},{"_id":"themes/icarus/source/img/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1589750468555},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1589749022866},{"_id":"themes/icarus/source/img/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1589750468555},{"_id":"themes/icarus/source/img/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1589750468555},{"_id":"themes/icarus/source/img/circleBullet.png","hash":"3f690965f978a16cf57db8012dc3769ebe74f532","modified":1589750468555},{"_id":"themes/icarus/source/img/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1589750468555},{"_id":"themes/icarus/source/img/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1589750468555},{"_id":"themes/icarus/source/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1589749022866},{"_id":"themes/icarus/source/img/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1589750468555},{"_id":"themes/icarus/source/img/logo copy.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1589750468555},{"_id":"themes/icarus/source/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1589749022867},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1589749022867},{"_id":"themes/icarus/source/img/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1589750468555},{"_id":"themes/icarus/source/img/player.png","hash":"f0537d96e195ad6ec8b21cfa7006a71e72f266ae","modified":1589750468555},{"_id":"themes/icarus/source/img/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1589750468555},{"_id":"themes/icarus/source/img/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1589750468555},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1589749022867},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1589749022867},{"_id":"themes/icarus/source/img/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1589750468555},{"_id":"themes/icarus/source/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1589749022867},{"_id":"themes/icarus/source/img/图片1.png","hash":"1ac5f10a556ae34712e4613451839681910df009","modified":1589750468555},{"_id":"themes/icarus/source/img/图片2.png","hash":"30b2caa13edfc612eec7f9dcb1a83305a8e46c9f","modified":1589750468555},{"_id":"themes/icarus/source/img/潮语-1.png","hash":"cec556fb9f6dc059065c92aa74bc4447fa49d0d3","modified":1589750468555},{"_id":"themes/icarus/source/img/潮语-2.png","hash":"1a96ffc37b76f09c0ab7841e3d852970ee77184e","modified":1589750468555},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"45c9014e02fbc516e257484487b4e29ddb5743e1","modified":1589749022867},{"_id":"themes/icarus/source/js/animation.js","hash":"5bb98c8b7e6fdde902f61e40ddfb2a3fbdeb13bf","modified":1589749022867},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"6be1b206481d231ca93ff9b1ccb08c548618cfdf","modified":1589749022867},{"_id":"themes/icarus/source/js/main.js","hash":"34acf13d49dcca1d5e2393c4bfa459bcde40892a","modified":1589749022867},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022807},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022818},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022818},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022818},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589749022818},{"_id":"themes/icarus/source/img/TIM图片20190409113807.jpg","hash":"c08abbaca3680f8b919a7fd7ad5f88eda21b9262","modified":1589750468570},{"_id":"themes/icarus/source/img/chao1.png","hash":"b908049626a2a1f12c7e93ab585b24857990a236","modified":1589750468570},{"_id":"themes/icarus/source/img/chao2.png","hash":"3619d64a85b4605511d73da8cbbb2c18974e4656","modified":1589750468570},{"_id":"themes/icarus/source/img/chao3.png","hash":"00991ee363afff96a7a0cdedf651e9cb579be25f","modified":1589750468570},{"_id":"themes/icarus/source/img/图片3.png","hash":"fa5e6fb339cddf434da3570428c5a7baac01b16f","modified":1589750468565},{"_id":"themes/icarus/include/hexo/generator/category.js","hash":"ab6bd15ded796ea978166da480de56600af14787","modified":1589749022807},{"_id":"themes/icarus/include/hexo/generator/insight.js","hash":"58251b0393541836ae40da3ba32a3d6821b74163","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e79bb7b210946d22bd3a9c710171c548de49a050","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"394665355c58e711ff9a739d1de047bb44588e72","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"4ea76783b0b039f05742287c101e0d11b113328c","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"b6036e21a11a5ed0455010ee668e43f165e55254","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/head.json","hash":"cf95b825bfca5f1c03d066a4067bd42a7467a423","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"52a7ae23ebcfb06e8c219be4da1506b824e17715","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"1b4de5817363ad969b444477cda28eb677a2c0f7","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"5453827e1c267c67102bc983c8d2313865aa64fd","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/search.json","hash":"dd34241b3776bc9aed8ef815c67f2fa622d0984b","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/share.json","hash":"da98300e9197fbc717082419652d54636fd118b9","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"5687b24e32bcff12ff7660ff5dc26d74f466a994","modified":1589749022807},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"43a9c4fccaf75418038537e2e49f2457727a21e7","modified":1589749022807},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"0b5c4a315c0d25f2b296eb44ed14a1d59ccb8613","modified":1589749022818},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"c8e0e97a61c3a02c9736f303c206dd406de95d9a","modified":1589749022818},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"994aff115d59827ad6f98d03adf55b1cf1245378","modified":1589749022818},{"_id":"themes/icarus/source/img/20210404190314_1.jpg","hash":"d8911c5d112d2f5bd1634e33e32f585c831aa8ec","modified":1617534194152},{"_id":"themes/icarus/source/img/20210404190325_1.jpg","hash":"58f23d6b4f812abacfd8295505c34145cb7fc074","modified":1617534205773},{"_id":"themes/icarus/source/img/KyoukoKasodani.png","hash":"79d9dd8019cd3677b518586b65129d2355a39d37","modified":1589750469399},{"_id":"themes/icarus/source/img/20210404190640_1.jpg","hash":"3bb6e0eb0cccf54e2f4f7b7f70b478c7d4a829e8","modified":1617534400360},{"_id":"themes/icarus/source/img/Remilia_.png","hash":"7299baafecf30bdf36b55ed6ac88153562dd082f","modified":1589750469421},{"_id":"themes/icarus/source/img/20210404190455_1.jpg","hash":"f247d22ef9dc1737bf355e381069a8c8de41c736","modified":1617534295495},{"_id":"themes/icarus/source/img/SCCS/寒波0.png","hash":"69e37153dd4d51bd317f646017f572b5f7608a1c","modified":1596078250991},{"_id":"themes/icarus/source/img/SCCS/流星0.png","hash":"a3cfc0baf03c22b91831536a975b526f39de3866","modified":1596078264141},{"_id":"themes/icarus/source/img/SCCS/月相0.png","hash":"5c9313e1bec12c1ba90fa9b46f5d8cff44aa1ff5","modified":1596078275548},{"_id":"themes/icarus/source/img/SCCS/星条0.png","hash":"ed83a5b193c894104155ede6f6b4d5e6d6605321","modified":1596078392465},{"_id":"themes/icarus/source/img/SCCS/电中1.png","hash":"6ccf66b033dceaf82e39f53edf65a706cc414af0","modified":1596078590851},{"_id":"themes/icarus/source/img/SCCS/阳光0.png","hash":"6596e895df4e2db69793d4d3cdcc14be56287b0a","modified":1596078333340},{"_id":"themes/icarus/source/img/SCCS/乾坤0.png","hash":"f86c880a5a0cdb4e8c33626c9a27f6268c4cad66","modified":1596078466337},{"_id":"themes/icarus/source/img/SCCS/乾坤1.png","hash":"5c2094096899675f5eb98a5a3ad20680bbd5f10d","modified":1596078469954},{"_id":"themes/icarus/source/img/SCCS/变动4.png","hash":"3f02c8afe55c9d573a94d528dfdcee1ba39b8903","modified":1596078567497},{"_id":"themes/icarus/source/img/SCCS/把驻0.png","hash":"49e20e8a72f051472e150481f71a8cb424a7ba4d","modified":1596078302293},{"_id":"themes/icarus/source/img/SCCS/雷鱼0.png","hash":"76725d93aba5e6a61084719dbe27e26cfe88f9f6","modified":1596078506682},{"_id":"themes/icarus/source/img/SCCS/增幅0.png","hash":"5911d4bddbbf306e7afff065dbd475ddc571b6cc","modified":1596078282715},{"_id":"themes/icarus/source/img/SCCS/日星0.png","hash":"3b302e6ef1d3f07a3a9e9728afa6160971903864","modified":1596078493655},{"_id":"themes/icarus/source/img/SCCS/星条1.png","hash":"9208fb2c22ff90ac4b4eeda6005b189063006cb7","modified":1596078398315},{"_id":"themes/icarus/source/img/SCCS/残响0.png","hash":"21678f6aeaca711c5e0e3b8044dc327e41f398ad","modified":1596078643554},{"_id":"themes/icarus/source/img/SCCS/电中0.png","hash":"b6401f4f56aef32713f2cf06f7d8cb905e7ee215","modified":1596078585063},{"_id":"themes/icarus/source/img/SCCS/突风0.png","hash":"a7ef166e507d63b4bfc0f1a9cc8d7b8863f97b85","modified":1596078421932},{"_id":"themes/icarus/source/img/SCCS/变动5.png","hash":"7847353627883a2c012421dd83d3f6d57ed799c5","modified":1596078571376},{"_id":"themes/icarus/source/img/SCCS/怪奇0.png","hash":"6439d4a077465a8aa7034cfcaa7e0a546a35482b","modified":1596078517175},{"_id":"themes/icarus/source/img/SCCS/结晶0.png","hash":"f86aa2f192082e33b08210690851d88ec4bcb9c8","modified":1596078473788},{"_id":"themes/icarus/source/img/SCCS/辻风0.png","hash":"300ef9faf9238ad837561761a0d41595c2cb6cbc","modified":1596078320718},{"_id":"themes/icarus/source/img/SCCS/雷庭0.png","hash":"07ef0c0ec0d39f7e52a302a081891f7b06c67649","modified":1596078356114},{"_id":"themes/icarus/source/img/SCCS/北风0.png","hash":"8dba1ef7f10d8981b89e796ab7a368b943c9a421","modified":1596078326662},{"_id":"themes/icarus/source/img/SCCS/反击0.png","hash":"3e645e6c46afb0c94e9d864adc9d781d9bb51ded","modified":1596078510937},{"_id":"themes/icarus/source/img/SCCS/转移0.png","hash":"3576140632cea4b6b44b94f0605a842fe118da24","modified":1596078619154},{"_id":"themes/icarus/source/img/SCCS/转移1.png","hash":"24bad668636ca92eba04ec969912642e21933aed","modified":1596078622427},{"_id":"themes/icarus/source/img/SCCS/转移2.png","hash":"4432a080c1b803c8bc4a230cb827255c16788601","modified":1596078625634},{"_id":"themes/icarus/source/img/SCCS/魔涡0.png","hash":"b7dc6e20173f132761d18b1c43f1485a86c2fb0b","modified":1596078413836},{"_id":"themes/icarus/source/img/SCCS/击沉0.png","hash":"7fedb9f249833ebe87eb097bc7be9c71275e476d","modified":1596078650731},{"_id":"themes/icarus/source/img/SCCS/变动0.png","hash":"20d8ef81dd567b2f11fe239ae735b744e2c564ea","modified":1596078553823},{"_id":"themes/icarus/source/img/SCCS/变动1.png","hash":"30b99cb831a1b038b404e1f49d5db127cdb51511","modified":1596078557215},{"_id":"themes/icarus/source/img/SCCS/咆哮0.png","hash":"0dd9748c9d2178f714e39ffb7369913a5d972d92","modified":1596078384617},{"_id":"themes/icarus/source/img/SCCS/咆哮1.png","hash":"545f69800c0a4154604ae732fd03dbf9f6f4fa44","modified":1596078379985},{"_id":"themes/icarus/source/img/SCCS/现像0.png","hash":"e71d5b2c6e89389f7d0527460cb78bdd05bc4717","modified":1596078348435},{"_id":"themes/icarus/source/img/SCCS/神鸟0.png","hash":"77ef8dd9f3d9300efd630266b0d13f23b0da9a38","modified":1596078543680},{"_id":"themes/icarus/source/img/SCCS/经年的憎恶0.png","hash":"e5363880e99925efc0af2adb46edbdaa8bf4859f","modified":1596078529751},{"_id":"themes/icarus/source/img/SCCS/变动2.png","hash":"cbabd145f4cff96b42ad0addbff667a56bf1ab0f","modified":1596078561020},{"_id":"themes/icarus/source/img/SCCS/日星1.png","hash":"0f250636306c5a5ad7998d8eb8ffa6036ac5c630","modified":1596078496209},{"_id":"themes/icarus/source/img/SCCS/爪痕0.png","hash":"50bac12ccfcdab9eb841354ad55c99ae39d9c7c2","modified":1596078288199},{"_id":"themes/icarus/source/img/SCCS/狱炎0.png","hash":"87af16c16209daa3f820ec81f375c64883e51198","modified":1596078448706},{"_id":"themes/icarus/source/img/SCCS/传说0.png","hash":"22dbb2826e4ae620876d70839eef0791bf47ab27","modified":1596078522937},{"_id":"themes/icarus/source/img/SCCS/击沉1.png","hash":"5ddea7f7d6549557d510d7ab05cfe30ee312a5f7","modified":1596078605659},{"_id":"themes/icarus/source/img/SCCS/变动6.png","hash":"70fe020693c743384774d7a7359453db602b5e23","modified":1596078576352},{"_id":"themes/icarus/source/img/SCCS/电中2.png","hash":"4fa07b8ac497432c5622eafcc4d05c7f3ef05e19","modified":1596078595772},{"_id":"themes/icarus/source/img/SCCS/祈愿0.png","hash":"87b4356901731a67bdeab74e7cf9bb8cfabccca3","modified":1596078370794},{"_id":"themes/icarus/source/img/SCCS/突风1.png","hash":"c0b63e3778e2c3b779a7469f98feb02b144c23c8","modified":1596078425811},{"_id":"themes/icarus/source/img/SCCS/击沉2.png","hash":"fcd6a72d5b3d7ae63e36cc0654b20676c7ae4548","modified":1596078609868},{"_id":"themes/icarus/source/img/SCCS/原初之光0.png","hash":"e018dfa66a162396bf03680363dd09ab4bac313a","modified":1596078459099},{"_id":"themes/icarus/source/img/SCCS/秘术0.png","hash":"6cb8a47e158fff0089a75adb37b25403109424a6","modified":1596078536318},{"_id":"themes/icarus/source/img/SCCS/秘术1.png","hash":"ea8fef2f4dacfbaa8e5e43ae3be05b682ea19800","modified":1596078539816},{"_id":"themes/icarus/source/img/SCCS/离散0.png","hash":"43728582e9eb92004dbb24196ead62ca15c97d65","modified":1596078432876},{"_id":"themes/icarus/source/img/SCCS/雷庭1.png","hash":"6f34971b5631e939dcaff562ae8d8f7b7ba4738b","modified":1596078360729},{"_id":"themes/icarus/source/img/SCCS/变动3.png","hash":"79b6ab70edbf97d0b6ef88cb9a6efbe0bc0c6573","modified":1596078564278},{"_id":"themes/icarus/source/img/SCCS/星月0.png","hash":"c84c1c4aaf9e88752f81507b8704f18381b08695","modified":1596084568924},{"_id":"themes/icarus/source/img/SCCS/月日0.png","hash":"96354b51d86a453a76288ed6c939a12e5b242771","modified":1596078337955},{"_id":"themes/icarus/source/img/SCCS/击沉3.png","hash":"5cb318211d60a56fcf91e6c5c7c93b79f47df684","modified":1596078614049},{"_id":"themes/icarus/source/img/SCCS/神鸟1.png","hash":"ae95b93b4b686522d504da60a6325aed9c7e17ef","modified":1596078547432},{"_id":"themes/icarus/source/img/SCCS/结界0.png","hash":"440758c8b0caa345a57a627f3520c32013def929","modified":1596078365774},{"_id":"public/404.html","hash":"264134ae94eee9a65bcf8ce36a0a4b5aa0653f2b","modified":1617535125116},{"_id":"public/content.json","hash":"c44fda988214f46b26b892a6ed13dc6d51086945","modified":1617535125116},{"_id":"public/search.xml","hash":"767c138170d1948336fb2989b6293d594cef13a2","modified":1617535125116},{"_id":"public/atom.xml","hash":"af1af14722f391311f6ed6b4b92cb1c3bf68e24c","modified":1617535125116},{"_id":"public/js/google_cse.js","hash":"55e7250f4a12bf15220ba5d1d49c91fda5fbd3b4","modified":1617535125116},{"_id":"public/js/algolia.js","hash":"cbfc4355b23d84d2f0dc622e069b3f06c0d10f70","modified":1617535125116},{"_id":"public/js/insight.js","hash":"78b74ae77f1e854089ccabd871d581dc391fcc29","modified":1617535125116},{"_id":"public/about/index.html","hash":"6dfefd2b05858264bea92395807fb5e1ee6713f2","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/index.html","hash":"ae7fe192c4d1d8416658ac09408d43737c96ee26","modified":1617535125116},{"_id":"public/categories/index.html","hash":"7c65bded63b0b9203e3584ec6430154ffa0051e1","modified":1617535125116},{"_id":"public/tags/index.html","hash":"3f49eff36e82e7803b7f02ad6c2b6e365c74ac09","modified":1617535125116},{"_id":"public/log/index.html","hash":"c2ceb7ab5384b31644833523bf8adef1b7a1db07","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/feichedangdashu/index.html","hash":"12a625a191dd078bb9abc98f64599d108507e26b","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/asulan-debuer/index.html","hash":"81a284e68f6840becf6f74e8e3f7d081c600a891","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/j-p-polnareff/index.html","hash":"590980e4e03bc37a2b5ec2f840a6366236eeca54","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/chatian-shizhi/index.html","hash":"519e6e4b335c1539c7a5afa6b91c86887efe8b6e","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/huajingyuan-lan/index.html","hash":"3d549d6cf747e27947a9e5967650396d94731c38","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/qiangjianfanpangzi/index.html","hash":"c5955db00f939b22438309db895bb5a98e4efe1e","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/shijia-yangai/index.html","hash":"7839cbb7c21a2242046d0a75b60b251184693b32","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/tangmi-kelasi/index.html","hash":"23bebe6da24ccefd023d76adb81991164028f9a1","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/zhuoer-jiniersi/index.html","hash":"cf316d6ec47bb4098b4e7212673bc91de9792e05","modified":1617535125116},{"_id":"public/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei/index.html","hash":"5b66a7499204563e2b5dbc1dddcddb28061cd5de","modified":1617535125116},{"_id":"public/fan-made-virtual-autography/index.html","hash":"f8563688eb7bd1ce42ffed8bef900b76d4b074ca","modified":1617535125116},{"_id":"public/touhou-kisouken-infinite-blade-pavilion/index.html","hash":"825264bd17345bbaa8d260ae46bff792c30dd1aa","modified":1617535125116},{"_id":"public/spell-cards-collection-second/index.html","hash":"9247cefd02703201ed941c5a66f3207b142dd47c","modified":1617535125116},{"_id":"public/sdoi2020-d1t2-solution/index.html","hash":"bce63e84cef0cc8ce4b17f925b13096ddedfdaf1","modified":1617535125116},{"_id":"public/sdoi2020-notes/index.html","hash":"afb6849f226c30f96575a11146a77fca8ba1d4f4","modified":1617535125116},{"_id":"public/solving-problems-in-brain/index.html","hash":"788d587a6388feb0ffbb2d3f5afe86fb125a3ef4","modified":1617535125116},{"_id":"public/touhou-saikotan-servants-of-harvest-wish/index.html","hash":"b1df09fbc57090d06bc6a88bfdc7ae7dd0ffb6d1","modified":1617535125116},{"_id":"public/cf1114e-solution/index.html","hash":"ba7aa1bc8a451b586a4bf8f3bac3f477f03a2204","modified":1617535125116},{"_id":"public/luogu-p5439-solution-probably/index.html","hash":"475e1d42993f47d9ee0822f99d4be8b1a892872a","modified":1617535125116},{"_id":"public/luogu-p5349-solution/index.html","hash":"82ba4e94c4ad16fc974485637bc4c561e2350ae9","modified":1617535125116},{"_id":"public/linear-ditui-learning-notes/index.html","hash":"f61e7c78847bd12b60f9751430bddb1f3eb16d2f","modified":1617535125116},{"_id":"public/strling-number-notes/index.html","hash":"7904ce87b58326eb980ab5216d1b9f1d8671995b","modified":1617535125116},{"_id":"public/polynomial-xxx-notes/index.html","hash":"2faee9d1df96b0c41062b87d2a70bb21149311a7","modified":1617535125116},{"_id":"public/cf570d-solution/index.html","hash":"b84cc082f54b3c19721cbfdf7eeffd381635bd01","modified":1617535125116},{"_id":"public/luogu-p4920-solving-notes/index.html","hash":"63964f47e4ee2c5fbadf96a8342d092b50e05121","modified":1617535125116},{"_id":"public/sdoi2019r2-notes/index.html","hash":"3cfecb10b0cc2b16a004ff933c6f4c0d522d0111","modified":1617535125116},{"_id":"public/luogu-p5176-solution/index.html","hash":"f36e2472fd104f5adb2da1361f32e745ca5d94c0","modified":1617535125116},{"_id":"public/bzoj4487-solution/index.html","hash":"96924d5ee8a691366e7061fc8a1b75d58a74f696","modified":1617535125116},{"_id":"public/luogu-p1587-solution/index.html","hash":"1960d3e845b2b4d18d2166f008aea605a494558e","modified":1617535125116},{"_id":"public/sdoi2019r1-notes/index.html","hash":"d513ca1ae023d86d4318196acdc829c643e95153","modified":1617535125116},{"_id":"public/fwt-learning-notes/index.html","hash":"403100f85a6991ec56586bcbb242b703f403b82d","modified":1617535125116},{"_id":"public/bernoulli-number-learning-notes/index.html","hash":"1ca0c7c12d82a3c206a4a720aea3d00d6e399be6","modified":1617535125116},{"_id":"public/at987-solution/index.html","hash":"dbfec15fb608335e1e7c8bf8db50edbb092de44e","modified":1617535125116},{"_id":"public/luogu-p5066-solution-not/index.html","hash":"b64627493fa7d689e1107dc8bf797e6f0557a6f6","modified":1617535125116},{"_id":"public/suffix-array-learning-notes/index.html","hash":"3df9fcd1ad8158086ca2a2f841d8ee965b6034e0","modified":1617535125116},{"_id":"public/polynomial-triangle-function/index.html","hash":"632a27a685cb9c7743733713ac4a523c2be70528","modified":1617535125116},{"_id":"public/generating-function-learning-notes/index.html","hash":"462a13b73309d9ec6acfce46a845f6a41f9c0470","modified":1617535125116},{"_id":"public/luogu-p4705-solution/index.html","hash":"3489b5b00db3d2fe55bf50fc83ded57411845fd1","modified":1617535125116},{"_id":"public/network-flow-learning-notes-pt2/index.html","hash":"685715550426d638b217e13b9e2c98bbc2e5ef4a","modified":1617535125116},{"_id":"public/luogu-p3613-solution/index.html","hash":"8ed3af82249a74668b5da486bbb9ab68b9e0ce2b","modified":1617535125116},{"_id":"public/min-25-sieve-learning-notes/index.html","hash":"35fb6ce2dbb0cad149a89f1e98e51b73f3e3f528","modified":1617535125116},{"_id":"public/link-cut-tree-learning-notes/index.html","hash":"6caf0bc65e88f8702668a6344367f528d2f27249","modified":1617535125116},{"_id":"public/luogu-p4091-solution/index.html","hash":"6696af191a08c60082c2e21b117086c06c7c0c53","modified":1617535125116},{"_id":"public/lolioi-2019-01-20-solutions/index.html","hash":"d91e09b11094b7e4b217e844d3ca0b35e0e72515","modified":1617535125116},{"_id":"public/something-about-network-flow-learning-notes/index.html","hash":"34d2cb9bf04bef83764e9bcbac63678651518816","modified":1617535125116},{"_id":"public/luogu-p4113-solution/index.html","hash":"438d369ecb82e39aafc78145e916befe7d373f8f","modified":1617535125116},{"_id":"public/similar-euclid-algorithm-learning-notes/index.html","hash":"1c4d8908089cc7843a254eda3dd2d941ea3aef8b","modified":1617535125116},{"_id":"public/luogu-p3723-solution/index.html","hash":"d2df2de7a22afdc9c6f1c3def8d447454c882c25","modified":1617535125116},{"_id":"public/timuzu-solutions/index.html","hash":"c023b8c5f3e31329456b30f71da47706415f8dcd","modified":1617535125116},{"_id":"public/luogu-p5162-solution/index.html","hash":"6cdc0d9c9294b7df8690424670729561087b9e6a","modified":1617535125116},{"_id":"public/block-decomposition/index.html","hash":"02dac91db52de7bc33ed474cce6709a3a6ce1f99","modified":1617535125116},{"_id":"public/polynomial-learning-notes-pt2/index.html","hash":"b2b891b5c1996c1e4e141c97b3884271da6ba474","modified":1617535125116},{"_id":"public/polynomial-learning-notes-pt1/index.html","hash":"a29a3bc5df4cf5def214918e5f9c94aabd31fc47","modified":1617535125116},{"_id":"public/sqrt-decomposition-complexity-optimization/index.html","hash":"8687528f7bebe4e8a28b40585b9e160843357155","modified":1617535125116},{"_id":"public/future-algorithm-ep1/index.html","hash":"3aee647c5f9c95947e40b97158855d2a5a72325d","modified":1617535125116},{"_id":"public/number-theory-learning-notes/index.html","hash":"efed8dd672d21ec3fe51a0e3fa318d9e19d3e362","modified":1617535125116},{"_id":"public/noip-2018-notes/index.html","hash":"16b937c2775eb89a0f42f5ff497b1ebd73c659c0","modified":1617535125116},{"_id":"public/status-compression-learning-notes/index.html","hash":"3e12512937022e00585429b5d91894e03c957e7f","modified":1617535125116},{"_id":"public/luogu-p5009-solution/index.html","hash":"881322fa0a2c87805110ba8e794a8e67ce2b5ad6","modified":1617535125116},{"_id":"public/chtholly-tree-learning-notes/index.html","hash":"7efe3437f3c52a0edb220c65f9a3c7c30cbcdf7b","modified":1617535125116},{"_id":"public/luogu-p2154-solution/index.html","hash":"bd10978c383d8566aeaf7f5f13efb965bdd4f84b","modified":1617535125116},{"_id":"public/luogu-p4900-solution/index.html","hash":"ea4cd661a5023115e8748787cea6cda4f98ba9d4","modified":1617535125116},{"_id":"public/luogu-p3924-solution/index.html","hash":"4b7d4957429514c3e6ca5f7a0d6450be1b804400","modified":1617535125116},{"_id":"public/luogu-t47720-solution/index.html","hash":"ee5b70addd4cc9f69ec887dc3f0b77749744090e","modified":1617535125116},{"_id":"public/hello-world/index.html","hash":"8ac6b9026ce3a80bd3adac71b726471c75ea29b8","modified":1617535125116},{"_id":"public/categories/未分类/index.html","hash":"3d1e2af3f5509493028f6dba9930639168ffbfc5","modified":1617535125116},{"_id":"public/categories/题解/page/2/index.html","hash":"70082c54313833d731378beb332082122ba8dbe6","modified":1617535125116},{"_id":"public/lib/blog-encrypt.js","hash":"8825daa2e18bb6166d099ae78e9ff1df62f619d1","modified":1617535125116},{"_id":"public/categories/题解/index.html","hash":"8ebccc38ffddf2c45833feef92de614fb2aeb9d8","modified":1617535125116},{"_id":"public/categories/题解/page/3/index.html","hash":"73adf40caf579ff286fe26614b68ae002140690b","modified":1617535125116},{"_id":"public/categories/学习笔记/index.html","hash":"afcedc1623e0822776d3dbcb7abdbaf9e025746d","modified":1617535125116},{"_id":"public/categories/学习笔记/page/2/index.html","hash":"66b6b4047e92335f1828d147a964e94eead2aebc","modified":1617535125116},{"_id":"public/categories/游记/index.html","hash":"34a2fcd5abec315773fe64a875d437041201d673","modified":1617535125116},{"_id":"public/categories/研究报告/index.html","hash":"f36d888ef95f7c31fb5e00f3157efa748acd40bd","modified":1617535125116},{"_id":"public/categories/瞎扯/index.html","hash":"f56ca3ffa314cc3c40401fae75b14463b39fa7b9","modified":1617535125116},{"_id":"public/categories/瞎搞/index.html","hash":"6ac920f33f5c6b6b56e4aebb06a1430ea768513a","modified":1617535125116},{"_id":"public/categories/颓废/index.html","hash":"e2aa711631bac863e63e348833462972739e1eea","modified":1617535125116},{"_id":"public/categories/口胡/index.html","hash":"ca3b53d72ec33203d1456f461987a9543a7098fb","modified":1617535125116},{"_id":"public/archives/index.html","hash":"0bb4f2868f43342bb587dddf0d8d3a28fbf78e90","modified":1617535125116},{"_id":"public/categories/未来算法/index.html","hash":"ad7551007fcc97b539516af565af7e270f7a4090","modified":1617535125116},{"_id":"public/archives/page/2/index.html","hash":"a543fed9f9db81e6d7141a1dd5de9de60ab58377","modified":1617535125116},{"_id":"public/archives/page/3/index.html","hash":"1fe399faae90f624c230bee8cce0d6a503589625","modified":1617535125116},{"_id":"public/archives/page/4/index.html","hash":"3a0a1dc303b69f8f20eb75eaaa7a6ea0aab1c58f","modified":1617535125116},{"_id":"public/archives/page/5/index.html","hash":"b2bdaf4bebf0528ca440017ec604d14057ffc004","modified":1617535125116},{"_id":"public/archives/2018/index.html","hash":"c4a33a4b9acd3113df606578d476561e24c02a4e","modified":1617535125116},{"_id":"public/archives/page/6/index.html","hash":"9704543bea569f8ac794be2c954001aa017f8686","modified":1617535125116},{"_id":"public/archives/2018/page/2/index.html","hash":"a1f6d26c61223081eb8e0a8e77fc6aa4c019de6b","modified":1617535125116},{"_id":"public/archives/2018/09/index.html","hash":"8c88fb424367607cd1f8226a55bd057e33b73cb3","modified":1617535125116},{"_id":"public/archives/2018/10/index.html","hash":"dd6dd27bc624650683b5290c2606029de456f62c","modified":1617535125116},{"_id":"public/archives/2018/11/index.html","hash":"fcaa5076c354408bf730a09c56fdfc029ba7c888","modified":1617535125116},{"_id":"public/archives/2018/12/index.html","hash":"381d14b8ccdfafa5ac25725bb11a0b701f87a704","modified":1617535125116},{"_id":"public/archives/2019/index.html","hash":"2c37a6268dd0f438df3f05bc807e74e0e4afb6ee","modified":1617535125116},{"_id":"public/archives/2019/page/2/index.html","hash":"61df90f19628b8142f5fe21194a3b2f31282c914","modified":1617535125116},{"_id":"public/archives/2019/page/3/index.html","hash":"1a75b113da318ae718feaa707b841d1ab56cc0c8","modified":1617535125116},{"_id":"public/archives/2019/page/4/index.html","hash":"b48bf9db4769e7e6241f7755d8ca06c501f714f7","modified":1617535125116},{"_id":"public/archives/2019/01/index.html","hash":"ed2b10fcefb34838eb21f668fb3c223b4e7cff46","modified":1617535125116},{"_id":"public/archives/2019/02/index.html","hash":"e46b1dcf9d12ff2513577820c0a896344097207c","modified":1617535125116},{"_id":"public/archives/2019/03/index.html","hash":"6279e508608fdd37c795955639bdbc955ad46777","modified":1617535125116},{"_id":"public/archives/2019/04/index.html","hash":"1485efcea611ce84944a866f01c687ba49b3789c","modified":1617535125116},{"_id":"public/archives/2019/05/index.html","hash":"05fba731d4084125dad5f27e54898e3194d51f68","modified":1617535125116},{"_id":"public/archives/2019/08/index.html","hash":"e4343b67c638111bad54e7f75aac803d387032c1","modified":1617535125116},{"_id":"public/archives/2020/index.html","hash":"066c531b82327663d3cf5dc216ad3eb669982d82","modified":1617535125116},{"_id":"public/archives/2020/05/index.html","hash":"ca56019e53b1ecc3a753942664494a389d2c6048","modified":1617535125116},{"_id":"public/archives/2020/06/index.html","hash":"7dbd5c5d3d1277fc1d868b892d4d7d6b55b657c8","modified":1617535125116},{"_id":"public/archives/2020/07/index.html","hash":"468b7cc263ebfdeebd5fd87418c5d296924176ca","modified":1617535125116},{"_id":"public/archives/2020/09/index.html","hash":"8f1705ddef6a768e49891f96ae60018c330213a7","modified":1617535125116},{"_id":"public/index.html","hash":"c8ef02a183850fbf576535fa12fb8d458d306ec6","modified":1617535125116},{"_id":"public/archives/2021/index.html","hash":"66892867ed8520022b364a7178bc2fc02470019c","modified":1617535125116},{"_id":"public/archives/2021/04/index.html","hash":"43070688204ec0e7da49aa558edbd6a8e13cd603","modified":1617535125116},{"_id":"public/page/2/index.html","hash":"1ee4fc9563535f0eb1b35397e43fb687bad2d0dc","modified":1617535125116},{"_id":"public/page/3/index.html","hash":"954479c1a4c7ce5efe42652eb9cd0139af98ca0a","modified":1617535125116},{"_id":"public/page/4/index.html","hash":"caa83f26f537b5114489c7ec5b4f84283a84ebe2","modified":1617535125116},{"_id":"public/page/5/index.html","hash":"35af2dc8676d6295f0e6544d6b8a7cf59efd5961","modified":1617535125116},{"_id":"public/page/6/index.html","hash":"b91c6557fe097d96989201019e95b03b77585639","modified":1617535125116},{"_id":"public/tags/其它/index.html","hash":"d16e5ecb19badbb32eedc65bf890a6335e60497f","modified":1617535125116},{"_id":"public/tags/洛谷/index.html","hash":"119d3249502446eb218bd8cd45fb91629039c9c5","modified":1617535125116},{"_id":"public/tags/数论/index.html","hash":"4319cc001eb17c44c765153120e69aa1837016c6","modified":1617535125116},{"_id":"public/tags/组合数学/index.html","hash":"9f1e90d19f6538998e4c64265a62602066395b30","modified":1617535125116},{"_id":"public/tags/期望/index.html","hash":"7ff8822485839781a9659cecb63e4c4117e4601b","modified":1617535125116},{"_id":"public/tags/SDOI/index.html","hash":"bb61e476fe1e7255cbde9db0001ca57bd1e310ed","modified":1617535125116},{"_id":"public/tags/2009/index.html","hash":"43c65cf0b9fd9788f12c8f1a2fc2a508ab2a6ff4","modified":1617535125116},{"_id":"public/tags/离散化/index.html","hash":"893635bee58923d01146fd60db2e016788df4e4a","modified":1617535125116},{"_id":"public/tags/树状数组/index.html","hash":"adf786bc2c370ed7d0cc3d5cd43ad26b5975a12b","modified":1617535125116},{"_id":"public/tags/差分/index.html","hash":"27289abc17bb6443f452065abd0ead5d383b8e34","modified":1617535125116},{"_id":"public/tags/状态压缩/index.html","hash":"72ba53c3f4b78ac1028c35cd033565ddc5c950f6","modified":1617535125116},{"_id":"public/tags/动态规划/index.html","hash":"6de73588be545c078d785257bf42c0144bf02069","modified":1617535125116},{"_id":"public/tags/NOIp/index.html","hash":"863d52857f60c5b11a32803e8e2b072369e3b8ce","modified":1617535125116},{"_id":"public/tags/2018/index.html","hash":"c40751f3bcecaa2b5dbc63d12b7257e480a07c88","modified":1617535125116},{"_id":"public/tags/分块/index.html","hash":"c67f9c42f33767036fc267a9df89e882386819c1","modified":1617535125116},{"_id":"public/tags/块状分块/index.html","hash":"38714db6cf91fd14b0d5e427b51d5919b996b341","modified":1617535125116},{"_id":"public/tags/NTT/index.html","hash":"6a1436c72716c543170f9a979f09dcdc01bb7237","modified":1617535125116},{"_id":"public/tags/AHOI/index.html","hash":"f26dbb65a5ceee8e43b1ce52849f752898f32262","modified":1617535125116},{"_id":"public/tags/HNOI/index.html","hash":"f91678f4d7e91dbd7a51b1e4a25fe4eb2fd1488a","modified":1617535125116},{"_id":"public/tags/2017/index.html","hash":"b8117755ae1edd425c196bfb06aef5fb447ca811","modified":1617535125116},{"_id":"public/tags/HEOI/index.html","hash":"e524ffc3ab519f002256671d54ef52cd98604264","modified":1617535125116},{"_id":"public/tags/2012/index.html","hash":"52b6c1c8735e1e5ea39c6017da939321cf9f8979","modified":1617535125116},{"_id":"public/tags/莫队/index.html","hash":"90e41c4a66f2b6864634ae22bdc697bc0b1e7d24","modified":1617535125116},{"_id":"public/tags/网络流/index.html","hash":"c96858ee6f216d82be5e2eb5523b1c4995306571","modified":1617535125116},{"_id":"public/tags/最大流/index.html","hash":"5602694ae2a272dc289c131b79c560830510f700","modified":1617535125116},{"_id":"public/tags/预留推进/index.html","hash":"8f1819df86fd5be55537ee4a0f826f633bf396d8","modified":1617535125116},{"_id":"public/tags/TJOI/index.html","hash":"bbd392e44f5caf136878c51dca476bc9554c19e4","modified":1617535125116},{"_id":"public/tags/2016/index.html","hash":"274601ef8d576a8aa766b8d56a9210a950e5189a","modified":1617535125116},{"_id":"public/tags/loli/index.html","hash":"9ace610725dc0a165685a5c635bde38ffbc291cf","modified":1617535125116},{"_id":"public/tags/模拟赛/index.html","hash":"29a336ef082c77e234e63c2351df16d988984085","modified":1617535125116},{"_id":"public/tags/树链剖分/index.html","hash":"14ef244123f9ead134af6231a51ac5ab0c64bd6d","modified":1617535125116},{"_id":"public/tags/LCT/index.html","hash":"095e92eefe4ae2cb86f60955f1b2bffbf6ef1d0c","modified":1617535125116},{"_id":"public/tags/珂朵莉树/index.html","hash":"a0c22228fc3ca0f5f3f667cb5afeceb7d7625316","modified":1617535125116},{"_id":"public/tags/平衡树/index.html","hash":"868f2e3fd4f20c3d9f0add41c0b9b25c6020a515","modified":1617535125116},{"_id":"public/tags/毒瘤/index.html","hash":"1aeb4fbfe682b46039822dd90d9bac1f9f28e676","modified":1617535125116},{"_id":"public/tags/多项式/index.html","hash":"165d55c43c361f3a99211d8c07c1d8c9097fc411","modified":1617535125116},{"_id":"public/tags/三角函数/index.html","hash":"3d10455e0a3635bc4aba61ac2b681aad5be75970","modified":1617535125116},{"_id":"public/tags/玄学/index.html","hash":"3412a0c433048ae30352b9a13e3273d2c0dcdcea","modified":1617535125116},{"_id":"public/tags/字符串/index.html","hash":"89223a59979daee380d9e6e1af139b085714d58c","modified":1617535125116},{"_id":"public/tags/SA/index.html","hash":"6e3648d6d4d6bf1f1fb9711fe234cef21e511f0d","modified":1617535125116},{"_id":"public/tags/伯努利数/index.html","hash":"1d7cd203bb5306dca391b32df86dc9ca1e0fc710","modified":1617535125116},{"_id":"public/tags/2019/index.html","hash":"6a9b2e2262f7c04a37d3307affb1052ec14c397b","modified":1617535125116},{"_id":"public/tags/容斥/index.html","hash":"0aafc510b726c67d79f5f6524400f232418cbd71","modified":1617535125116},{"_id":"public/tags/提交答案/index.html","hash":"1a58a031642a154f764bec76536fff0496dc1290","modified":1617535125116},{"_id":"public/tags/DFS序/index.html","hash":"326d3f868cb97274f3437739ec36bc48ce65028a","modified":1617535125116},{"_id":"public/tags/BFS序/index.html","hash":"724b64eebf92b82eb94a3704da0a1d14c3f80354","modified":1617535125116},{"_id":"public/tags/向量/index.html","hash":"f176a1366bf8f402e5fc155ce6d78ea0e8dedea1","modified":1617535125116},{"_id":"public/tags/矩阵乘法/index.html","hash":"de373724a6f1951d9e765e819b72036f50943c75","modified":1617535125116},{"_id":"public/tags/斯特林数/index.html","hash":"b55a605f248c4a59b7286660505b0a425c38c70a","modified":1617535125116},{"_id":"public/tags/交互/index.html","hash":"1d38239e3582a81e6545a2a8809618f4467e61f9","modified":1617535125116},{"_id":"public/tags/随机算法/index.html","hash":"8bd288bb6f280096d9c684a943bf2898637d1e4e","modified":1617535125116},{"_id":"public/tags/点分治/index.html","hash":"381d0dc40478e1158a70100befcbad02e9a363a5","modified":1617535125116},{"_id":"public/tags/虚树/index.html","hash":"0a4d98554c18a0f5b518bb3415165b8c1469b5a3","modified":1617535125116},{"_id":"public/tags/杂题/index.html","hash":"2da50a0a4792256d9bb9541e97860846484489a3","modified":1617535125116},{"_id":"public/tags/东方/index.html","hash":"c6895c035898c5e91634ca21cb12dfa78b3d471b","modified":1617535125116},{"_id":"public/tags/矩阵/index.html","hash":"98f87b6ab7d751a65e446e8df9bd91a6ba0314bf","modified":1617535125116},{"_id":"public/tags/STG/index.html","hash":"5d26ec288770606b07204e27a98804fd185af858","modified":1617535125116},{"_id":"public/tags/RPG/index.html","hash":"ee2ed127045c6cb3a5941723519f87242d330930","modified":1617535125116},{"_id":"public/tags/线段树/index.html","hash":"c5e7078c7d263cb3367671b22f19fa4b04ab278c","modified":1617535125116},{"_id":"public/tags/树套树/index.html","hash":"39ea60216d8cc80eb3a6150688dc262c181b89cd","modified":1617535125116},{"_id":"public/tags/FFT/index.html","hash":"1210dd6913993e2def907694f2058c3b925520e4","modified":1617535125116},{"_id":"public/tags/题目组/index.html","hash":"d7dab313c91278f548518b92596f91e269260ae0","modified":1617535125116},{"_id":"public/tags/min-25筛/index.html","hash":"351ac2d12bd1fa2234723ce1bbf7149cc24c6ab5","modified":1617535125116},{"_id":"public/tags/Splay/index.html","hash":"bb20edbb5e3c7a13ed48ae2c2d3de5ed2f9ecb42","modified":1617535125116},{"_id":"public/tags/生成函数/index.html","hash":"320c9086def6655acc1a81ec1c6bbe818361470f","modified":1617535125116},{"_id":"public/tags/FWT/index.html","hash":"fe93d426088e4b67df601830399651f93a075f83","modified":1617535125116},{"_id":"public/tags/2020/index.html","hash":"803f6c6c3b5ca9f902d437adcf9b5addbfba3ef9","modified":1617535125116},{"_id":"public/tags/Nono-443/index.html","hash":"7f8441d4dafb1e70291a5e1ca5cf3e253d1fea93","modified":1617535125116},{"_id":"public/tags/杜教筛/index.html","hash":"4bb7cea4c40b8447a8585e128ec85c4c7c2bad16","modified":1617535125116},{"_id":"public/tags/类欧几里得/index.html","hash":"d139f460b51c4d10eac8b226aa4d50d7f2cd5b24","modified":1617535125116},{"_id":"public/img/1309909-20180123095924037-1618037447.png","hash":"5ee810abb59e8db835b1dcfdee0ebe2af27ca798","modified":1617535125116},{"_id":"public/img/1309909-20180123095955350-1680422636.png","hash":"d2dd7a73bd28c95f817f26c85f6ffcf8530a8165","modified":1617535125116},{"_id":"public/img/1309909-20180123101901740-2118178734.png","hash":"d472e6f4f11884ed90efedfaa0e8433ee5a971b5","modified":1617535125116},{"_id":"public/img/1309909-20180123110136115-1112016464.png","hash":"e7aca1268b63998cbb3db07421ca674331381363","modified":1617535125116},{"_id":"public/img/1309909-20180123110156272-1242463729.png","hash":"937f4340c26c86f4ebad97a98af5adc69b9a9c88","modified":1617535125116},{"_id":"public/img/1309909-20180123110209772-2057141058.png","hash":"2d9834c8e294848d304f0a57d1f4cfb8c1370de0","modified":1617535125116},{"_id":"public/img/1309909-20180123110213709-49169640.png","hash":"f94a543e4d57058bd3b2a7911f05abacfe897816","modified":1617535125116},{"_id":"public/img/TIM图片20181011211750.jpg","hash":"b3e610c3bea9a11ffb51ca5f1bd5cd538092a813","modified":1617535125116},{"_id":"public/img/TIM图片20181023195537.jpg","hash":"6fb73e6c8ac291398911366bcc11d275820e866a","modified":1617535125116},{"_id":"public/img/TIM图片20181209192946.jpg","hash":"7726adf714e53f596ce2ab149ebc5380beb5abe4","modified":1617535125116},{"_id":"public/img/TIM图片20190103092627.png","hash":"302582079f123bc1a7074bc8ae84ce027181b49a","modified":1617535125116},{"_id":"public/img/TIM图片20190123161752.jpg","hash":"751cb3479aaa194a0c3093efc4cafa9aa38d3b8d","modified":1617535125116},{"_id":"public/img/TIM截图20190116111347.png","hash":"718d56a312712097da85b4d0e286cab9bcb222be","modified":1617535125116},{"_id":"public/img/TIM截图20190214152934.png","hash":"c3426aa6be73ef9639734f927ec5eb0a661556e6","modified":1617535125116},{"_id":"public/img/TIM截图20190215193107.png","hash":"230f65c221d97be0a295cbe3b3efdf3d839b44c9","modified":1617535125116},{"_id":"public/img/TIM截图20190318124131.png","hash":"f014010197db27cd634bb417e56cc2f8a916d5ea","modified":1617535125116},{"_id":"public/img/TIM截图20190319161900.png","hash":"590b34826f3c24b12e9a7d3c5bf0b45d2661c61e","modified":1617535125116},{"_id":"public/img/TIM截图20190319161404.png","hash":"ff21f37a101fb6752c5887aba62b55a9907e3af0","modified":1617535125116},{"_id":"public/img/TIM截图20190319171721.png","hash":"98d0ef1aa7d5ae123d45afb3e81513d60003adbb","modified":1617535125116},{"_id":"public/img/TIM截图20190804192526.png","hash":"74dad39ac624a40d990df5d8a514a849e0a1c9a5","modified":1617535125116},{"_id":"public/img/The Kid.png","hash":"f77ecb69e448ec420da9cf8ca5d3f8979d4ea991","modified":1617535125116},{"_id":"public/img/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1617535125116},{"_id":"public/img/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1617535125116},{"_id":"public/img/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1617535125116},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1617535125116},{"_id":"public/img/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1617535125116},{"_id":"public/img/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1617535125116},{"_id":"public/img/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1617535125116},{"_id":"public/img/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1617535125116},{"_id":"public/img/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1617535125116},{"_id":"public/img/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1617535125116},{"_id":"public/img/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1617535125116},{"_id":"public/img/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1617535125116},{"_id":"public/img/circleBullet.png","hash":"3f690965f978a16cf57db8012dc3769ebe74f532","modified":1617535125116},{"_id":"public/img/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1617535125116},{"_id":"public/img/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1617535125116},{"_id":"public/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1617535125116},{"_id":"public/img/logo copy.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1617535125116},{"_id":"public/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1617535125116},{"_id":"public/img/player.png","hash":"f0537d96e195ad6ec8b21cfa7006a71e72f266ae","modified":1617535125116},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1617535125116},{"_id":"public/img/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1617535125116},{"_id":"public/img/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1617535125116},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1617535125116},{"_id":"public/img/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1617535125116},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1617535125116},{"_id":"public/img/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1617535125116},{"_id":"public/img/图片2.png","hash":"30b2caa13edfc612eec7f9dcb1a83305a8e46c9f","modified":1617535125116},{"_id":"public/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1617535125116},{"_id":"public/img/图片1.png","hash":"1ac5f10a556ae34712e4613451839681910df009","modified":1617535125116},{"_id":"public/img/潮语-1.png","hash":"cec556fb9f6dc059065c92aa74bc4447fa49d0d3","modified":1617535125116},{"_id":"public/img/潮语-2.png","hash":"1a96ffc37b76f09c0ab7841e3d852970ee77184e","modified":1617535125116},{"_id":"public/css/blog-encrypt.css","hash":"0d74ee9365e8224999f06a625ab8be4b71e50180","modified":1617535125116},{"_id":"public/img/chao1.png","hash":"b908049626a2a1f12c7e93ab585b24857990a236","modified":1617535125116},{"_id":"public/img/chao2.png","hash":"3619d64a85b4605511d73da8cbbb2c18974e4656","modified":1617535125116},{"_id":"public/img/TIM图片20190409113807.jpg","hash":"c08abbaca3680f8b919a7fd7ad5f88eda21b9262","modified":1617535125116},{"_id":"public/img/chao3.png","hash":"00991ee363afff96a7a0cdedf651e9cb579be25f","modified":1617535125116},{"_id":"public/img/图片3.png","hash":"fa5e6fb339cddf434da3570428c5a7baac01b16f","modified":1617535125116},{"_id":"public/js/animation.js","hash":"59a05568fd5718513792b0d48bcb4bcf7eaa20e8","modified":1617535125116},{"_id":"public/js/back_to_top.js","hash":"0f071e2331e39043529041322c4812bb13a3990d","modified":1617535125116},{"_id":"public/js/main.js","hash":"3fb6be34945798cd400825e021c4267856fff2df","modified":1617535125116},{"_id":"public/css/style.css","hash":"599d8ccce4e3e29f66607e5015d48c945995d771","modified":1617535125116},{"_id":"public/css/cyberpunk.css","hash":"ffbe6223e0dc6b106b0e039791e3a52e6a064b9b","modified":1617535125116},{"_id":"public/css/default.css","hash":"599d8ccce4e3e29f66607e5015d48c945995d771","modified":1617535125116},{"_id":"public/lib/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1617535125116},{"_id":"public/img/20210404190314_1.jpg","hash":"d8911c5d112d2f5bd1634e33e32f585c831aa8ec","modified":1617535125116},{"_id":"public/img/20210404190325_1.jpg","hash":"58f23d6b4f812abacfd8295505c34145cb7fc074","modified":1617535125116},{"_id":"public/img/KyoukoKasodani.png","hash":"79d9dd8019cd3677b518586b65129d2355a39d37","modified":1617535125116},{"_id":"public/img/Remilia_.png","hash":"7299baafecf30bdf36b55ed6ac88153562dd082f","modified":1617535125116},{"_id":"public/img/20210404190640_1.jpg","hash":"3bb6e0eb0cccf54e2f4f7b7f70b478c7d4a829e8","modified":1617535125116},{"_id":"public/img/20210404190455_1.jpg","hash":"f247d22ef9dc1737bf355e381069a8c8de41c736","modified":1617535125116},{"_id":"public/img/SCCS/寒波0.png","hash":"69e37153dd4d51bd317f646017f572b5f7608a1c","modified":1617535125116},{"_id":"public/img/SCCS/流星0.png","hash":"a3cfc0baf03c22b91831536a975b526f39de3866","modified":1617535125116},{"_id":"public/img/SCCS/月相0.png","hash":"5c9313e1bec12c1ba90fa9b46f5d8cff44aa1ff5","modified":1617535125116},{"_id":"public/img/SCCS/乾坤0.png","hash":"f86c880a5a0cdb4e8c33626c9a27f6268c4cad66","modified":1617535125116},{"_id":"public/img/SCCS/阳光0.png","hash":"6596e895df4e2db69793d4d3cdcc14be56287b0a","modified":1617535125116},{"_id":"public/img/SCCS/星条0.png","hash":"ed83a5b193c894104155ede6f6b4d5e6d6605321","modified":1617535125116},{"_id":"public/img/SCCS/电中1.png","hash":"6ccf66b033dceaf82e39f53edf65a706cc414af0","modified":1617535125116},{"_id":"public/img/SCCS/乾坤1.png","hash":"5c2094096899675f5eb98a5a3ad20680bbd5f10d","modified":1617535125116},{"_id":"public/img/SCCS/变动4.png","hash":"3f02c8afe55c9d573a94d528dfdcee1ba39b8903","modified":1617535125116},{"_id":"public/img/SCCS/雷鱼0.png","hash":"76725d93aba5e6a61084719dbe27e26cfe88f9f6","modified":1617535125116},{"_id":"public/img/SCCS/把驻0.png","hash":"49e20e8a72f051472e150481f71a8cb424a7ba4d","modified":1617535125116},{"_id":"public/img/SCCS/星条1.png","hash":"9208fb2c22ff90ac4b4eeda6005b189063006cb7","modified":1617535125116},{"_id":"public/img/SCCS/残响0.png","hash":"21678f6aeaca711c5e0e3b8044dc327e41f398ad","modified":1617535125116},{"_id":"public/img/SCCS/日星0.png","hash":"3b302e6ef1d3f07a3a9e9728afa6160971903864","modified":1617535125116},{"_id":"public/img/SCCS/变动5.png","hash":"7847353627883a2c012421dd83d3f6d57ed799c5","modified":1617535125116},{"_id":"public/img/SCCS/增幅0.png","hash":"5911d4bddbbf306e7afff065dbd475ddc571b6cc","modified":1617535125116},{"_id":"public/img/SCCS/电中0.png","hash":"b6401f4f56aef32713f2cf06f7d8cb905e7ee215","modified":1617535125116},{"_id":"public/img/SCCS/结晶0.png","hash":"f86aa2f192082e33b08210690851d88ec4bcb9c8","modified":1617535125116},{"_id":"public/img/SCCS/魔涡0.png","hash":"b7dc6e20173f132761d18b1c43f1485a86c2fb0b","modified":1617535125116},{"_id":"public/img/SCCS/怪奇0.png","hash":"6439d4a077465a8aa7034cfcaa7e0a546a35482b","modified":1617535125116},{"_id":"public/img/SCCS/辻风0.png","hash":"300ef9faf9238ad837561761a0d41595c2cb6cbc","modified":1617535125116},{"_id":"public/img/SCCS/雷庭0.png","hash":"07ef0c0ec0d39f7e52a302a081891f7b06c67649","modified":1617535125116},{"_id":"public/img/SCCS/反击0.png","hash":"3e645e6c46afb0c94e9d864adc9d781d9bb51ded","modified":1617535125116},{"_id":"public/img/SCCS/转移1.png","hash":"24bad668636ca92eba04ec969912642e21933aed","modified":1617535125116},{"_id":"public/img/SCCS/北风0.png","hash":"8dba1ef7f10d8981b89e796ab7a368b943c9a421","modified":1617535125116},{"_id":"public/img/SCCS/转移0.png","hash":"3576140632cea4b6b44b94f0605a842fe118da24","modified":1617535125116},{"_id":"public/img/SCCS/击沉0.png","hash":"7fedb9f249833ebe87eb097bc7be9c71275e476d","modified":1617535125116},{"_id":"public/img/SCCS/突风0.png","hash":"a7ef166e507d63b4bfc0f1a9cc8d7b8863f97b85","modified":1617535125116},{"_id":"public/img/SCCS/变动0.png","hash":"20d8ef81dd567b2f11fe239ae735b744e2c564ea","modified":1617535125116},{"_id":"public/img/SCCS/神鸟0.png","hash":"77ef8dd9f3d9300efd630266b0d13f23b0da9a38","modified":1617535125116},{"_id":"public/img/SCCS/现像0.png","hash":"e71d5b2c6e89389f7d0527460cb78bdd05bc4717","modified":1617535125116},{"_id":"public/img/SCCS/经年的憎恶0.png","hash":"e5363880e99925efc0af2adb46edbdaa8bf4859f","modified":1617535125116},{"_id":"public/img/SCCS/日星1.png","hash":"0f250636306c5a5ad7998d8eb8ffa6036ac5c630","modified":1617535125116},{"_id":"public/img/SCCS/电中2.png","hash":"4fa07b8ac497432c5622eafcc4d05c7f3ef05e19","modified":1617535125116},{"_id":"public/img/SCCS/转移2.png","hash":"4432a080c1b803c8bc4a230cb827255c16788601","modified":1617535125116},{"_id":"public/img/SCCS/咆哮0.png","hash":"0dd9748c9d2178f714e39ffb7369913a5d972d92","modified":1617535125116},{"_id":"public/img/SCCS/咆哮1.png","hash":"545f69800c0a4154604ae732fd03dbf9f6f4fa44","modified":1617535125116},{"_id":"public/img/SCCS/变动2.png","hash":"cbabd145f4cff96b42ad0addbff667a56bf1ab0f","modified":1617535125116},{"_id":"public/img/SCCS/狱炎0.png","hash":"87af16c16209daa3f820ec81f375c64883e51198","modified":1617535125116},{"_id":"public/img/SCCS/传说0.png","hash":"22dbb2826e4ae620876d70839eef0791bf47ab27","modified":1617535125116},{"_id":"public/img/SCCS/祈愿0.png","hash":"87b4356901731a67bdeab74e7cf9bb8cfabccca3","modified":1617535125116},{"_id":"public/img/SCCS/变动1.png","hash":"30b99cb831a1b038b404e1f49d5db127cdb51511","modified":1617535125116},{"_id":"public/img/SCCS/秘术0.png","hash":"6cb8a47e158fff0089a75adb37b25403109424a6","modified":1617535125116},{"_id":"public/img/SCCS/变动3.png","hash":"79b6ab70edbf97d0b6ef88cb9a6efbe0bc0c6573","modified":1617535125116},{"_id":"public/img/SCCS/爪痕0.png","hash":"50bac12ccfcdab9eb841354ad55c99ae39d9c7c2","modified":1617535125116},{"_id":"public/img/SCCS/原初之光0.png","hash":"e018dfa66a162396bf03680363dd09ab4bac313a","modified":1617535125116},{"_id":"public/img/SCCS/雷庭1.png","hash":"6f34971b5631e939dcaff562ae8d8f7b7ba4738b","modified":1617535125116},{"_id":"public/img/SCCS/星月0.png","hash":"c84c1c4aaf9e88752f81507b8704f18381b08695","modified":1617535125116},{"_id":"public/img/SCCS/变动6.png","hash":"70fe020693c743384774d7a7359453db602b5e23","modified":1617535125116},{"_id":"public/img/SCCS/击沉1.png","hash":"5ddea7f7d6549557d510d7ab05cfe30ee312a5f7","modified":1617535125116},{"_id":"public/img/SCCS/击沉2.png","hash":"fcd6a72d5b3d7ae63e36cc0654b20676c7ae4548","modified":1617535125116},{"_id":"public/img/SCCS/突风1.png","hash":"c0b63e3778e2c3b779a7469f98feb02b144c23c8","modified":1617535125116},{"_id":"public/img/SCCS/秘术1.png","hash":"ea8fef2f4dacfbaa8e5e43ae3be05b682ea19800","modified":1617535125116},{"_id":"public/img/SCCS/离散0.png","hash":"43728582e9eb92004dbb24196ead62ca15c97d65","modified":1617535125116},{"_id":"public/img/SCCS/结界0.png","hash":"440758c8b0caa345a57a627f3520c32013def929","modified":1617535125116},{"_id":"public/img/SCCS/击沉3.png","hash":"5cb318211d60a56fcf91e6c5c7c93b79f47df684","modified":1617535125116},{"_id":"public/img/SCCS/神鸟1.png","hash":"ae95b93b4b686522d504da60a6325aed9c7e17ef","modified":1617535125116},{"_id":"public/img/SCCS/月日0.png","hash":"96354b51d86a453a76288ed6c939a12e5b242771","modified":1617535125116}],"Category":[{"name":"未分类","_id":"ckn32nfzq0004mku948du7dp6"},{"name":"题解","_id":"ckn32nfzt0009mku917zr94dj"},{"name":"学习笔记","_id":"ckn32ng04000wmku99a44fc3j"},{"name":"游记","_id":"ckn32ng060012mku9czjycmbu"},{"name":"研究报告","_id":"ckn32ng080019mku997d3fe13"},{"name":"瞎扯","_id":"ckn32ng0l001vmku9b0jzbrcq"},{"name":"瞎搞","_id":"ckn32ng0p002cmku98gs6dxst"},{"name":"颓废","_id":"ckn32ng0v0039mku97unac3c2"},{"name":"口胡","_id":"ckn32ng0y003mmku96j6a2ivi"},{"name":"未来算法","_id":"ckn32nhmt007nmku9fspa6vyh"}],"Data":[],"Page":[{"layout":"false","comments":0,"_content":"<body>\n\t<div>\n\t\t<p style=\"text-align: center;\"><img src=\"https://i.loli.net/2018/10/27/5bd4705dd844f.jpg\"></p>\n\t\t<p style=\"text-align: center;\"><strong>您可能访问了错误的网址</strong></p>\n\t\t<p style=\"text-align: center;\"><a href=\"https://challestend.github.io\" target=\"_self\"><strong>回到博客主页</strong></a></p>\n\t</div>\n</html>\n","source":"404.html","raw":"---\nlayout: false\ncomments: false\n---\n<body>\n\t<div>\n\t\t<p style=\"text-align: center;\"><img src=\"https://i.loli.net/2018/10/27/5bd4705dd844f.jpg\"></p>\n\t\t<p style=\"text-align: center;\"><strong>您可能访问了错误的网址</strong></p>\n\t\t<p style=\"text-align: center;\"><a href=\"https://challestend.github.io\" target=\"_self\"><strong>回到博客主页</strong></a></p>\n\t</div>\n</html>\n","date":"2020-05-17T12:07:04.659Z","updated":"2020-05-17T12:07:04.659Z","path":"404.html","title":"","_id":"ckn32nfxs0000mku98q57amfg","content":"<body>\n\t<div>\n\t\t<p style=\"text-align: center;\"><img src=\"https://i.loli.net/2018/10/27/5bd4705dd844f.jpg\"></p>\n\t\t<p style=\"text-align: center;\"><strong>您可能访问了错误的网址</strong></p>\n\t\t<p style=\"text-align: center;\"><a href=\"https://challestend.github.io\" target=\"_self\"><strong>回到博客主页</strong></a></p>\n\t</div>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<body>\n\t<div>\n\t\t<p style=\"text-align: center;\"><img src=\"https://i.loli.net/2018/10/27/5bd4705dd844f.jpg\"></p>\n\t\t<p style=\"text-align: center;\"><strong>您可能访问了错误的网址</strong></p>\n\t\t<p style=\"text-align: center;\"><a href=\"https://challestend.github.io\" target=\"_self\"><strong>回到博客主页</strong></a></p>\n\t</div>\n</html>\n"},{"title":"关于","date":"2020-05-17T12:07:04.689Z","mathjax":true,"_content":"A juruo OIer from SD province.\n\nStudying in SLYZ.\n\nFind me on\n\n- [Luogu](https://www.luogu.org/space/show?uid=63352)\n- [LibreOJ](https://loj.ac/user/6666)\n- [UniversalOJ](http://uoj.ac/user/profile/Challestend)\n- [NowCoder](https://www.nowcoder.com/profile/514705863)\n- [51nod](https://www.51nod.com/User/Index.html#!#userId=182215)\n- [CodeForces](http://codeforces.com/profile/CLT)\n- [GitHub](https://github.com/Challestend)\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: Undefined\nmathjax: true\n---\nA juruo OIer from SD province.\n\nStudying in SLYZ.\n\nFind me on\n\n- [Luogu](https://www.luogu.org/space/show?uid=63352)\n- [LibreOJ](https://loj.ac/user/6666)\n- [UniversalOJ](http://uoj.ac/user/profile/Challestend)\n- [NowCoder](https://www.nowcoder.com/profile/514705863)\n- [51nod](https://www.51nod.com/User/Index.html#!#userId=182215)\n- [CodeForces](http://codeforces.com/profile/CLT)\n- [GitHub](https://github.com/Challestend)\n","updated":"2020-05-17T12:07:04.689Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckn32nfzo0002mku9b7fz0vi8","content":"<p>A juruo OIer from SD province.</p>\n<p>Studying in SLYZ.</p>\n<p>Find me on</p>\n<ul>\n<li><a href=\"https://www.luogu.org/space/show?uid=63352\">Luogu</a></li>\n<li><a href=\"https://loj.ac/user/6666\">LibreOJ</a></li>\n<li><a href=\"http://uoj.ac/user/profile/Challestend\">UniversalOJ</a></li>\n<li><a href=\"https://www.nowcoder.com/profile/514705863\">NowCoder</a></li>\n<li><a href=\"https://www.51nod.com/User/Index.html#!#userId=182215\">51nod</a></li>\n<li><a href=\"http://codeforces.com/profile/CLT\">CodeForces</a></li>\n<li><a href=\"https://github.com/Challestend\">GitHub</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>A juruo OIer from SD province.</p>\n<p>Studying in SLYZ.</p>\n<p>Find me on</p>\n<ul>\n<li><a href=\"https://www.luogu.org/space/show?uid=63352\">Luogu</a></li>\n<li><a href=\"https://loj.ac/user/6666\">LibreOJ</a></li>\n<li><a href=\"http://uoj.ac/user/profile/Challestend\">UniversalOJ</a></li>\n<li><a href=\"https://www.nowcoder.com/profile/514705863\">NowCoder</a></li>\n<li><a href=\"https://www.51nod.com/User/Index.html#!#userId=182215\">51nod</a></li>\n<li><a href=\"http://codeforces.com/profile/CLT\">CodeForces</a></li>\n<li><a href=\"https://github.com/Challestend\">GitHub</a></li>\n</ul>\n"},{"mathjax":true,"date":"2020-06-09T16:26:45.478Z","title":"花花的奇妙冒险","_content":"### 简介\n\n《花花的奇妙冒险》是 SLYZ 2018 级著名作家 [Tommy_clas](https://www.luogu.com.cn/user/110471)（为了方便，同时与替身「主席」区别开来，我们称其为「浩楠哥」）撰写的长篇小说。创作初期曾被命名为《阿潮的奇妙冒险》。\n\n是《JOJO 的奇妙冒险》第三部的同人创作，世界观亦继承该作品的世界观。\n\n目前正在绝赞连载中。最新话为 `第六章：东京的星期日（其二）`。\n\n关于名称的日语翻译，我的个人见解是《かりんの奇妙な冒険》。\n\n### 登场人物\n\n浩楠哥曾经写过一个[设定文档](https://www.luogu.com.cn/blog/Tommyclas/post-e-chao-di-ji-miao-mao-xian-she-ding-pian)。\n\n需要注意的是，本 Wiki 只会收录已登场人物。\n\n| 人物名 | 初登场 | 状态 |\n| :-: | :-: | :-: |\n| [花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan) | 第一章（其一） | **有更新** |\n| [汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi) | 第一章（其一） | 没有更新 |\n| [阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer) | 第一章（其一） | 没有更新 |\n| [卓尔·吉尼尔斯](/karin-no-kimyou-na-bouken/zhuoer-jiniersi) | 第二章（其一） | 没有更新 |\n| [茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi) | 第四章（其一） | 没有更新 |\n| [世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai) |  第四章（其一） | **有更新** |\n| 世佳太太 | 第四章（其一） | 没有该页面 |\n| [小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei) | 第四章（其一） | 没有更新 |\n| [强奸犯胖子](/karin-no-kimyou-na-bouken/qiangjianfanpangzi) | 第四章（其二） | 没有更新 |\n| 世佳 大川 | 第四章（其三） | 没有该页面 |\n| [飞车党大叔](/karin-no-kimyou-na-bouken/feichedangdashu) | 第五章（其二） | 没有更新 |\n| [简·皮埃尔·波鲁那雷夫](/karin-no-kimyou-na-bouken/j-p-polnareff) | 第六章（其二） | **新页面** |\n\n### 杂项\n\n> 「女士们，先生们，欢迎登上中国石岚市飞往美国纽约市的 A114514 航班，祝你们有一个愉快的旅途。」\n\n**恶 臭 航 班**。\n\n这么臭的航班还是直接坠毁了算了罢（无慈悲\n\n---\n\n第二章的卓尔被主角团打败之后报了名字，于是加入了主角团。\n\n第五章的飞车党大叔被主角团打败之后没有报名字，于是被抓起来了。\n\n这个故事告诉我们，自我介绍要报名字，尤其是面对主角团的时候。\n\n---\n\n> 只见花花俯下上半身，双臂在胸前交叉，手指自由地张开着，而汤米则在她的身旁双手叉腰，抬头挺胸，立在花花的另一侧。\n\n出现了！JOJO 立！\n\n---\n\nQQ 群内：\n\n> 陶「所以日本人说的是什么语言啊。」\n> \n> 浩楠哥「语言冲突在这里可以忽略。」\n> \n> 浩楠哥「JOJO 里面就忽略了。」\n> \n> zhuoer「全宇宙不是都说日语吗？」\n","source":"karin-no-kimyou-na-bouken/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 花花的奇妙冒险\n---\n### 简介\n\n《花花的奇妙冒险》是 SLYZ 2018 级著名作家 [Tommy_clas](https://www.luogu.com.cn/user/110471)（为了方便，同时与替身「主席」区别开来，我们称其为「浩楠哥」）撰写的长篇小说。创作初期曾被命名为《阿潮的奇妙冒险》。\n\n是《JOJO 的奇妙冒险》第三部的同人创作，世界观亦继承该作品的世界观。\n\n目前正在绝赞连载中。最新话为 `第六章：东京的星期日（其二）`。\n\n关于名称的日语翻译，我的个人见解是《かりんの奇妙な冒険》。\n\n### 登场人物\n\n浩楠哥曾经写过一个[设定文档](https://www.luogu.com.cn/blog/Tommyclas/post-e-chao-di-ji-miao-mao-xian-she-ding-pian)。\n\n需要注意的是，本 Wiki 只会收录已登场人物。\n\n| 人物名 | 初登场 | 状态 |\n| :-: | :-: | :-: |\n| [花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan) | 第一章（其一） | **有更新** |\n| [汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi) | 第一章（其一） | 没有更新 |\n| [阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer) | 第一章（其一） | 没有更新 |\n| [卓尔·吉尼尔斯](/karin-no-kimyou-na-bouken/zhuoer-jiniersi) | 第二章（其一） | 没有更新 |\n| [茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi) | 第四章（其一） | 没有更新 |\n| [世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai) |  第四章（其一） | **有更新** |\n| 世佳太太 | 第四章（其一） | 没有该页面 |\n| [小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei) | 第四章（其一） | 没有更新 |\n| [强奸犯胖子](/karin-no-kimyou-na-bouken/qiangjianfanpangzi) | 第四章（其二） | 没有更新 |\n| 世佳 大川 | 第四章（其三） | 没有该页面 |\n| [飞车党大叔](/karin-no-kimyou-na-bouken/feichedangdashu) | 第五章（其二） | 没有更新 |\n| [简·皮埃尔·波鲁那雷夫](/karin-no-kimyou-na-bouken/j-p-polnareff) | 第六章（其二） | **新页面** |\n\n### 杂项\n\n> 「女士们，先生们，欢迎登上中国石岚市飞往美国纽约市的 A114514 航班，祝你们有一个愉快的旅途。」\n\n**恶 臭 航 班**。\n\n这么臭的航班还是直接坠毁了算了罢（无慈悲\n\n---\n\n第二章的卓尔被主角团打败之后报了名字，于是加入了主角团。\n\n第五章的飞车党大叔被主角团打败之后没有报名字，于是被抓起来了。\n\n这个故事告诉我们，自我介绍要报名字，尤其是面对主角团的时候。\n\n---\n\n> 只见花花俯下上半身，双臂在胸前交叉，手指自由地张开着，而汤米则在她的身旁双手叉腰，抬头挺胸，立在花花的另一侧。\n\n出现了！JOJO 立！\n\n---\n\nQQ 群内：\n\n> 陶「所以日本人说的是什么语言啊。」\n> \n> 浩楠哥「语言冲突在这里可以忽略。」\n> \n> 浩楠哥「JOJO 里面就忽略了。」\n> \n> zhuoer「全宇宙不是都说日语吗？」\n","updated":"2020-06-09T16:26:45.478Z","path":"karin-no-kimyou-na-bouken/index.html","comments":1,"layout":"page","_id":"ckn32nhmn007cmku91o3o4lk2","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>《花花的奇妙冒险》是 SLYZ 2018 级著名作家 <a href=\"https://www.luogu.com.cn/user/110471\">Tommy_clas</a>（为了方便，同时与替身「主席」区别开来，我们称其为「浩楠哥」）撰写的长篇小说。创作初期曾被命名为《阿潮的奇妙冒险》。</p>\n<p>是《JOJO 的奇妙冒险》第三部的同人创作，世界观亦继承该作品的世界观。</p>\n<p>目前正在绝赞连载中。最新话为 <code>第六章：东京的星期日（其二）</code>。</p>\n<p>关于名称的日语翻译，我的个人见解是《かりんの奇妙な冒険》。</p>\n<h3 id=\"登场人物\"><a href=\"#登场人物\" class=\"headerlink\" title=\"登场人物\"></a>登场人物</h3><p>浩楠哥曾经写过一个<a href=\"https://www.luogu.com.cn/blog/Tommyclas/post-e-chao-di-ji-miao-mao-xian-she-ding-pian\">设定文档</a>。</p>\n<p>需要注意的是，本 Wiki 只会收录已登场人物。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">人物名</th>\n<th style=\"text-align:center\">初登场</th>\n<th style=\"text-align:center\">状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\"><strong>有更新</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/zhuoer-jiniersi\">卓尔·吉尼尔斯</a></td>\n<td style=\"text-align:center\">第二章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\"><strong>有更新</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">世佳太太</td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有该页面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/qiangjianfanpangzi\">强奸犯胖子</a></td>\n<td style=\"text-align:center\">第四章（其二）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">世佳 大川</td>\n<td style=\"text-align:center\">第四章（其三）</td>\n<td style=\"text-align:center\">没有该页面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/feichedangdashu\">飞车党大叔</a></td>\n<td style=\"text-align:center\">第五章（其二）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/j-p-polnareff\">简·皮埃尔·波鲁那雷夫</a></td>\n<td style=\"text-align:center\">第六章（其二）</td>\n<td style=\"text-align:center\"><strong>新页面</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h3><blockquote>\n<p>「女士们，先生们，欢迎登上中国石岚市飞往美国纽约市的 A114514 航班，祝你们有一个愉快的旅途。」</p>\n</blockquote>\n<p><strong>恶 臭 航 班</strong>。</p>\n<p>这么臭的航班还是直接坠毁了算了罢（无慈悲</p>\n<hr>\n<p>第二章的卓尔被主角团打败之后报了名字，于是加入了主角团。</p>\n<p>第五章的飞车党大叔被主角团打败之后没有报名字，于是被抓起来了。</p>\n<p>这个故事告诉我们，自我介绍要报名字，尤其是面对主角团的时候。</p>\n<hr>\n<blockquote>\n<p>只见花花俯下上半身，双臂在胸前交叉，手指自由地张开着，而汤米则在她的身旁双手叉腰，抬头挺胸，立在花花的另一侧。</p>\n</blockquote>\n<p>出现了！JOJO 立！</p>\n<hr>\n<p>QQ 群内：</p>\n<blockquote>\n<p>陶「所以日本人说的是什么语言啊。」</p>\n<p>浩楠哥「语言冲突在这里可以忽略。」</p>\n<p>浩楠哥「JOJO 里面就忽略了。」</p>\n<p>zhuoer「全宇宙不是都说日语吗？」</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>《花花的奇妙冒险》是 SLYZ 2018 级著名作家 <a href=\"https://www.luogu.com.cn/user/110471\">Tommy_clas</a>（为了方便，同时与替身「主席」区别开来，我们称其为「浩楠哥」）撰写的长篇小说。创作初期曾被命名为《阿潮的奇妙冒险》。</p>\n<p>是《JOJO 的奇妙冒险》第三部的同人创作，世界观亦继承该作品的世界观。</p>\n<p>目前正在绝赞连载中。最新话为 <code>第六章：东京的星期日（其二）</code>。</p>\n<p>关于名称的日语翻译，我的个人见解是《かりんの奇妙な冒険》。</p>\n<h3 id=\"登场人物\"><a href=\"#登场人物\" class=\"headerlink\" title=\"登场人物\"></a>登场人物</h3><p>浩楠哥曾经写过一个<a href=\"https://www.luogu.com.cn/blog/Tommyclas/post-e-chao-di-ji-miao-mao-xian-she-ding-pian\">设定文档</a>。</p>\n<p>需要注意的是，本 Wiki 只会收录已登场人物。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">人物名</th>\n<th style=\"text-align:center\">初登场</th>\n<th style=\"text-align:center\">状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\"><strong>有更新</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a></td>\n<td style=\"text-align:center\">第一章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/zhuoer-jiniersi\">卓尔·吉尼尔斯</a></td>\n<td style=\"text-align:center\">第二章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\"><strong>有更新</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">世佳太太</td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有该页面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a></td>\n<td style=\"text-align:center\">第四章（其一）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/qiangjianfanpangzi\">强奸犯胖子</a></td>\n<td style=\"text-align:center\">第四章（其二）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">世佳 大川</td>\n<td style=\"text-align:center\">第四章（其三）</td>\n<td style=\"text-align:center\">没有该页面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/feichedangdashu\">飞车党大叔</a></td>\n<td style=\"text-align:center\">第五章（其二）</td>\n<td style=\"text-align:center\">没有更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"/karin-no-kimyou-na-bouken/j-p-polnareff\">简·皮埃尔·波鲁那雷夫</a></td>\n<td style=\"text-align:center\">第六章（其二）</td>\n<td style=\"text-align:center\"><strong>新页面</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h3><blockquote>\n<p>「女士们，先生们，欢迎登上中国石岚市飞往美国纽约市的 A114514 航班，祝你们有一个愉快的旅途。」</p>\n</blockquote>\n<p><strong>恶 臭 航 班</strong>。</p>\n<p>这么臭的航班还是直接坠毁了算了罢（无慈悲</p>\n<hr>\n<p>第二章的卓尔被主角团打败之后报了名字，于是加入了主角团。</p>\n<p>第五章的飞车党大叔被主角团打败之后没有报名字，于是被抓起来了。</p>\n<p>这个故事告诉我们，自我介绍要报名字，尤其是面对主角团的时候。</p>\n<hr>\n<blockquote>\n<p>只见花花俯下上半身，双臂在胸前交叉，手指自由地张开着，而汤米则在她的身旁双手叉腰，抬头挺胸，立在花花的另一侧。</p>\n</blockquote>\n<p>出现了！JOJO 立！</p>\n<hr>\n<p>QQ 群内：</p>\n<blockquote>\n<p>陶「所以日本人说的是什么语言啊。」</p>\n<p>浩楠哥「语言冲突在这里可以忽略。」</p>\n<p>浩楠哥「JOJO 里面就忽略了。」</p>\n<p>zhuoer「全宇宙不是都说日语吗？」</p>\n</blockquote>\n"},{"title":"分类","date":"2020-05-17T12:07:04.689Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: Undefined\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-05-17T12:07:04.689Z","path":"categories/index.html","layout":"page","_id":"ckn32nhmp007emku96wckfd2h","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2020-05-17T12:07:04.689Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: Undefined\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-05-17T12:07:04.689Z","path":"tags/index.html","layout":"page","_id":"ckn32nhmr007hmku9am7kgoad","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"更新日志","date":"2020-05-28T16:07:11.899Z","mathjax":true,"_content":"直角，这是这篇 blog 的更新日志。\n\n不过我不是一个考虑周全的人，之前 9 月份搭起博客时，我并没有考虑到这些。因而，之前的很多更新的具体时间已经无从知晓。\n\n- 2018-09-27\n  - 建站。\n- （略）\n- 2018-12-13\n  - 令 `theme-next-pace` 的加载进度条的颜色温和了一点。\n  - 将 `hexo-symbols-count-time` 的字数和时间统计替换成了精确数值。\n  - 减少了侧边栏和网易云外链的宽度。\n- 2018-12-14\n  - 修复了在 404 页面点击「回到博客主页」会打开新标签页的问题。\n- 2018-12-19\n  - 将字体改为了 Arima Madurai。\n- 2018-12-28\n  - 新增了访客计数。\n- 2019-01-07\n  - 不知道什么时候字体炸了，然后 xjb 捣鼓了一波终于修好了。\n- 2019-01-08\n  - ~~然后一大早发现它又炸了。告辞。不修了。~~然后传上去发现又好了。\n- 2019-01-16\n  - 新增了代码折叠。\n  - 新增了 SnoWY 的 blog。\n  - 更新了 asuldb 的 blog 地址。\n  - 字体又炸了。\n- 2019-03-06\n  - 新增了 ctz 的 blog。\n  - 点击鼠标时加入了一些~~奇怪的~~特效。\n- 2019-03-16\n  - 把之前那些奇怪的特效删了~~，然后加入了一些更奇怪的~~。\n  - 换了个歌单。\n- 2019-03-17\n  - 把歌单扔了。\n  - blog 的名字改成了 Chromium。\n  - 开始更新[潮语](/chaoyu/)。\n- 2019-03-18\n  - 因为 Valine 评论的用户名可以随便改，甚至可以用别人的名字评论~~，迫于机房惨案势力~~，换成了 Gitalk 评论。\n  - 虽然忘了说，不过代码折叠没了。\n- 2019-03-29\n  - 真的不更潮语了。\n- 2019-05-25\n  - 新增了一些~~颓废~~娱乐项目。双击鼠标左键开始/暂停/继续，方向键移动。您可以在[这里](/wtf/)获得更好的体验。\n- 2019-08-02\n  - 删除了~~颓废~~娱乐项目。\n- 2019-08-20\n  - [新blog](http://39.100.60.248)搭好了，本站停止更新。\n- 2020-05-17\n  - 最后发现还是 Github+Hexo 天下第一，本站复活。\n  - 话说我现在养成了中文与英文之间打空格的习惯，不过以前的文章还是不改了吧。\n  - 删除了 `/theme/next/docs` 文件夹。~~反正肯定是一堆派不上用场的文档。~~\n  - 将主题更换为了 icarus。可能会出锅。\n- 2020-05-21\n  - 更新了第一篇颓废相关的文章。终于就连这个 blog 也要沦为颓废向 blog 了吗。\n- 2020-05-29\n  - 本站正式开展副业：《花花的奇妙冒险》民间 Wiki。具体请查看顶端「LightNovel」标签。\n- To Be Continued\n","source":"log/index.md","raw":"---\ntitle: 更新日志\ndate: Undefined\nmathjax: true\n---\n直角，这是这篇 blog 的更新日志。\n\n不过我不是一个考虑周全的人，之前 9 月份搭起博客时，我并没有考虑到这些。因而，之前的很多更新的具体时间已经无从知晓。\n\n- 2018-09-27\n  - 建站。\n- （略）\n- 2018-12-13\n  - 令 `theme-next-pace` 的加载进度条的颜色温和了一点。\n  - 将 `hexo-symbols-count-time` 的字数和时间统计替换成了精确数值。\n  - 减少了侧边栏和网易云外链的宽度。\n- 2018-12-14\n  - 修复了在 404 页面点击「回到博客主页」会打开新标签页的问题。\n- 2018-12-19\n  - 将字体改为了 Arima Madurai。\n- 2018-12-28\n  - 新增了访客计数。\n- 2019-01-07\n  - 不知道什么时候字体炸了，然后 xjb 捣鼓了一波终于修好了。\n- 2019-01-08\n  - ~~然后一大早发现它又炸了。告辞。不修了。~~然后传上去发现又好了。\n- 2019-01-16\n  - 新增了代码折叠。\n  - 新增了 SnoWY 的 blog。\n  - 更新了 asuldb 的 blog 地址。\n  - 字体又炸了。\n- 2019-03-06\n  - 新增了 ctz 的 blog。\n  - 点击鼠标时加入了一些~~奇怪的~~特效。\n- 2019-03-16\n  - 把之前那些奇怪的特效删了~~，然后加入了一些更奇怪的~~。\n  - 换了个歌单。\n- 2019-03-17\n  - 把歌单扔了。\n  - blog 的名字改成了 Chromium。\n  - 开始更新[潮语](/chaoyu/)。\n- 2019-03-18\n  - 因为 Valine 评论的用户名可以随便改，甚至可以用别人的名字评论~~，迫于机房惨案势力~~，换成了 Gitalk 评论。\n  - 虽然忘了说，不过代码折叠没了。\n- 2019-03-29\n  - 真的不更潮语了。\n- 2019-05-25\n  - 新增了一些~~颓废~~娱乐项目。双击鼠标左键开始/暂停/继续，方向键移动。您可以在[这里](/wtf/)获得更好的体验。\n- 2019-08-02\n  - 删除了~~颓废~~娱乐项目。\n- 2019-08-20\n  - [新blog](http://39.100.60.248)搭好了，本站停止更新。\n- 2020-05-17\n  - 最后发现还是 Github+Hexo 天下第一，本站复活。\n  - 话说我现在养成了中文与英文之间打空格的习惯，不过以前的文章还是不改了吧。\n  - 删除了 `/theme/next/docs` 文件夹。~~反正肯定是一堆派不上用场的文档。~~\n  - 将主题更换为了 icarus。可能会出锅。\n- 2020-05-21\n  - 更新了第一篇颓废相关的文章。终于就连这个 blog 也要沦为颓废向 blog 了吗。\n- 2020-05-29\n  - 本站正式开展副业：《花花的奇妙冒险》民间 Wiki。具体请查看顶端「LightNovel」标签。\n- To Be Continued\n","updated":"2020-05-28T16:07:11.899Z","path":"log/index.html","comments":1,"layout":"page","_id":"ckn32nhms007kmku9e968hevk","content":"<p>直角，这是这篇 blog 的更新日志。</p>\n<p>不过我不是一个考虑周全的人，之前 9 月份搭起博客时，我并没有考虑到这些。因而，之前的很多更新的具体时间已经无从知晓。</p>\n<ul>\n<li>2018-09-27<ul>\n<li>建站。</li>\n</ul>\n</li>\n<li>（略）</li>\n<li>2018-12-13<ul>\n<li>令 <code>theme-next-pace</code> 的加载进度条的颜色温和了一点。</li>\n<li>将 <code>hexo-symbols-count-time</code> 的字数和时间统计替换成了精确数值。</li>\n<li>减少了侧边栏和网易云外链的宽度。</li>\n</ul>\n</li>\n<li>2018-12-14<ul>\n<li>修复了在 404 页面点击「回到博客主页」会打开新标签页的问题。</li>\n</ul>\n</li>\n<li>2018-12-19<ul>\n<li>将字体改为了 Arima Madurai。</li>\n</ul>\n</li>\n<li>2018-12-28<ul>\n<li>新增了访客计数。</li>\n</ul>\n</li>\n<li>2019-01-07<ul>\n<li>不知道什么时候字体炸了，然后 xjb 捣鼓了一波终于修好了。</li>\n</ul>\n</li>\n<li>2019-01-08<ul>\n<li><del>然后一大早发现它又炸了。告辞。不修了。</del>然后传上去发现又好了。</li>\n</ul>\n</li>\n<li>2019-01-16<ul>\n<li>新增了代码折叠。</li>\n<li>新增了 SnoWY 的 blog。</li>\n<li>更新了 asuldb 的 blog 地址。</li>\n<li>字体又炸了。</li>\n</ul>\n</li>\n<li>2019-03-06<ul>\n<li>新增了 ctz 的 blog。</li>\n<li>点击鼠标时加入了一些<del>奇怪的</del>特效。</li>\n</ul>\n</li>\n<li>2019-03-16<ul>\n<li>把之前那些奇怪的特效删了<del>，然后加入了一些更奇怪的</del>。</li>\n<li>换了个歌单。</li>\n</ul>\n</li>\n<li>2019-03-17<ul>\n<li>把歌单扔了。</li>\n<li>blog 的名字改成了 Chromium。</li>\n<li>开始更新<a href=\"/chaoyu/\">潮语</a>。</li>\n</ul>\n</li>\n<li>2019-03-18<ul>\n<li>因为 Valine 评论的用户名可以随便改，甚至可以用别人的名字评论<del>，迫于机房惨案势力</del>，换成了 Gitalk 评论。</li>\n<li>虽然忘了说，不过代码折叠没了。</li>\n</ul>\n</li>\n<li>2019-03-29<ul>\n<li>真的不更潮语了。</li>\n</ul>\n</li>\n<li>2019-05-25<ul>\n<li>新增了一些<del>颓废</del>娱乐项目。双击鼠标左键开始/暂停/继续，方向键移动。您可以在<a href=\"/wtf/\">这里</a>获得更好的体验。</li>\n</ul>\n</li>\n<li>2019-08-02<ul>\n<li>删除了<del>颓废</del>娱乐项目。</li>\n</ul>\n</li>\n<li>2019-08-20<ul>\n<li><a href=\"http://39.100.60.248\">新blog</a>搭好了，本站停止更新。</li>\n</ul>\n</li>\n<li>2020-05-17<ul>\n<li>最后发现还是 Github+Hexo 天下第一，本站复活。</li>\n<li>话说我现在养成了中文与英文之间打空格的习惯，不过以前的文章还是不改了吧。</li>\n<li>删除了 <code>/theme/next/docs</code> 文件夹。<del>反正肯定是一堆派不上用场的文档。</del></li>\n<li>将主题更换为了 icarus。可能会出锅。</li>\n</ul>\n</li>\n<li>2020-05-21<ul>\n<li>更新了第一篇颓废相关的文章。终于就连这个 blog 也要沦为颓废向 blog 了吗。</li>\n</ul>\n</li>\n<li>2020-05-29<ul>\n<li>本站正式开展副业：《花花的奇妙冒险》民间 Wiki。具体请查看顶端「LightNovel」标签。</li>\n</ul>\n</li>\n<li>To Be Continued</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>直角，这是这篇 blog 的更新日志。</p>\n<p>不过我不是一个考虑周全的人，之前 9 月份搭起博客时，我并没有考虑到这些。因而，之前的很多更新的具体时间已经无从知晓。</p>\n<ul>\n<li>2018-09-27<ul>\n<li>建站。</li>\n</ul>\n</li>\n<li>（略）</li>\n<li>2018-12-13<ul>\n<li>令 <code>theme-next-pace</code> 的加载进度条的颜色温和了一点。</li>\n<li>将 <code>hexo-symbols-count-time</code> 的字数和时间统计替换成了精确数值。</li>\n<li>减少了侧边栏和网易云外链的宽度。</li>\n</ul>\n</li>\n<li>2018-12-14<ul>\n<li>修复了在 404 页面点击「回到博客主页」会打开新标签页的问题。</li>\n</ul>\n</li>\n<li>2018-12-19<ul>\n<li>将字体改为了 Arima Madurai。</li>\n</ul>\n</li>\n<li>2018-12-28<ul>\n<li>新增了访客计数。</li>\n</ul>\n</li>\n<li>2019-01-07<ul>\n<li>不知道什么时候字体炸了，然后 xjb 捣鼓了一波终于修好了。</li>\n</ul>\n</li>\n<li>2019-01-08<ul>\n<li><del>然后一大早发现它又炸了。告辞。不修了。</del>然后传上去发现又好了。</li>\n</ul>\n</li>\n<li>2019-01-16<ul>\n<li>新增了代码折叠。</li>\n<li>新增了 SnoWY 的 blog。</li>\n<li>更新了 asuldb 的 blog 地址。</li>\n<li>字体又炸了。</li>\n</ul>\n</li>\n<li>2019-03-06<ul>\n<li>新增了 ctz 的 blog。</li>\n<li>点击鼠标时加入了一些<del>奇怪的</del>特效。</li>\n</ul>\n</li>\n<li>2019-03-16<ul>\n<li>把之前那些奇怪的特效删了<del>，然后加入了一些更奇怪的</del>。</li>\n<li>换了个歌单。</li>\n</ul>\n</li>\n<li>2019-03-17<ul>\n<li>把歌单扔了。</li>\n<li>blog 的名字改成了 Chromium。</li>\n<li>开始更新<a href=\"/chaoyu/\">潮语</a>。</li>\n</ul>\n</li>\n<li>2019-03-18<ul>\n<li>因为 Valine 评论的用户名可以随便改，甚至可以用别人的名字评论<del>，迫于机房惨案势力</del>，换成了 Gitalk 评论。</li>\n<li>虽然忘了说，不过代码折叠没了。</li>\n</ul>\n</li>\n<li>2019-03-29<ul>\n<li>真的不更潮语了。</li>\n</ul>\n</li>\n<li>2019-05-25<ul>\n<li>新增了一些<del>颓废</del>娱乐项目。双击鼠标左键开始/暂停/继续，方向键移动。您可以在<a href=\"/wtf/\">这里</a>获得更好的体验。</li>\n</ul>\n</li>\n<li>2019-08-02<ul>\n<li>删除了<del>颓废</del>娱乐项目。</li>\n</ul>\n</li>\n<li>2019-08-20<ul>\n<li><a href=\"http://39.100.60.248\">新blog</a>搭好了，本站停止更新。</li>\n</ul>\n</li>\n<li>2020-05-17<ul>\n<li>最后发现还是 Github+Hexo 天下第一，本站复活。</li>\n<li>话说我现在养成了中文与英文之间打空格的习惯，不过以前的文章还是不改了吧。</li>\n<li>删除了 <code>/theme/next/docs</code> 文件夹。<del>反正肯定是一堆派不上用场的文档。</del></li>\n<li>将主题更换为了 icarus。可能会出锅。</li>\n</ul>\n</li>\n<li>2020-05-21<ul>\n<li>更新了第一篇颓废相关的文章。终于就连这个 blog 也要沦为颓废向 blog 了吗。</li>\n</ul>\n</li>\n<li>2020-05-29<ul>\n<li>本站正式开展副业：《花花的奇妙冒险》民间 Wiki。具体请查看顶端「LightNovel」标签。</li>\n</ul>\n</li>\n<li>To Be Continued</li>\n</ul>\n"},{"mathjax":true,"date":"2020-06-01T12:47:44.150Z","title":"飞车党大叔","_content":"### 设定文档内容\n\n替身名：旅游手册（Travel Brochure）\n\n力量：E\n\n速度：E\n\n射程：C\n\n持续力：A\n\n精度：E\n\n成长性：E\n\n替身能力：潜入到任意一个可采集（听到或看到）的信息里，使采集信息后的人被强行植入虚假记忆，使本人认为虚假的记忆真的发生过。\n\n### 出身\n\n第五章（其二）中的自我介绍：\n\n> 「我原本是美国东海岸的一个飞车党队员……几天前，一个叫做 Lee 的人给了我这种牛掰的能力，他还给了我一大笔钱，想让我刺杀照片里的这几个人。」\n\n照片是卓尔提供的。\n\n### 外貌\n\n留着络腮胡，手臂上纹着骷髅头的啤酒肚大叔。\n\n### 性格特点\n\n没啥好分析的（狗头\n\n### 人际关系\n\n试图刺杀：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)，[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n被洗脑：Lee 大人。\n\n### 可采集的信息\n\n> 「我已经把字都气化了，既然没有可以阅读的对象，那么你的能力就一无是处了！」阿苏兰说道。\n> \n> 「糟糕！」旅游手册急忙钻出，想要躲回天花板里。\n","source":"karin-no-kimyou-na-bouken/feichedangdashu/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 飞车党大叔\n---\n### 设定文档内容\n\n替身名：旅游手册（Travel Brochure）\n\n力量：E\n\n速度：E\n\n射程：C\n\n持续力：A\n\n精度：E\n\n成长性：E\n\n替身能力：潜入到任意一个可采集（听到或看到）的信息里，使采集信息后的人被强行植入虚假记忆，使本人认为虚假的记忆真的发生过。\n\n### 出身\n\n第五章（其二）中的自我介绍：\n\n> 「我原本是美国东海岸的一个飞车党队员……几天前，一个叫做 Lee 的人给了我这种牛掰的能力，他还给了我一大笔钱，想让我刺杀照片里的这几个人。」\n\n照片是卓尔提供的。\n\n### 外貌\n\n留着络腮胡，手臂上纹着骷髅头的啤酒肚大叔。\n\n### 性格特点\n\n没啥好分析的（狗头\n\n### 人际关系\n\n试图刺杀：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)，[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n被洗脑：Lee 大人。\n\n### 可采集的信息\n\n> 「我已经把字都气化了，既然没有可以阅读的对象，那么你的能力就一无是处了！」阿苏兰说道。\n> \n> 「糟糕！」旅游手册急忙钻出，想要躲回天花板里。\n","updated":"2020-06-01T12:47:44.150Z","path":"karin-no-kimyou-na-bouken/feichedangdashu/index.html","comments":1,"layout":"page","_id":"ckn32nhnk008xmku94h2e05wp","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：旅游手册（Travel Brochure）</p>\n<p>力量：E</p>\n<p>速度：E</p>\n<p>射程：C</p>\n<p>持续力：A</p>\n<p>精度：E</p>\n<p>成长性：E</p>\n<p>替身能力：潜入到任意一个可采集（听到或看到）的信息里，使采集信息后的人被强行植入虚假记忆，使本人认为虚假的记忆真的发生过。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第五章（其二）中的自我介绍：</p>\n<blockquote>\n<p>「我原本是美国东海岸的一个飞车党队员……几天前，一个叫做 Lee 的人给了我这种牛掰的能力，他还给了我一大笔钱，想让我刺杀照片里的这几个人。」</p>\n</blockquote>\n<p>照片是卓尔提供的。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>留着络腮胡，手臂上纹着骷髅头的啤酒肚大叔。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>没啥好分析的（狗头</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>试图刺杀：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>，<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<p>被洗脑：Lee 大人。</p>\n<h3 id=\"可采集的信息\"><a href=\"#可采集的信息\" class=\"headerlink\" title=\"可采集的信息\"></a>可采集的信息</h3><blockquote>\n<p>「我已经把字都气化了，既然没有可以阅读的对象，那么你的能力就一无是处了！」阿苏兰说道。</p>\n<p>「糟糕！」旅游手册急忙钻出，想要躲回天花板里。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：旅游手册（Travel Brochure）</p>\n<p>力量：E</p>\n<p>速度：E</p>\n<p>射程：C</p>\n<p>持续力：A</p>\n<p>精度：E</p>\n<p>成长性：E</p>\n<p>替身能力：潜入到任意一个可采集（听到或看到）的信息里，使采集信息后的人被强行植入虚假记忆，使本人认为虚假的记忆真的发生过。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第五章（其二）中的自我介绍：</p>\n<blockquote>\n<p>「我原本是美国东海岸的一个飞车党队员……几天前，一个叫做 Lee 的人给了我这种牛掰的能力，他还给了我一大笔钱，想让我刺杀照片里的这几个人。」</p>\n</blockquote>\n<p>照片是卓尔提供的。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>留着络腮胡，手臂上纹着骷髅头的啤酒肚大叔。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>没啥好分析的（狗头</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>试图刺杀：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>，<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<p>被洗脑：Lee 大人。</p>\n<h3 id=\"可采集的信息\"><a href=\"#可采集的信息\" class=\"headerlink\" title=\"可采集的信息\"></a>可采集的信息</h3><blockquote>\n<p>「我已经把字都气化了，既然没有可以阅读的对象，那么你的能力就一无是处了！」阿苏兰说道。</p>\n<p>「糟糕！」旅游手册急忙钻出，想要躲回天花板里。</p>\n</blockquote>\n"},{"mathjax":true,"date":"2020-06-02T14:12:12.355Z","title":"阿苏兰·德布尔","_content":"### 设定文档内容\n\n替身名：物理火星（Physic Mars）\n\n力量：C\n\n速度：A\n\n射程：C\n\n持续力：B\n\n精度：C\n\n成长性：B\n\n替身能力：随意改变触碰到的物体的沸点。\n\n描述：物理火星属于人形替身，替身主体颜色为橙红色，体型偏瘦小，头部戴有金属口罩和实验室护目镜，手臂为机械臂。拥有一般的力量和极快的速度，能够随意改变触碰到的物体的沸点，使其固体、液体「气化」或气体「固化」。\n\n注 1：物理火星对物体沸点的改变几乎是瞬时的，但是物体各个部位沸点的变化是一个扩散的过程，当物体的大小比本体小时，沸点的改变几乎是瞬时的，但当物体的大小比本体大时，物体则会以触碰点为中心慢慢气化。例如让替身完全气化一块橡皮仅需不到一秒的时间，完全气化一栋小屋则需要较长的时间。\n\n注 2：「气化」和「固化」不同于物理学上定义的「气化」、「液化」、「凝华」，是指某个物体整体的「气化」，例如人体气化后得到的是「人体气」，而不是各种有机物的混合气体，但如果操作对象是纯净物，则会按照物理学的定义变化。\n\n注 3：「气化」是永久影响被触碰物体的，除非本体解除该物体的沸点变化。\n\n### 出身\n\n根据姓名结构推断应该是外国人~~，但是你为什么要闲着没事跑到中国来教中学啊~~。\n\n阅读过史比特瓦根财团的内部资料，应该不简单。\n\n### 外貌\n\n梳着奇怪的鞭条式发型，皮肤黝黑。\n\n### 性格特点\n\n身为物理老师还挺有威严的。\n\n~~不准逛街，逛街的都给我失败！~~\n\n### 人际关系\n\n学生：[花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan)，[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)。\n\n### 世界和平\n\n在某个奇怪的世界线中，阿苏兰用他的替身能力把所有人都扬了（指气化掉）。\n\n~~当然现在这段已经被删掉了。~~\n\n~~鳖「好，很好，非常好。」~~\n\n在第二章（其二）中把 DIO 的肉芽气化之后赶进了灯泡通上电给烧死了。可见其替身能力多么【不是「强大」的某个词汇】（或者说恐怖）。\n","source":"karin-no-kimyou-na-bouken/asulan-debuer/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 阿苏兰·德布尔\n---\n### 设定文档内容\n\n替身名：物理火星（Physic Mars）\n\n力量：C\n\n速度：A\n\n射程：C\n\n持续力：B\n\n精度：C\n\n成长性：B\n\n替身能力：随意改变触碰到的物体的沸点。\n\n描述：物理火星属于人形替身，替身主体颜色为橙红色，体型偏瘦小，头部戴有金属口罩和实验室护目镜，手臂为机械臂。拥有一般的力量和极快的速度，能够随意改变触碰到的物体的沸点，使其固体、液体「气化」或气体「固化」。\n\n注 1：物理火星对物体沸点的改变几乎是瞬时的，但是物体各个部位沸点的变化是一个扩散的过程，当物体的大小比本体小时，沸点的改变几乎是瞬时的，但当物体的大小比本体大时，物体则会以触碰点为中心慢慢气化。例如让替身完全气化一块橡皮仅需不到一秒的时间，完全气化一栋小屋则需要较长的时间。\n\n注 2：「气化」和「固化」不同于物理学上定义的「气化」、「液化」、「凝华」，是指某个物体整体的「气化」，例如人体气化后得到的是「人体气」，而不是各种有机物的混合气体，但如果操作对象是纯净物，则会按照物理学的定义变化。\n\n注 3：「气化」是永久影响被触碰物体的，除非本体解除该物体的沸点变化。\n\n### 出身\n\n根据姓名结构推断应该是外国人~~，但是你为什么要闲着没事跑到中国来教中学啊~~。\n\n阅读过史比特瓦根财团的内部资料，应该不简单。\n\n### 外貌\n\n梳着奇怪的鞭条式发型，皮肤黝黑。\n\n### 性格特点\n\n身为物理老师还挺有威严的。\n\n~~不准逛街，逛街的都给我失败！~~\n\n### 人际关系\n\n学生：[花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan)，[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)。\n\n### 世界和平\n\n在某个奇怪的世界线中，阿苏兰用他的替身能力把所有人都扬了（指气化掉）。\n\n~~当然现在这段已经被删掉了。~~\n\n~~鳖「好，很好，非常好。」~~\n\n在第二章（其二）中把 DIO 的肉芽气化之后赶进了灯泡通上电给烧死了。可见其替身能力多么【不是「强大」的某个词汇】（或者说恐怖）。\n","updated":"2020-06-02T14:12:12.355Z","path":"karin-no-kimyou-na-bouken/asulan-debuer/index.html","comments":1,"layout":"page","_id":"ckn32nhnl008zmku90ffghz4i","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：物理火星（Physic Mars）</p>\n<p>力量：C</p>\n<p>速度：A</p>\n<p>射程：C</p>\n<p>持续力：B</p>\n<p>精度：C</p>\n<p>成长性：B</p>\n<p>替身能力：随意改变触碰到的物体的沸点。</p>\n<p>描述：物理火星属于人形替身，替身主体颜色为橙红色，体型偏瘦小，头部戴有金属口罩和实验室护目镜，手臂为机械臂。拥有一般的力量和极快的速度，能够随意改变触碰到的物体的沸点，使其固体、液体「气化」或气体「固化」。</p>\n<p>注 1：物理火星对物体沸点的改变几乎是瞬时的，但是物体各个部位沸点的变化是一个扩散的过程，当物体的大小比本体小时，沸点的改变几乎是瞬时的，但当物体的大小比本体大时，物体则会以触碰点为中心慢慢气化。例如让替身完全气化一块橡皮仅需不到一秒的时间，完全气化一栋小屋则需要较长的时间。</p>\n<p>注 2：「气化」和「固化」不同于物理学上定义的「气化」、「液化」、「凝华」，是指某个物体整体的「气化」，例如人体气化后得到的是「人体气」，而不是各种有机物的混合气体，但如果操作对象是纯净物，则会按照物理学的定义变化。</p>\n<p>注 3：「气化」是永久影响被触碰物体的，除非本体解除该物体的沸点变化。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>根据姓名结构推断应该是外国人<del>，但是你为什么要闲着没事跑到中国来教中学啊</del>。</p>\n<p>阅读过史比特瓦根财团的内部资料，应该不简单。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>梳着奇怪的鞭条式发型，皮肤黝黑。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>身为物理老师还挺有威严的。</p>\n<p><del>不准逛街，逛街的都给我失败！</del></p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>学生：<a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a>，<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>。</p>\n<h3 id=\"世界和平\"><a href=\"#世界和平\" class=\"headerlink\" title=\"世界和平\"></a>世界和平</h3><p>在某个奇怪的世界线中，阿苏兰用他的替身能力把所有人都扬了（指气化掉）。</p>\n<p><del>当然现在这段已经被删掉了。</del></p>\n<p><del>鳖「好，很好，非常好。」</del></p>\n<p>在第二章（其二）中把 DIO 的肉芽气化之后赶进了灯泡通上电给烧死了。可见其替身能力多么【不是「强大」的某个词汇】（或者说恐怖）。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：物理火星（Physic Mars）</p>\n<p>力量：C</p>\n<p>速度：A</p>\n<p>射程：C</p>\n<p>持续力：B</p>\n<p>精度：C</p>\n<p>成长性：B</p>\n<p>替身能力：随意改变触碰到的物体的沸点。</p>\n<p>描述：物理火星属于人形替身，替身主体颜色为橙红色，体型偏瘦小，头部戴有金属口罩和实验室护目镜，手臂为机械臂。拥有一般的力量和极快的速度，能够随意改变触碰到的物体的沸点，使其固体、液体「气化」或气体「固化」。</p>\n<p>注 1：物理火星对物体沸点的改变几乎是瞬时的，但是物体各个部位沸点的变化是一个扩散的过程，当物体的大小比本体小时，沸点的改变几乎是瞬时的，但当物体的大小比本体大时，物体则会以触碰点为中心慢慢气化。例如让替身完全气化一块橡皮仅需不到一秒的时间，完全气化一栋小屋则需要较长的时间。</p>\n<p>注 2：「气化」和「固化」不同于物理学上定义的「气化」、「液化」、「凝华」，是指某个物体整体的「气化」，例如人体气化后得到的是「人体气」，而不是各种有机物的混合气体，但如果操作对象是纯净物，则会按照物理学的定义变化。</p>\n<p>注 3：「气化」是永久影响被触碰物体的，除非本体解除该物体的沸点变化。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>根据姓名结构推断应该是外国人<del>，但是你为什么要闲着没事跑到中国来教中学啊</del>。</p>\n<p>阅读过史比特瓦根财团的内部资料，应该不简单。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>梳着奇怪的鞭条式发型，皮肤黝黑。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>身为物理老师还挺有威严的。</p>\n<p><del>不准逛街，逛街的都给我失败！</del></p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>学生：<a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a>，<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>。</p>\n<h3 id=\"世界和平\"><a href=\"#世界和平\" class=\"headerlink\" title=\"世界和平\"></a>世界和平</h3><p>在某个奇怪的世界线中，阿苏兰用他的替身能力把所有人都扬了（指气化掉）。</p>\n<p><del>当然现在这段已经被删掉了。</del></p>\n<p><del>鳖「好，很好，非常好。」</del></p>\n<p>在第二章（其二）中把 DIO 的肉芽气化之后赶进了灯泡通上电给烧死了。可见其替身能力多么【不是「强大」的某个词汇】（或者说恐怖）。</p>\n"},{"mathjax":true,"date":"2020-05-31T12:01:48.052Z","title":"茶畑 势之","_content":"### 设定文档内容\n\n替身名：闪电天鹅（Lightning Swan）\n\n力量：A\n\n速度：B\n\n射程：A\n\n持续力：B\n\n精度：B\n\n成长性：A\n\n替身能力：自身产生任意大小的电场或给予物体任意强度的电场。\n\n描述：闪电天鹅属于人形替身，其主体颜色为深蓝与纯白相间，体表刻有闪电花纹，面部被两个反向伸展的天鹅羽翼遮住，只露出嘴部与颔部。闪电天鹅既能够自己产生任意大小的电压，也能够使触摸到的物体变成任意电压的带电体（不论该物体是否导电）。\n\n注 1：闪电天鹅能够改良接触物体的导电性，令其变成电压大小任意的电源，但并不能改良电流所经过的物体的导电性。\n\n注 2：只要拥有导电性足够良好的导体，闪电天鹅就可以在导体上发电，使电流传到导体所到的任何地方（射程 A）。\n\n注 3：被触碰后的物体会一直保持给定电压，并且电压无论怎么损耗都不会降低，除非本体死亡或解除给定的变化。\n\n注 4：当闪电天鹅触碰到的物体过于庞大时，他只能让该物体的一部分变成电源，\n\n### 出身\n\n似乎是一位能力优秀的日本码农。\n\n从市中心的繁华程度和走廊的复杂程度来看，他所在的公司规模似乎不小。\n\n### 外貌\n\n有着一头深栗色的短发，短短的刘海分散在额头两边，冷静的目光和没有任何表情的脸庞仿佛是在宣示他有着一个平凡的性格。\n\n### 性格特点\n\n虚假的绅士（指吉良吉影）。\n\n真正的绅士（指茶畑势之）。\n\n因为人物形象塑造得过于正面，且相关情节细节描写极其丰富，浩楠哥收到了来自黑恶势力的要挟：\n\n> 「下一集再不改就抢电脑了（」\n\n### 人际关系\n\n邻居：世佳太太，世佳 大川。\n\n照顾：[世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai)。\n\n应该不只是认识吧：[小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei)。\n\n### 确定不是吉良吉影！\n\n在第四章（其一）中，对于茶畑势之的描写给人一种极其强烈的吉良吉影的既视感。他似乎过着像吉良吉影一样的机械生活。\n\n浩楠哥曾在 QQ 群中钦定其为炼铜带师。\n\n关于「小学女生失踪案件」，陶表示「js 是不是太铜了，我更喜欢 jc」。\n\n结果后面一口气出现两个 jc，然后「小学女生失踪案件」还是没变。\n\n陶~~清白~~为民除害（指[强奸犯胖子](/karin-no-kimyou-na-bouken/qiangjianfanpangzi)）说。\n\n### 我的名字叫（ry\n\n> 「我的名字叫茶畑势之，今年 25 岁，住在东京市的公寓一带，未婚。我在附近的写字楼上班，每天下午 4:30 准时到附近的中学接隔壁世佳夫妇的女儿世佳阳爱回家，世佳夫妇每天工作到很晚才回来，晚饭和照顾一般都由我代理，我不抽烟，酒仅止于浅尝。每天辅导世佳写完作业后会陪她玩到晚上八点，直到世佳夫妇把她接回去，我每天都睡够八个小时，睡前，我一定喝一杯超市买到的新鲜牛奶，然后做二十分钟的力量运动，最后冲一个热水澡，上了床，马上熟睡，一觉到天亮，决不把疲劳和压力留到第二天，然后再步行送小世佳上学。认识我的人都说我善良又可靠。」\n\n> 「我只是要说，我这个人别无奢求，只希望能够『和小世佳平静地』活下去。『金钱』、『名誉』，是我最不喜欢和人计较的。因为，那只会为小世佳带来『麻烦』和『敌人』……小世佳是我的天使，如果有人敢对我的天使动手的话，不论是谁我都不会原谅。也就是说，如果小世佳出现了『麻烦』和『敌人』，在对方下手前……就会碰到这个！」\n\n> 「*（召唤出替身）*这是我的替身，<ruby>闪电天鹅<rt>Lightning Swan</rt></ruby>，它将和我一起守护我的天使……*（被打断）*」\n","source":"karin-no-kimyou-na-bouken/chatian-shizhi/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 茶畑 势之\n---\n### 设定文档内容\n\n替身名：闪电天鹅（Lightning Swan）\n\n力量：A\n\n速度：B\n\n射程：A\n\n持续力：B\n\n精度：B\n\n成长性：A\n\n替身能力：自身产生任意大小的电场或给予物体任意强度的电场。\n\n描述：闪电天鹅属于人形替身，其主体颜色为深蓝与纯白相间，体表刻有闪电花纹，面部被两个反向伸展的天鹅羽翼遮住，只露出嘴部与颔部。闪电天鹅既能够自己产生任意大小的电压，也能够使触摸到的物体变成任意电压的带电体（不论该物体是否导电）。\n\n注 1：闪电天鹅能够改良接触物体的导电性，令其变成电压大小任意的电源，但并不能改良电流所经过的物体的导电性。\n\n注 2：只要拥有导电性足够良好的导体，闪电天鹅就可以在导体上发电，使电流传到导体所到的任何地方（射程 A）。\n\n注 3：被触碰后的物体会一直保持给定电压，并且电压无论怎么损耗都不会降低，除非本体死亡或解除给定的变化。\n\n注 4：当闪电天鹅触碰到的物体过于庞大时，他只能让该物体的一部分变成电源，\n\n### 出身\n\n似乎是一位能力优秀的日本码农。\n\n从市中心的繁华程度和走廊的复杂程度来看，他所在的公司规模似乎不小。\n\n### 外貌\n\n有着一头深栗色的短发，短短的刘海分散在额头两边，冷静的目光和没有任何表情的脸庞仿佛是在宣示他有着一个平凡的性格。\n\n### 性格特点\n\n虚假的绅士（指吉良吉影）。\n\n真正的绅士（指茶畑势之）。\n\n因为人物形象塑造得过于正面，且相关情节细节描写极其丰富，浩楠哥收到了来自黑恶势力的要挟：\n\n> 「下一集再不改就抢电脑了（」\n\n### 人际关系\n\n邻居：世佳太太，世佳 大川。\n\n照顾：[世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai)。\n\n应该不只是认识吧：[小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei)。\n\n### 确定不是吉良吉影！\n\n在第四章（其一）中，对于茶畑势之的描写给人一种极其强烈的吉良吉影的既视感。他似乎过着像吉良吉影一样的机械生活。\n\n浩楠哥曾在 QQ 群中钦定其为炼铜带师。\n\n关于「小学女生失踪案件」，陶表示「js 是不是太铜了，我更喜欢 jc」。\n\n结果后面一口气出现两个 jc，然后「小学女生失踪案件」还是没变。\n\n陶~~清白~~为民除害（指[强奸犯胖子](/karin-no-kimyou-na-bouken/qiangjianfanpangzi)）说。\n\n### 我的名字叫（ry\n\n> 「我的名字叫茶畑势之，今年 25 岁，住在东京市的公寓一带，未婚。我在附近的写字楼上班，每天下午 4:30 准时到附近的中学接隔壁世佳夫妇的女儿世佳阳爱回家，世佳夫妇每天工作到很晚才回来，晚饭和照顾一般都由我代理，我不抽烟，酒仅止于浅尝。每天辅导世佳写完作业后会陪她玩到晚上八点，直到世佳夫妇把她接回去，我每天都睡够八个小时，睡前，我一定喝一杯超市买到的新鲜牛奶，然后做二十分钟的力量运动，最后冲一个热水澡，上了床，马上熟睡，一觉到天亮，决不把疲劳和压力留到第二天，然后再步行送小世佳上学。认识我的人都说我善良又可靠。」\n\n> 「我只是要说，我这个人别无奢求，只希望能够『和小世佳平静地』活下去。『金钱』、『名誉』，是我最不喜欢和人计较的。因为，那只会为小世佳带来『麻烦』和『敌人』……小世佳是我的天使，如果有人敢对我的天使动手的话，不论是谁我都不会原谅。也就是说，如果小世佳出现了『麻烦』和『敌人』，在对方下手前……就会碰到这个！」\n\n> 「*（召唤出替身）*这是我的替身，<ruby>闪电天鹅<rt>Lightning Swan</rt></ruby>，它将和我一起守护我的天使……*（被打断）*」\n","updated":"2020-05-31T12:01:48.052Z","path":"karin-no-kimyou-na-bouken/chatian-shizhi/index.html","comments":1,"layout":"page","_id":"ckn32nhnn0092mku97kow6er6","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：闪电天鹅（Lightning Swan）</p>\n<p>力量：A</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：B</p>\n<p>精度：B</p>\n<p>成长性：A</p>\n<p>替身能力：自身产生任意大小的电场或给予物体任意强度的电场。</p>\n<p>描述：闪电天鹅属于人形替身，其主体颜色为深蓝与纯白相间，体表刻有闪电花纹，面部被两个反向伸展的天鹅羽翼遮住，只露出嘴部与颔部。闪电天鹅既能够自己产生任意大小的电压，也能够使触摸到的物体变成任意电压的带电体（不论该物体是否导电）。</p>\n<p>注 1：闪电天鹅能够改良接触物体的导电性，令其变成电压大小任意的电源，但并不能改良电流所经过的物体的导电性。</p>\n<p>注 2：只要拥有导电性足够良好的导体，闪电天鹅就可以在导体上发电，使电流传到导体所到的任何地方（射程 A）。</p>\n<p>注 3：被触碰后的物体会一直保持给定电压，并且电压无论怎么损耗都不会降低，除非本体死亡或解除给定的变化。</p>\n<p>注 4：当闪电天鹅触碰到的物体过于庞大时，他只能让该物体的一部分变成电源，</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位能力优秀的日本码农。</p>\n<p>从市中心的繁华程度和走廊的复杂程度来看，他所在的公司规模似乎不小。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>有着一头深栗色的短发，短短的刘海分散在额头两边，冷静的目光和没有任何表情的脸庞仿佛是在宣示他有着一个平凡的性格。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>虚假的绅士（指吉良吉影）。</p>\n<p>真正的绅士（指茶畑势之）。</p>\n<p>因为人物形象塑造得过于正面，且相关情节细节描写极其丰富，浩楠哥收到了来自黑恶势力的要挟：</p>\n<blockquote>\n<p>「下一集再不改就抢电脑了（」</p>\n</blockquote>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>邻居：世佳太太，世佳 大川。</p>\n<p>照顾：<a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a>。</p>\n<p>应该不只是认识吧：<a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a>。</p>\n<h3 id=\"确定不是吉良吉影！\"><a href=\"#确定不是吉良吉影！\" class=\"headerlink\" title=\"确定不是吉良吉影！\"></a>确定不是吉良吉影！</h3><p>在第四章（其一）中，对于茶畑势之的描写给人一种极其强烈的吉良吉影的既视感。他似乎过着像吉良吉影一样的机械生活。</p>\n<p>浩楠哥曾在 QQ 群中钦定其为炼铜带师。</p>\n<p>关于「小学女生失踪案件」，陶表示「js 是不是太铜了，我更喜欢 jc」。</p>\n<p>结果后面一口气出现两个 jc，然后「小学女生失踪案件」还是没变。</p>\n<p>陶<del>清白</del>为民除害（指<a href=\"/karin-no-kimyou-na-bouken/qiangjianfanpangzi\">强奸犯胖子</a>）说。</p>\n<h3 id=\"我的名字叫（ry\"><a href=\"#我的名字叫（ry\" class=\"headerlink\" title=\"我的名字叫（ry\"></a>我的名字叫（ry</h3><blockquote>\n<p>「我的名字叫茶畑势之，今年 25 岁，住在东京市的公寓一带，未婚。我在附近的写字楼上班，每天下午 4:30 准时到附近的中学接隔壁世佳夫妇的女儿世佳阳爱回家，世佳夫妇每天工作到很晚才回来，晚饭和照顾一般都由我代理，我不抽烟，酒仅止于浅尝。每天辅导世佳写完作业后会陪她玩到晚上八点，直到世佳夫妇把她接回去，我每天都睡够八个小时，睡前，我一定喝一杯超市买到的新鲜牛奶，然后做二十分钟的力量运动，最后冲一个热水澡，上了床，马上熟睡，一觉到天亮，决不把疲劳和压力留到第二天，然后再步行送小世佳上学。认识我的人都说我善良又可靠。」</p>\n<p>「我只是要说，我这个人别无奢求，只希望能够『和小世佳平静地』活下去。『金钱』、『名誉』，是我最不喜欢和人计较的。因为，那只会为小世佳带来『麻烦』和『敌人』……小世佳是我的天使，如果有人敢对我的天使动手的话，不论是谁我都不会原谅。也就是说，如果小世佳出现了『麻烦』和『敌人』，在对方下手前……就会碰到这个！」</p>\n<p>「<em>（召唤出替身）</em>这是我的替身，<ruby>闪电天鹅<rt>Lightning Swan</rt></ruby>，它将和我一起守护我的天使……<em>（被打断）</em>」</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：闪电天鹅（Lightning Swan）</p>\n<p>力量：A</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：B</p>\n<p>精度：B</p>\n<p>成长性：A</p>\n<p>替身能力：自身产生任意大小的电场或给予物体任意强度的电场。</p>\n<p>描述：闪电天鹅属于人形替身，其主体颜色为深蓝与纯白相间，体表刻有闪电花纹，面部被两个反向伸展的天鹅羽翼遮住，只露出嘴部与颔部。闪电天鹅既能够自己产生任意大小的电压，也能够使触摸到的物体变成任意电压的带电体（不论该物体是否导电）。</p>\n<p>注 1：闪电天鹅能够改良接触物体的导电性，令其变成电压大小任意的电源，但并不能改良电流所经过的物体的导电性。</p>\n<p>注 2：只要拥有导电性足够良好的导体，闪电天鹅就可以在导体上发电，使电流传到导体所到的任何地方（射程 A）。</p>\n<p>注 3：被触碰后的物体会一直保持给定电压，并且电压无论怎么损耗都不会降低，除非本体死亡或解除给定的变化。</p>\n<p>注 4：当闪电天鹅触碰到的物体过于庞大时，他只能让该物体的一部分变成电源，</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位能力优秀的日本码农。</p>\n<p>从市中心的繁华程度和走廊的复杂程度来看，他所在的公司规模似乎不小。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>有着一头深栗色的短发，短短的刘海分散在额头两边，冷静的目光和没有任何表情的脸庞仿佛是在宣示他有着一个平凡的性格。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>虚假的绅士（指吉良吉影）。</p>\n<p>真正的绅士（指茶畑势之）。</p>\n<p>因为人物形象塑造得过于正面，且相关情节细节描写极其丰富，浩楠哥收到了来自黑恶势力的要挟：</p>\n<blockquote>\n<p>「下一集再不改就抢电脑了（」</p>\n</blockquote>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>邻居：世佳太太，世佳 大川。</p>\n<p>照顾：<a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a>。</p>\n<p>应该不只是认识吧：<a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a>。</p>\n<h3 id=\"确定不是吉良吉影！\"><a href=\"#确定不是吉良吉影！\" class=\"headerlink\" title=\"确定不是吉良吉影！\"></a>确定不是吉良吉影！</h3><p>在第四章（其一）中，对于茶畑势之的描写给人一种极其强烈的吉良吉影的既视感。他似乎过着像吉良吉影一样的机械生活。</p>\n<p>浩楠哥曾在 QQ 群中钦定其为炼铜带师。</p>\n<p>关于「小学女生失踪案件」，陶表示「js 是不是太铜了，我更喜欢 jc」。</p>\n<p>结果后面一口气出现两个 jc，然后「小学女生失踪案件」还是没变。</p>\n<p>陶<del>清白</del>为民除害（指<a href=\"/karin-no-kimyou-na-bouken/qiangjianfanpangzi\">强奸犯胖子</a>）说。</p>\n<h3 id=\"我的名字叫（ry\"><a href=\"#我的名字叫（ry\" class=\"headerlink\" title=\"我的名字叫（ry\"></a>我的名字叫（ry</h3><blockquote>\n<p>「我的名字叫茶畑势之，今年 25 岁，住在东京市的公寓一带，未婚。我在附近的写字楼上班，每天下午 4:30 准时到附近的中学接隔壁世佳夫妇的女儿世佳阳爱回家，世佳夫妇每天工作到很晚才回来，晚饭和照顾一般都由我代理，我不抽烟，酒仅止于浅尝。每天辅导世佳写完作业后会陪她玩到晚上八点，直到世佳夫妇把她接回去，我每天都睡够八个小时，睡前，我一定喝一杯超市买到的新鲜牛奶，然后做二十分钟的力量运动，最后冲一个热水澡，上了床，马上熟睡，一觉到天亮，决不把疲劳和压力留到第二天，然后再步行送小世佳上学。认识我的人都说我善良又可靠。」</p>\n<p>「我只是要说，我这个人别无奢求，只希望能够『和小世佳平静地』活下去。『金钱』、『名誉』，是我最不喜欢和人计较的。因为，那只会为小世佳带来『麻烦』和『敌人』……小世佳是我的天使，如果有人敢对我的天使动手的话，不论是谁我都不会原谅。也就是说，如果小世佳出现了『麻烦』和『敌人』，在对方下手前……就会碰到这个！」</p>\n<p>「<em>（召唤出替身）</em>这是我的替身，<ruby>闪电天鹅<rt>Lightning Swan</rt></ruby>，它将和我一起守护我的天使……<em>（被打断）</em>」</p>\n</blockquote>\n"},{"mathjax":true,"date":"2020-06-09T16:25:28.853Z","title":"简·皮埃尔·波鲁那雷夫","_content":"### 原作设定\n\n请参考[萌娘百科相关条目](https://zh.moegirl.org/%E7%AE%80%C2%B7%E7%9A%AE%E8%80%B6%E5%B0%94%C2%B7%E6%B3%A2%E9%B2%81%E7%BA%B3%E9%9B%B7%E5%A4%AB)，而且要注意是第三部结束而第五部还未开始时的状态。\n","source":"karin-no-kimyou-na-bouken/j-p-polnareff/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 简·皮埃尔·波鲁那雷夫\n---\n### 原作设定\n\n请参考[萌娘百科相关条目](https://zh.moegirl.org/%E7%AE%80%C2%B7%E7%9A%AE%E8%80%B6%E5%B0%94%C2%B7%E6%B3%A2%E9%B2%81%E7%BA%B3%E9%9B%B7%E5%A4%AB)，而且要注意是第三部结束而第五部还未开始时的状态。\n","updated":"2020-06-09T16:25:28.853Z","path":"karin-no-kimyou-na-bouken/j-p-polnareff/index.html","comments":1,"layout":"page","_id":"ckn32nhnn0095mku9f5m3b800","content":"<h3 id=\"原作设定\"><a href=\"#原作设定\" class=\"headerlink\" title=\"原作设定\"></a>原作设定</h3><p>请参考<a href=\"https://zh.moegirl.org/%E7%AE%80%C2%B7%E7%9A%AE%E8%80%B6%E5%B0%94%C2%B7%E6%B3%A2%E9%B2%81%E7%BA%B3%E9%9B%B7%E5%A4%AB\">萌娘百科相关条目</a>，而且要注意是第三部结束而第五部还未开始时的状态。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"原作设定\"><a href=\"#原作设定\" class=\"headerlink\" title=\"原作设定\"></a>原作设定</h3><p>请参考<a href=\"https://zh.moegirl.org/%E7%AE%80%C2%B7%E7%9A%AE%E8%80%B6%E5%B0%94%C2%B7%E6%B3%A2%E9%B2%81%E7%BA%B3%E9%9B%B7%E5%A4%AB\">萌娘百科相关条目</a>，而且要注意是第三部结束而第五部还未开始时的状态。</p>\n"},{"mathjax":true,"date":"2020-06-09T16:19:52.570Z","title":"花京院 兰（华兰）","_content":"### 设定文档内容\n\n替身名：牵牛花（Morning Glory）\n\n力量：D\n\n速度：C\n\n射程：A\n\n持续力：A\n\n精度：B\n\n成长性：B\n\n替身能力：生成长有牵牛花的绿色藤蔓，捆绑目标或在不同的牵牛花之间传递声音。\n\n描述：牵牛花属于远距离操作型替身，初始无人型，成长后拥有人型，外形为藤蔓和牵牛花包裹的女性形象，替身的头上长有一朵金色的牵牛花，只有金色的牵牛花受损才会导致本体受伤。射程极长，藤蔓最远能够延伸到距离本体 100m 处，但是力量较弱，因此适合用来进行情报收集或其它辅助功能。\n\n注 1：藤蔓被破坏后依然能够再生，且对本体没有伤害，但短时间内破坏过多藤蔓会大幅度削弱牵牛花藤蔓的延伸能力，本体也会进入疲惫状态。\n\n注 2：拥有人形后的牵牛花可以使藤蔓缠绕形成分身，分身拥有和替身一样的功能，但是不能延长射程，且分身的头顶的牵牛花不是金色的。\n\n注 3：藤蔓比绳索坚韧，比钢缆脆弱。\n\n### 出身\n\n~~根据姓氏推断应该是日本人，但是你为什么要闲着没事跑到中国来读中学啊。~~\n\n根据浩楠哥独家机密情报，兰的真名是「华兰」，是中国人。\n\n### 外貌\n\n总结一下就是黑长直，碧绿色眼珠。\n\n### 性格特点\n\n第一章（其一）中提到：\n\n> 兰的父母从兰的小时候开始就一直在外地工作，她从小就是在亲戚的照顾中长大的，因为教育的问题，兰一直都有着孤僻的性格，并且不喜欢与人交流，面对别人的搭讪常常以冷眼相对，再加上她清秀的面庞和飘逸的长发，在以前的学校里，她向来以「冷艳美人」而著称。\n\n第一章（其二）中有过如下发言：\n\n> 「说实话，比起终将死亡的『宿命』，我认为超越死亡的『孤独』才是最可怕的。」\n\n我也总结不出啥来了，您细品吧。\n\n### 人际关系\n\n同学：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)。\n\n老师：[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n### 与「箭」\n\n第一章（其一）中提到兰觉醒替身能力是在手被划伤之后。第三章中本人认为这与「箭」有关。\n\n### 但是连帽衫超棒的好吗\n\n第三章中有如下描写：\n\n> ……和身穿绿色短裙与白色连帽衫的兰站在候机厅的门口等待着，……\n\n~~虽然不知道为什么但是超想看。~~\n\n~~一定超美的吧？对吧对吧？~~\n\n### 花京院兰乔瑟夫·乔斯达说\n\n众所周知，花京院兰的身世一直是一个谜。近年来，学者们进行了 $\\alpha^{\\alpha}!$ 中猜测，最后发现……\n\n她实际上就是乔瑟夫·乔斯达！\n\n文字论证：\n\n1. 兰是女性；乔瑟夫（指龙舌**兰**姑娘）也是女性。\n2. 兰是绿瞳；乔瑟夫在动画里也是绿瞳。\n3. 兰能够操纵藤蔓；乔瑟夫也能够操纵藤蔓。\n4. 兰的替身的力量，速度，持续力分别是 D，C，A；乔瑟夫也是如此。\n5. 兰决定踏上旅程之后的第一场战斗在飞机上；乔瑟夫决定踏上旅程之后的第一场战斗（指灰塔战）也在飞机上。\n6. 兰是主角；乔瑟夫在 JOJO 第二部里也是主角。\n\n数字论证：\n\n花京院兰一共 $29$ 画。\n\n乔瑟夫·乔斯达一共 $48$ 画。\n\n其中：\n\n$$48\\sim 2\\times 2\\times 2\\times 2\\times 3\\sim 2(2+2+2+3)\\sim 29$$\n\nQ.E.D\n\n### 杂项\n\n现在被叫做「花花」。\n\n从第六章（其一）开始，替身拥有了人形。\n","source":"karin-no-kimyou-na-bouken/huajingyuan-lan/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 花京院 兰（华兰）\n---\n### 设定文档内容\n\n替身名：牵牛花（Morning Glory）\n\n力量：D\n\n速度：C\n\n射程：A\n\n持续力：A\n\n精度：B\n\n成长性：B\n\n替身能力：生成长有牵牛花的绿色藤蔓，捆绑目标或在不同的牵牛花之间传递声音。\n\n描述：牵牛花属于远距离操作型替身，初始无人型，成长后拥有人型，外形为藤蔓和牵牛花包裹的女性形象，替身的头上长有一朵金色的牵牛花，只有金色的牵牛花受损才会导致本体受伤。射程极长，藤蔓最远能够延伸到距离本体 100m 处，但是力量较弱，因此适合用来进行情报收集或其它辅助功能。\n\n注 1：藤蔓被破坏后依然能够再生，且对本体没有伤害，但短时间内破坏过多藤蔓会大幅度削弱牵牛花藤蔓的延伸能力，本体也会进入疲惫状态。\n\n注 2：拥有人形后的牵牛花可以使藤蔓缠绕形成分身，分身拥有和替身一样的功能，但是不能延长射程，且分身的头顶的牵牛花不是金色的。\n\n注 3：藤蔓比绳索坚韧，比钢缆脆弱。\n\n### 出身\n\n~~根据姓氏推断应该是日本人，但是你为什么要闲着没事跑到中国来读中学啊。~~\n\n根据浩楠哥独家机密情报，兰的真名是「华兰」，是中国人。\n\n### 外貌\n\n总结一下就是黑长直，碧绿色眼珠。\n\n### 性格特点\n\n第一章（其一）中提到：\n\n> 兰的父母从兰的小时候开始就一直在外地工作，她从小就是在亲戚的照顾中长大的，因为教育的问题，兰一直都有着孤僻的性格，并且不喜欢与人交流，面对别人的搭讪常常以冷眼相对，再加上她清秀的面庞和飘逸的长发，在以前的学校里，她向来以「冷艳美人」而著称。\n\n第一章（其二）中有过如下发言：\n\n> 「说实话，比起终将死亡的『宿命』，我认为超越死亡的『孤独』才是最可怕的。」\n\n我也总结不出啥来了，您细品吧。\n\n### 人际关系\n\n同学：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)。\n\n老师：[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n### 与「箭」\n\n第一章（其一）中提到兰觉醒替身能力是在手被划伤之后。第三章中本人认为这与「箭」有关。\n\n### 但是连帽衫超棒的好吗\n\n第三章中有如下描写：\n\n> ……和身穿绿色短裙与白色连帽衫的兰站在候机厅的门口等待着，……\n\n~~虽然不知道为什么但是超想看。~~\n\n~~一定超美的吧？对吧对吧？~~\n\n### 花京院兰乔瑟夫·乔斯达说\n\n众所周知，花京院兰的身世一直是一个谜。近年来，学者们进行了 $\\alpha^{\\alpha}!$ 中猜测，最后发现……\n\n她实际上就是乔瑟夫·乔斯达！\n\n文字论证：\n\n1. 兰是女性；乔瑟夫（指龙舌**兰**姑娘）也是女性。\n2. 兰是绿瞳；乔瑟夫在动画里也是绿瞳。\n3. 兰能够操纵藤蔓；乔瑟夫也能够操纵藤蔓。\n4. 兰的替身的力量，速度，持续力分别是 D，C，A；乔瑟夫也是如此。\n5. 兰决定踏上旅程之后的第一场战斗在飞机上；乔瑟夫决定踏上旅程之后的第一场战斗（指灰塔战）也在飞机上。\n6. 兰是主角；乔瑟夫在 JOJO 第二部里也是主角。\n\n数字论证：\n\n花京院兰一共 $29$ 画。\n\n乔瑟夫·乔斯达一共 $48$ 画。\n\n其中：\n\n$$48\\sim 2\\times 2\\times 2\\times 2\\times 3\\sim 2(2+2+2+3)\\sim 29$$\n\nQ.E.D\n\n### 杂项\n\n现在被叫做「花花」。\n\n从第六章（其一）开始，替身拥有了人形。\n","updated":"2020-06-09T16:19:52.570Z","path":"karin-no-kimyou-na-bouken/huajingyuan-lan/index.html","comments":1,"layout":"page","_id":"ckn32nhno0099mku991t63brb","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：牵牛花（Morning Glory）</p>\n<p>力量：D</p>\n<p>速度：C</p>\n<p>射程：A</p>\n<p>持续力：A</p>\n<p>精度：B</p>\n<p>成长性：B</p>\n<p>替身能力：生成长有牵牛花的绿色藤蔓，捆绑目标或在不同的牵牛花之间传递声音。</p>\n<p>描述：牵牛花属于远距离操作型替身，初始无人型，成长后拥有人型，外形为藤蔓和牵牛花包裹的女性形象，替身的头上长有一朵金色的牵牛花，只有金色的牵牛花受损才会导致本体受伤。射程极长，藤蔓最远能够延伸到距离本体 100m 处，但是力量较弱，因此适合用来进行情报收集或其它辅助功能。</p>\n<p>注 1：藤蔓被破坏后依然能够再生，且对本体没有伤害，但短时间内破坏过多藤蔓会大幅度削弱牵牛花藤蔓的延伸能力，本体也会进入疲惫状态。</p>\n<p>注 2：拥有人形后的牵牛花可以使藤蔓缠绕形成分身，分身拥有和替身一样的功能，但是不能延长射程，且分身的头顶的牵牛花不是金色的。</p>\n<p>注 3：藤蔓比绳索坚韧，比钢缆脆弱。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p><del>根据姓氏推断应该是日本人，但是你为什么要闲着没事跑到中国来读中学啊。</del></p>\n<p>根据浩楠哥独家机密情报，兰的真名是「华兰」，是中国人。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>总结一下就是黑长直，碧绿色眼珠。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>第一章（其一）中提到：</p>\n<blockquote>\n<p>兰的父母从兰的小时候开始就一直在外地工作，她从小就是在亲戚的照顾中长大的，因为教育的问题，兰一直都有着孤僻的性格，并且不喜欢与人交流，面对别人的搭讪常常以冷眼相对，再加上她清秀的面庞和飘逸的长发，在以前的学校里，她向来以「冷艳美人」而著称。</p>\n</blockquote>\n<p>第一章（其二）中有过如下发言：</p>\n<blockquote>\n<p>「说实话，比起终将死亡的『宿命』，我认为超越死亡的『孤独』才是最可怕的。」</p>\n</blockquote>\n<p>我也总结不出啥来了，您细品吧。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>。</p>\n<p>老师：<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<h3 id=\"与「箭」\"><a href=\"#与「箭」\" class=\"headerlink\" title=\"与「箭」\"></a>与「箭」</h3><p>第一章（其一）中提到兰觉醒替身能力是在手被划伤之后。第三章中本人认为这与「箭」有关。</p>\n<h3 id=\"但是连帽衫超棒的好吗\"><a href=\"#但是连帽衫超棒的好吗\" class=\"headerlink\" title=\"但是连帽衫超棒的好吗\"></a>但是连帽衫超棒的好吗</h3><p>第三章中有如下描写：</p>\n<blockquote>\n<p>……和身穿绿色短裙与白色连帽衫的兰站在候机厅的门口等待着，……</p>\n</blockquote>\n<p><del>虽然不知道为什么但是超想看。</del></p>\n<p><del>一定超美的吧？对吧对吧？</del></p>\n<h3 id=\"花京院兰乔瑟夫·乔斯达说\"><a href=\"#花京院兰乔瑟夫·乔斯达说\" class=\"headerlink\" title=\"花京院兰乔瑟夫·乔斯达说\"></a>花京院兰乔瑟夫·乔斯达说</h3><p>众所周知，花京院兰的身世一直是一个谜。近年来，学者们进行了 $\\alpha^{\\alpha}!$ 中猜测，最后发现……</p>\n<p>她实际上就是乔瑟夫·乔斯达！</p>\n<p>文字论证：</p>\n<ol>\n<li>兰是女性；乔瑟夫（指龙舌<strong>兰</strong>姑娘）也是女性。</li>\n<li>兰是绿瞳；乔瑟夫在动画里也是绿瞳。</li>\n<li>兰能够操纵藤蔓；乔瑟夫也能够操纵藤蔓。</li>\n<li>兰的替身的力量，速度，持续力分别是 D，C，A；乔瑟夫也是如此。</li>\n<li>兰决定踏上旅程之后的第一场战斗在飞机上；乔瑟夫决定踏上旅程之后的第一场战斗（指灰塔战）也在飞机上。</li>\n<li>兰是主角；乔瑟夫在 JOJO 第二部里也是主角。</li>\n</ol>\n<p>数字论证：</p>\n<p>花京院兰一共 $29$ 画。</p>\n<p>乔瑟夫·乔斯达一共 $48$ 画。</p>\n<p>其中：</p>\n<script type=\"math/tex; mode=display\">48\\sim 2\\times 2\\times 2\\times 2\\times 3\\sim 2(2+2+2+3)\\sim 29</script><p>Q.E.D</p>\n<h3 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h3><p>现在被叫做「花花」。</p>\n<p>从第六章（其一）开始，替身拥有了人形。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：牵牛花（Morning Glory）</p>\n<p>力量：D</p>\n<p>速度：C</p>\n<p>射程：A</p>\n<p>持续力：A</p>\n<p>精度：B</p>\n<p>成长性：B</p>\n<p>替身能力：生成长有牵牛花的绿色藤蔓，捆绑目标或在不同的牵牛花之间传递声音。</p>\n<p>描述：牵牛花属于远距离操作型替身，初始无人型，成长后拥有人型，外形为藤蔓和牵牛花包裹的女性形象，替身的头上长有一朵金色的牵牛花，只有金色的牵牛花受损才会导致本体受伤。射程极长，藤蔓最远能够延伸到距离本体 100m 处，但是力量较弱，因此适合用来进行情报收集或其它辅助功能。</p>\n<p>注 1：藤蔓被破坏后依然能够再生，且对本体没有伤害，但短时间内破坏过多藤蔓会大幅度削弱牵牛花藤蔓的延伸能力，本体也会进入疲惫状态。</p>\n<p>注 2：拥有人形后的牵牛花可以使藤蔓缠绕形成分身，分身拥有和替身一样的功能，但是不能延长射程，且分身的头顶的牵牛花不是金色的。</p>\n<p>注 3：藤蔓比绳索坚韧，比钢缆脆弱。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p><del>根据姓氏推断应该是日本人，但是你为什么要闲着没事跑到中国来读中学啊。</del></p>\n<p>根据浩楠哥独家机密情报，兰的真名是「华兰」，是中国人。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>总结一下就是黑长直，碧绿色眼珠。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>第一章（其一）中提到：</p>\n<blockquote>\n<p>兰的父母从兰的小时候开始就一直在外地工作，她从小就是在亲戚的照顾中长大的，因为教育的问题，兰一直都有着孤僻的性格，并且不喜欢与人交流，面对别人的搭讪常常以冷眼相对，再加上她清秀的面庞和飘逸的长发，在以前的学校里，她向来以「冷艳美人」而著称。</p>\n</blockquote>\n<p>第一章（其二）中有过如下发言：</p>\n<blockquote>\n<p>「说实话，比起终将死亡的『宿命』，我认为超越死亡的『孤独』才是最可怕的。」</p>\n</blockquote>\n<p>我也总结不出啥来了，您细品吧。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>。</p>\n<p>老师：<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<h3 id=\"与「箭」\"><a href=\"#与「箭」\" class=\"headerlink\" title=\"与「箭」\"></a>与「箭」</h3><p>第一章（其一）中提到兰觉醒替身能力是在手被划伤之后。第三章中本人认为这与「箭」有关。</p>\n<h3 id=\"但是连帽衫超棒的好吗\"><a href=\"#但是连帽衫超棒的好吗\" class=\"headerlink\" title=\"但是连帽衫超棒的好吗\"></a>但是连帽衫超棒的好吗</h3><p>第三章中有如下描写：</p>\n<blockquote>\n<p>……和身穿绿色短裙与白色连帽衫的兰站在候机厅的门口等待着，……</p>\n</blockquote>\n<p><del>虽然不知道为什么但是超想看。</del></p>\n<p><del>一定超美的吧？对吧对吧？</del></p>\n<h3 id=\"花京院兰乔瑟夫·乔斯达说\"><a href=\"#花京院兰乔瑟夫·乔斯达说\" class=\"headerlink\" title=\"花京院兰乔瑟夫·乔斯达说\"></a>花京院兰乔瑟夫·乔斯达说</h3><p>众所周知，花京院兰的身世一直是一个谜。近年来，学者们进行了 $\\alpha^{\\alpha}!$ 中猜测，最后发现……</p>\n<p>她实际上就是乔瑟夫·乔斯达！</p>\n<p>文字论证：</p>\n<ol>\n<li>兰是女性；乔瑟夫（指龙舌<strong>兰</strong>姑娘）也是女性。</li>\n<li>兰是绿瞳；乔瑟夫在动画里也是绿瞳。</li>\n<li>兰能够操纵藤蔓；乔瑟夫也能够操纵藤蔓。</li>\n<li>兰的替身的力量，速度，持续力分别是 D，C，A；乔瑟夫也是如此。</li>\n<li>兰决定踏上旅程之后的第一场战斗在飞机上；乔瑟夫决定踏上旅程之后的第一场战斗（指灰塔战）也在飞机上。</li>\n<li>兰是主角；乔瑟夫在 JOJO 第二部里也是主角。</li>\n</ol>\n<p>数字论证：</p>\n<p>花京院兰一共 $29$ 画。</p>\n<p>乔瑟夫·乔斯达一共 $48$ 画。</p>\n<p>其中：</p>\n<script type=\"math/tex; mode=display\">48\\sim 2\\times 2\\times 2\\times 2\\times 3\\sim 2(2+2+2+3)\\sim 29</script><p>Q.E.D</p>\n<h3 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h3><p>现在被叫做「花花」。</p>\n<p>从第六章（其一）开始，替身拥有了人形。</p>\n"},{"mathjax":true,"date":"2020-05-31T11:54:13.881Z","title":"强奸犯胖子","_content":"### 设定文档内容\n\n替身名：饿狼（The Wolf）\n\n力量：B\n\n速度：B\n\n射程：A\n\n持续力：B\n\n精度：C\n\n成长性：D\n\n替身能力：可以在本体周围大范围内进行侦查游走，并随时可以让本体在原位置和替身所在位置之间来回传送。\n\n### 出身\n\n不重要。\n\n### 外貌\n\n身穿深绿色大衣，戴着厚厚的眼镜，头发肮脏地蜷曲成一团。\n\n### 性格特点\n\n~~死肥宅获得了替身能力于是逍遥法外。~~\n","source":"karin-no-kimyou-na-bouken/qiangjianfanpangzi/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 强奸犯胖子\n---\n### 设定文档内容\n\n替身名：饿狼（The Wolf）\n\n力量：B\n\n速度：B\n\n射程：A\n\n持续力：B\n\n精度：C\n\n成长性：D\n\n替身能力：可以在本体周围大范围内进行侦查游走，并随时可以让本体在原位置和替身所在位置之间来回传送。\n\n### 出身\n\n不重要。\n\n### 外貌\n\n身穿深绿色大衣，戴着厚厚的眼镜，头发肮脏地蜷曲成一团。\n\n### 性格特点\n\n~~死肥宅获得了替身能力于是逍遥法外。~~\n","updated":"2020-05-31T11:54:13.881Z","path":"karin-no-kimyou-na-bouken/qiangjianfanpangzi/index.html","comments":1,"layout":"page","_id":"ckn32nhnp009cmku95dde52ag","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：饿狼（The Wolf）</p>\n<p>力量：B</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：B</p>\n<p>精度：C</p>\n<p>成长性：D</p>\n<p>替身能力：可以在本体周围大范围内进行侦查游走，并随时可以让本体在原位置和替身所在位置之间来回传送。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>不重要。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿深绿色大衣，戴着厚厚的眼镜，头发肮脏地蜷曲成一团。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p><del>死肥宅获得了替身能力于是逍遥法外。</del></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：饿狼（The Wolf）</p>\n<p>力量：B</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：B</p>\n<p>精度：C</p>\n<p>成长性：D</p>\n<p>替身能力：可以在本体周围大范围内进行侦查游走，并随时可以让本体在原位置和替身所在位置之间来回传送。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>不重要。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿深绿色大衣，戴着厚厚的眼镜，头发肮脏地蜷曲成一团。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p><del>死肥宅获得了替身能力于是逍遥法外。</del></p>\n"},{"mathjax":true,"date":"2020-06-09T16:33:20.627Z","title":"世佳 阳爱","_content":"### 出身\n\n似乎是一位普通的日本中学生。\n\n### 外貌\n\n身穿红黑色校服，背着棕色书包，留着乌黑色长发，长发上系着一条深黄色发带。\n\n### 性格特点\n\n似乎比较腼腆，比较谦逊。\n\n### 人际关系\n\n母亲：世佳太太。\n\n父亲：世佳 大川。\n\n同学：[小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei)。\n\n被照顾：[茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi)。\n\n### 「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\n\n在第六章（其二）中疑似看到了兰的替身。\n\n也许阳爱实际上刚刚觉醒替身。\n\n~~或者说这个阳爱实际上是黄色节制。~~\n","source":"karin-no-kimyou-na-bouken/shijia-yangai/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 世佳 阳爱\n---\n### 出身\n\n似乎是一位普通的日本中学生。\n\n### 外貌\n\n身穿红黑色校服，背着棕色书包，留着乌黑色长发，长发上系着一条深黄色发带。\n\n### 性格特点\n\n似乎比较腼腆，比较谦逊。\n\n### 人际关系\n\n母亲：世佳太太。\n\n父亲：世佳 大川。\n\n同学：[小鸟游 秀美](/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei)。\n\n被照顾：[茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi)。\n\n### 「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\n\n在第六章（其二）中疑似看到了兰的替身。\n\n也许阳爱实际上刚刚觉醒替身。\n\n~~或者说这个阳爱实际上是黄色节制。~~\n","updated":"2020-06-09T16:33:20.627Z","path":"karin-no-kimyou-na-bouken/shijia-yangai/index.html","comments":1,"layout":"page","_id":"ckn32nhnq009emku9hgfxaxbz","content":"<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位普通的日本中学生。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿红黑色校服，背着棕色书包，留着乌黑色长发，长发上系着一条深黄色发带。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>似乎比较腼腆，比较谦逊。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>母亲：世佳太太。</p>\n<p>父亲：世佳 大川。</p>\n<p>同学：<a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a>。</p>\n<p>被照顾：<a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a>。</p>\n<h3 id=\"「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\"><a href=\"#「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\" class=\"headerlink\" title=\"「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\"></a>「这家餐厅的天花板什么时候装饰了这么多牵牛花？」</h3><p>在第六章（其二）中疑似看到了兰的替身。</p>\n<p>也许阳爱实际上刚刚觉醒替身。</p>\n<p><del>或者说这个阳爱实际上是黄色节制。</del></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位普通的日本中学生。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿红黑色校服，背着棕色书包，留着乌黑色长发，长发上系着一条深黄色发带。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>似乎比较腼腆，比较谦逊。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>母亲：世佳太太。</p>\n<p>父亲：世佳 大川。</p>\n<p>同学：<a href=\"/karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei\">小鸟游 秀美</a>。</p>\n<p>被照顾：<a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a>。</p>\n<h3 id=\"「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\"><a href=\"#「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\" class=\"headerlink\" title=\"「这家餐厅的天花板什么时候装饰了这么多牵牛花？」\"></a>「这家餐厅的天花板什么时候装饰了这么多牵牛花？」</h3><p>在第六章（其二）中疑似看到了兰的替身。</p>\n<p>也许阳爱实际上刚刚觉醒替身。</p>\n<p><del>或者说这个阳爱实际上是黄色节制。</del></p>\n"},{"mathjax":true,"date":"2020-05-31T15:41:25.842Z","title":"汤米·克拉斯","_content":"### 设定文档内容\n\n替身名：主席（Chairman）\n\n力量：B\n\n速度：B\n\n射程：C\n\n持续力：D\n\n精度：B\n\n成长性：C\n\n替身能力：真理认定，在替身射程内改变或创造一个真理，但仅作用于射程范围内，一次只能改变或创造一个真理。\n\n描述：主席是人形替身，射程范围是以本体为半径 10m 内，体表为灰黑色，花纹类似于西装，且胸前系有红色的领带，眼部由白色反光镜面组成，具有不错的力量和速度。\n\n注 1：真理认定可以违反实际存在的某条真理，例如说「金刚石的硬度很低」之后，射程范围内的所有金刚石都会变得和果冻一样软。\n\n注 2：真理认定所作用的事物如果在射程之外就不会受到影响，比如「太阳是颗行星」就不会生效，因为太阳在射程之外。\n\n注 3：真理认定技能可以随时取消，再发动新的真理认定时，之前定下的真理就会失效。\n\n注 4：真理认定对未知成分的物质无效，对大部分替身也无效，但对本体有效，例如「白金之星的力量非常弱」无法生效。\n\n### 出身\n\n第三章中有过如下发言：\n\n> 「没想到我竟然会因为这种事情返回美国。」\n\n因此应该是美国人。\n\n### 外貌\n\n金发碧眼的壮汉。\n\n### 性格特点\n\n十分开朗热情，甚至到了现充的地步。\n\n### 人际关系\n\n同学：[花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan)。\n\n老师：[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n### 主席 TQL！（破音）\n\n浩楠哥在 QQ 群内给出过如下案例：\n\n> 现在有一个盒子，里面放着 3 个红球。显然摸出黄球的概率是 0%。主席！真理认定！摸出黄球的概率是 100%！然后就能从盒子里摸出一个黄球。\n\n总而言之就是不知道强到哪里去了。\n\n浩楠哥还曾在 QQ 群中说过：\n\n> 主席的能力对具体事物（像是物理常数）有效，对抽象概念（像是数学定理）无效。通过修改物理常数可以达到改变距离定义的效果，但是必须要距离两端的物体都在射程范围内。\n\n第二章（其一）中定下了「人的大脑在后背部」的真理，从而在被爆头后幸免于死。~~然而有一说一把大脑移动到后背也太猎奇了吧。~~\n","source":"karin-no-kimyou-na-bouken/tangmi-kelasi/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 汤米·克拉斯\n---\n### 设定文档内容\n\n替身名：主席（Chairman）\n\n力量：B\n\n速度：B\n\n射程：C\n\n持续力：D\n\n精度：B\n\n成长性：C\n\n替身能力：真理认定，在替身射程内改变或创造一个真理，但仅作用于射程范围内，一次只能改变或创造一个真理。\n\n描述：主席是人形替身，射程范围是以本体为半径 10m 内，体表为灰黑色，花纹类似于西装，且胸前系有红色的领带，眼部由白色反光镜面组成，具有不错的力量和速度。\n\n注 1：真理认定可以违反实际存在的某条真理，例如说「金刚石的硬度很低」之后，射程范围内的所有金刚石都会变得和果冻一样软。\n\n注 2：真理认定所作用的事物如果在射程之外就不会受到影响，比如「太阳是颗行星」就不会生效，因为太阳在射程之外。\n\n注 3：真理认定技能可以随时取消，再发动新的真理认定时，之前定下的真理就会失效。\n\n注 4：真理认定对未知成分的物质无效，对大部分替身也无效，但对本体有效，例如「白金之星的力量非常弱」无法生效。\n\n### 出身\n\n第三章中有过如下发言：\n\n> 「没想到我竟然会因为这种事情返回美国。」\n\n因此应该是美国人。\n\n### 外貌\n\n金发碧眼的壮汉。\n\n### 性格特点\n\n十分开朗热情，甚至到了现充的地步。\n\n### 人际关系\n\n同学：[花京院 兰](/karin-no-kimyou-na-bouken/huajingyuan-lan)。\n\n老师：[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n### 主席 TQL！（破音）\n\n浩楠哥在 QQ 群内给出过如下案例：\n\n> 现在有一个盒子，里面放着 3 个红球。显然摸出黄球的概率是 0%。主席！真理认定！摸出黄球的概率是 100%！然后就能从盒子里摸出一个黄球。\n\n总而言之就是不知道强到哪里去了。\n\n浩楠哥还曾在 QQ 群中说过：\n\n> 主席的能力对具体事物（像是物理常数）有效，对抽象概念（像是数学定理）无效。通过修改物理常数可以达到改变距离定义的效果，但是必须要距离两端的物体都在射程范围内。\n\n第二章（其一）中定下了「人的大脑在后背部」的真理，从而在被爆头后幸免于死。~~然而有一说一把大脑移动到后背也太猎奇了吧。~~\n","updated":"2020-05-31T15:41:25.842Z","path":"karin-no-kimyou-na-bouken/tangmi-kelasi/index.html","comments":1,"layout":"page","_id":"ckn32nhnr009gmku9db9w97eo","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：主席（Chairman）</p>\n<p>力量：B</p>\n<p>速度：B</p>\n<p>射程：C</p>\n<p>持续力：D</p>\n<p>精度：B</p>\n<p>成长性：C</p>\n<p>替身能力：真理认定，在替身射程内改变或创造一个真理，但仅作用于射程范围内，一次只能改变或创造一个真理。</p>\n<p>描述：主席是人形替身，射程范围是以本体为半径 10m 内，体表为灰黑色，花纹类似于西装，且胸前系有红色的领带，眼部由白色反光镜面组成，具有不错的力量和速度。</p>\n<p>注 1：真理认定可以违反实际存在的某条真理，例如说「金刚石的硬度很低」之后，射程范围内的所有金刚石都会变得和果冻一样软。</p>\n<p>注 2：真理认定所作用的事物如果在射程之外就不会受到影响，比如「太阳是颗行星」就不会生效，因为太阳在射程之外。</p>\n<p>注 3：真理认定技能可以随时取消，再发动新的真理认定时，之前定下的真理就会失效。</p>\n<p>注 4：真理认定对未知成分的物质无效，对大部分替身也无效，但对本体有效，例如「白金之星的力量非常弱」无法生效。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第三章中有过如下发言：</p>\n<blockquote>\n<p>「没想到我竟然会因为这种事情返回美国。」</p>\n</blockquote>\n<p>因此应该是美国人。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>金发碧眼的壮汉。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>十分开朗热情，甚至到了现充的地步。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a>。</p>\n<p>老师：<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<h3 id=\"主席-TQL！（破音）\"><a href=\"#主席-TQL！（破音）\" class=\"headerlink\" title=\"主席 TQL！（破音）\"></a>主席 TQL！（破音）</h3><p>浩楠哥在 QQ 群内给出过如下案例：</p>\n<blockquote>\n<p>现在有一个盒子，里面放着 3 个红球。显然摸出黄球的概率是 0%。主席！真理认定！摸出黄球的概率是 100%！然后就能从盒子里摸出一个黄球。</p>\n</blockquote>\n<p>总而言之就是不知道强到哪里去了。</p>\n<p>浩楠哥还曾在 QQ 群中说过：</p>\n<blockquote>\n<p>主席的能力对具体事物（像是物理常数）有效，对抽象概念（像是数学定理）无效。通过修改物理常数可以达到改变距离定义的效果，但是必须要距离两端的物体都在射程范围内。</p>\n</blockquote>\n<p>第二章（其一）中定下了「人的大脑在后背部」的真理，从而在被爆头后幸免于死。<del>然而有一说一把大脑移动到后背也太猎奇了吧。</del></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：主席（Chairman）</p>\n<p>力量：B</p>\n<p>速度：B</p>\n<p>射程：C</p>\n<p>持续力：D</p>\n<p>精度：B</p>\n<p>成长性：C</p>\n<p>替身能力：真理认定，在替身射程内改变或创造一个真理，但仅作用于射程范围内，一次只能改变或创造一个真理。</p>\n<p>描述：主席是人形替身，射程范围是以本体为半径 10m 内，体表为灰黑色，花纹类似于西装，且胸前系有红色的领带，眼部由白色反光镜面组成，具有不错的力量和速度。</p>\n<p>注 1：真理认定可以违反实际存在的某条真理，例如说「金刚石的硬度很低」之后，射程范围内的所有金刚石都会变得和果冻一样软。</p>\n<p>注 2：真理认定所作用的事物如果在射程之外就不会受到影响，比如「太阳是颗行星」就不会生效，因为太阳在射程之外。</p>\n<p>注 3：真理认定技能可以随时取消，再发动新的真理认定时，之前定下的真理就会失效。</p>\n<p>注 4：真理认定对未知成分的物质无效，对大部分替身也无效，但对本体有效，例如「白金之星的力量非常弱」无法生效。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第三章中有过如下发言：</p>\n<blockquote>\n<p>「没想到我竟然会因为这种事情返回美国。」</p>\n</blockquote>\n<p>因此应该是美国人。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>金发碧眼的壮汉。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>十分开朗热情，甚至到了现充的地步。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/huajingyuan-lan\">花京院 兰</a>。</p>\n<p>老师：<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<h3 id=\"主席-TQL！（破音）\"><a href=\"#主席-TQL！（破音）\" class=\"headerlink\" title=\"主席 TQL！（破音）\"></a>主席 TQL！（破音）</h3><p>浩楠哥在 QQ 群内给出过如下案例：</p>\n<blockquote>\n<p>现在有一个盒子，里面放着 3 个红球。显然摸出黄球的概率是 0%。主席！真理认定！摸出黄球的概率是 100%！然后就能从盒子里摸出一个黄球。</p>\n</blockquote>\n<p>总而言之就是不知道强到哪里去了。</p>\n<p>浩楠哥还曾在 QQ 群中说过：</p>\n<blockquote>\n<p>主席的能力对具体事物（像是物理常数）有效，对抽象概念（像是数学定理）无效。通过修改物理常数可以达到改变距离定义的效果，但是必须要距离两端的物体都在射程范围内。</p>\n</blockquote>\n<p>第二章（其一）中定下了「人的大脑在后背部」的真理，从而在被爆头后幸免于死。<del>然而有一说一把大脑移动到后背也太猎奇了吧。</del></p>\n"},{"mathjax":true,"date":"2020-05-30T13:11:36.720Z","title":"小鸟游 秀美","_content":"### 出身\n\n似乎是一位普通的日本中学生。\n\n### 外貌\n\n身穿红黑色校服，背着棕色书包，留着紫色短发。\n\n### 性格特点\n\n十分自来熟，而且似乎有些任性。\n\n### 人际关系\n\n同学：[世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai)。\n\n应该不只是认识吧：[茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi)。\n","source":"karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 小鸟游 秀美\n---\n### 出身\n\n似乎是一位普通的日本中学生。\n\n### 外貌\n\n身穿红黑色校服，背着棕色书包，留着紫色短发。\n\n### 性格特点\n\n十分自来熟，而且似乎有些任性。\n\n### 人际关系\n\n同学：[世佳 阳爱](/karin-no-kimyou-na-bouken/shijia-yangai)。\n\n应该不只是认识吧：[茶畑 势之](/karin-no-kimyou-na-bouken/chatian-shizhi)。\n","updated":"2020-05-30T13:11:36.720Z","path":"karin-no-kimyou-na-bouken/xiaoniaoyou-xiumei/index.html","comments":1,"layout":"page","_id":"ckn32nhod009imku9erphd4hk","content":"<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位普通的日本中学生。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿红黑色校服，背着棕色书包，留着紫色短发。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>十分自来熟，而且似乎有些任性。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a>。</p>\n<p>应该不只是认识吧：<a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>似乎是一位普通的日本中学生。</p>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>身穿红黑色校服，背着棕色书包，留着紫色短发。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>十分自来熟，而且似乎有些任性。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>同学：<a href=\"/karin-no-kimyou-na-bouken/shijia-yangai\">世佳 阳爱</a>。</p>\n<p>应该不只是认识吧：<a href=\"/karin-no-kimyou-na-bouken/chatian-shizhi\">茶畑 势之</a>。</p>\n"},{"mathjax":true,"date":"2020-06-01T12:47:53.973Z","title":"卓尔·吉尼尔斯","_content":"### 设定文档内容\n\n替身名：精确射手（DM Shooter）\n\n力量：C\n\n速度：B\n\n射程：A\n\n持续力：C\n\n精度：A\n\n成长性：C\n\n替身能力：使用来复枪进行精准射击，并且射出的子弹可以选择性地「穿过」目标并实现精准打击。\n\n描述：精确射手属于人形替身，替身的主体颜色为黄绿色与灰色相间，头戴鸭舌帽与射击用护耳，眼部佩戴橙黄色墨镜，使用的是外形类似于 M14-DMR 的精准射手步枪，发射出去的子弹可以根据需要进行隐形来穿过障碍物，从而起到打击目标的作用。此外，替身也可以将步枪交给本体使用。\n\n注 1：虽然子弹可以选择性地穿过障碍物，但是替身是无法看见障碍物的后方的。\n\n注 2：精确射手发射的子弹只有能够选择性穿透物体的特点，既不能产生爆炸，也不能中途改变弹道。\n\n注 3：精确射手拥有接近人类极限的极长射程（2km），并且精度极高。\n\n### 出身\n\n第二章（其二）中卓尔的自我介绍：\n\n> 「我的名字是卓尔·吉尼尔斯，年龄 23 岁，是一个来自德国的前射击运动员，三年前，我因为比赛失利而放弃了射击运动员的职业，周游世界来缓解心情，当我来到美国的纽约时，有一天，我走在一个人很少的小巷里，背部突然被『箭』贯穿，然后我就昏迷了，等我醒来以后，我就已经被洗脑了，只不过我还拥有那一段时间的记忆。」\n\n### 外貌\n\n只提到身着蓝色冲锋衣。\n\n### 性格特点\n\n从第二章中不打探一下主角团的替身能力就贸然进攻似乎可以看出十分武断。\n\n### 人际关系\n\n曾试图刺杀：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)，[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n被洗脑：Lee 大人。\n\n### 热成像仪\n\n因为不能透视为了隔墙打人买了个热成像仪。\n\n### Lee 大人\n\n第二章（其二）中有过如下心理活动：\n\n> 「让你也成为伟大的 Lee 大人的梦想的牺牲品吧！」\n\n其中的 Lee 大人可能指的是~~某李姓金牌教练~~黑幕。\n\n第三章中阿苏兰提到「一百年后，也就是距今三十年前，DIO 他复活了」「DIO 在与六位勇敢的替身使者的战斗中被打败，但是他的追随者依然存在」。\n\n那么 Lee 大人很有可能就是 DIO 追随者的首领。\n","source":"karin-no-kimyou-na-bouken/zhuoer-jiniersi/index.md","raw":"---\nmathjax: true\ndate: Undefined\ntitle: 卓尔·吉尼尔斯\n---\n### 设定文档内容\n\n替身名：精确射手（DM Shooter）\n\n力量：C\n\n速度：B\n\n射程：A\n\n持续力：C\n\n精度：A\n\n成长性：C\n\n替身能力：使用来复枪进行精准射击，并且射出的子弹可以选择性地「穿过」目标并实现精准打击。\n\n描述：精确射手属于人形替身，替身的主体颜色为黄绿色与灰色相间，头戴鸭舌帽与射击用护耳，眼部佩戴橙黄色墨镜，使用的是外形类似于 M14-DMR 的精准射手步枪，发射出去的子弹可以根据需要进行隐形来穿过障碍物，从而起到打击目标的作用。此外，替身也可以将步枪交给本体使用。\n\n注 1：虽然子弹可以选择性地穿过障碍物，但是替身是无法看见障碍物的后方的。\n\n注 2：精确射手发射的子弹只有能够选择性穿透物体的特点，既不能产生爆炸，也不能中途改变弹道。\n\n注 3：精确射手拥有接近人类极限的极长射程（2km），并且精度极高。\n\n### 出身\n\n第二章（其二）中卓尔的自我介绍：\n\n> 「我的名字是卓尔·吉尼尔斯，年龄 23 岁，是一个来自德国的前射击运动员，三年前，我因为比赛失利而放弃了射击运动员的职业，周游世界来缓解心情，当我来到美国的纽约时，有一天，我走在一个人很少的小巷里，背部突然被『箭』贯穿，然后我就昏迷了，等我醒来以后，我就已经被洗脑了，只不过我还拥有那一段时间的记忆。」\n\n### 外貌\n\n只提到身着蓝色冲锋衣。\n\n### 性格特点\n\n从第二章中不打探一下主角团的替身能力就贸然进攻似乎可以看出十分武断。\n\n### 人际关系\n\n曾试图刺杀：[汤米·克拉斯](/karin-no-kimyou-na-bouken/tangmi-kelasi)，[阿苏兰·德布尔](/karin-no-kimyou-na-bouken/asulan-debuer)。\n\n被洗脑：Lee 大人。\n\n### 热成像仪\n\n因为不能透视为了隔墙打人买了个热成像仪。\n\n### Lee 大人\n\n第二章（其二）中有过如下心理活动：\n\n> 「让你也成为伟大的 Lee 大人的梦想的牺牲品吧！」\n\n其中的 Lee 大人可能指的是~~某李姓金牌教练~~黑幕。\n\n第三章中阿苏兰提到「一百年后，也就是距今三十年前，DIO 他复活了」「DIO 在与六位勇敢的替身使者的战斗中被打败，但是他的追随者依然存在」。\n\n那么 Lee 大人很有可能就是 DIO 追随者的首领。\n","updated":"2020-06-01T12:47:53.973Z","path":"karin-no-kimyou-na-bouken/zhuoer-jiniersi/index.html","comments":1,"layout":"page","_id":"ckn32nhod009jmku96gsm2qsi","content":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：精确射手（DM Shooter）</p>\n<p>力量：C</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：C</p>\n<p>精度：A</p>\n<p>成长性：C</p>\n<p>替身能力：使用来复枪进行精准射击，并且射出的子弹可以选择性地「穿过」目标并实现精准打击。</p>\n<p>描述：精确射手属于人形替身，替身的主体颜色为黄绿色与灰色相间，头戴鸭舌帽与射击用护耳，眼部佩戴橙黄色墨镜，使用的是外形类似于 M14-DMR 的精准射手步枪，发射出去的子弹可以根据需要进行隐形来穿过障碍物，从而起到打击目标的作用。此外，替身也可以将步枪交给本体使用。</p>\n<p>注 1：虽然子弹可以选择性地穿过障碍物，但是替身是无法看见障碍物的后方的。</p>\n<p>注 2：精确射手发射的子弹只有能够选择性穿透物体的特点，既不能产生爆炸，也不能中途改变弹道。</p>\n<p>注 3：精确射手拥有接近人类极限的极长射程（2km），并且精度极高。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第二章（其二）中卓尔的自我介绍：</p>\n<blockquote>\n<p>「我的名字是卓尔·吉尼尔斯，年龄 23 岁，是一个来自德国的前射击运动员，三年前，我因为比赛失利而放弃了射击运动员的职业，周游世界来缓解心情，当我来到美国的纽约时，有一天，我走在一个人很少的小巷里，背部突然被『箭』贯穿，然后我就昏迷了，等我醒来以后，我就已经被洗脑了，只不过我还拥有那一段时间的记忆。」</p>\n</blockquote>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>只提到身着蓝色冲锋衣。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>从第二章中不打探一下主角团的替身能力就贸然进攻似乎可以看出十分武断。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>曾试图刺杀：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>，<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<p>被洗脑：Lee 大人。</p>\n<h3 id=\"热成像仪\"><a href=\"#热成像仪\" class=\"headerlink\" title=\"热成像仪\"></a>热成像仪</h3><p>因为不能透视为了隔墙打人买了个热成像仪。</p>\n<h3 id=\"Lee-大人\"><a href=\"#Lee-大人\" class=\"headerlink\" title=\"Lee 大人\"></a>Lee 大人</h3><p>第二章（其二）中有过如下心理活动：</p>\n<blockquote>\n<p>「让你也成为伟大的 Lee 大人的梦想的牺牲品吧！」</p>\n</blockquote>\n<p>其中的 Lee 大人可能指的是<del>某李姓金牌教练</del>黑幕。</p>\n<p>第三章中阿苏兰提到「一百年后，也就是距今三十年前，DIO 他复活了」「DIO 在与六位勇敢的替身使者的战斗中被打败，但是他的追随者依然存在」。</p>\n<p>那么 Lee 大人很有可能就是 DIO 追随者的首领。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设定文档内容\"><a href=\"#设定文档内容\" class=\"headerlink\" title=\"设定文档内容\"></a>设定文档内容</h3><p>替身名：精确射手（DM Shooter）</p>\n<p>力量：C</p>\n<p>速度：B</p>\n<p>射程：A</p>\n<p>持续力：C</p>\n<p>精度：A</p>\n<p>成长性：C</p>\n<p>替身能力：使用来复枪进行精准射击，并且射出的子弹可以选择性地「穿过」目标并实现精准打击。</p>\n<p>描述：精确射手属于人形替身，替身的主体颜色为黄绿色与灰色相间，头戴鸭舌帽与射击用护耳，眼部佩戴橙黄色墨镜，使用的是外形类似于 M14-DMR 的精准射手步枪，发射出去的子弹可以根据需要进行隐形来穿过障碍物，从而起到打击目标的作用。此外，替身也可以将步枪交给本体使用。</p>\n<p>注 1：虽然子弹可以选择性地穿过障碍物，但是替身是无法看见障碍物的后方的。</p>\n<p>注 2：精确射手发射的子弹只有能够选择性穿透物体的特点，既不能产生爆炸，也不能中途改变弹道。</p>\n<p>注 3：精确射手拥有接近人类极限的极长射程（2km），并且精度极高。</p>\n<h3 id=\"出身\"><a href=\"#出身\" class=\"headerlink\" title=\"出身\"></a>出身</h3><p>第二章（其二）中卓尔的自我介绍：</p>\n<blockquote>\n<p>「我的名字是卓尔·吉尼尔斯，年龄 23 岁，是一个来自德国的前射击运动员，三年前，我因为比赛失利而放弃了射击运动员的职业，周游世界来缓解心情，当我来到美国的纽约时，有一天，我走在一个人很少的小巷里，背部突然被『箭』贯穿，然后我就昏迷了，等我醒来以后，我就已经被洗脑了，只不过我还拥有那一段时间的记忆。」</p>\n</blockquote>\n<h3 id=\"外貌\"><a href=\"#外貌\" class=\"headerlink\" title=\"外貌\"></a>外貌</h3><p>只提到身着蓝色冲锋衣。</p>\n<h3 id=\"性格特点\"><a href=\"#性格特点\" class=\"headerlink\" title=\"性格特点\"></a>性格特点</h3><p>从第二章中不打探一下主角团的替身能力就贸然进攻似乎可以看出十分武断。</p>\n<h3 id=\"人际关系\"><a href=\"#人际关系\" class=\"headerlink\" title=\"人际关系\"></a>人际关系</h3><p>曾试图刺杀：<a href=\"/karin-no-kimyou-na-bouken/tangmi-kelasi\">汤米·克拉斯</a>，<a href=\"/karin-no-kimyou-na-bouken/asulan-debuer\">阿苏兰·德布尔</a>。</p>\n<p>被洗脑：Lee 大人。</p>\n<h3 id=\"热成像仪\"><a href=\"#热成像仪\" class=\"headerlink\" title=\"热成像仪\"></a>热成像仪</h3><p>因为不能透视为了隔墙打人买了个热成像仪。</p>\n<h3 id=\"Lee-大人\"><a href=\"#Lee-大人\" class=\"headerlink\" title=\"Lee 大人\"></a>Lee 大人</h3><p>第二章（其二）中有过如下心理活动：</p>\n<blockquote>\n<p>「让你也成为伟大的 Lee 大人的梦想的牺牲品吧！」</p>\n</blockquote>\n<p>其中的 Lee 大人可能指的是<del>某李姓金牌教练</del>黑幕。</p>\n<p>第三章中阿苏兰提到「一百年后，也就是距今三十年前，DIO 他复活了」「DIO 在与六位勇敢的替身使者的战斗中被打败，但是他的追随者依然存在」。</p>\n<p>那么 Lee 大人很有可能就是 DIO 追随者的首领。</p>\n"}],"Post":[{"title":"Hello World","date":"2018-09-27T05:41:19.000Z","mathjax":true,"_content":"总算是搞出来了一个自己觉得海星的blog……\n","source":"_posts/2018-09-27-hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-09-27 13:41:19\ntags:\n  - 其它\ncategories:\n  - 未分类\nmathjax: true\n---\n总算是搞出来了一个自己觉得海星的blog……\n","slug":"hello-world","published":1,"updated":"2020-05-17T12:07:04.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzj0001mku92x9d1lkn","content":"<p>总算是搞出来了一个自己觉得海星的blog……</p>\n","site":{"data":{}},"excerpt":"","more":"<p>总算是搞出来了一个自己觉得海星的blog……</p>\n"},{"title":"「Luogu-P4900」食堂","date":"2018-10-04T04:11:18.000Z","mathjax":true,"_content":"[传送门](https://www.luogu.org/problemnew/show/P4900)\n\n<!-- more -->\n\n~~闲着没事写篇题解（~~\n\n简单来说，就是要求\n\n$$\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\pmod{998244353}$$\n\n其中$\\lbrace x\\rbrace$表示取$x$的小数部分。\n\n稍加思索，我们不难发现\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\\\\n\\equiv&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\\\\n\\equiv&\\sum\\limits_{i=1}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}-\\sum\\limits_{i=1}^{A-1}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\n\\pmod{998244353}\n\\end{aligned}$$\n\n因此，我们只需要关注下式的值\n\n$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\pmod{998244353}$$\n\n我们可以参考一下[这道题](https://www.luogu.org/problemnew/show/P3708)\n\n在这道题中，我们定义了\n\n$$f(x)=\\sum\\limits_{i=1}^{n}x\\%i$$\n\n首先，如果不考虑$x\\%i=0$的情况，我们有\n\n$$x\\%i=(x-1)\\%i+1$$\n\n$$f(x)=f(x-1)+n$$\n\n如果$x\\%i=0$，我们需要从$f(x)$中减去$i$，而所有满足该条件的$i$的和就是$x$的约数和，因此\n\n$$f(x)=f(x-1)+n-\\sigma(x)$$\n\n我们可以类似地定义\n\n$$g(x)=\\sum\\limits_{i=1}^{n}x\\%i\\times i^{-1}\\pmod{998244353}$$\n\n$$h(x)=\\sum\\limits_{i\\mid x}i\\times i^{-1}\\equiv\\sum\\limits_{i\\mid x}1\\equiv d(x)\\pmod{998244353}$$\n\n从而我们有\n\n$$g(x)\\equiv g(x-1)+\\sum\\limits_{i=1}^{n}i^{-1}-d(x)\\pmod{998244353}$$\n\n然而我们需要的是\n\n$$\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}$$\n\n其中\n\n$$ans(x)=\\sum\\limits_{i=1}^{x}x\\%i\\times i^{-1}\\pmod{998244353}$$\n\n不难发现当$i<j$时$i\\%j=i$，从而\n\n$$\\begin{aligned}\n&g(x)-ans(x)\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\%i\\times i^{-1}\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\times i^{-1}\n\\pmod{998244353}\n\\end{aligned}$$\n\n最终，我们得到\n\n$$ans(x)\\equiv g(x)-x\\sum\\limits_{i=x+1}^{n}i^{-1}$$\n\n$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\equiv\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}$$\n\n把上面这一坨东西预处理出来，我们就可以$O(1)$地处理所有询问了。\n","source":"_posts/2018-10-04-luogu-p4900-solution.md","raw":"---\ntitle: 「Luogu-P4900」食堂\ndate: 2018-10-04 12:11:18\ntags:\n  - 洛谷\n  - 数论\ncategories:\n  - 题解\nmathjax: true\n---\n[传送门](https://www.luogu.org/problemnew/show/P4900)\n\n<!-- more -->\n\n~~闲着没事写篇题解（~~\n\n简单来说，就是要求\n\n$$\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\pmod{998244353}$$\n\n其中$\\lbrace x\\rbrace$表示取$x$的小数部分。\n\n稍加思索，我们不难发现\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\\\\n\\equiv&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\\\\n\\equiv&\\sum\\limits_{i=1}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}-\\sum\\limits_{i=1}^{A-1}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\n\\pmod{998244353}\n\\end{aligned}$$\n\n因此，我们只需要关注下式的值\n\n$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\pmod{998244353}$$\n\n我们可以参考一下[这道题](https://www.luogu.org/problemnew/show/P3708)\n\n在这道题中，我们定义了\n\n$$f(x)=\\sum\\limits_{i=1}^{n}x\\%i$$\n\n首先，如果不考虑$x\\%i=0$的情况，我们有\n\n$$x\\%i=(x-1)\\%i+1$$\n\n$$f(x)=f(x-1)+n$$\n\n如果$x\\%i=0$，我们需要从$f(x)$中减去$i$，而所有满足该条件的$i$的和就是$x$的约数和，因此\n\n$$f(x)=f(x-1)+n-\\sigma(x)$$\n\n我们可以类似地定义\n\n$$g(x)=\\sum\\limits_{i=1}^{n}x\\%i\\times i^{-1}\\pmod{998244353}$$\n\n$$h(x)=\\sum\\limits_{i\\mid x}i\\times i^{-1}\\equiv\\sum\\limits_{i\\mid x}1\\equiv d(x)\\pmod{998244353}$$\n\n从而我们有\n\n$$g(x)\\equiv g(x-1)+\\sum\\limits_{i=1}^{n}i^{-1}-d(x)\\pmod{998244353}$$\n\n然而我们需要的是\n\n$$\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}$$\n\n其中\n\n$$ans(x)=\\sum\\limits_{i=1}^{x}x\\%i\\times i^{-1}\\pmod{998244353}$$\n\n不难发现当$i<j$时$i\\%j=i$，从而\n\n$$\\begin{aligned}\n&g(x)-ans(x)\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\%i\\times i^{-1}\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\times i^{-1}\n\\pmod{998244353}\n\\end{aligned}$$\n\n最终，我们得到\n\n$$ans(x)\\equiv g(x)-x\\sum\\limits_{i=x+1}^{n}i^{-1}$$\n\n$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\equiv\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}$$\n\n把上面这一坨东西预处理出来，我们就可以$O(1)$地处理所有询问了。\n","slug":"luogu-p4900-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzo0003mku95fjab57d","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P4900\">传送门</a></p>\n<a id=\"more\"></a>\n<p><del>闲着没事写篇题解（</del></p>\n<p>简单来说，就是要求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\pmod{998244353}</script><p>其中$\\lbrace x\\rbrace$表示取$x$的小数部分。</p>\n<p>稍加思索，我们不难发现</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\\\\n\\equiv&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\\\\n\\equiv&\\sum\\limits_{i=1}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}-\\sum\\limits_{i=1}^{A-1}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\n\\pmod{998244353}\n\\end{aligned}</script><p>因此，我们只需要关注下式的值</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\pmod{998244353}</script><p>我们可以参考一下<a href=\"https://www.luogu.org/problemnew/show/P3708\">这道题</a></p>\n<p>在这道题中，我们定义了</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum\\limits_{i=1}^{n}x\\%i</script><p>首先，如果不考虑$x\\%i=0$的情况，我们有</p>\n<script type=\"math/tex; mode=display\">x\\%i=(x-1)\\%i+1</script><script type=\"math/tex; mode=display\">f(x)=f(x-1)+n</script><p>如果$x\\%i=0$，我们需要从$f(x)$中减去$i$，而所有满足该条件的$i$的和就是$x$的约数和，因此</p>\n<script type=\"math/tex; mode=display\">f(x)=f(x-1)+n-\\sigma(x)</script><p>我们可以类似地定义</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=1}^{n}x\\%i\\times i^{-1}\\pmod{998244353}</script><script type=\"math/tex; mode=display\">h(x)=\\sum\\limits_{i\\mid x}i\\times i^{-1}\\equiv\\sum\\limits_{i\\mid x}1\\equiv d(x)\\pmod{998244353}</script><p>从而我们有</p>\n<script type=\"math/tex; mode=display\">g(x)\\equiv g(x-1)+\\sum\\limits_{i=1}^{n}i^{-1}-d(x)\\pmod{998244353}</script><p>然而我们需要的是</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">ans(x)=\\sum\\limits_{i=1}^{x}x\\%i\\times i^{-1}\\pmod{998244353}</script><p>不难发现当$i&lt;j$时$i\\%j=i$，从而</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&g(x)-ans(x)\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\%i\\times i^{-1}\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\times i^{-1}\n\\pmod{998244353}\n\\end{aligned}</script><p>最终，我们得到</p>\n<script type=\"math/tex; mode=display\">ans(x)\\equiv g(x)-x\\sum\\limits_{i=x+1}^{n}i^{-1}</script><script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\equiv\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}</script><p>把上面这一坨东西预处理出来，我们就可以$O(1)$地处理所有询问了。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P4900\">传送门</a></p>","more":"<p><del>闲着没事写篇题解（</del></p>\n<p>简单来说，就是要求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\pmod{998244353}</script><p>其中$\\lbrace x\\rbrace$表示取$x$的小数部分。</p>\n<p>稍加思索，我们不难发现</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}\\lbrace\\frac{i}{j}\\rbrace\\\\\n\\equiv&\\sum\\limits_{i=A}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\\\\n\\equiv&\\sum\\limits_{i=1}^{B}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}-\\sum\\limits_{i=1}^{A-1}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\n\\pmod{998244353}\n\\end{aligned}</script><p>因此，我们只需要关注下式的值</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\pmod{998244353}</script><p>我们可以参考一下<a href=\"https://www.luogu.org/problemnew/show/P3708\">这道题</a></p>\n<p>在这道题中，我们定义了</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum\\limits_{i=1}^{n}x\\%i</script><p>首先，如果不考虑$x\\%i=0$的情况，我们有</p>\n<script type=\"math/tex; mode=display\">x\\%i=(x-1)\\%i+1</script><script type=\"math/tex; mode=display\">f(x)=f(x-1)+n</script><p>如果$x\\%i=0$，我们需要从$f(x)$中减去$i$，而所有满足该条件的$i$的和就是$x$的约数和，因此</p>\n<script type=\"math/tex; mode=display\">f(x)=f(x-1)+n-\\sigma(x)</script><p>我们可以类似地定义</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=1}^{n}x\\%i\\times i^{-1}\\pmod{998244353}</script><script type=\"math/tex; mode=display\">h(x)=\\sum\\limits_{i\\mid x}i\\times i^{-1}\\equiv\\sum\\limits_{i\\mid x}1\\equiv d(x)\\pmod{998244353}</script><p>从而我们有</p>\n<script type=\"math/tex; mode=display\">g(x)\\equiv g(x-1)+\\sum\\limits_{i=1}^{n}i^{-1}-d(x)\\pmod{998244353}</script><p>然而我们需要的是</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">ans(x)=\\sum\\limits_{i=1}^{x}x\\%i\\times i^{-1}\\pmod{998244353}</script><p>不难发现当$i&lt;j$时$i\\%j=i$，从而</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&g(x)-ans(x)\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\%i\\times i^{-1}\\\\\n\\equiv&\\sum\\limits_{i=x+1}^{n}x\\times i^{-1}\n\\pmod{998244353}\n\\end{aligned}</script><p>最终，我们得到</p>\n<script type=\"math/tex; mode=display\">ans(x)\\equiv g(x)-x\\sum\\limits_{i=x+1}^{n}i^{-1}</script><script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{i}i\\%j\\times j^{-1}\\equiv\\sum\\limits_{i=1}^{n}ans(i)\\pmod{998244353}</script><p>把上面这一坨东西预处理出来，我们就可以$O(1)$地处理所有询问了。</p>"},{"title":"「Luogu-T47720」孤立元","date":"2018-09-27T06:29:56.000Z","mathjax":true,"_content":"[传送门](https://www.luogu.org/problemnew/show/T47720)\n\n<!-- more -->\n\n自己出的第一道~~毒瘤~~数论题。\n\n对于每一个$i(1<i<n)$，如果它成为了孤立元，那么一定有$i-1\\notin B$且$i+1\\notin B$，而其他$n-3$个数无论怎样都无法阻止$i$对所有孤立元的和产生贡献，此时，其他$n-3$个数中有且仅有$m-1$个属于$B$，其总方案数为$C_{n-3}^{m-1}$。而对于$1$和$n$来说，它们只有$1$个相邻的元素，因此方案数为$C_{n-2}^{m-1}$。本题答案即为\n\n$$\\frac{\\sum_{i=2}^{n-1}iC_{n-3}^{m-1}+(n+1)C_{n-2}^{m-1}}{C_{n}^{m}}$$\n\n将这个式子进行一系列惨无人道的化简与整理后，我们得到如下形式\n\n$$\\frac{m(n+1)(n-m)(n-m-1)}{2n(n-1)}+\\frac{m(n+1)(n-m)}{n(n-1)}$$\n\n> Updated on 2018-10-10\n>\n> 之前公式写错了，分子上的$m$全都漏掉了（\n>\n> 以及，我们还可以将上式继续整理：\n>\n> $$\\frac{m(n+1)(n-m)(n-m+1)}{2n(n-1)}$$\n>\n> ~~以及，顺便测试了一下新的快读板子，然后发现`#ifdef`真没用也可能是我太菜了（~~\n>\n> > Updated on 2018-10-16\n> >\n> > 好吧我当时并不会用`#ifdef`（\n>\n> 以及，标程经过一系列~~丧心病狂的~~卡常卡到了$1861\\text{ms}$，最慢的一个点只跑了$300\\text{ms}$不到。截至本日，另外两个切掉这道题的$\\text{dalao}$最慢的一个点也只跑了$400\\text{ms}$上下。我要不要考虑加强一波数据或者缩一波时限呢？~~所以说为什么我当初在本地测的时候平均每个点$500\\text{ms}$，是我们机房的电脑太菜了吗（~~\n\n于是做法就有了，先$O(n)$预处理一遍，然后单次询问即可$O(1)$解决。\n\n但是常数好像会很大，我原计划是要将数据范围开到$10^{7}$级别的，然而自己写的标程都跑不过，于是只能一路削到现在的$10^{6}$……\n","source":"_posts/2018-09-27-luogu-t47720-solution.md","raw":"---\ntitle: 「Luogu-T47720」孤立元\ndate: 2018-09-27 14:29:56\ntags:\n  - 数论\n  - 组合数学\n  - 期望\ncategories:\n  - 题解\nmathjax: true\n---\n[传送门](https://www.luogu.org/problemnew/show/T47720)\n\n<!-- more -->\n\n自己出的第一道~~毒瘤~~数论题。\n\n对于每一个$i(1<i<n)$，如果它成为了孤立元，那么一定有$i-1\\notin B$且$i+1\\notin B$，而其他$n-3$个数无论怎样都无法阻止$i$对所有孤立元的和产生贡献，此时，其他$n-3$个数中有且仅有$m-1$个属于$B$，其总方案数为$C_{n-3}^{m-1}$。而对于$1$和$n$来说，它们只有$1$个相邻的元素，因此方案数为$C_{n-2}^{m-1}$。本题答案即为\n\n$$\\frac{\\sum_{i=2}^{n-1}iC_{n-3}^{m-1}+(n+1)C_{n-2}^{m-1}}{C_{n}^{m}}$$\n\n将这个式子进行一系列惨无人道的化简与整理后，我们得到如下形式\n\n$$\\frac{m(n+1)(n-m)(n-m-1)}{2n(n-1)}+\\frac{m(n+1)(n-m)}{n(n-1)}$$\n\n> Updated on 2018-10-10\n>\n> 之前公式写错了，分子上的$m$全都漏掉了（\n>\n> 以及，我们还可以将上式继续整理：\n>\n> $$\\frac{m(n+1)(n-m)(n-m+1)}{2n(n-1)}$$\n>\n> ~~以及，顺便测试了一下新的快读板子，然后发现`#ifdef`真没用也可能是我太菜了（~~\n>\n> > Updated on 2018-10-16\n> >\n> > 好吧我当时并不会用`#ifdef`（\n>\n> 以及，标程经过一系列~~丧心病狂的~~卡常卡到了$1861\\text{ms}$，最慢的一个点只跑了$300\\text{ms}$不到。截至本日，另外两个切掉这道题的$\\text{dalao}$最慢的一个点也只跑了$400\\text{ms}$上下。我要不要考虑加强一波数据或者缩一波时限呢？~~所以说为什么我当初在本地测的时候平均每个点$500\\text{ms}$，是我们机房的电脑太菜了吗（~~\n\n于是做法就有了，先$O(n)$预处理一遍，然后单次询问即可$O(1)$解决。\n\n但是常数好像会很大，我原计划是要将数据范围开到$10^{7}$级别的，然而自己写的标程都跑不过，于是只能一路削到现在的$10^{6}$……\n","slug":"luogu-t47720-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzr0006mku9dzhlgpbe","content":"<p><a href=\"https://www.luogu.org/problemnew/show/T47720\">传送门</a></p>\n<a id=\"more\"></a>\n<p>自己出的第一道<del>毒瘤</del>数论题。</p>\n<p>对于每一个$i(1&lt;i&lt;n)$，如果它成为了孤立元，那么一定有$i-1\\notin B$且$i+1\\notin B$，而其他$n-3$个数无论怎样都无法阻止$i$对所有孤立元的和产生贡献，此时，其他$n-3$个数中有且仅有$m-1$个属于$B$，其总方案数为$C_{n-3}^{m-1}$。而对于$1$和$n$来说，它们只有$1$个相邻的元素，因此方案数为$C_{n-2}^{m-1}$。本题答案即为</p>\n<script type=\"math/tex; mode=display\">\\frac{\\sum_{i=2}^{n-1}iC_{n-3}^{m-1}+(n+1)C_{n-2}^{m-1}}{C_{n}^{m}}</script><p>将这个式子进行一系列惨无人道的化简与整理后，我们得到如下形式</p>\n<script type=\"math/tex; mode=display\">\\frac{m(n+1)(n-m)(n-m-1)}{2n(n-1)}+\\frac{m(n+1)(n-m)}{n(n-1)}</script><blockquote>\n<p>Updated on 2018-10-10</p>\n<p>之前公式写错了，分子上的$m$全都漏掉了（</p>\n<p>以及，我们还可以将上式继续整理：</p>\n<script type=\"math/tex; mode=display\">\\frac{m(n+1)(n-m)(n-m+1)}{2n(n-1)}</script><p><del>以及，顺便测试了一下新的快读板子，然后发现<code>#ifdef</code>真没用也可能是我太菜了（</del></p>\n<blockquote>\n<p>Updated on 2018-10-16</p>\n<p>好吧我当时并不会用<code>#ifdef</code>（</p>\n</blockquote>\n<p>以及，标程经过一系列<del>丧心病狂的</del>卡常卡到了$1861\\text{ms}$，最慢的一个点只跑了$300\\text{ms}$不到。截至本日，另外两个切掉这道题的$\\text{dalao}$最慢的一个点也只跑了$400\\text{ms}$上下。我要不要考虑加强一波数据或者缩一波时限呢？<del>所以说为什么我当初在本地测的时候平均每个点$500\\text{ms}$，是我们机房的电脑太菜了吗（</del></p>\n</blockquote>\n<p>于是做法就有了，先$O(n)$预处理一遍，然后单次询问即可$O(1)$解决。</p>\n<p>但是常数好像会很大，我原计划是要将数据范围开到$10^{7}$级别的，然而自己写的标程都跑不过，于是只能一路削到现在的$10^{6}$……</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/T47720\">传送门</a></p>","more":"<p>自己出的第一道<del>毒瘤</del>数论题。</p>\n<p>对于每一个$i(1&lt;i&lt;n)$，如果它成为了孤立元，那么一定有$i-1\\notin B$且$i+1\\notin B$，而其他$n-3$个数无论怎样都无法阻止$i$对所有孤立元的和产生贡献，此时，其他$n-3$个数中有且仅有$m-1$个属于$B$，其总方案数为$C_{n-3}^{m-1}$。而对于$1$和$n$来说，它们只有$1$个相邻的元素，因此方案数为$C_{n-2}^{m-1}$。本题答案即为</p>\n<script type=\"math/tex; mode=display\">\\frac{\\sum_{i=2}^{n-1}iC_{n-3}^{m-1}+(n+1)C_{n-2}^{m-1}}{C_{n}^{m}}</script><p>将这个式子进行一系列惨无人道的化简与整理后，我们得到如下形式</p>\n<script type=\"math/tex; mode=display\">\\frac{m(n+1)(n-m)(n-m-1)}{2n(n-1)}+\\frac{m(n+1)(n-m)}{n(n-1)}</script><blockquote>\n<p>Updated on 2018-10-10</p>\n<p>之前公式写错了，分子上的$m$全都漏掉了（</p>\n<p>以及，我们还可以将上式继续整理：</p>\n<script type=\"math/tex; mode=display\">\\frac{m(n+1)(n-m)(n-m+1)}{2n(n-1)}</script><p><del>以及，顺便测试了一下新的快读板子，然后发现<code>#ifdef</code>真没用也可能是我太菜了（</del></p>\n<blockquote>\n<p>Updated on 2018-10-16</p>\n<p>好吧我当时并不会用<code>#ifdef</code>（</p>\n</blockquote>\n<p>以及，标程经过一系列<del>丧心病狂的</del>卡常卡到了$1861\\text{ms}$，最慢的一个点只跑了$300\\text{ms}$不到。截至本日，另外两个切掉这道题的$\\text{dalao}$最慢的一个点也只跑了$400\\text{ms}$上下。我要不要考虑加强一波数据或者缩一波时限呢？<del>所以说为什么我当初在本地测的时候平均每个点$500\\text{ms}$，是我们机房的电脑太菜了吗（</del></p>\n</blockquote>\n<p>于是做法就有了，先$O(n)$预处理一遍，然后单次询问即可$O(1)$解决。</p>\n<p>但是常数好像会很大，我原计划是要将数据范围开到$10^{7}$级别的，然而自己写的标程都跑不过，于是只能一路削到现在的$10^{6}$……</p>"},{"title":"「SDOI2009」虔诚的墓主人","date":"2018-10-12T03:28:50.000Z","mathjax":true,"_content":"[传送门](https://www.luogu.org/problemnew/show/P2154)\n\n<!-- more -->\n\n几个月前某学姐给我推荐的~~毒瘤~~题之一。然而我直到现在也只切掉两道~~，我真是太菜了~~。\n\n首先，为了方便，我们将题目中所给的坐标系顺时针旋转一下，令正下为$x$轴正方向。我们先考虑单独一块墓地的虔诚度的计算。设其往左数有$L$棵常青树，往右数有$R$棵常青树，往上数有$U$棵常青树，往下数有$D$棵常青树，其虔诚度就是\n\n$$C_{L}^{k}C_{R}^{k}C_{U}^{k}C_{D}^{k}$$\n\n考虑到墓地不能和常青树重合，又有$k\\geqslant 1$，虔诚度为正的，也就是会对答案产生有效贡献的墓地，一定是在某几棵常青树之间。我们在读入时就可以统计出第$x$行，第$y$列上有多少棵常青树，分别记为$sumx[x]$，$sumy[y]$。然后我们令$x$坐标为第一关键字，$y$坐标为第二关键字，将所有常青树按坐标从小到大排序，然后按顺序遍历一遍。假设我们遍历到了第$i$棵常青树，记$cntx[x]$为前$i-1$棵常青树中第$x$行上有多少棵常青树，$cnty[y]$为前$i-1$棵常青树中第$y$列上有多少棵常青树，当前常青树坐标为$(x[i],y[i])$。如果$x[i]=x[i-1]$，则第$i$棵常青树与第$i-1$棵常青树之间就有可能有虔诚度为正的墓地。具体地，它们的虔诚度之和为\n\n$$C_{cntx[x[i]]}^{k}C_{sumx[x[i]]-cntx[x[i]]}^{k}(\\sum\\limits_{i=y[i-1]+1}^{y[i]-1}C_{cnty[i]}^{k}C_{sumy[i]-cnty[i]}^{k})$$\n\n怎么快速地查询与修改后面那个$\\Sigma$所涉及到的值？树状数组啊~~当然如果您非要写些乱七八糟的数据结构也没人拦着您~~。\n\n坐标范围很大，因此我们需要离散化。而且很明显地，没有常青树的行与列是不需要考虑的。\n\n```cpp\n#include<cstdio>\n\nstruct NOIp{\n    unsigned long long RP,score;\n};\nNOIp NOIp2018;\n\nint main(){\n    for(;;){\n        NOIp2018.RP++;\n        NOIp2018.score++;\n    }\n    return 0;\n}\n```\n\n以及，明天就是NOIp初赛了，在那之后三周就是复赛，我还不想退役啊~~但是我实在是太菜了~~qaq。\n","source":"_posts/2018-10-12-luogu-p2154-solution.md","raw":"---\ntitle: 「SDOI2009」虔诚的墓主人\ndate: 2018-10-12 11:28:50\ntags:\n  - SDOI\n  - 2009\n  - 离散化\n  - 树状数组\n  - 组合数学\ncategories:\n  - 题解\nmathjax: true\n---\n[传送门](https://www.luogu.org/problemnew/show/P2154)\n\n<!-- more -->\n\n几个月前某学姐给我推荐的~~毒瘤~~题之一。然而我直到现在也只切掉两道~~，我真是太菜了~~。\n\n首先，为了方便，我们将题目中所给的坐标系顺时针旋转一下，令正下为$x$轴正方向。我们先考虑单独一块墓地的虔诚度的计算。设其往左数有$L$棵常青树，往右数有$R$棵常青树，往上数有$U$棵常青树，往下数有$D$棵常青树，其虔诚度就是\n\n$$C_{L}^{k}C_{R}^{k}C_{U}^{k}C_{D}^{k}$$\n\n考虑到墓地不能和常青树重合，又有$k\\geqslant 1$，虔诚度为正的，也就是会对答案产生有效贡献的墓地，一定是在某几棵常青树之间。我们在读入时就可以统计出第$x$行，第$y$列上有多少棵常青树，分别记为$sumx[x]$，$sumy[y]$。然后我们令$x$坐标为第一关键字，$y$坐标为第二关键字，将所有常青树按坐标从小到大排序，然后按顺序遍历一遍。假设我们遍历到了第$i$棵常青树，记$cntx[x]$为前$i-1$棵常青树中第$x$行上有多少棵常青树，$cnty[y]$为前$i-1$棵常青树中第$y$列上有多少棵常青树，当前常青树坐标为$(x[i],y[i])$。如果$x[i]=x[i-1]$，则第$i$棵常青树与第$i-1$棵常青树之间就有可能有虔诚度为正的墓地。具体地，它们的虔诚度之和为\n\n$$C_{cntx[x[i]]}^{k}C_{sumx[x[i]]-cntx[x[i]]}^{k}(\\sum\\limits_{i=y[i-1]+1}^{y[i]-1}C_{cnty[i]}^{k}C_{sumy[i]-cnty[i]}^{k})$$\n\n怎么快速地查询与修改后面那个$\\Sigma$所涉及到的值？树状数组啊~~当然如果您非要写些乱七八糟的数据结构也没人拦着您~~。\n\n坐标范围很大，因此我们需要离散化。而且很明显地，没有常青树的行与列是不需要考虑的。\n\n```cpp\n#include<cstdio>\n\nstruct NOIp{\n    unsigned long long RP,score;\n};\nNOIp NOIp2018;\n\nint main(){\n    for(;;){\n        NOIp2018.RP++;\n        NOIp2018.score++;\n    }\n    return 0;\n}\n```\n\n以及，明天就是NOIp初赛了，在那之后三周就是复赛，我还不想退役啊~~但是我实在是太菜了~~qaq。\n","slug":"luogu-p2154-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzs0007mku9frp32d06","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P2154\">传送门</a></p>\n<a id=\"more\"></a>\n<p>几个月前某学姐给我推荐的<del>毒瘤</del>题之一。然而我直到现在也只切掉两道<del>，我真是太菜了</del>。</p>\n<p>首先，为了方便，我们将题目中所给的坐标系顺时针旋转一下，令正下为$x$轴正方向。我们先考虑单独一块墓地的虔诚度的计算。设其往左数有$L$棵常青树，往右数有$R$棵常青树，往上数有$U$棵常青树，往下数有$D$棵常青树，其虔诚度就是</p>\n<script type=\"math/tex; mode=display\">C_{L}^{k}C_{R}^{k}C_{U}^{k}C_{D}^{k}</script><p>考虑到墓地不能和常青树重合，又有$k\\geqslant 1$，虔诚度为正的，也就是会对答案产生有效贡献的墓地，一定是在某几棵常青树之间。我们在读入时就可以统计出第$x$行，第$y$列上有多少棵常青树，分别记为$sumx[x]$，$sumy[y]$。然后我们令$x$坐标为第一关键字，$y$坐标为第二关键字，将所有常青树按坐标从小到大排序，然后按顺序遍历一遍。假设我们遍历到了第$i$棵常青树，记$cntx[x]$为前$i-1$棵常青树中第$x$行上有多少棵常青树，$cnty[y]$为前$i-1$棵常青树中第$y$列上有多少棵常青树，当前常青树坐标为$(x[i],y[i])$。如果$x[i]=x[i-1]$，则第$i$棵常青树与第$i-1$棵常青树之间就有可能有虔诚度为正的墓地。具体地，它们的虔诚度之和为</p>\n<script type=\"math/tex; mode=display\">C_{cntx[x[i]]}^{k}C_{sumx[x[i]]-cntx[x[i]]}^{k}(\\sum\\limits_{i=y[i-1]+1}^{y[i]-1}C_{cnty[i]}^{k}C_{sumy[i]-cnty[i]}^{k})</script><p>怎么快速地查询与修改后面那个$\\Sigma$所涉及到的值？树状数组啊<del>当然如果您非要写些乱七八糟的数据结构也没人拦着您</del>。</p>\n<p>坐标范围很大，因此我们需要离散化。而且很明显地，没有常青树的行与列是不需要考虑的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NOIp</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> RP,score;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">NOIp NOIp2018;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;;)&#123;</span><br><span class=\"line\">        NOIp2018.RP++;</span><br><span class=\"line\">        NOIp2018.score++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以及，明天就是NOIp初赛了，在那之后三周就是复赛，我还不想退役啊<del>但是我实在是太菜了</del>qaq。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P2154\">传送门</a></p>","more":"<p>几个月前某学姐给我推荐的<del>毒瘤</del>题之一。然而我直到现在也只切掉两道<del>，我真是太菜了</del>。</p>\n<p>首先，为了方便，我们将题目中所给的坐标系顺时针旋转一下，令正下为$x$轴正方向。我们先考虑单独一块墓地的虔诚度的计算。设其往左数有$L$棵常青树，往右数有$R$棵常青树，往上数有$U$棵常青树，往下数有$D$棵常青树，其虔诚度就是</p>\n<script type=\"math/tex; mode=display\">C_{L}^{k}C_{R}^{k}C_{U}^{k}C_{D}^{k}</script><p>考虑到墓地不能和常青树重合，又有$k\\geqslant 1$，虔诚度为正的，也就是会对答案产生有效贡献的墓地，一定是在某几棵常青树之间。我们在读入时就可以统计出第$x$行，第$y$列上有多少棵常青树，分别记为$sumx[x]$，$sumy[y]$。然后我们令$x$坐标为第一关键字，$y$坐标为第二关键字，将所有常青树按坐标从小到大排序，然后按顺序遍历一遍。假设我们遍历到了第$i$棵常青树，记$cntx[x]$为前$i-1$棵常青树中第$x$行上有多少棵常青树，$cnty[y]$为前$i-1$棵常青树中第$y$列上有多少棵常青树，当前常青树坐标为$(x[i],y[i])$。如果$x[i]=x[i-1]$，则第$i$棵常青树与第$i-1$棵常青树之间就有可能有虔诚度为正的墓地。具体地，它们的虔诚度之和为</p>\n<script type=\"math/tex; mode=display\">C_{cntx[x[i]]}^{k}C_{sumx[x[i]]-cntx[x[i]]}^{k}(\\sum\\limits_{i=y[i-1]+1}^{y[i]-1}C_{cnty[i]}^{k}C_{sumy[i]-cnty[i]}^{k})</script><p>怎么快速地查询与修改后面那个$\\Sigma$所涉及到的值？树状数组啊<del>当然如果您非要写些乱七八糟的数据结构也没人拦着您</del>。</p>\n<p>坐标范围很大，因此我们需要离散化。而且很明显地，没有常青树的行与列是不需要考虑的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NOIp</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> RP,score;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">NOIp NOIp2018;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;;)&#123;</span><br><span class=\"line\">        NOIp2018.RP++;</span><br><span class=\"line\">        NOIp2018.score++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以及，明天就是NOIp初赛了，在那之后三周就是复赛，我还不想退役啊<del>但是我实在是太菜了</del>qaq。</p>"},{"title":"「Luogu-P3924」康娜的线段树","date":"2018-09-29T08:20:16.000Z","mathjax":true,"_content":"[传送门](https://www.luogu.org/problemnew/show/P3924)\n\n<!-- more -->\n\n读完题目以后，首先一种简单的想法就是建一颗线段树然后模拟，每个节点维护它所管理的区间内所有数的和以及他自身被访问的概率，以及它和它的子树内所有节点的前两个属性的乘积之和。然后你再一看数据范围：\n\n> 对于$70\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{5}$。\n>\n> 对于$100\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{6}$。\n\n~~也就是说，上述做法__最多__只能拿$70$分。为什么说「最多」呢？因为这道题在中间运算过程中需要使用浮点数，而浮点数是自带大常数的，如果你的程序写得再丑一点常数再大一点，说不定$70$分都拿不到了。~~\n\n> Updated on 2018-10-09\n>\n> 不好意思时间复杂度算错了我太菜了。\n>\n> 但反正线段树需要卡常才能过（\n\n我们来想办法优化。考虑到，对于线段树的每一个非叶子节点，它所维护的区间和也只是原序列中某一段数字的和，如果我们能把这些节点被访问的概率下推到它的每一个叶子节点，也许就能达到优化的目的。\n\n定义$E_i$为叶子节点$[i,i]$对答案的贡献，$c_i$为其所有祖先节点被访问的概率之和，不难发现$c_ia_i=E_i$。我们只要预处理出$c_i$，计算出$\\prod_{i=1}^{n}c_ia_i$，然后处理出$c_i$的前缀和，每次操作直接查询操作区间内$c_i$的和，再乘以他给的那个数，累加到答案上就可以了。\n\n稍加分析，我们不难得出如下结论。设根节点深度为$0$，则任意一个节点，就比如说$x$，被访问的概率为$2^{-dep[x]}$，其中$dep[x]$表示$x$的深度。而对于$x$子树内的每一个叶子节点$[i,i]$，我们执行一次$c_i+=2^{-dep[x]}$即可。我们可以用一次类似于树形DP的DFS来完成这一过程。需要注意的是，我们肯定不能暴力枚举所有叶子节点，在DFS时，我们实际上修改的是$c$数组的差分数组，DFS结束后再还原出$c$数组即可。\n\n以及，最后一句话。\n\n这道题卡精度。\n","source":"_posts/2018-09-29-luogu-p3924-solution.md","raw":"---\ntitle: 「Luogu-P3924」康娜的线段树\ndate: 2018-09-29 16:20:16\ntags:\n  - 洛谷\n  - 差分\ncategories:\n  - 题解\nmathjax: true\n---\n[传送门](https://www.luogu.org/problemnew/show/P3924)\n\n<!-- more -->\n\n读完题目以后，首先一种简单的想法就是建一颗线段树然后模拟，每个节点维护它所管理的区间内所有数的和以及他自身被访问的概率，以及它和它的子树内所有节点的前两个属性的乘积之和。然后你再一看数据范围：\n\n> 对于$70\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{5}$。\n>\n> 对于$100\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{6}$。\n\n~~也就是说，上述做法__最多__只能拿$70$分。为什么说「最多」呢？因为这道题在中间运算过程中需要使用浮点数，而浮点数是自带大常数的，如果你的程序写得再丑一点常数再大一点，说不定$70$分都拿不到了。~~\n\n> Updated on 2018-10-09\n>\n> 不好意思时间复杂度算错了我太菜了。\n>\n> 但反正线段树需要卡常才能过（\n\n我们来想办法优化。考虑到，对于线段树的每一个非叶子节点，它所维护的区间和也只是原序列中某一段数字的和，如果我们能把这些节点被访问的概率下推到它的每一个叶子节点，也许就能达到优化的目的。\n\n定义$E_i$为叶子节点$[i,i]$对答案的贡献，$c_i$为其所有祖先节点被访问的概率之和，不难发现$c_ia_i=E_i$。我们只要预处理出$c_i$，计算出$\\prod_{i=1}^{n}c_ia_i$，然后处理出$c_i$的前缀和，每次操作直接查询操作区间内$c_i$的和，再乘以他给的那个数，累加到答案上就可以了。\n\n稍加分析，我们不难得出如下结论。设根节点深度为$0$，则任意一个节点，就比如说$x$，被访问的概率为$2^{-dep[x]}$，其中$dep[x]$表示$x$的深度。而对于$x$子树内的每一个叶子节点$[i,i]$，我们执行一次$c_i+=2^{-dep[x]}$即可。我们可以用一次类似于树形DP的DFS来完成这一过程。需要注意的是，我们肯定不能暴力枚举所有叶子节点，在DFS时，我们实际上修改的是$c$数组的差分数组，DFS结束后再还原出$c$数组即可。\n\n以及，最后一句话。\n\n这道题卡精度。\n","slug":"luogu-p3924-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzt0008mku9fbcbbgxn","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P3924\">传送门</a></p>\n<a id=\"more\"></a>\n<p>读完题目以后，首先一种简单的想法就是建一颗线段树然后模拟，每个节点维护它所管理的区间内所有数的和以及他自身被访问的概率，以及它和它的子树内所有节点的前两个属性的乘积之和。然后你再一看数据范围：</p>\n<blockquote>\n<p>对于$70\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{5}$。</p>\n<p>对于$100\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{6}$。</p>\n</blockquote>\n<p><del>也就是说，上述做法<strong>最多</strong>只能拿$70$分。为什么说「最多」呢？因为这道题在中间运算过程中需要使用浮点数，而浮点数是自带大常数的，如果你的程序写得再丑一点常数再大一点，说不定$70$分都拿不到了。</del></p>\n<blockquote>\n<p>Updated on 2018-10-09</p>\n<p>不好意思时间复杂度算错了我太菜了。</p>\n<p>但反正线段树需要卡常才能过（</p>\n</blockquote>\n<p>我们来想办法优化。考虑到，对于线段树的每一个非叶子节点，它所维护的区间和也只是原序列中某一段数字的和，如果我们能把这些节点被访问的概率下推到它的每一个叶子节点，也许就能达到优化的目的。</p>\n<p>定义$E_i$为叶子节点$[i,i]$对答案的贡献，$c_i$为其所有祖先节点被访问的概率之和，不难发现$c_ia_i=E_i$。我们只要预处理出$c_i$，计算出$\\prod_{i=1}^{n}c_ia_i$，然后处理出$c_i$的前缀和，每次操作直接查询操作区间内$c_i$的和，再乘以他给的那个数，累加到答案上就可以了。</p>\n<p>稍加分析，我们不难得出如下结论。设根节点深度为$0$，则任意一个节点，就比如说$x$，被访问的概率为$2^{-dep[x]}$，其中$dep[x]$表示$x$的深度。而对于$x$子树内的每一个叶子节点$[i,i]$，我们执行一次$c_i+=2^{-dep[x]}$即可。我们可以用一次类似于树形DP的DFS来完成这一过程。需要注意的是，我们肯定不能暴力枚举所有叶子节点，在DFS时，我们实际上修改的是$c$数组的差分数组，DFS结束后再还原出$c$数组即可。</p>\n<p>以及，最后一句话。</p>\n<p>这道题卡精度。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P3924\">传送门</a></p>","more":"<p>读完题目以后，首先一种简单的想法就是建一颗线段树然后模拟，每个节点维护它所管理的区间内所有数的和以及他自身被访问的概率，以及它和它的子树内所有节点的前两个属性的乘积之和。然后你再一看数据范围：</p>\n<blockquote>\n<p>对于$70\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{5}$。</p>\n<p>对于$100\\%$的数据，保证$1\\leqslant n,m\\leqslant 10^{6}$。</p>\n</blockquote>\n<p><del>也就是说，上述做法<strong>最多</strong>只能拿$70$分。为什么说「最多」呢？因为这道题在中间运算过程中需要使用浮点数，而浮点数是自带大常数的，如果你的程序写得再丑一点常数再大一点，说不定$70$分都拿不到了。</del></p>\n<blockquote>\n<p>Updated on 2018-10-09</p>\n<p>不好意思时间复杂度算错了我太菜了。</p>\n<p>但反正线段树需要卡常才能过（</p>\n</blockquote>\n<p>我们来想办法优化。考虑到，对于线段树的每一个非叶子节点，它所维护的区间和也只是原序列中某一段数字的和，如果我们能把这些节点被访问的概率下推到它的每一个叶子节点，也许就能达到优化的目的。</p>\n<p>定义$E_i$为叶子节点$[i,i]$对答案的贡献，$c_i$为其所有祖先节点被访问的概率之和，不难发现$c_ia_i=E_i$。我们只要预处理出$c_i$，计算出$\\prod_{i=1}^{n}c_ia_i$，然后处理出$c_i$的前缀和，每次操作直接查询操作区间内$c_i$的和，再乘以他给的那个数，累加到答案上就可以了。</p>\n<p>稍加分析，我们不难得出如下结论。设根节点深度为$0$，则任意一个节点，就比如说$x$，被访问的概率为$2^{-dep[x]}$，其中$dep[x]$表示$x$的深度。而对于$x$子树内的每一个叶子节点$[i,i]$，我们执行一次$c_i+=2^{-dep[x]}$即可。我们可以用一次类似于树形DP的DFS来完成这一过程。需要注意的是，我们肯定不能暴力枚举所有叶子节点，在DFS时，我们实际上修改的是$c$数组的差分数组，DFS结束后再还原出$c$数组即可。</p>\n<p>以及，最后一句话。</p>\n<p>这道题卡精度。</p>"},{"title":"状态压缩动态规划学习笔记","date":"2018-10-24T13:24:05.000Z","mathjax":true,"_content":"~~把标签和分类连在一起读就是标题了（~~\n\n~~好像上一篇珂朵莉树学习笔记也是这样（~~\n\n~~马上就要复赛了，但反正我已经退役预定了来颓blog吧。~~\n\n<!-- more -->\n\n首先我们来看一道例题，[「USACO06NOV」玉米田Corn Fields](https://www.luogu.org/problemnew/show/P1879)。\n\n首先，我们想到定义`f[i][...]`表示当前处理到第$i$行，然后blablabla一堆状态的总方案数。既然任意两块草地之间不能有公共边，我们肯定需要记录第$i$行哪些地方种了草，哪些地方没种草。那么我们记录的状态就是……`f[i][0/1]...(省略10个[0/1])...[0/1]`，后面$12$维状态中第$j+1$维表示的是第$i$行第$j$列是否种草。\n\n但是等等……$13$维的状态……\n\n![](https://i.loli.net/2018/10/24/5bd07656b885a.jpg)\n\n注意到，后面$12$维状态只有$0$和$1$，于是我们就有了这么一个想法：把后$12$维状态看成一个$2$进制数，其中从右往左第$i$位表示当前行第$i$列是否种草，$1$表示种，$0$表示不种。在这一过程中，我们将后$12$维状态「压缩」成了一个$2$进制数，这也正是「状态压缩」这个名字的含义。\n\n于是，现在我们定义`f[i][S]`表示当前处理到第$i$行，其中第$i$行的状态是$S$的总方案数。在转移时，我们还需要判断状态是否合法，我们可以定义`a[i]`表示第$i$行哪些格子能种草，$1$表示能，$0$表示不能。`valid[S]`表示如果不考虑某些格子不能种草，状态$S$是否合法，也就是是否不存在两个相邻的$1$。`a[i]`在读入时就可以处理出来，至于`valid[S]`，我们可以通过这样的一个循环处理出来：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i)\n    valid[i]=valid[i>>1]&(~(i&(i>>1)&1));\n```\n\n用人话来讲就是`[S是否合法]=[S>>1是否合法]&[S与S>>1的最后一位是否不同为1]`。\n\n在转移时，我们认为当前枚举到的状态是合法的当且仅当它只在能种草的格子上种草，并且不与上一行的状态冲突，也就是`(S|a[i])==a[i]&&valid[S]&&(S&S')==0`。\n\n```cpp\nfor(re int i=0;i<(1<<m);++i)\n    if((i|a[1])==a[1]&&valid[i])\n        f[1][i]=1;\nfor(re int i=2;i<=n;++i)\n    for(re int j=0;j<(1<<m);++j)\n        if((j|a[i])==a[i]&&valid[j])\n            for(re int k=0;k<(1<<m);++k)\n                if((k|a[i-1])==a[i-1]&&valid[k]&&(k&j)==0)\n                    (f[i][j]+=f[i-1][k])%=mod;\n```\n\n粗略计算的话，时间复杂度差不多是$O(n4^m)$，最坏情况下差不多是$12\\times 4^{12}=201326592$，看着很吓人，然而实际上，其中大部分状态都是不合法的，会被我们的两个`if`剪掉，因而实际运行跑得比谁都快（\n\n为了更好地体会状压的复杂度的神奇之处，我们再来看一下这道题，[「NOI2001」炮兵阵地](https://www.luogu.org/problemnew/show/P2704)。\n\n因为一个炮兵部队的攻击范围能够上下扩展两行，我们在记录状态时，需要记录之前两行的状态，也就是用`f[i][S1][S2]`表示当前处理到第$i$行，第$i-1$行状态为$S1$，第$i$状态为$S2$时最多能放多少个炮兵部队。我们自然也需要记录`a[i]`和`valid[S]`，不过，这次`valid[s]`的预处理过程差不多是这样：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i){\n    valid[i]=(i&1)?valid[i>>3]&((~i)>>2)&((~i)>>1):valid[i>>1];\n```\n\n![](https://i.loli.net/2018/10/25/5bd124f4cdbb9.jpg)\n\n~~看起来~~有些~~非常~~复杂，用人话来讲就是……诶我当时是不是写错了（\n\n……不好像又没写错……\n\n好吧没写错。\n\n如果$S$的最后一位是$1$，则`[S是否合法]=[S>>3是否合法]&[S的倒数第2位和倒数第3位是否都为0]`，否则`[S是否合法]=[S>>1是否合法]`。\n\n因为我们要求的是最多能放多少个炮兵部队，我们还需要知道某个状态放了多少个炮兵部队，也就是某个状态$S$在二进制下$1$的个数，我们可以这样处理：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i)\n    cnt[i]=cnt[i>>1]+(i&1);\n```\n\n转移过程如下：\n\n```cpp\nfor(re int i=0;i<(1<<m);++i)\n    if((i|a[1])==a[1]&&valid[i])\n        for(re int j=0;j<(1<<m);++j)\n            if((j|a[2])==a[2]&&valid[j]&&(i&j)==0)\n                    f[2][i][j]=cnt[i]+cnt[j];\nfor(re int i=3;i<=n;++i)\n    for(re int j=0;j<(1<<m);++j)\n        if((j|a[i-2])==a[i-2]&&valid[j])\n            for(re int k=0;k<(1<<m);++k)\n                if((k|a[i-1])==a[i-1]&&valid[k]&&(j&k)==0)\n                    for(re int l=0;l<(1<<m);++l)\n                        if((l|a[i])==a[i]&&valid[l]&&(l&j)==0&&(l&k)==0)\n                            f[i][k][l]=max(f[i][k][l],f[i-1][j][k]+cnt[l]);\n```\n\n时间复杂度差不多是$O(n8^m)$，最坏情况下差不多是$100\\times 8^{10}=107374182400$，然而由于转移过程中的大量剪枝，实际时间复杂度差不多是$O(\\text{won't TLE})$（\n\n我们再来看一个状压的应用，[「SP3953」MMINPAID - Paid Roads](https://www.spoj.com/problems/MMINPAID/)，或者您也可以~~反正我就是~~在[洛谷](https://www.luogu.org/problemnew/show/SP3953)上提交。\n\n大概是一道最短路，然而与一般的最短路不同的是，在这道题中，经过某条边之前所经过的节点集合如果不同，可能会导致花费的不同。这样一来，我们一般的最短路算法就会有后效性。解决方法也很简单，就是把经过节点集合压缩到一个$2$进制数内。定义`dis[u][S]`为只经过$S$内的节点的前提下，从$1$到$u$的最小花费。对于$u$发出的所有边的终点$v$，`dis[v][S|(1<<(v-1))]=min(dis[v][S|(1<<(v-1))],dis[u][S]+cost)`，其中$cost$表示经过从$u$到$v$这条边的花费，当然这需要分情况讨论。\n\n这样一来，我们只需要写一个可重复入队的堆优化Dijkstra就可以了。需要注意的是，我们需要把节点与经过节点集合看成是一个整体，或者说，将它们联系在一起然后抽象成一个「点」。\n\n~~我是不会说我把impossible打成Impossible然后交上去WA了一发的（~~\n\n一般情况下，如果一道题数据范围很小，但是爆搜过不去，比如说$n\\leqslant 20$，就很有可能是状压题~~或者也有可能是神仙剪枝题~~。大部分状压的时间复杂度都不会直接是一个$O(2^n)$，$O(n2^n)$或者说$O(n^22^n)$大概比较常见，当然我比较菜，做过的题比较少，所以这一段基本是瞎扯。\n\n![](https://i.loli.net/2018/10/25/5bd13984b8601.jpg)\n\n以上，我觉得我的状压讲的差不多了（\n","source":"_posts/2018-10-24-status-compression-learning-notes.md","raw":"---\ntitle: 状态压缩动态规划学习笔记\ndate: 2018-10-24 21:24:05\ntags:\n  - 状态压缩\n  - 动态规划\ncategories:\n  - 学习笔记\nmathjax: true\n---\n~~把标签和分类连在一起读就是标题了（~~\n\n~~好像上一篇珂朵莉树学习笔记也是这样（~~\n\n~~马上就要复赛了，但反正我已经退役预定了来颓blog吧。~~\n\n<!-- more -->\n\n首先我们来看一道例题，[「USACO06NOV」玉米田Corn Fields](https://www.luogu.org/problemnew/show/P1879)。\n\n首先，我们想到定义`f[i][...]`表示当前处理到第$i$行，然后blablabla一堆状态的总方案数。既然任意两块草地之间不能有公共边，我们肯定需要记录第$i$行哪些地方种了草，哪些地方没种草。那么我们记录的状态就是……`f[i][0/1]...(省略10个[0/1])...[0/1]`，后面$12$维状态中第$j+1$维表示的是第$i$行第$j$列是否种草。\n\n但是等等……$13$维的状态……\n\n![](https://i.loli.net/2018/10/24/5bd07656b885a.jpg)\n\n注意到，后面$12$维状态只有$0$和$1$，于是我们就有了这么一个想法：把后$12$维状态看成一个$2$进制数，其中从右往左第$i$位表示当前行第$i$列是否种草，$1$表示种，$0$表示不种。在这一过程中，我们将后$12$维状态「压缩」成了一个$2$进制数，这也正是「状态压缩」这个名字的含义。\n\n于是，现在我们定义`f[i][S]`表示当前处理到第$i$行，其中第$i$行的状态是$S$的总方案数。在转移时，我们还需要判断状态是否合法，我们可以定义`a[i]`表示第$i$行哪些格子能种草，$1$表示能，$0$表示不能。`valid[S]`表示如果不考虑某些格子不能种草，状态$S$是否合法，也就是是否不存在两个相邻的$1$。`a[i]`在读入时就可以处理出来，至于`valid[S]`，我们可以通过这样的一个循环处理出来：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i)\n    valid[i]=valid[i>>1]&(~(i&(i>>1)&1));\n```\n\n用人话来讲就是`[S是否合法]=[S>>1是否合法]&[S与S>>1的最后一位是否不同为1]`。\n\n在转移时，我们认为当前枚举到的状态是合法的当且仅当它只在能种草的格子上种草，并且不与上一行的状态冲突，也就是`(S|a[i])==a[i]&&valid[S]&&(S&S')==0`。\n\n```cpp\nfor(re int i=0;i<(1<<m);++i)\n    if((i|a[1])==a[1]&&valid[i])\n        f[1][i]=1;\nfor(re int i=2;i<=n;++i)\n    for(re int j=0;j<(1<<m);++j)\n        if((j|a[i])==a[i]&&valid[j])\n            for(re int k=0;k<(1<<m);++k)\n                if((k|a[i-1])==a[i-1]&&valid[k]&&(k&j)==0)\n                    (f[i][j]+=f[i-1][k])%=mod;\n```\n\n粗略计算的话，时间复杂度差不多是$O(n4^m)$，最坏情况下差不多是$12\\times 4^{12}=201326592$，看着很吓人，然而实际上，其中大部分状态都是不合法的，会被我们的两个`if`剪掉，因而实际运行跑得比谁都快（\n\n为了更好地体会状压的复杂度的神奇之处，我们再来看一下这道题，[「NOI2001」炮兵阵地](https://www.luogu.org/problemnew/show/P2704)。\n\n因为一个炮兵部队的攻击范围能够上下扩展两行，我们在记录状态时，需要记录之前两行的状态，也就是用`f[i][S1][S2]`表示当前处理到第$i$行，第$i-1$行状态为$S1$，第$i$状态为$S2$时最多能放多少个炮兵部队。我们自然也需要记录`a[i]`和`valid[S]`，不过，这次`valid[s]`的预处理过程差不多是这样：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i){\n    valid[i]=(i&1)?valid[i>>3]&((~i)>>2)&((~i)>>1):valid[i>>1];\n```\n\n![](https://i.loli.net/2018/10/25/5bd124f4cdbb9.jpg)\n\n~~看起来~~有些~~非常~~复杂，用人话来讲就是……诶我当时是不是写错了（\n\n……不好像又没写错……\n\n好吧没写错。\n\n如果$S$的最后一位是$1$，则`[S是否合法]=[S>>3是否合法]&[S的倒数第2位和倒数第3位是否都为0]`，否则`[S是否合法]=[S>>1是否合法]`。\n\n因为我们要求的是最多能放多少个炮兵部队，我们还需要知道某个状态放了多少个炮兵部队，也就是某个状态$S$在二进制下$1$的个数，我们可以这样处理：\n\n```cpp\nfor(re int i=1;i<(1<<m);++i)\n    cnt[i]=cnt[i>>1]+(i&1);\n```\n\n转移过程如下：\n\n```cpp\nfor(re int i=0;i<(1<<m);++i)\n    if((i|a[1])==a[1]&&valid[i])\n        for(re int j=0;j<(1<<m);++j)\n            if((j|a[2])==a[2]&&valid[j]&&(i&j)==0)\n                    f[2][i][j]=cnt[i]+cnt[j];\nfor(re int i=3;i<=n;++i)\n    for(re int j=0;j<(1<<m);++j)\n        if((j|a[i-2])==a[i-2]&&valid[j])\n            for(re int k=0;k<(1<<m);++k)\n                if((k|a[i-1])==a[i-1]&&valid[k]&&(j&k)==0)\n                    for(re int l=0;l<(1<<m);++l)\n                        if((l|a[i])==a[i]&&valid[l]&&(l&j)==0&&(l&k)==0)\n                            f[i][k][l]=max(f[i][k][l],f[i-1][j][k]+cnt[l]);\n```\n\n时间复杂度差不多是$O(n8^m)$，最坏情况下差不多是$100\\times 8^{10}=107374182400$，然而由于转移过程中的大量剪枝，实际时间复杂度差不多是$O(\\text{won't TLE})$（\n\n我们再来看一个状压的应用，[「SP3953」MMINPAID - Paid Roads](https://www.spoj.com/problems/MMINPAID/)，或者您也可以~~反正我就是~~在[洛谷](https://www.luogu.org/problemnew/show/SP3953)上提交。\n\n大概是一道最短路，然而与一般的最短路不同的是，在这道题中，经过某条边之前所经过的节点集合如果不同，可能会导致花费的不同。这样一来，我们一般的最短路算法就会有后效性。解决方法也很简单，就是把经过节点集合压缩到一个$2$进制数内。定义`dis[u][S]`为只经过$S$内的节点的前提下，从$1$到$u$的最小花费。对于$u$发出的所有边的终点$v$，`dis[v][S|(1<<(v-1))]=min(dis[v][S|(1<<(v-1))],dis[u][S]+cost)`，其中$cost$表示经过从$u$到$v$这条边的花费，当然这需要分情况讨论。\n\n这样一来，我们只需要写一个可重复入队的堆优化Dijkstra就可以了。需要注意的是，我们需要把节点与经过节点集合看成是一个整体，或者说，将它们联系在一起然后抽象成一个「点」。\n\n~~我是不会说我把impossible打成Impossible然后交上去WA了一发的（~~\n\n一般情况下，如果一道题数据范围很小，但是爆搜过不去，比如说$n\\leqslant 20$，就很有可能是状压题~~或者也有可能是神仙剪枝题~~。大部分状压的时间复杂度都不会直接是一个$O(2^n)$，$O(n2^n)$或者说$O(n^22^n)$大概比较常见，当然我比较菜，做过的题比较少，所以这一段基本是瞎扯。\n\n![](https://i.loli.net/2018/10/25/5bd13984b8601.jpg)\n\n以上，我觉得我的状压讲的差不多了（\n","slug":"status-compression-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzu000cmku9a5xy4r6b","content":"<p><del>把标签和分类连在一起读就是标题了（</del></p>\n<p><del>好像上一篇珂朵莉树学习笔记也是这样（</del></p>\n<p><del>马上就要复赛了，但反正我已经退役预定了来颓blog吧。</del></p>\n<a id=\"more\"></a>\n<p>首先我们来看一道例题，<a href=\"https://www.luogu.org/problemnew/show/P1879\">「USACO06NOV」玉米田Corn Fields</a>。</p>\n<p>首先，我们想到定义<code>f[i][...]</code>表示当前处理到第$i$行，然后blablabla一堆状态的总方案数。既然任意两块草地之间不能有公共边，我们肯定需要记录第$i$行哪些地方种了草，哪些地方没种草。那么我们记录的状态就是……<code>f[i][0/1]...(省略10个[0/1])...[0/1]</code>，后面$12$维状态中第$j+1$维表示的是第$i$行第$j$列是否种草。</p>\n<p>但是等等……$13$维的状态……</p>\n<p><img src=\"https://i.loli.net/2018/10/24/5bd07656b885a.jpg\" alt=\"\"></p>\n<p>注意到，后面$12$维状态只有$0$和$1$，于是我们就有了这么一个想法：把后$12$维状态看成一个$2$进制数，其中从右往左第$i$位表示当前行第$i$列是否种草，$1$表示种，$0$表示不种。在这一过程中，我们将后$12$维状态「压缩」成了一个$2$进制数，这也正是「状态压缩」这个名字的含义。</p>\n<p>于是，现在我们定义<code>f[i][S]</code>表示当前处理到第$i$行，其中第$i$行的状态是$S$的总方案数。在转移时，我们还需要判断状态是否合法，我们可以定义<code>a[i]</code>表示第$i$行哪些格子能种草，$1$表示能，$0$表示不能。<code>valid[S]</code>表示如果不考虑某些格子不能种草，状态$S$是否合法，也就是是否不存在两个相邻的$1$。<code>a[i]</code>在读入时就可以处理出来，至于<code>valid[S]</code>，我们可以通过这样的一个循环处理出来：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    valid[i]=valid[i&gt;&gt;<span class=\"number\">1</span>]&amp;(~(i&amp;(i&gt;&gt;<span class=\"number\">1</span>)&amp;<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<p>用人话来讲就是<code>[S是否合法]=[S&gt;&gt;1是否合法]&amp;[S与S&gt;&gt;1的最后一位是否不同为1]</code>。</p>\n<p>在转移时，我们认为当前枚举到的状态是合法的当且仅当它只在能种草的格子上种草，并且不与上一行的状态冲突，也就是<code>(S|a[i])==a[i]&amp;&amp;valid[S]&amp;&amp;(S&amp;S&#39;)==0</code>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((i|a[<span class=\"number\">1</span>])==a[<span class=\"number\">1</span>]&amp;&amp;valid[i])</span><br><span class=\"line\">        f[<span class=\"number\">1</span>][i]=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((j|a[i])==a[i]&amp;&amp;valid[j])</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(<span class=\"number\">1</span>&lt;&lt;m);++k)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>((k|a[i<span class=\"number\">-1</span>])==a[i<span class=\"number\">-1</span>]&amp;&amp;valid[k]&amp;&amp;(k&amp;j)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    (f[i][j]+=f[i<span class=\"number\">-1</span>][k])%=mod;</span><br></pre></td></tr></table></figure>\n<p>粗略计算的话，时间复杂度差不多是$O(n4^m)$，最坏情况下差不多是$12\\times 4^{12}=201326592$，看着很吓人，然而实际上，其中大部分状态都是不合法的，会被我们的两个<code>if</code>剪掉，因而实际运行跑得比谁都快（</p>\n<p>为了更好地体会状压的复杂度的神奇之处，我们再来看一下这道题，<a href=\"https://www.luogu.org/problemnew/show/P2704\">「NOI2001」炮兵阵地</a>。</p>\n<p>因为一个炮兵部队的攻击范围能够上下扩展两行，我们在记录状态时，需要记录之前两行的状态，也就是用<code>f[i][S1][S2]</code>表示当前处理到第$i$行，第$i-1$行状态为$S1$，第$i$状态为$S2$时最多能放多少个炮兵部队。我们自然也需要记录<code>a[i]</code>和<code>valid[S]</code>，不过，这次<code>valid[s]</code>的预处理过程差不多是这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)&#123;</span><br><span class=\"line\">    valid[i]=(i&amp;<span class=\"number\">1</span>)?valid[i&gt;&gt;<span class=\"number\">3</span>]&amp;((~i)&gt;&gt;<span class=\"number\">2</span>)&amp;((~i)&gt;&gt;<span class=\"number\">1</span>):valid[i&gt;&gt;<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2018/10/25/5bd124f4cdbb9.jpg\" alt=\"\"></p>\n<p><del>看起来</del>有些<del>非常</del>复杂，用人话来讲就是……诶我当时是不是写错了（</p>\n<p>……不好像又没写错……</p>\n<p>好吧没写错。</p>\n<p>如果$S$的最后一位是$1$，则<code>[S是否合法]=[S&gt;&gt;3是否合法]&amp;[S的倒数第2位和倒数第3位是否都为0]</code>，否则<code>[S是否合法]=[S&gt;&gt;1是否合法]</code>。</p>\n<p>因为我们要求的是最多能放多少个炮兵部队，我们还需要知道某个状态放了多少个炮兵部队，也就是某个状态$S$在二进制下$1$的个数，我们可以这样处理：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    cnt[i]=cnt[i&gt;&gt;<span class=\"number\">1</span>]+(i&amp;<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p>转移过程如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((i|a[<span class=\"number\">1</span>])==a[<span class=\"number\">1</span>]&amp;&amp;valid[i])</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((j|a[<span class=\"number\">2</span>])==a[<span class=\"number\">2</span>]&amp;&amp;valid[j]&amp;&amp;(i&amp;j)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    f[<span class=\"number\">2</span>][i][j]=cnt[i]+cnt[j];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">3</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((j|a[i<span class=\"number\">-2</span>])==a[i<span class=\"number\">-2</span>]&amp;&amp;valid[j])</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(<span class=\"number\">1</span>&lt;&lt;m);++k)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>((k|a[i<span class=\"number\">-1</span>])==a[i<span class=\"number\">-1</span>]&amp;&amp;valid[k]&amp;&amp;(j&amp;k)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;(<span class=\"number\">1</span>&lt;&lt;m);++l)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>((l|a[i])==a[i]&amp;&amp;valid[l]&amp;&amp;(l&amp;j)==<span class=\"number\">0</span>&amp;&amp;(l&amp;k)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                            f[i][k][l]=max(f[i][k][l],f[i<span class=\"number\">-1</span>][j][k]+cnt[l]);</span><br></pre></td></tr></table></figure>\n<p>时间复杂度差不多是$O(n8^m)$，最坏情况下差不多是$100\\times 8^{10}=107374182400$，然而由于转移过程中的大量剪枝，实际时间复杂度差不多是$O(\\text{won’t TLE})$（</p>\n<p>我们再来看一个状压的应用，<a href=\"https://www.spoj.com/problems/MMINPAID/\">「SP3953」MMINPAID - Paid Roads</a>，或者您也可以<del>反正我就是</del>在<a href=\"https://www.luogu.org/problemnew/show/SP3953\">洛谷</a>上提交。</p>\n<p>大概是一道最短路，然而与一般的最短路不同的是，在这道题中，经过某条边之前所经过的节点集合如果不同，可能会导致花费的不同。这样一来，我们一般的最短路算法就会有后效性。解决方法也很简单，就是把经过节点集合压缩到一个$2$进制数内。定义<code>dis[u][S]</code>为只经过$S$内的节点的前提下，从$1$到$u$的最小花费。对于$u$发出的所有边的终点$v$，<code>dis[v][S|(1&lt;&lt;(v-1))]=min(dis[v][S|(1&lt;&lt;(v-1))],dis[u][S]+cost)</code>，其中$cost$表示经过从$u$到$v$这条边的花费，当然这需要分情况讨论。</p>\n<p>这样一来，我们只需要写一个可重复入队的堆优化Dijkstra就可以了。需要注意的是，我们需要把节点与经过节点集合看成是一个整体，或者说，将它们联系在一起然后抽象成一个「点」。</p>\n<p><del>我是不会说我把impossible打成Impossible然后交上去WA了一发的（</del></p>\n<p>一般情况下，如果一道题数据范围很小，但是爆搜过不去，比如说$n\\leqslant 20$，就很有可能是状压题<del>或者也有可能是神仙剪枝题</del>。大部分状压的时间复杂度都不会直接是一个$O(2^n)$，$O(n2^n)$或者说$O(n^22^n)$大概比较常见，当然我比较菜，做过的题比较少，所以这一段基本是瞎扯。</p>\n<p><img src=\"https://i.loli.net/2018/10/25/5bd13984b8601.jpg\" alt=\"\"></p>\n<p>以上，我觉得我的状压讲的差不多了（</p>\n","site":{"data":{}},"excerpt":"<p><del>把标签和分类连在一起读就是标题了（</del></p>\n<p><del>好像上一篇珂朵莉树学习笔记也是这样（</del></p>\n<p><del>马上就要复赛了，但反正我已经退役预定了来颓blog吧。</del></p>","more":"<p>首先我们来看一道例题，<a href=\"https://www.luogu.org/problemnew/show/P1879\">「USACO06NOV」玉米田Corn Fields</a>。</p>\n<p>首先，我们想到定义<code>f[i][...]</code>表示当前处理到第$i$行，然后blablabla一堆状态的总方案数。既然任意两块草地之间不能有公共边，我们肯定需要记录第$i$行哪些地方种了草，哪些地方没种草。那么我们记录的状态就是……<code>f[i][0/1]...(省略10个[0/1])...[0/1]</code>，后面$12$维状态中第$j+1$维表示的是第$i$行第$j$列是否种草。</p>\n<p>但是等等……$13$维的状态……</p>\n<p><img src=\"https://i.loli.net/2018/10/24/5bd07656b885a.jpg\" alt=\"\"></p>\n<p>注意到，后面$12$维状态只有$0$和$1$，于是我们就有了这么一个想法：把后$12$维状态看成一个$2$进制数，其中从右往左第$i$位表示当前行第$i$列是否种草，$1$表示种，$0$表示不种。在这一过程中，我们将后$12$维状态「压缩」成了一个$2$进制数，这也正是「状态压缩」这个名字的含义。</p>\n<p>于是，现在我们定义<code>f[i][S]</code>表示当前处理到第$i$行，其中第$i$行的状态是$S$的总方案数。在转移时，我们还需要判断状态是否合法，我们可以定义<code>a[i]</code>表示第$i$行哪些格子能种草，$1$表示能，$0$表示不能。<code>valid[S]</code>表示如果不考虑某些格子不能种草，状态$S$是否合法，也就是是否不存在两个相邻的$1$。<code>a[i]</code>在读入时就可以处理出来，至于<code>valid[S]</code>，我们可以通过这样的一个循环处理出来：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    valid[i]=valid[i&gt;&gt;<span class=\"number\">1</span>]&amp;(~(i&amp;(i&gt;&gt;<span class=\"number\">1</span>)&amp;<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<p>用人话来讲就是<code>[S是否合法]=[S&gt;&gt;1是否合法]&amp;[S与S&gt;&gt;1的最后一位是否不同为1]</code>。</p>\n<p>在转移时，我们认为当前枚举到的状态是合法的当且仅当它只在能种草的格子上种草，并且不与上一行的状态冲突，也就是<code>(S|a[i])==a[i]&amp;&amp;valid[S]&amp;&amp;(S&amp;S&#39;)==0</code>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((i|a[<span class=\"number\">1</span>])==a[<span class=\"number\">1</span>]&amp;&amp;valid[i])</span><br><span class=\"line\">        f[<span class=\"number\">1</span>][i]=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((j|a[i])==a[i]&amp;&amp;valid[j])</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(<span class=\"number\">1</span>&lt;&lt;m);++k)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>((k|a[i<span class=\"number\">-1</span>])==a[i<span class=\"number\">-1</span>]&amp;&amp;valid[k]&amp;&amp;(k&amp;j)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    (f[i][j]+=f[i<span class=\"number\">-1</span>][k])%=mod;</span><br></pre></td></tr></table></figure>\n<p>粗略计算的话，时间复杂度差不多是$O(n4^m)$，最坏情况下差不多是$12\\times 4^{12}=201326592$，看着很吓人，然而实际上，其中大部分状态都是不合法的，会被我们的两个<code>if</code>剪掉，因而实际运行跑得比谁都快（</p>\n<p>为了更好地体会状压的复杂度的神奇之处，我们再来看一下这道题，<a href=\"https://www.luogu.org/problemnew/show/P2704\">「NOI2001」炮兵阵地</a>。</p>\n<p>因为一个炮兵部队的攻击范围能够上下扩展两行，我们在记录状态时，需要记录之前两行的状态，也就是用<code>f[i][S1][S2]</code>表示当前处理到第$i$行，第$i-1$行状态为$S1$，第$i$状态为$S2$时最多能放多少个炮兵部队。我们自然也需要记录<code>a[i]</code>和<code>valid[S]</code>，不过，这次<code>valid[s]</code>的预处理过程差不多是这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)&#123;</span><br><span class=\"line\">    valid[i]=(i&amp;<span class=\"number\">1</span>)?valid[i&gt;&gt;<span class=\"number\">3</span>]&amp;((~i)&gt;&gt;<span class=\"number\">2</span>)&amp;((~i)&gt;&gt;<span class=\"number\">1</span>):valid[i&gt;&gt;<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2018/10/25/5bd124f4cdbb9.jpg\" alt=\"\"></p>\n<p><del>看起来</del>有些<del>非常</del>复杂，用人话来讲就是……诶我当时是不是写错了（</p>\n<p>……不好像又没写错……</p>\n<p>好吧没写错。</p>\n<p>如果$S$的最后一位是$1$，则<code>[S是否合法]=[S&gt;&gt;3是否合法]&amp;[S的倒数第2位和倒数第3位是否都为0]</code>，否则<code>[S是否合法]=[S&gt;&gt;1是否合法]</code>。</p>\n<p>因为我们要求的是最多能放多少个炮兵部队，我们还需要知道某个状态放了多少个炮兵部队，也就是某个状态$S$在二进制下$1$的个数，我们可以这样处理：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    cnt[i]=cnt[i&gt;&gt;<span class=\"number\">1</span>]+(i&amp;<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p>转移过程如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;m);++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((i|a[<span class=\"number\">1</span>])==a[<span class=\"number\">1</span>]&amp;&amp;valid[i])</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((j|a[<span class=\"number\">2</span>])==a[<span class=\"number\">2</span>]&amp;&amp;valid[j]&amp;&amp;(i&amp;j)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    f[<span class=\"number\">2</span>][i][j]=cnt[i]+cnt[j];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">3</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;m);++j)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((j|a[i<span class=\"number\">-2</span>])==a[i<span class=\"number\">-2</span>]&amp;&amp;valid[j])</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(<span class=\"number\">1</span>&lt;&lt;m);++k)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>((k|a[i<span class=\"number\">-1</span>])==a[i<span class=\"number\">-1</span>]&amp;&amp;valid[k]&amp;&amp;(j&amp;k)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;(<span class=\"number\">1</span>&lt;&lt;m);++l)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>((l|a[i])==a[i]&amp;&amp;valid[l]&amp;&amp;(l&amp;j)==<span class=\"number\">0</span>&amp;&amp;(l&amp;k)==<span class=\"number\">0</span>)</span><br><span class=\"line\">                            f[i][k][l]=max(f[i][k][l],f[i<span class=\"number\">-1</span>][j][k]+cnt[l]);</span><br></pre></td></tr></table></figure>\n<p>时间复杂度差不多是$O(n8^m)$，最坏情况下差不多是$100\\times 8^{10}=107374182400$，然而由于转移过程中的大量剪枝，实际时间复杂度差不多是$O(\\text{won’t TLE})$（</p>\n<p>我们再来看一个状压的应用，<a href=\"https://www.spoj.com/problems/MMINPAID/\">「SP3953」MMINPAID - Paid Roads</a>，或者您也可以<del>反正我就是</del>在<a href=\"https://www.luogu.org/problemnew/show/SP3953\">洛谷</a>上提交。</p>\n<p>大概是一道最短路，然而与一般的最短路不同的是，在这道题中，经过某条边之前所经过的节点集合如果不同，可能会导致花费的不同。这样一来，我们一般的最短路算法就会有后效性。解决方法也很简单，就是把经过节点集合压缩到一个$2$进制数内。定义<code>dis[u][S]</code>为只经过$S$内的节点的前提下，从$1$到$u$的最小花费。对于$u$发出的所有边的终点$v$，<code>dis[v][S|(1&lt;&lt;(v-1))]=min(dis[v][S|(1&lt;&lt;(v-1))],dis[u][S]+cost)</code>，其中$cost$表示经过从$u$到$v$这条边的花费，当然这需要分情况讨论。</p>\n<p>这样一来，我们只需要写一个可重复入队的堆优化Dijkstra就可以了。需要注意的是，我们需要把节点与经过节点集合看成是一个整体，或者说，将它们联系在一起然后抽象成一个「点」。</p>\n<p><del>我是不会说我把impossible打成Impossible然后交上去WA了一发的（</del></p>\n<p>一般情况下，如果一道题数据范围很小，但是爆搜过不去，比如说$n\\leqslant 20$，就很有可能是状压题<del>或者也有可能是神仙剪枝题</del>。大部分状压的时间复杂度都不会直接是一个$O(2^n)$，$O(n2^n)$或者说$O(n^22^n)$大概比较常见，当然我比较菜，做过的题比较少，所以这一段基本是瞎扯。</p>\n<p><img src=\"https://i.loli.net/2018/10/25/5bd13984b8601.jpg\" alt=\"\"></p>\n<p>以上，我觉得我的状压讲的差不多了（</p>"},{"title":"「NOIp2018游记」夢の終わるところ","date":"2018-11-09T01:40:45.000Z","mathjax":true,"_content":"~~€€£：禁赛警告。~~\n\n<!-- more -->\n\n# Day 0\n\n自从一周前放假回来以后，我就开始一颓不振：\n\n![](https://i.loli.net/2018/11/09/5be4e6d8c122f.png)\n\n明天就是NOIp2018复赛了，大概算是我人生中的第四场NOIp了。上午我和平时一样在颓废~~，同时看着其他dalao随手切神仙题~~。然后我看到yemdalao写了一篇[NOIp2018~~禁赛记~~游记](https://www.cnblogs.com/taduro/p/9933329.html)~~，想着禁赛真有趣~~，我就写下了这篇游记。\n\n> 其他dalao都在机房补文化课而我在颓blog（\n>\n> 于是，此处以下，Updated on 2018-11-12。\n>\n> > Updated on 2018-11-14\n> >\n> > 看了其他dalao的blog发现自己写得实在是太菜了，于是大改一波。\n> >\n> > 但就算这样好像也没什么可写的。看到其他dalao用了大段文字来描写自己做题时的心理活动，但是……今年的题都是简单的想一想就会了，难的看一眼就能明白谁打正解谁退役，能有什么心理活动啊（逃\n\n中午去超市随便买了点吃的就走了，然后上了车直接就睡过去了，到了CYYZ大概15点了。\n\n然后一抽考场发现是外校，赛前先`rp--`。\n\n然后和wzxdalao分到了一个宿舍。听说他被mhr学长奶了一路，我大概是被传染了吧（\n\n下午一直在换宿舍，理由都差不多，就是其他学校的同一个学校的想住在同一个宿舍，莫名感觉rp被补回来了（\n\n除那之外就没啥了，算是颓了一个下午。\n\n晚上试机，庆幸自己用的是Win7，然后对面机房就是XP，下午的rp看来补得有效（\n\n试机就xjb打了个st表，还有我平时用的快读板子，当时是都存到E盘了，说不定明天会用得上。\n\n反正板子是不可能打炸的，这辈子都不可能的。\n\n因为某些原因，试机时间被推迟了，回来已经过了10点，就直接睡了。\n\n# Day 1\n\n早上懒得吃早饭了，就一个人在宿舍里发呆，想着自己肯定什么东西都带全了，结果一到考场发现准考证没带，尴尬.jpg。不过还好，我被允许先进考场了。\n\n然后一打开E盘发现被清了，只有题目。\n\nDay1的解压密码是不是就我一个人不懂啊（\n\n那么于是，到了8：30，我点开今天的题目，定神一看……\n\n## [T1](https://www.luogu.org/problemnew/show/P5019)\n\n智障单调栈，有不开数组的做法，不过我懒得细想了，反正`score+=100`。\n\n## [T2](https://www.luogu.org/problemnew/show/P5020)\n\n稍微想一想不难想到完全背包，`score+=100`。\n\n## [T3](https://www.luogu.org/problemnew/show/P5021)\n\n神仙树上操作……切不动切不动。我就打了$m=1$的20分和树是一条链中的5分。\n\n估分100+100+25=225。\n\n出考场后……啥啥啥，今天考了三道原题？爆破！把NOIp爆破掉，并从此以后不再接受CCF的公开赛！（\n\n前两题没什么意外的。不过，是不是是个人T3就能骗到55分啊（\n\n那我可真是太菜了（\n\n下午日常发呆，然后晚上是快乐的颓废时间。\n\n中午买的零食一个下午就全吃完了（\n\n# Day 2\n\n早上莫名起不来，然后就没吃早饭。\n\n这次我东西是真的带全了（\n\nDay2的解压密码依然不懂，然后是今天的题目：\n\n## [T1](https://www.luogu.org/problemnew/show/P5022)\n\nNOIp开始考基环树了么……不过还算简单，找到环以后暴力断边然后dfs即可。听crydalao说有$O(n)$的做法，不过他调了两个小时还是放弃了。\n\n现在回想起来，我当时用了个什么智障存图方法啊……先开个邻接表，对每个点`std::sort`一遍。然后维护一个邻接矩阵处理断边（\n\n为什么不直接用邻接矩阵呢（\n\n## [T2](https://www.luogu.org/problemnew/show/P5023)\n\n神仙结论题……切不动切不动。随便打了个爆搜找到了$n=2$和$n=3$时的规律。虽然说$n=1$时规律很明显，然而我当时智障忘判断了（\n\n## [T3](https://www.luogu.org/problemnew/show/P5024)\n\n究极神仙题，读完题yy出ddp，然而不会，只拿了$O(nm)$的44分。\n\n估分100+65+44=204（不存在的，肯定比这个低）。\n\n这么两天算下来，乐观估计的话，差不多有100+100+25+100+65+44=434分，保守估计应该不会掉到400分以下，应该算是稳了吧……\n\n不不不不存在的，我一定会六道题全部写炸然后华丽爆零并退役（\n\n好像其他dalao们都有这样那样乱七八糟的地方出锅了啊……\n\n下午请假回家开心地颓废。\n\n# Extra Notes\n\n果然是等到NOIp结束后才更新的。\n\n以及，我比较菜，第一次写游记，写的~~可能~~一定很菜，所以……算了，告辞。\n\n> Updated on 2018-11-26\n>\n> 好像有些晚的更新。\n>\n> 出正式成绩之后被教练赶回教室补了一段时间文化课，感觉刚刚度过了人生中最长的一星期（\n>\n> 具体成绩差不多是100+100+20+100+65+36=421。\n>\n> 以上。\n","source":"_posts/2018-11-09-noip-2018-notes.md","raw":"---\ntitle: 「NOIp2018游记」夢の終わるところ\ndate: 2018-11-09 09:40:45\ntags:\n  - NOIp\n  - 2018\ncategories:\n  - 游记\nmathjax: true\n---\n~~€€£：禁赛警告。~~\n\n<!-- more -->\n\n# Day 0\n\n自从一周前放假回来以后，我就开始一颓不振：\n\n![](https://i.loli.net/2018/11/09/5be4e6d8c122f.png)\n\n明天就是NOIp2018复赛了，大概算是我人生中的第四场NOIp了。上午我和平时一样在颓废~~，同时看着其他dalao随手切神仙题~~。然后我看到yemdalao写了一篇[NOIp2018~~禁赛记~~游记](https://www.cnblogs.com/taduro/p/9933329.html)~~，想着禁赛真有趣~~，我就写下了这篇游记。\n\n> 其他dalao都在机房补文化课而我在颓blog（\n>\n> 于是，此处以下，Updated on 2018-11-12。\n>\n> > Updated on 2018-11-14\n> >\n> > 看了其他dalao的blog发现自己写得实在是太菜了，于是大改一波。\n> >\n> > 但就算这样好像也没什么可写的。看到其他dalao用了大段文字来描写自己做题时的心理活动，但是……今年的题都是简单的想一想就会了，难的看一眼就能明白谁打正解谁退役，能有什么心理活动啊（逃\n\n中午去超市随便买了点吃的就走了，然后上了车直接就睡过去了，到了CYYZ大概15点了。\n\n然后一抽考场发现是外校，赛前先`rp--`。\n\n然后和wzxdalao分到了一个宿舍。听说他被mhr学长奶了一路，我大概是被传染了吧（\n\n下午一直在换宿舍，理由都差不多，就是其他学校的同一个学校的想住在同一个宿舍，莫名感觉rp被补回来了（\n\n除那之外就没啥了，算是颓了一个下午。\n\n晚上试机，庆幸自己用的是Win7，然后对面机房就是XP，下午的rp看来补得有效（\n\n试机就xjb打了个st表，还有我平时用的快读板子，当时是都存到E盘了，说不定明天会用得上。\n\n反正板子是不可能打炸的，这辈子都不可能的。\n\n因为某些原因，试机时间被推迟了，回来已经过了10点，就直接睡了。\n\n# Day 1\n\n早上懒得吃早饭了，就一个人在宿舍里发呆，想着自己肯定什么东西都带全了，结果一到考场发现准考证没带，尴尬.jpg。不过还好，我被允许先进考场了。\n\n然后一打开E盘发现被清了，只有题目。\n\nDay1的解压密码是不是就我一个人不懂啊（\n\n那么于是，到了8：30，我点开今天的题目，定神一看……\n\n## [T1](https://www.luogu.org/problemnew/show/P5019)\n\n智障单调栈，有不开数组的做法，不过我懒得细想了，反正`score+=100`。\n\n## [T2](https://www.luogu.org/problemnew/show/P5020)\n\n稍微想一想不难想到完全背包，`score+=100`。\n\n## [T3](https://www.luogu.org/problemnew/show/P5021)\n\n神仙树上操作……切不动切不动。我就打了$m=1$的20分和树是一条链中的5分。\n\n估分100+100+25=225。\n\n出考场后……啥啥啥，今天考了三道原题？爆破！把NOIp爆破掉，并从此以后不再接受CCF的公开赛！（\n\n前两题没什么意外的。不过，是不是是个人T3就能骗到55分啊（\n\n那我可真是太菜了（\n\n下午日常发呆，然后晚上是快乐的颓废时间。\n\n中午买的零食一个下午就全吃完了（\n\n# Day 2\n\n早上莫名起不来，然后就没吃早饭。\n\n这次我东西是真的带全了（\n\nDay2的解压密码依然不懂，然后是今天的题目：\n\n## [T1](https://www.luogu.org/problemnew/show/P5022)\n\nNOIp开始考基环树了么……不过还算简单，找到环以后暴力断边然后dfs即可。听crydalao说有$O(n)$的做法，不过他调了两个小时还是放弃了。\n\n现在回想起来，我当时用了个什么智障存图方法啊……先开个邻接表，对每个点`std::sort`一遍。然后维护一个邻接矩阵处理断边（\n\n为什么不直接用邻接矩阵呢（\n\n## [T2](https://www.luogu.org/problemnew/show/P5023)\n\n神仙结论题……切不动切不动。随便打了个爆搜找到了$n=2$和$n=3$时的规律。虽然说$n=1$时规律很明显，然而我当时智障忘判断了（\n\n## [T3](https://www.luogu.org/problemnew/show/P5024)\n\n究极神仙题，读完题yy出ddp，然而不会，只拿了$O(nm)$的44分。\n\n估分100+65+44=204（不存在的，肯定比这个低）。\n\n这么两天算下来，乐观估计的话，差不多有100+100+25+100+65+44=434分，保守估计应该不会掉到400分以下，应该算是稳了吧……\n\n不不不不存在的，我一定会六道题全部写炸然后华丽爆零并退役（\n\n好像其他dalao们都有这样那样乱七八糟的地方出锅了啊……\n\n下午请假回家开心地颓废。\n\n# Extra Notes\n\n果然是等到NOIp结束后才更新的。\n\n以及，我比较菜，第一次写游记，写的~~可能~~一定很菜，所以……算了，告辞。\n\n> Updated on 2018-11-26\n>\n> 好像有些晚的更新。\n>\n> 出正式成绩之后被教练赶回教室补了一段时间文化课，感觉刚刚度过了人生中最长的一星期（\n>\n> 具体成绩差不多是100+100+20+100+65+36=421。\n>\n> 以上。\n","slug":"noip-2018-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzv000dmku98dyf3avz","content":"<p><del>€€£：禁赛警告。</del></p>\n<a id=\"more\"></a>\n<h1 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h1><p>自从一周前放假回来以后，我就开始一颓不振：</p>\n<p><img src=\"https://i.loli.net/2018/11/09/5be4e6d8c122f.png\" alt=\"\"></p>\n<p>明天就是NOIp2018复赛了，大概算是我人生中的第四场NOIp了。上午我和平时一样在颓废<del>，同时看着其他dalao随手切神仙题</del>。然后我看到yemdalao写了一篇<a href=\"https://www.cnblogs.com/taduro/p/9933329.html\">NOIp2018<del>禁赛记</del>游记</a><del>，想着禁赛真有趣</del>，我就写下了这篇游记。</p>\n<blockquote>\n<p>其他dalao都在机房补文化课而我在颓blog（</p>\n<p>于是，此处以下，Updated on 2018-11-12。</p>\n<blockquote>\n<p>Updated on 2018-11-14</p>\n<p>看了其他dalao的blog发现自己写得实在是太菜了，于是大改一波。</p>\n<p>但就算这样好像也没什么可写的。看到其他dalao用了大段文字来描写自己做题时的心理活动，但是……今年的题都是简单的想一想就会了，难的看一眼就能明白谁打正解谁退役，能有什么心理活动啊（逃</p>\n</blockquote>\n</blockquote>\n<p>中午去超市随便买了点吃的就走了，然后上了车直接就睡过去了，到了CYYZ大概15点了。</p>\n<p>然后一抽考场发现是外校，赛前先<code>rp--</code>。</p>\n<p>然后和wzxdalao分到了一个宿舍。听说他被mhr学长奶了一路，我大概是被传染了吧（</p>\n<p>下午一直在换宿舍，理由都差不多，就是其他学校的同一个学校的想住在同一个宿舍，莫名感觉rp被补回来了（</p>\n<p>除那之外就没啥了，算是颓了一个下午。</p>\n<p>晚上试机，庆幸自己用的是Win7，然后对面机房就是XP，下午的rp看来补得有效（</p>\n<p>试机就xjb打了个st表，还有我平时用的快读板子，当时是都存到E盘了，说不定明天会用得上。</p>\n<p>反正板子是不可能打炸的，这辈子都不可能的。</p>\n<p>因为某些原因，试机时间被推迟了，回来已经过了10点，就直接睡了。</p>\n<h1 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h1><p>早上懒得吃早饭了，就一个人在宿舍里发呆，想着自己肯定什么东西都带全了，结果一到考场发现准考证没带，尴尬.jpg。不过还好，我被允许先进考场了。</p>\n<p>然后一打开E盘发现被清了，只有题目。</p>\n<p>Day1的解压密码是不是就我一个人不懂啊（</p>\n<p>那么于是，到了8：30，我点开今天的题目，定神一看……</p>\n<h2 id=\"T1\"><a href=\"#T1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5019\">T1</a></h2><p>智障单调栈，有不开数组的做法，不过我懒得细想了，反正<code>score+=100</code>。</p>\n<h2 id=\"T2\"><a href=\"#T2\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5020\">T2</a></h2><p>稍微想一想不难想到完全背包，<code>score+=100</code>。</p>\n<h2 id=\"T3\"><a href=\"#T3\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5021\">T3</a></h2><p>神仙树上操作……切不动切不动。我就打了$m=1$的20分和树是一条链中的5分。</p>\n<p>估分100+100+25=225。</p>\n<p>出考场后……啥啥啥，今天考了三道原题？爆破！把NOIp爆破掉，并从此以后不再接受CCF的公开赛！（</p>\n<p>前两题没什么意外的。不过，是不是是个人T3就能骗到55分啊（</p>\n<p>那我可真是太菜了（</p>\n<p>下午日常发呆，然后晚上是快乐的颓废时间。</p>\n<p>中午买的零食一个下午就全吃完了（</p>\n<h1 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h1><p>早上莫名起不来，然后就没吃早饭。</p>\n<p>这次我东西是真的带全了（</p>\n<p>Day2的解压密码依然不懂，然后是今天的题目：</p>\n<h2 id=\"T1-1\"><a href=\"#T1-1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5022\">T1</a></h2><p>NOIp开始考基环树了么……不过还算简单，找到环以后暴力断边然后dfs即可。听crydalao说有$O(n)$的做法，不过他调了两个小时还是放弃了。</p>\n<p>现在回想起来，我当时用了个什么智障存图方法啊……先开个邻接表，对每个点<code>std::sort</code>一遍。然后维护一个邻接矩阵处理断边（</p>\n<p>为什么不直接用邻接矩阵呢（</p>\n<h2 id=\"T2-1\"><a href=\"#T2-1\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5023\">T2</a></h2><p>神仙结论题……切不动切不动。随便打了个爆搜找到了$n=2$和$n=3$时的规律。虽然说$n=1$时规律很明显，然而我当时智障忘判断了（</p>\n<h2 id=\"T3-1\"><a href=\"#T3-1\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5024\">T3</a></h2><p>究极神仙题，读完题yy出ddp，然而不会，只拿了$O(nm)$的44分。</p>\n<p>估分100+65+44=204（不存在的，肯定比这个低）。</p>\n<p>这么两天算下来，乐观估计的话，差不多有100+100+25+100+65+44=434分，保守估计应该不会掉到400分以下，应该算是稳了吧……</p>\n<p>不不不不存在的，我一定会六道题全部写炸然后华丽爆零并退役（</p>\n<p>好像其他dalao们都有这样那样乱七八糟的地方出锅了啊……</p>\n<p>下午请假回家开心地颓废。</p>\n<h1 id=\"Extra-Notes\"><a href=\"#Extra-Notes\" class=\"headerlink\" title=\"Extra Notes\"></a>Extra Notes</h1><p>果然是等到NOIp结束后才更新的。</p>\n<p>以及，我比较菜，第一次写游记，写的<del>可能</del>一定很菜，所以……算了，告辞。</p>\n<blockquote>\n<p>Updated on 2018-11-26</p>\n<p>好像有些晚的更新。</p>\n<p>出正式成绩之后被教练赶回教室补了一段时间文化课，感觉刚刚度过了人生中最长的一星期（</p>\n<p>具体成绩差不多是100+100+20+100+65+36=421。</p>\n<p>以上。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p><del>€€£：禁赛警告。</del></p>","more":"<h1 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h1><p>自从一周前放假回来以后，我就开始一颓不振：</p>\n<p><img src=\"https://i.loli.net/2018/11/09/5be4e6d8c122f.png\" alt=\"\"></p>\n<p>明天就是NOIp2018复赛了，大概算是我人生中的第四场NOIp了。上午我和平时一样在颓废<del>，同时看着其他dalao随手切神仙题</del>。然后我看到yemdalao写了一篇<a href=\"https://www.cnblogs.com/taduro/p/9933329.html\">NOIp2018<del>禁赛记</del>游记</a><del>，想着禁赛真有趣</del>，我就写下了这篇游记。</p>\n<blockquote>\n<p>其他dalao都在机房补文化课而我在颓blog（</p>\n<p>于是，此处以下，Updated on 2018-11-12。</p>\n<blockquote>\n<p>Updated on 2018-11-14</p>\n<p>看了其他dalao的blog发现自己写得实在是太菜了，于是大改一波。</p>\n<p>但就算这样好像也没什么可写的。看到其他dalao用了大段文字来描写自己做题时的心理活动，但是……今年的题都是简单的想一想就会了，难的看一眼就能明白谁打正解谁退役，能有什么心理活动啊（逃</p>\n</blockquote>\n</blockquote>\n<p>中午去超市随便买了点吃的就走了，然后上了车直接就睡过去了，到了CYYZ大概15点了。</p>\n<p>然后一抽考场发现是外校，赛前先<code>rp--</code>。</p>\n<p>然后和wzxdalao分到了一个宿舍。听说他被mhr学长奶了一路，我大概是被传染了吧（</p>\n<p>下午一直在换宿舍，理由都差不多，就是其他学校的同一个学校的想住在同一个宿舍，莫名感觉rp被补回来了（</p>\n<p>除那之外就没啥了，算是颓了一个下午。</p>\n<p>晚上试机，庆幸自己用的是Win7，然后对面机房就是XP，下午的rp看来补得有效（</p>\n<p>试机就xjb打了个st表，还有我平时用的快读板子，当时是都存到E盘了，说不定明天会用得上。</p>\n<p>反正板子是不可能打炸的，这辈子都不可能的。</p>\n<p>因为某些原因，试机时间被推迟了，回来已经过了10点，就直接睡了。</p>\n<h1 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h1><p>早上懒得吃早饭了，就一个人在宿舍里发呆，想着自己肯定什么东西都带全了，结果一到考场发现准考证没带，尴尬.jpg。不过还好，我被允许先进考场了。</p>\n<p>然后一打开E盘发现被清了，只有题目。</p>\n<p>Day1的解压密码是不是就我一个人不懂啊（</p>\n<p>那么于是，到了8：30，我点开今天的题目，定神一看……</p>\n<h2 id=\"T1\"><a href=\"#T1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5019\">T1</a></h2><p>智障单调栈，有不开数组的做法，不过我懒得细想了，反正<code>score+=100</code>。</p>\n<h2 id=\"T2\"><a href=\"#T2\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5020\">T2</a></h2><p>稍微想一想不难想到完全背包，<code>score+=100</code>。</p>\n<h2 id=\"T3\"><a href=\"#T3\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5021\">T3</a></h2><p>神仙树上操作……切不动切不动。我就打了$m=1$的20分和树是一条链中的5分。</p>\n<p>估分100+100+25=225。</p>\n<p>出考场后……啥啥啥，今天考了三道原题？爆破！把NOIp爆破掉，并从此以后不再接受CCF的公开赛！（</p>\n<p>前两题没什么意外的。不过，是不是是个人T3就能骗到55分啊（</p>\n<p>那我可真是太菜了（</p>\n<p>下午日常发呆，然后晚上是快乐的颓废时间。</p>\n<p>中午买的零食一个下午就全吃完了（</p>\n<h1 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h1><p>早上莫名起不来，然后就没吃早饭。</p>\n<p>这次我东西是真的带全了（</p>\n<p>Day2的解压密码依然不懂，然后是今天的题目：</p>\n<h2 id=\"T1-1\"><a href=\"#T1-1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5022\">T1</a></h2><p>NOIp开始考基环树了么……不过还算简单，找到环以后暴力断边然后dfs即可。听crydalao说有$O(n)$的做法，不过他调了两个小时还是放弃了。</p>\n<p>现在回想起来，我当时用了个什么智障存图方法啊……先开个邻接表，对每个点<code>std::sort</code>一遍。然后维护一个邻接矩阵处理断边（</p>\n<p>为什么不直接用邻接矩阵呢（</p>\n<h2 id=\"T2-1\"><a href=\"#T2-1\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5023\">T2</a></h2><p>神仙结论题……切不动切不动。随便打了个爆搜找到了$n=2$和$n=3$时的规律。虽然说$n=1$时规律很明显，然而我当时智障忘判断了（</p>\n<h2 id=\"T3-1\"><a href=\"#T3-1\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5024\">T3</a></h2><p>究极神仙题，读完题yy出ddp，然而不会，只拿了$O(nm)$的44分。</p>\n<p>估分100+65+44=204（不存在的，肯定比这个低）。</p>\n<p>这么两天算下来，乐观估计的话，差不多有100+100+25+100+65+44=434分，保守估计应该不会掉到400分以下，应该算是稳了吧……</p>\n<p>不不不不存在的，我一定会六道题全部写炸然后华丽爆零并退役（</p>\n<p>好像其他dalao们都有这样那样乱七八糟的地方出锅了啊……</p>\n<p>下午请假回家开心地颓废。</p>\n<h1 id=\"Extra-Notes\"><a href=\"#Extra-Notes\" class=\"headerlink\" title=\"Extra Notes\"></a>Extra Notes</h1><p>果然是等到NOIp结束后才更新的。</p>\n<p>以及，我比较菜，第一次写游记，写的<del>可能</del>一定很菜，所以……算了，告辞。</p>\n<blockquote>\n<p>Updated on 2018-11-26</p>\n<p>好像有些晚的更新。</p>\n<p>出正式成绩之后被教练赶回教室补了一段时间文化课，感觉刚刚度过了人生中最长的一星期（</p>\n<p>具体成绩差不多是100+100+20+100+65+36=421。</p>\n<p>以上。</p>\n</blockquote>"},{"title":"关于最优化分块时间复杂度的研究报告","date":"2018-12-19T12:19:18.000Z","mathjax":true,"_content":"最近在刷Ynoi，然后卡常卡到自闭，于是来系统地研究一下分块的复杂度。\n\n<!-- more -->\n\n假设我们有一个长度为$n$的序列，块的大小是$x$，令$y=\\cfrac{n}{x}$。对于每一次修改操作，我们的运算量是$\\text{A}x+\\text{B}y$。根据均值不等式\n\n$$\\cfrac{1}{2}(x+y)\\geqslant\\sqrt{xy}$$\n\n我们有\n\n$$\\text{A}x+\\text{B}y\\geqslant2\\sqrt{\\text{AB}n}$$\n\n当且仅当$x=\\sqrt{\\cfrac{\\text{B}}{\\text{A}}n}$时取等号。此时时间复杂度最小，为$O(\\sqrt{\\text{AB}n})$。\n\n以上。\n","source":"_posts/2018-12-19-sqrt-decomposition-complexity-optimization.md","raw":"---\ntitle: 关于最优化分块时间复杂度的研究报告\ndate: 2018-12-19 20:19:18\ntags:\n  - 分块\ncategories:\n  - 研究报告\nmathjax: true\n---\n最近在刷Ynoi，然后卡常卡到自闭，于是来系统地研究一下分块的复杂度。\n\n<!-- more -->\n\n假设我们有一个长度为$n$的序列，块的大小是$x$，令$y=\\cfrac{n}{x}$。对于每一次修改操作，我们的运算量是$\\text{A}x+\\text{B}y$。根据均值不等式\n\n$$\\cfrac{1}{2}(x+y)\\geqslant\\sqrt{xy}$$\n\n我们有\n\n$$\\text{A}x+\\text{B}y\\geqslant2\\sqrt{\\text{AB}n}$$\n\n当且仅当$x=\\sqrt{\\cfrac{\\text{B}}{\\text{A}}n}$时取等号。此时时间复杂度最小，为$O(\\sqrt{\\text{AB}n})$。\n\n以上。\n","slug":"sqrt-decomposition-complexity-optimization","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzx000hmku9hgv1eugw","content":"<p>最近在刷Ynoi，然后卡常卡到自闭，于是来系统地研究一下分块的复杂度。</p>\n<a id=\"more\"></a>\n<p>假设我们有一个长度为$n$的序列，块的大小是$x$，令$y=\\cfrac{n}{x}$。对于每一次修改操作，我们的运算量是$\\text{A}x+\\text{B}y$。根据均值不等式</p>\n<script type=\"math/tex; mode=display\">\\cfrac{1}{2}(x+y)\\geqslant\\sqrt{xy}</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">\\text{A}x+\\text{B}y\\geqslant2\\sqrt{\\text{AB}n}</script><p>当且仅当$x=\\sqrt{\\cfrac{\\text{B}}{\\text{A}}n}$时取等号。此时时间复杂度最小，为$O(\\sqrt{\\text{AB}n})$。</p>\n<p>以上。</p>\n","site":{"data":{}},"excerpt":"<p>最近在刷Ynoi，然后卡常卡到自闭，于是来系统地研究一下分块的复杂度。</p>","more":"<p>假设我们有一个长度为$n$的序列，块的大小是$x$，令$y=\\cfrac{n}{x}$。对于每一次修改操作，我们的运算量是$\\text{A}x+\\text{B}y$。根据均值不等式</p>\n<script type=\"math/tex; mode=display\">\\cfrac{1}{2}(x+y)\\geqslant\\sqrt{xy}</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">\\text{A}x+\\text{B}y\\geqslant2\\sqrt{\\text{AB}n}</script><p>当且仅当$x=\\sqrt{\\cfrac{\\text{B}}{\\text{A}}n}$时取等号。此时时间复杂度最小，为$O(\\sqrt{\\text{AB}n})$。</p>\n<p>以上。</p>"},{"mathjax":true,"date":"2018-12-24T02:27:06.000Z","title":"关于块状分块的研究报告","password":"qwijfpw49qg][pl}_,rp","abstract":"该文章已被加密","message":"输入密码继续阅读","_content":"之前的机房珂学家发明的船新的数据结构。\n\nsto __Juan\\_feng__ orz\n\n<!-- more -->\n\n[模板题](https://www.luogu.org/problemnew/show/T64137)\n\n那么这道题怎么做呢？\n\n- 线段树！不好意思卡空间，只给了⑨分。\n- 树状数组！不好意思不保证乘的数有逆元，只给了59分。\n- 分块！不好意思复杂度太大，只给了3分~~，和暴力一个分~~。\n\n那么这道题怎么做呢？如标题所示，块状分块。\n\n就是说，我们先把原序列分成很多小块，然后再将这些小块分成大块。每次操作时分为大整块、小整块、小散块三部分考虑。\n\n假设说我们一个大块$\\text{A}$个数，一个小块$\\text{B}$个数，每次查询的时间复杂度就是\n\n$$O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})$$\n\n我们令\n\n$$x=\\cfrac{n}{\\text{A}}\\;\\;y=\\cfrac{\\text{A}}{\\text{B}}\\;\\;z=\\text{B}$$\n\n$$xyz=n$$\n\n$$\\begin{cases}\n&x+y\\geqslant 2\\sqrt{xy}\\\\\n&y+z\\geqslant 2\\sqrt{yz}\\\\\n&x+z\\geqslant 2\\sqrt{xz}\n\\end{cases}$$\n\n当\n\n$$x=y=z=n^{\\frac{1}{3}}$$\n\n时，以上三式均取等号，此时\n\n$$\\text{A}=n^{\\frac{2}{3}}\\;\\;\\text{B}=n^{\\frac{1}{3}}$$\n\n$$O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})=O(n^{\\frac{1}{3}})$$\n\n就是这样的一个神奇的数据结构。\n\n---\n\n胡扯开始。\n\n以上，我们通过套两层分块的方式将单次询问的时间复杂度从$O(\\sqrt{n})$砍到了$O(n^{\\frac{1}{3}})$也就是$O(\\sqrt[3]{n})$。我们猜想，如果说我们套$k$层分块，单次询问的时间复杂度就是$O(n^{\\frac{1}{k+1}})$，当$k$趋向于正无穷大时（？？？），我们就得到了一个单次询问$O(1)$的优秀数据结构（光速逃\n\n胡扯结束。\n\n---\n\n代码先不贴（\n","source":"_posts/2018-12-24-block-decomposition.md","raw":"---\nmathjax: true\ndate: 2018-12-24 10:27:06\ntitle: 关于块状分块的研究报告\ntags:\n  - 分块\n  - 块状分块\ncategories:\n  - 研究报告\npassword: qwijfpw49qg][pl}_,rp\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\n---\n之前的机房珂学家发明的船新的数据结构。\n\nsto __Juan\\_feng__ orz\n\n<!-- more -->\n\n[模板题](https://www.luogu.org/problemnew/show/T64137)\n\n那么这道题怎么做呢？\n\n- 线段树！不好意思卡空间，只给了⑨分。\n- 树状数组！不好意思不保证乘的数有逆元，只给了59分。\n- 分块！不好意思复杂度太大，只给了3分~~，和暴力一个分~~。\n\n那么这道题怎么做呢？如标题所示，块状分块。\n\n就是说，我们先把原序列分成很多小块，然后再将这些小块分成大块。每次操作时分为大整块、小整块、小散块三部分考虑。\n\n假设说我们一个大块$\\text{A}$个数，一个小块$\\text{B}$个数，每次查询的时间复杂度就是\n\n$$O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})$$\n\n我们令\n\n$$x=\\cfrac{n}{\\text{A}}\\;\\;y=\\cfrac{\\text{A}}{\\text{B}}\\;\\;z=\\text{B}$$\n\n$$xyz=n$$\n\n$$\\begin{cases}\n&x+y\\geqslant 2\\sqrt{xy}\\\\\n&y+z\\geqslant 2\\sqrt{yz}\\\\\n&x+z\\geqslant 2\\sqrt{xz}\n\\end{cases}$$\n\n当\n\n$$x=y=z=n^{\\frac{1}{3}}$$\n\n时，以上三式均取等号，此时\n\n$$\\text{A}=n^{\\frac{2}{3}}\\;\\;\\text{B}=n^{\\frac{1}{3}}$$\n\n$$O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})=O(n^{\\frac{1}{3}})$$\n\n就是这样的一个神奇的数据结构。\n\n---\n\n胡扯开始。\n\n以上，我们通过套两层分块的方式将单次询问的时间复杂度从$O(\\sqrt{n})$砍到了$O(n^{\\frac{1}{3}})$也就是$O(\\sqrt[3]{n})$。我们猜想，如果说我们套$k$层分块，单次询问的时间复杂度就是$O(n^{\\frac{1}{k+1}})$，当$k$趋向于正无穷大时（？？？），我们就得到了一个单次询问$O(1)$的优秀数据结构（光速逃\n\n胡扯结束。\n\n---\n\n代码先不贴（\n","slug":"block-decomposition","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nfzy000imku9h70369o1","content":"<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"输入密码继续阅读\" />\n    <label for=\"pass\">输入密码继续阅读</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\nU2FsdGVkX19RVSEGK3cfSxaf7ecgUpwtQOulAAw2jg8ruH0G25PSkGnA8i/W89AMX1sjIk/FfrzLTGrwtetKC8hL+iQ+0+L0zbvvAL+EhBHIl+y610yY/tKsAYNs+PfwRBgLTmrnpknpuXOjEoSdOG4ZXhtVUECmBxOnrX+cjSmOYxuNisE9LyLHtYhgplde+8bzsoXdR9GtQP3NJB5XUVFdW7o41iQLcPynU9egcO+01yP+mv3CyiqaLRQdsRVK3dOBIeqQKFWC+rKhWzN7vwetgRviO+FKV44orT9Qorv6mu4OWpyv6jZOwUoOWaNAXhx0GZOBlhMnCdjQo/nSRC8s+CS7KPdF94q8v/jlZ6J/umGtle0JC2bXGaoZpPhjfEeJDtIoLmS7LnOkiC6y98fr1BGMW6zG/yOJzS3BEBSeB68l6+o84ctiv0PPy2PSD4ksMEBYwhdaf9SCxuNBPXsBhP1lMj1gJsTw/5DXFQ/anfTWXU2D/RhlIVn8nNq1tOOWGGgdCzXLPUL1/fMBJ6Zo4TViJUriu2N1kIld00MDsWf/YP5kQ7/ZxFEVPJ3PL4JfHUsi5+5Olj0XXP14iGxuvOAnCY4XxnNk37dSyin5TsluZkcK0BMhrZmr9wNLn1tBERMAunK+HiUjshXp4iEZAFPK0D6orJEBu4zmlpHRnTOy1jPA4MUmOYBZyJ7NIW5yKdRJMZX4eB0sfDZ0b5BXFwaqJ1lw/H7QIQpvT/uB7rCIdAtRGyjdzwAs9dHUQrcOWCgB44hq9lUuWo3+Eoi9b3kdGgdCQ1FuPnK2tPejT16qf/GvWrAqldRBzjuVG/FYYTKQp3d1cgz6gjrj7u4ywozPkn46At84P3F9YWLg5AgZls08rkuVJh+O0VCG4LQ6dnXm1Bu0ruky0mdwGsCkcrgSYk1OYGaW3t+kpepsIbI9z1FQvu3YcCiqMvghb3XJ0KJw4rsBKzEtVZcXOuyxh0ShdShoHCvh+UcM4t7X0yTl9Dy6oPtjuepuR6FWAVqeq4oWRLj1p78pZPD/99VST3Us6/E19o/JG5lY4pJVbCq6kHlBrCaWHPD0DCuwJ3jhvIh4r6WUZ9MO9R1n0qqBo4Ym9QTaLIwx7Tv2TaWdNOkv8pN1M5VBy9ivdtYUBnZ55mRzj/wOtbC4mlwMeWNNJxtmfQqPs2OvAz7dnodD5odkqcF2mXjahzlv+7I9cNQRHUd9kqWSCjxY3qqdwrH8yI/H1B2Gstuf9IKDpDkRLcEHf9bXiW/n6S0pJ7W53cMh+YONNYni0BmxXqcfJHSkT7bw4BbyqL9ySnhgJLMkqnwCLVwdhiDU26CQDdsoefPI99x+VqmLgy90NaRq6xtkQNeLAMarp5fHv4D0nfvZe/CQ9CWTEQu5CidK8fRTT35oAEj4pgcqOhXE/g6aYe7BV44bVhFgQYrHQVcpSaTtrT+6R5va5w714RsN2vFXjKBIKmfdrFILR65/9tpcgducGd5sTYEGC00qlK6fdRljeFPZZLT5ogyhvI8Yx0K2ikMNmhSs654NuW1cg9qixKRuLnGaQKzxnY+M+BPnjetKvBech8nIA6bOscSfcRBqGlt9wKN6Kgm+/HCEepYww38oFuMtS2Qqw61/RBUBPYbFMkpsVkyq+X80f4cAqEuWvIwMPa0+82FvxV673pKxhcVzyETms5DhdDVxyozpI9c5AO7qjPXPNpqfpoHAjmK8vU5O5F+krjfGUrzL0LPWWJ1hVStn4SXVv7P4cCJHsBUtDFQQetq6oQERL+tTGFi99wsCtbaXYzXNwu7oaj4RFYblPMMXNZe0a9TLKm80Ho9eZiRurpMXxS5aarW2GiWkvyEz5yu38Ju7/tcpYGZuVk7kc7wae0MQNr69TGZp2LOq/4AlB9KSIDJOmtCEZrtFD3Tg4MuMoYQu9j8L/YVPHadHR07a2FVmc6Ft71znAf4J+I1P9wstSOv4CjZQ/c/s/FqmGg1wqBAlS/NtjOawwz5Afu//IDDvdjzj3fNM11s3TWODAkUW813Dn00lXkJ0AUZyf/gHw1tMo1Qq2MEtHz8h3KiIG5cnsICJFEbAIuKKyVFgFGe8EAXsmKjK6e6U390qaQOLqjtS4oGTCVEsWWkMpBsHNaCHJKNu33SlWPYhOSDetc1N37DzKutWBCBZdEILmY+kBU6bZKoS54TP2m1fxcfota4TZl6WmFFsfTOnyK6fkAAMC1HhBvqoMXvmOrlcEHLrBmLwS1GSUfNnsiQ4EofEAd4l4wMwfwobJZJq6HBy3+bOOySA8czFphE05QA3EoPYxZpbzq4GIIz93h+QL8gM5JwLyms+hbjwKDUNuhkgZzT1gL6FBmfWLZv2NUKV6AicK+zKYIYN9JlJ1oWuCIG3l9Ie7peGXVWO9DcHYl1x8ne7uWXDHX3W2Ma1yjrNz+T2rW5/b9Xi+vqeY5PwLRxmNCfJ8uHu1kyr++LvPlDj5SdqirssUGXmI5ThSX/ebXZAahcJmk/UAOpgVJlIrEe8MDriY+ketuRtMVrxhCU0VISHnQbFiEcJDWqRIQUH5eBc+renRRWNF1/TMX1Pfj5fulzMuY5AOlHez3ywBMGHnxHjQZLGDbYyllm1erSpa7uIyPa2epEEPDYjT9l38ilHaMbGki6TJvyNvQuWadRi3eNOJfYGKqMzEEAtMv0iZks1VmOTXzcqEHost97bb4RUu4/a3k9cczkSLz/rGZu5ziGcWaFJuw/CqBEfV7lSn7xG5jfZdsKUP9o3z/ANfOIrhf7WTcSwJ8O4NrkBukNPswLp+RxZCEJnWNft5r6y+xu0VKKMjN5nRe4YVnfsQiuZnpKzNCpQN1S+ugRHOtISr5cMVbIIuDNbIUGwTiqR+kmYkFns58RN0L3MhbyzxC7Iq5WnjiI7WdbKr0nFfk0avC2lUR0tVn+0rT0ypnf1rR0VtwHnHPFIPOmPQlcgQ2TjfKGCnDZKMk5FHXS0xF/aG+A8WRbhEjFW7GCCKxTm2a7lniwPv9dO1G8QhU/1PP0KrCfcFWfR9VA8v/cL1jy6MHka7OI6Db5D+4ygPaaq9J4ufU1NKcqy3z5xaY7Xt4AL5RLdsdicWeOhYzIg0eGjxDL4WI3AoUrLrUwxLQ5fgeRfa6zno1kYGH0+CE+RcgCeKRdWXwmTspCPN59zh89cyCFvaYJK3glytrC+SwkPDCaAn+eWIDrxYddRnm9yltrN8tfEtNvIGfqeLSk26N+KBnh7+j1L5RpZpL3bZnp2oQwjYsbQn5XvJ76ggtw7snFi9Lj8IGQ1dMZJYYnqcYZxUrzj1lJZ+rIeP3gP3aMQ5echwfoA+AsuhhzOSn5RH5Mn1llr0UWQEXWkWh8M6EDoglKIF3o3ZwJEH6nsGzRzvRYbZ1FdvhIVHzI5cogyMXCKuMINxSBJN8qIKtpySn4eQWXKnuRZRdyj2ySP30kCg4CAZYXCUFn1PIT7Zi/epV0pPnY7SRV4sRrVq7F4MEMoULFtJL8t9jG6zHCPDkIEdLSnPuVeAdYF1/3HvgArGrnkhGeghpOSnU0tiaBFCLxWdUw2OaqxA3pkdc+YvPPs/BETYk1DzKuaudSKZMRufb20TO7Uj4FPcdI0h6BZCHU1345/twshfOvjeR3LXhG8L6+JMYYOZjc6EV378PCS5ewWKBXA99DzO6V98ESNK6jlxPW6f9LBywgsE13yfs0EbMj3yevtdT2hENguVpA/4+ve90CLMWCxfVgVpBsOL1NQTUQThOxUUWtISrq+jfbL7PGfVrJ1xd2uYQPmSUnA6wxpwM2krL0jxR4vUkr7iBG8k5DygQqWhSDl6xmUGd1Qrinm1t7nb4zMvC4qgT404DxpJWtd5UJIBYTzIQL2M+HBBDsYMcCvn4TTdh+YCijJJ/AkQX2+FOrNpV6EIIK8dWF7SGrKCImfcHBEz9NjhKZGL8t+kSAN5nlI3ZJHc1C0NLRI63SG0VudR4JXUWR/h/4Doi/+3kDQ3rxB3qCFgZSglI7HGCRNPeZp4MN9KJcynRAt4pZN+Kwv3DCRtt+TqUaAhRmll/pSPDkF4IX2dyj/AggAdFn2le0UGNHF7KbvHlExfs9emR/hEuMIw0WCAt25M+6/C0ChClQc7YJ7KsZJ4u+dgdmZJ52zHzf52WIdEMwwCZvTCaQVh9hzoepeVGqxveu6jts8MSZfKk6XUjsTDtmG46GMGm42Vu1l5bo7fwAAAHbRXbFPhfK9Y1HcTFZH/7uOwdVQtDqErNJqyDVTT5OSkXSPQvtisKw/A58n7bpiUTe2QNoDO2NJooHDzo7V84xvULmxx6uD0tlqAnYcd7KQaDe6kSRwOpe5f1KlJvcUCkcnG2MqdpdKblu+GcBlBFlbuAaip1OxYDtP1ydaf5XYNnBFgcM8sBwvXFtzvgSPS+V/NHv1N4UrBTjaH0zzRN9kdxKF89ZugmCVkrI3852A8ptJK/BvZdCyUE8yZtdt0rwAiZod7noT2J78ls/T/9E5o4tO+7IEzDYOG7RaM1xPNLMtd5TPgBiBM60hJwKXUcK92dxRaliT+yw+JapI+H03/iY0Ms329gTm0LzaWLWdNTrYbkorxHbOyiqUc8ohfHFEcGkBkhDUh0VyvrJ6Z7To+KG249W1wZ7rYV8vAVpFIZ5YKM8mfWXM6SFf+W1p/yXjd1n2hCvPTB+waRPeRpV419YJLati3dd7SJkQWVae6/kUntJep8PWR490Mx3cwsGWfDcCzywO1NT+cJ2kbFqncqzRukOpaET7B1kQzUCqlMkiODjCKvD7jsOQOG1zM7AW6XuPlYgEpXiOjVcE2VbogmqWDdhcKzrPQwaLNFKj5WahFw/n6FzcgrN++aLPuJBwVJ9+iwwX6fT43X3TWd5yOoZDorA1wuH7vIIYlN03r6v/vsFltqKIJiguF9nimaeQ6ojnrQT005CnHt9AA7Dw8XEZsiDZzIbakeHLAabEqELspTSAMKSyiZcbiWKwXpUr6b/uyz8S/xSzMU4ohHB7TeHh8MvbV1UWIUXZBWGaiLDNNeJ/ZmhXehVWUHI08Nx7iRiAXE3RSwpLVlTqpf/GbkkXzuOSo5dMwPrhECmybdQMJt7oO0Zpg5AKVZA9um3NMJBfc8mA223urMbW9aPbZ9ykeGvg3x5AeNq4aRNqODzPInSuIBQhPpU1twLu9Bsz5bbtSm793N7RW2I4Krfahx9X3eLqhp4HjDY07mOpEx4/bRQZbs8X+ubFTpNrhxBEmGib75p4hyjFna50tM7BEcIxcNgU6/xy+u5Z1yRoEUAqMH0gklIFW4zsScLJ243Z2bP75KkGOKLWaRzhnfWWLzFBhsoMWVyoN/0QfJmDkm5jak4fylvXlHJ4ScbHz9sefpHodpW+NHrKmd3XPWJCym6kY+YeUVKGHlgMLod72aRi4B9H6WUwPDbUok/oEpE2GjsXse/tE9x0AoTIBKr0YIIXN8M4++s=\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"该文章已被加密","more":"该文章已被加密","origin":"<p>之前的机房珂学家发明的船新的数据结构。</p>\n<p>sto <strong>Juan_feng</strong> orz</p>\n<a id=\"more\"></a>\n<p><a href=\"https://www.luogu.org/problemnew/show/T64137\">模板题</a></p>\n<p>那么这道题怎么做呢？</p>\n<ul>\n<li>线段树！不好意思卡空间，只给了⑨分。</li>\n<li>树状数组！不好意思不保证乘的数有逆元，只给了59分。</li>\n<li>分块！不好意思复杂度太大，只给了3分<del>，和暴力一个分</del>。</li>\n</ul>\n<p>那么这道题怎么做呢？如标题所示，块状分块。</p>\n<p>就是说，我们先把原序列分成很多小块，然后再将这些小块分成大块。每次操作时分为大整块、小整块、小散块三部分考虑。</p>\n<p>假设说我们一个大块$\\text{A}$个数，一个小块$\\text{B}$个数，每次查询的时间复杂度就是</p>\n<script type=\"math/tex; mode=display\">O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})</script><p>我们令</p>\n<script type=\"math/tex; mode=display\">x=\\cfrac{n}{\\text{A}}\\;\\;y=\\cfrac{\\text{A}}{\\text{B}}\\;\\;z=\\text{B}</script><script type=\"math/tex; mode=display\">xyz=n</script><script type=\"math/tex; mode=display\">\\begin{cases}\n&x+y\\geqslant 2\\sqrt{xy}\\\\\n&y+z\\geqslant 2\\sqrt{yz}\\\\\n&x+z\\geqslant 2\\sqrt{xz}\n\\end{cases}</script><p>当</p>\n<script type=\"math/tex; mode=display\">x=y=z=n^{\\frac{1}{3}}</script><p>时，以上三式均取等号，此时</p>\n<script type=\"math/tex; mode=display\">\\text{A}=n^{\\frac{2}{3}}\\;\\;\\text{B}=n^{\\frac{1}{3}}</script><script type=\"math/tex; mode=display\">O(\\cfrac{n}{\\text{A}}+\\cfrac{\\text{A}}{\\text{B}}+\\text{B})=O(n^{\\frac{1}{3}})</script><p>就是这样的一个神奇的数据结构。</p>\n<hr>\n<p>胡扯开始。</p>\n<p>以上，我们通过套两层分块的方式将单次询问的时间复杂度从$O(\\sqrt{n})$砍到了$O(n^{\\frac{1}{3}})$也就是$O(\\sqrt[3]{n})$。我们猜想，如果说我们套$k$层分块，单次询问的时间复杂度就是$O(n^{\\frac{1}{k+1}})$，当$k$趋向于正无穷大时（？？？），我们就得到了一个单次询问$O(1)$的优秀数据结构（光速逃</p>\n<p>胡扯结束。</p>\n<hr>\n<p>代码先不贴（</p>\n","encrypt":true,"template":"<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"输入密码继续阅读\" />\n    <label for=\"pass\">输入密码继续阅读</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\nU2FsdGVkX19RVSEGK3cfSxaf7ecgUpwtQOulAAw2jg8ruH0G25PSkGnA8i/W89AMX1sjIk/FfrzLTGrwtetKC8hL+iQ+0+L0zbvvAL+EhBHIl+y610yY/tKsAYNs+PfwRBgLTmrnpknpuXOjEoSdOG4ZXhtVUECmBxOnrX+cjSmOYxuNisE9LyLHtYhgplde+8bzsoXdR9GtQP3NJB5XUVFdW7o41iQLcPynU9egcO+01yP+mv3CyiqaLRQdsRVK3dOBIeqQKFWC+rKhWzN7vwetgRviO+FKV44orT9Qorv6mu4OWpyv6jZOwUoOWaNAXhx0GZOBlhMnCdjQo/nSRC8s+CS7KPdF94q8v/jlZ6J/umGtle0JC2bXGaoZpPhjfEeJDtIoLmS7LnOkiC6y98fr1BGMW6zG/yOJzS3BEBSeB68l6+o84ctiv0PPy2PSD4ksMEBYwhdaf9SCxuNBPXsBhP1lMj1gJsTw/5DXFQ/anfTWXU2D/RhlIVn8nNq1tOOWGGgdCzXLPUL1/fMBJ6Zo4TViJUriu2N1kIld00MDsWf/YP5kQ7/ZxFEVPJ3PL4JfHUsi5+5Olj0XXP14iGxuvOAnCY4XxnNk37dSyin5TsluZkcK0BMhrZmr9wNLn1tBERMAunK+HiUjshXp4iEZAFPK0D6orJEBu4zmlpHRnTOy1jPA4MUmOYBZyJ7NIW5yKdRJMZX4eB0sfDZ0b5BXFwaqJ1lw/H7QIQpvT/uB7rCIdAtRGyjdzwAs9dHUQrcOWCgB44hq9lUuWo3+Eoi9b3kdGgdCQ1FuPnK2tPejT16qf/GvWrAqldRBzjuVG/FYYTKQp3d1cgz6gjrj7u4ywozPkn46At84P3F9YWLg5AgZls08rkuVJh+O0VCG4LQ6dnXm1Bu0ruky0mdwGsCkcrgSYk1OYGaW3t+kpepsIbI9z1FQvu3YcCiqMvghb3XJ0KJw4rsBKzEtVZcXOuyxh0ShdShoHCvh+UcM4t7X0yTl9Dy6oPtjuepuR6FWAVqeq4oWRLj1p78pZPD/99VST3Us6/E19o/JG5lY4pJVbCq6kHlBrCaWHPD0DCuwJ3jhvIh4r6WUZ9MO9R1n0qqBo4Ym9QTaLIwx7Tv2TaWdNOkv8pN1M5VBy9ivdtYUBnZ55mRzj/wOtbC4mlwMeWNNJxtmfQqPs2OvAz7dnodD5odkqcF2mXjahzlv+7I9cNQRHUd9kqWSCjxY3qqdwrH8yI/H1B2Gstuf9IKDpDkRLcEHf9bXiW/n6S0pJ7W53cMh+YONNYni0BmxXqcfJHSkT7bw4BbyqL9ySnhgJLMkqnwCLVwdhiDU26CQDdsoefPI99x+VqmLgy90NaRq6xtkQNeLAMarp5fHv4D0nfvZe/CQ9CWTEQu5CidK8fRTT35oAEj4pgcqOhXE/g6aYe7BV44bVhFgQYrHQVcpSaTtrT+6R5va5w714RsN2vFXjKBIKmfdrFILR65/9tpcgducGd5sTYEGC00qlK6fdRljeFPZZLT5ogyhvI8Yx0K2ikMNmhSs654NuW1cg9qixKRuLnGaQKzxnY+M+BPnjetKvBech8nIA6bOscSfcRBqGlt9wKN6Kgm+/HCEepYww38oFuMtS2Qqw61/RBUBPYbFMkpsVkyq+X80f4cAqEuWvIwMPa0+82FvxV673pKxhcVzyETms5DhdDVxyozpI9c5AO7qjPXPNpqfpoHAjmK8vU5O5F+krjfGUrzL0LPWWJ1hVStn4SXVv7P4cCJHsBUtDFQQetq6oQERL+tTGFi99wsCtbaXYzXNwu7oaj4RFYblPMMXNZe0a9TLKm80Ho9eZiRurpMXxS5aarW2GiWkvyEz5yu38Ju7/tcpYGZuVk7kc7wae0MQNr69TGZp2LOq/4AlB9KSIDJOmtCEZrtFD3Tg4MuMoYQu9j8L/YVPHadHR07a2FVmc6Ft71znAf4J+I1P9wstSOv4CjZQ/c/s/FqmGg1wqBAlS/NtjOawwz5Afu//IDDvdjzj3fNM11s3TWODAkUW813Dn00lXkJ0AUZyf/gHw1tMo1Qq2MEtHz8h3KiIG5cnsICJFEbAIuKKyVFgFGe8EAXsmKjK6e6U390qaQOLqjtS4oGTCVEsWWkMpBsHNaCHJKNu33SlWPYhOSDetc1N37DzKutWBCBZdEILmY+kBU6bZKoS54TP2m1fxcfota4TZl6WmFFsfTOnyK6fkAAMC1HhBvqoMXvmOrlcEHLrBmLwS1GSUfNnsiQ4EofEAd4l4wMwfwobJZJq6HBy3+bOOySA8czFphE05QA3EoPYxZpbzq4GIIz93h+QL8gM5JwLyms+hbjwKDUNuhkgZzT1gL6FBmfWLZv2NUKV6AicK+zKYIYN9JlJ1oWuCIG3l9Ie7peGXVWO9DcHYl1x8ne7uWXDHX3W2Ma1yjrNz+T2rW5/b9Xi+vqeY5PwLRxmNCfJ8uHu1kyr++LvPlDj5SdqirssUGXmI5ThSX/ebXZAahcJmk/UAOpgVJlIrEe8MDriY+ketuRtMVrxhCU0VISHnQbFiEcJDWqRIQUH5eBc+renRRWNF1/TMX1Pfj5fulzMuY5AOlHez3ywBMGHnxHjQZLGDbYyllm1erSpa7uIyPa2epEEPDYjT9l38ilHaMbGki6TJvyNvQuWadRi3eNOJfYGKqMzEEAtMv0iZks1VmOTXzcqEHost97bb4RUu4/a3k9cczkSLz/rGZu5ziGcWaFJuw/CqBEfV7lSn7xG5jfZdsKUP9o3z/ANfOIrhf7WTcSwJ8O4NrkBukNPswLp+RxZCEJnWNft5r6y+xu0VKKMjN5nRe4YVnfsQiuZnpKzNCpQN1S+ugRHOtISr5cMVbIIuDNbIUGwTiqR+kmYkFns58RN0L3MhbyzxC7Iq5WnjiI7WdbKr0nFfk0avC2lUR0tVn+0rT0ypnf1rR0VtwHnHPFIPOmPQlcgQ2TjfKGCnDZKMk5FHXS0xF/aG+A8WRbhEjFW7GCCKxTm2a7lniwPv9dO1G8QhU/1PP0KrCfcFWfR9VA8v/cL1jy6MHka7OI6Db5D+4ygPaaq9J4ufU1NKcqy3z5xaY7Xt4AL5RLdsdicWeOhYzIg0eGjxDL4WI3AoUrLrUwxLQ5fgeRfa6zno1kYGH0+CE+RcgCeKRdWXwmTspCPN59zh89cyCFvaYJK3glytrC+SwkPDCaAn+eWIDrxYddRnm9yltrN8tfEtNvIGfqeLSk26N+KBnh7+j1L5RpZpL3bZnp2oQwjYsbQn5XvJ76ggtw7snFi9Lj8IGQ1dMZJYYnqcYZxUrzj1lJZ+rIeP3gP3aMQ5echwfoA+AsuhhzOSn5RH5Mn1llr0UWQEXWkWh8M6EDoglKIF3o3ZwJEH6nsGzRzvRYbZ1FdvhIVHzI5cogyMXCKuMINxSBJN8qIKtpySn4eQWXKnuRZRdyj2ySP30kCg4CAZYXCUFn1PIT7Zi/epV0pPnY7SRV4sRrVq7F4MEMoULFtJL8t9jG6zHCPDkIEdLSnPuVeAdYF1/3HvgArGrnkhGeghpOSnU0tiaBFCLxWdUw2OaqxA3pkdc+YvPPs/BETYk1DzKuaudSKZMRufb20TO7Uj4FPcdI0h6BZCHU1345/twshfOvjeR3LXhG8L6+JMYYOZjc6EV378PCS5ewWKBXA99DzO6V98ESNK6jlxPW6f9LBywgsE13yfs0EbMj3yevtdT2hENguVpA/4+ve90CLMWCxfVgVpBsOL1NQTUQThOxUUWtISrq+jfbL7PGfVrJ1xd2uYQPmSUnA6wxpwM2krL0jxR4vUkr7iBG8k5DygQqWhSDl6xmUGd1Qrinm1t7nb4zMvC4qgT404DxpJWtd5UJIBYTzIQL2M+HBBDsYMcCvn4TTdh+YCijJJ/AkQX2+FOrNpV6EIIK8dWF7SGrKCImfcHBEz9NjhKZGL8t+kSAN5nlI3ZJHc1C0NLRI63SG0VudR4JXUWR/h/4Doi/+3kDQ3rxB3qCFgZSglI7HGCRNPeZp4MN9KJcynRAt4pZN+Kwv3DCRtt+TqUaAhRmll/pSPDkF4IX2dyj/AggAdFn2le0UGNHF7KbvHlExfs9emR/hEuMIw0WCAt25M+6/C0ChClQc7YJ7KsZJ4u+dgdmZJ52zHzf52WIdEMwwCZvTCaQVh9hzoepeVGqxveu6jts8MSZfKk6XUjsTDtmG46GMGm42Vu1l5bo7fwAAAHbRXbFPhfK9Y1HcTFZH/7uOwdVQtDqErNJqyDVTT5OSkXSPQvtisKw/A58n7bpiUTe2QNoDO2NJooHDzo7V84xvULmxx6uD0tlqAnYcd7KQaDe6kSRwOpe5f1KlJvcUCkcnG2MqdpdKblu+GcBlBFlbuAaip1OxYDtP1ydaf5XYNnBFgcM8sBwvXFtzvgSPS+V/NHv1N4UrBTjaH0zzRN9kdxKF89ZugmCVkrI3852A8ptJK/BvZdCyUE8yZtdt0rwAiZod7noT2J78ls/T/9E5o4tO+7IEzDYOG7RaM1xPNLMtd5TPgBiBM60hJwKXUcK92dxRaliT+yw+JapI+H03/iY0Ms329gTm0LzaWLWdNTrYbkorxHbOyiqUc8ohfHFEcGkBkhDUh0VyvrJ6Z7To+KG249W1wZ7rYV8vAVpFIZ5YKM8mfWXM6SFf+W1p/yXjd1n2hCvPTB+waRPeRpV419YJLati3dd7SJkQWVae6/kUntJep8PWR490Mx3cwsGWfDcCzywO1NT+cJ2kbFqncqzRukOpaET7B1kQzUCqlMkiODjCKvD7jsOQOG1zM7AW6XuPlYgEpXiOjVcE2VbogmqWDdhcKzrPQwaLNFKj5WahFw/n6FzcgrN++aLPuJBwVJ9+iwwX6fT43X3TWd5yOoZDorA1wuH7vIIYlN03r6v/vsFltqKIJiguF9nimaeQ6ojnrQT005CnHt9AA7Dw8XEZsiDZzIbakeHLAabEqELspTSAMKSyiZcbiWKwXpUr6b/uyz8S/xSzMU4ohHB7TeHh8MvbV1UWIUXZBWGaiLDNNeJ/ZmhXehVWUHI08Nx7iRiAXE3RSwpLVlTqpf/GbkkXzuOSo5dMwPrhECmybdQMJt7oO0Zpg5AKVZA9um3NMJBfc8mA223urMbW9aPbZ9ykeGvg3x5AeNq4aRNqODzPInSuIBQhPpU1twLu9Bsz5bbtSm793N7RW2I4Krfahx9X3eLqhp4HjDY07mOpEx4/bRQZbs8X+ubFTpNrhxBEmGib75p4hyjFna50tM7BEcIxcNgU6/xy+u5Z1yRoEUAqMH0gklIFW4zsScLJ243Z2bP75KkGOKLWaRzhnfWWLzFBhsoMWVyoN/0QfJmDkm5jak4fylvXlHJ4ScbHz9sefpHodpW+NHrKmd3XPWJCym6kY+YeUVKGHlgMLod72aRi4B9H6WUwPDbUok/oEpE2GjsXse/tE9x0AoTIBKr0YIIXN8M4++s=\n</div>\n","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-02T08:43:53.000Z","title":"「Luogu-P5162」WD与积木","password":null,"_content":"9102年的第一篇blog。\n\n[传送门](https://www.luogu.org/problemnew/show/P5162)\n\n<!-- more -->\n\n大概算是我用NTT切的第一道非模板题。\n\n其实本来应该是[这道](http://codeforces.com/contest/438/problem/E)。不过调不出来了弃了。\n\n首先我们会有一种想法是将方案数和每种方案的层数和分别求出来，然后一除就可以了。我们令$F[i]$表示$i$块积木所有堆放方案的层数和，$G[i]$表示$i$块积木的堆放方案数。\n\n首先考虑如何求方案数。我们可以枚举第一层放了哪些积木。于是我们大胆地写出这样一个$n^{2}$的方程：\n\n$$G[n]=\\sum\\limits_{i=0}^{n}C_{n}^{i}G[n-i]$$\n\n但是这样对吗？\n\n代入$n=0$我们发现\n\n$$G[0]=C_{0}^{0}G[0]=G[0]$$\n\n![](https://i.loli.net/2019/01/02/5c2c7c9a52fe9.jpg)\n\n注意到，这主要是因为$C_{n}^{0}=1$导致的，因此我们强行将它定义成$0$就好了。\n\n那然后$G[0]$应该等于几？\n\n$$G[1]=C_{1}^{0}G[1]+C_{1}^{1}G[0]=G[0]=1$$\n\n所以说$G[0]=1$。\n\n如果说您再往下算几项，您就会发现令$G[0]=1$是一个正确的选择。\n\n再然后，我们看到这个式子像极了卷积。我们先来把组合数拆开\n\n$$G[n]=n!\\sum\\limits_{i=0}^{n}\\cfrac{1}{i!}\\times\\cfrac{G[n-i]}{(n-i)!}$$\n\n定义\n\n$$H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}$$\n\n$$G[n]=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{G[n-i]}{(n-i)!}$$\n\n注意到我们在运算时先除以了$n-i$的阶乘，累加完之后又乘了一个$n$的逆元。这就启示我们，如果我们定义\n\n$$G^{\\prime}[n]=\\cfrac{G[n]}{n!}$$\n\n就可以得到\n\n$$\\begin{aligned}\nG^{\\prime}[n]&=\\sum\\limits_{i=0}^{n}H[i]\\times G^{\\prime}[n-i]\\\\\nG^{\\prime}&=G^{\\prime}H+1\n\\end{aligned}$$\n\n注意不要忘了$+1$。因为很明显地$G^{\\prime}H[0]=0$，而$G^{\\prime}[0]=1$。\n\n然后我们就有\n\n$$G^{\\prime}=\\cfrac{1}{1-H}$$\n\n然后接下来我们并不需要还原出$G$。直接考虑$F$，也就是层数和。\n\n首先还是枚举第一层放了哪些积木。不过需要注意的是，因为我们把第一层单独考虑了，因此每有一种堆放方案，我们就要再多算上一层。因此\n\n$$F[n]=G[n]+\\sum\\limits_{i=0}^{n}C_{n}^{i}F[n-i]$$\n\n然后我们拆开组合数，引入上面的$H$数组，并令$F[0]=0$。至于为什么，留作习题自证（\n\n$$\n\\begin{aligned}\nF[n]&=G[n]+n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]}{(n-i)!}\\\\\n&=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]+G[n-i]}{(n-i)!}\\\\\nF^{\\prime}[n]&=\\cfrac{F[n]}{n!}\\\\\n&=\\sum\\limits_{i=0}^{n}H[i]\\times(F^{\\prime}[n-i]+G^{\\prime}[n-i])\\\\\nF^{\\prime}&=H(F^{\\prime}+G^{\\prime})\n\\end{aligned}$$\n\n不过这次我们就不需要$+1$了。\n\n解上面的方程，我们得到\n\n$$F^{\\prime}=\\cfrac{HG^{\\prime}}{1-H}=\\cfrac{G^{\\prime}}{(1-H)^{2}}$$\n\n然后我们总结一下\n\n$$H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}$$\n\n$$G^{\\prime}=\\cfrac{1}{1-H}$$\n\n$$F^{\\prime}=\\cfrac{G^{\\prime}}{(1-H)^{2}}$$\n\n最后的答案，也就是$n$块积木的期望层数，就是$\\cfrac{F[n]}{G[n]}$。然后不难发现$\\cfrac{F^{\\prime}[n]}{G^{\\prime}[n]}=\\cfrac{F[n]}{G[n]}$。\n\n我就是不贴代码（\n\n~~反正会的应该都能写出来了吧（~~\n","source":"_posts/2019-01-02-luogu-p5162-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-02 16:43:53\ntitle: 「Luogu-P5162」WD与积木\ntags:\n  - NTT\ncategories:\n  - 题解\npassword:\n---\n9102年的第一篇blog。\n\n[传送门](https://www.luogu.org/problemnew/show/P5162)\n\n<!-- more -->\n\n大概算是我用NTT切的第一道非模板题。\n\n其实本来应该是[这道](http://codeforces.com/contest/438/problem/E)。不过调不出来了弃了。\n\n首先我们会有一种想法是将方案数和每种方案的层数和分别求出来，然后一除就可以了。我们令$F[i]$表示$i$块积木所有堆放方案的层数和，$G[i]$表示$i$块积木的堆放方案数。\n\n首先考虑如何求方案数。我们可以枚举第一层放了哪些积木。于是我们大胆地写出这样一个$n^{2}$的方程：\n\n$$G[n]=\\sum\\limits_{i=0}^{n}C_{n}^{i}G[n-i]$$\n\n但是这样对吗？\n\n代入$n=0$我们发现\n\n$$G[0]=C_{0}^{0}G[0]=G[0]$$\n\n![](https://i.loli.net/2019/01/02/5c2c7c9a52fe9.jpg)\n\n注意到，这主要是因为$C_{n}^{0}=1$导致的，因此我们强行将它定义成$0$就好了。\n\n那然后$G[0]$应该等于几？\n\n$$G[1]=C_{1}^{0}G[1]+C_{1}^{1}G[0]=G[0]=1$$\n\n所以说$G[0]=1$。\n\n如果说您再往下算几项，您就会发现令$G[0]=1$是一个正确的选择。\n\n再然后，我们看到这个式子像极了卷积。我们先来把组合数拆开\n\n$$G[n]=n!\\sum\\limits_{i=0}^{n}\\cfrac{1}{i!}\\times\\cfrac{G[n-i]}{(n-i)!}$$\n\n定义\n\n$$H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}$$\n\n$$G[n]=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{G[n-i]}{(n-i)!}$$\n\n注意到我们在运算时先除以了$n-i$的阶乘，累加完之后又乘了一个$n$的逆元。这就启示我们，如果我们定义\n\n$$G^{\\prime}[n]=\\cfrac{G[n]}{n!}$$\n\n就可以得到\n\n$$\\begin{aligned}\nG^{\\prime}[n]&=\\sum\\limits_{i=0}^{n}H[i]\\times G^{\\prime}[n-i]\\\\\nG^{\\prime}&=G^{\\prime}H+1\n\\end{aligned}$$\n\n注意不要忘了$+1$。因为很明显地$G^{\\prime}H[0]=0$，而$G^{\\prime}[0]=1$。\n\n然后我们就有\n\n$$G^{\\prime}=\\cfrac{1}{1-H}$$\n\n然后接下来我们并不需要还原出$G$。直接考虑$F$，也就是层数和。\n\n首先还是枚举第一层放了哪些积木。不过需要注意的是，因为我们把第一层单独考虑了，因此每有一种堆放方案，我们就要再多算上一层。因此\n\n$$F[n]=G[n]+\\sum\\limits_{i=0}^{n}C_{n}^{i}F[n-i]$$\n\n然后我们拆开组合数，引入上面的$H$数组，并令$F[0]=0$。至于为什么，留作习题自证（\n\n$$\n\\begin{aligned}\nF[n]&=G[n]+n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]}{(n-i)!}\\\\\n&=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]+G[n-i]}{(n-i)!}\\\\\nF^{\\prime}[n]&=\\cfrac{F[n]}{n!}\\\\\n&=\\sum\\limits_{i=0}^{n}H[i]\\times(F^{\\prime}[n-i]+G^{\\prime}[n-i])\\\\\nF^{\\prime}&=H(F^{\\prime}+G^{\\prime})\n\\end{aligned}$$\n\n不过这次我们就不需要$+1$了。\n\n解上面的方程，我们得到\n\n$$F^{\\prime}=\\cfrac{HG^{\\prime}}{1-H}=\\cfrac{G^{\\prime}}{(1-H)^{2}}$$\n\n然后我们总结一下\n\n$$H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}$$\n\n$$G^{\\prime}=\\cfrac{1}{1-H}$$\n\n$$F^{\\prime}=\\cfrac{G^{\\prime}}{(1-H)^{2}}$$\n\n最后的答案，也就是$n$块积木的期望层数，就是$\\cfrac{F[n]}{G[n]}$。然后不难发现$\\cfrac{F^{\\prime}[n]}{G^{\\prime}[n]}=\\cfrac{F[n]}{G[n]}$。\n\n我就是不贴代码（\n\n~~反正会的应该都能写出来了吧（~~\n","slug":"luogu-p5162-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng00000mmku9dmh8eegy","content":"<p>9102年的第一篇blog。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P5162\">传送门</a></p>\n<a id=\"more\"></a>\n<p>大概算是我用NTT切的第一道非模板题。</p>\n<p>其实本来应该是<a href=\"http://codeforces.com/contest/438/problem/E\">这道</a>。不过调不出来了弃了。</p>\n<p>首先我们会有一种想法是将方案数和每种方案的层数和分别求出来，然后一除就可以了。我们令$F[i]$表示$i$块积木所有堆放方案的层数和，$G[i]$表示$i$块积木的堆放方案数。</p>\n<p>首先考虑如何求方案数。我们可以枚举第一层放了哪些积木。于是我们大胆地写出这样一个$n^{2}$的方程：</p>\n<script type=\"math/tex; mode=display\">G[n]=\\sum\\limits_{i=0}^{n}C_{n}^{i}G[n-i]</script><p>但是这样对吗？</p>\n<p>代入$n=0$我们发现</p>\n<script type=\"math/tex; mode=display\">G[0]=C_{0}^{0}G[0]=G[0]</script><p><img src=\"https://i.loli.net/2019/01/02/5c2c7c9a52fe9.jpg\" alt=\"\"></p>\n<p>注意到，这主要是因为$C_{n}^{0}=1$导致的，因此我们强行将它定义成$0$就好了。</p>\n<p>那然后$G[0]$应该等于几？</p>\n<script type=\"math/tex; mode=display\">G[1]=C_{1}^{0}G[1]+C_{1}^{1}G[0]=G[0]=1</script><p>所以说$G[0]=1$。</p>\n<p>如果说您再往下算几项，您就会发现令$G[0]=1$是一个正确的选择。</p>\n<p>再然后，我们看到这个式子像极了卷积。我们先来把组合数拆开</p>\n<script type=\"math/tex; mode=display\">G[n]=n!\\sum\\limits_{i=0}^{n}\\cfrac{1}{i!}\\times\\cfrac{G[n-i]}{(n-i)!}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G[n]=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{G[n-i]}{(n-i)!}</script><p>注意到我们在运算时先除以了$n-i$的阶乘，累加完之后又乘了一个$n$的逆元。这就启示我们，如果我们定义</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}[n]=\\cfrac{G[n]}{n!}</script><p>就可以得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG^{\\prime}[n]&=\\sum\\limits_{i=0}^{n}H[i]\\times G^{\\prime}[n-i]\\\\\nG^{\\prime}&=G^{\\prime}H+1\n\\end{aligned}</script><p>注意不要忘了$+1$。因为很明显地$G^{\\prime}H[0]=0$，而$G^{\\prime}[0]=1$。</p>\n<p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}=\\cfrac{1}{1-H}</script><p>然后接下来我们并不需要还原出$G$。直接考虑$F$，也就是层数和。</p>\n<p>首先还是枚举第一层放了哪些积木。不过需要注意的是，因为我们把第一层单独考虑了，因此每有一种堆放方案，我们就要再多算上一层。因此</p>\n<script type=\"math/tex; mode=display\">F[n]=G[n]+\\sum\\limits_{i=0}^{n}C_{n}^{i}F[n-i]</script><p>然后我们拆开组合数，引入上面的$H$数组，并令$F[0]=0$。至于为什么，留作习题自证（</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nF[n]&=G[n]+n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]}{(n-i)!}\\\\\n&=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]+G[n-i]}{(n-i)!}\\\\\nF^{\\prime}[n]&=\\cfrac{F[n]}{n!}\\\\\n&=\\sum\\limits_{i=0}^{n}H[i]\\times(F^{\\prime}[n-i]+G^{\\prime}[n-i])\\\\\nF^{\\prime}&=H(F^{\\prime}+G^{\\prime})\n\\end{aligned}</script><p>不过这次我们就不需要$+1$了。</p>\n<p>解上面的方程，我们得到</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\cfrac{HG^{\\prime}}{1-H}=\\cfrac{G^{\\prime}}{(1-H)^{2}}</script><p>然后我们总结一下</p>\n<script type=\"math/tex; mode=display\">H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G^{\\prime}=\\cfrac{1}{1-H}</script><script type=\"math/tex; mode=display\">F^{\\prime}=\\cfrac{G^{\\prime}}{(1-H)^{2}}</script><p>最后的答案，也就是$n$块积木的期望层数，就是$\\cfrac{F[n]}{G[n]}$。然后不难发现$\\cfrac{F^{\\prime}[n]}{G^{\\prime}[n]}=\\cfrac{F[n]}{G[n]}$。</p>\n<p>我就是不贴代码（</p>\n<p><del>反正会的应该都能写出来了吧（</del></p>\n","site":{"data":{}},"excerpt":"<p>9102年的第一篇blog。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P5162\">传送门</a></p>","more":"<p>大概算是我用NTT切的第一道非模板题。</p>\n<p>其实本来应该是<a href=\"http://codeforces.com/contest/438/problem/E\">这道</a>。不过调不出来了弃了。</p>\n<p>首先我们会有一种想法是将方案数和每种方案的层数和分别求出来，然后一除就可以了。我们令$F[i]$表示$i$块积木所有堆放方案的层数和，$G[i]$表示$i$块积木的堆放方案数。</p>\n<p>首先考虑如何求方案数。我们可以枚举第一层放了哪些积木。于是我们大胆地写出这样一个$n^{2}$的方程：</p>\n<script type=\"math/tex; mode=display\">G[n]=\\sum\\limits_{i=0}^{n}C_{n}^{i}G[n-i]</script><p>但是这样对吗？</p>\n<p>代入$n=0$我们发现</p>\n<script type=\"math/tex; mode=display\">G[0]=C_{0}^{0}G[0]=G[0]</script><p><img src=\"https://i.loli.net/2019/01/02/5c2c7c9a52fe9.jpg\" alt=\"\"></p>\n<p>注意到，这主要是因为$C_{n}^{0}=1$导致的，因此我们强行将它定义成$0$就好了。</p>\n<p>那然后$G[0]$应该等于几？</p>\n<script type=\"math/tex; mode=display\">G[1]=C_{1}^{0}G[1]+C_{1}^{1}G[0]=G[0]=1</script><p>所以说$G[0]=1$。</p>\n<p>如果说您再往下算几项，您就会发现令$G[0]=1$是一个正确的选择。</p>\n<p>再然后，我们看到这个式子像极了卷积。我们先来把组合数拆开</p>\n<script type=\"math/tex; mode=display\">G[n]=n!\\sum\\limits_{i=0}^{n}\\cfrac{1}{i!}\\times\\cfrac{G[n-i]}{(n-i)!}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G[n]=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{G[n-i]}{(n-i)!}</script><p>注意到我们在运算时先除以了$n-i$的阶乘，累加完之后又乘了一个$n$的逆元。这就启示我们，如果我们定义</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}[n]=\\cfrac{G[n]}{n!}</script><p>就可以得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG^{\\prime}[n]&=\\sum\\limits_{i=0}^{n}H[i]\\times G^{\\prime}[n-i]\\\\\nG^{\\prime}&=G^{\\prime}H+1\n\\end{aligned}</script><p>注意不要忘了$+1$。因为很明显地$G^{\\prime}H[0]=0$，而$G^{\\prime}[0]=1$。</p>\n<p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}=\\cfrac{1}{1-H}</script><p>然后接下来我们并不需要还原出$G$。直接考虑$F$，也就是层数和。</p>\n<p>首先还是枚举第一层放了哪些积木。不过需要注意的是，因为我们把第一层单独考虑了，因此每有一种堆放方案，我们就要再多算上一层。因此</p>\n<script type=\"math/tex; mode=display\">F[n]=G[n]+\\sum\\limits_{i=0}^{n}C_{n}^{i}F[n-i]</script><p>然后我们拆开组合数，引入上面的$H$数组，并令$F[0]=0$。至于为什么，留作习题自证（</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nF[n]&=G[n]+n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]}{(n-i)!}\\\\\n&=n!\\sum\\limits_{i=0}^{n}H[i]\\times\\cfrac{F[n-i]+G[n-i]}{(n-i)!}\\\\\nF^{\\prime}[n]&=\\cfrac{F[n]}{n!}\\\\\n&=\\sum\\limits_{i=0}^{n}H[i]\\times(F^{\\prime}[n-i]+G^{\\prime}[n-i])\\\\\nF^{\\prime}&=H(F^{\\prime}+G^{\\prime})\n\\end{aligned}</script><p>不过这次我们就不需要$+1$了。</p>\n<p>解上面的方程，我们得到</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\cfrac{HG^{\\prime}}{1-H}=\\cfrac{G^{\\prime}}{(1-H)^{2}}</script><p>然后我们总结一下</p>\n<script type=\"math/tex; mode=display\">H[n]=\\begin{cases}\n&0&(n=0)\\\\\n&\\cfrac{1}{n!}\\;\\;&(n>1)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G^{\\prime}=\\cfrac{1}{1-H}</script><script type=\"math/tex; mode=display\">F^{\\prime}=\\cfrac{G^{\\prime}}{(1-H)^{2}}</script><p>最后的答案，也就是$n$块积木的期望层数，就是$\\cfrac{F[n]}{G[n]}$。然后不难发现$\\cfrac{F^{\\prime}[n]}{G^{\\prime}[n]}=\\cfrac{F[n]}{G[n]}$。</p>\n<p>我就是不贴代码（</p>\n<p><del>反正会的应该都能写出来了吧（</del></p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-04T03:14:12.000Z","title":"「AHOI2017/HNOI2017」礼物","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P3723)\n\n<!-- more -->\n\n首先我们要有一个简单粗暴的暴力。\n\n$$\\min\\limits_{x=0}^{n-1}\\min\\limits_{c_{1}=0,c_{2}=0}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}+c_{1}-B_{(i+x)\\%n}-c_{2})^{2}$$\n\n因为我们关心的只是两个数的差的平方，我们完全可以将$c_{1}$和$c_{2}$这两个非负整数合并成一个整数$c$。\n\n$$\\min\\limits_{x=0}^{n-1}\\min\\limits_{c=-m}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}$$\n\n我们仔细观察一下那个$\\Sigma$。\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}\\\\\n=&\\sum\\limits_{i=0}^{n-1}(A_{i}^{2}+B_{(i+x)\\%n}^{2}+c^{2}-2A_{i}B_{(i+x)\\%n}+2cA_{i}-2cB_{(i+x)\\%n})\\\\\n=&\\sum\\limits_{i=0}^{n-1}A_{i}^{2}+\\sum\\limits_{i=0}^{n-1}B_{i}^{2}+nc^{2}+2c(\\sum\\limits_{i=0}^{n-1}A_{i}-\\sum\\limits_{i=0}^{n-1}B_{i})-2\\sum\\limits_{i=0}^{n-1}A_{i}B_{(i+x)\\%n}\n\\end{aligned}$$\n\n首先$\\Sigma A_{i}^{2}$和$\\Sigma B_{i}^{2}$可以看成是常数项。\n\n$nc^{2}+2c(\\Sigma A_{i}-\\Sigma B_{i})$可以看成是一个关于$c$的二次函数，令$k=(\\Sigma A_{i}-\\Sigma B_{i})$，我们知道它在$c=-\\cfrac{k}{n}$处取得最小值。但是根据题意，$c$应当是一个整数，因此我们需要将$c=\\lfloor -\\cfrac{k}{n}\\rfloor$和$c=\\lceil -\\cfrac{k}{n}\\rceil$两者都代入原式，然后取较小值。\n\n然后我们想要求出$\\Sigma A_{i}B_{(i+x)\\%n}$的最大值，加上上面那两项就是最终答案了。首先这个取模不好搞，我们把它拆开。\n\n$$\\sum\\limits_{i=0}^{n-x-1}A_{i}B_{i+x}+\\sum\\limits_{i=0}^{x-1}A_{i-x+n}B_{i}$$\n\n然后我们看到这个东西好像卷积啊，但是卷积要求两个下标加起来是常数，这个下标是加上一个数没办法卷积啊。\n\n然后一想，我们可以倒过来搞啊。\n\n定义$F^{R}(x)$是将$F(x)$的系数数组翻转过来得到的新多项式。于是我们可以将上式写成\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-x-1}A_{i}B^{R}_{n-x-1-i}+\\sum\\limits_{i=0}^{x-1}A^{R}_{x-1-i}B_{i}\\\\\n=&(AB^{R})_{n-x-1}+(A^{R}B)_{x-1}\n\\end{aligned}$$\n\n然后套一波多项式乘法的板子，扫一遍系数求个最大值就行了。需要注意的是当$x=0$的时候就只有$(AB^{R})_{n-1}$一项。\n\n以下是代码：\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define re register\n#define maxn 131072\n#define mod 998244353\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,ans,k,mx;\nint unit[2][24],rev[maxn+1],A[maxn+1],B[maxn+1],C[maxn+1],D[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(A[i]);\n\t\tans+=A[i]*A[i];\n\t\tk+=A[i];\n\t\tC[n-1-i]=A[i];\n\t}\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(B[i]);\n\t\tans+=B[i]*B[i];\n\t\tk-=B[i];\n\t\tD[n-1-i]=B[i];\n\t}\n\tans+=min(n*floor(1.0*k/n)*floor(1.0*k/n)-2*k*floor(1.0*k/n),n*ceil(1.0*k/n)*ceil(1.0*k/n)-2*k*ceil(1.0*k/n));\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(m=1;m<n;m<<=1);\n\tm<<=1;\n\tfor(re int i=0;i<m;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(m>>1):0);\n\tNTT(A,m,0);\n\tNTT(B,m,0);\n\tNTT(C,m,0);\n\tNTT(D,m,0);\n\tfor(re int i=0;i<m;++i){\n\t\tA[i]=1LL*A[i]*D[i]%mod;\n\t\tB[i]=1LL*B[i]*C[i]%mod;\n\t}\n\tNTT(A,m,1);\n\tNTT(B,m,1);\n\tmx=A[n-1];\n\tfor(re int i=1;i<n;++i)\n\t\tmx=max(mx,A[n-1-i]+B[i-1]);\n\tcltstream::write(ans-=2*mx);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-01-04-luogu-p3723-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-04 11:14:12\ntitle: 「AHOI2017/HNOI2017」礼物\ntags:\n  - AHOI\n  - HNOI\n  - 2017\n  - NTT\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P3723)\n\n<!-- more -->\n\n首先我们要有一个简单粗暴的暴力。\n\n$$\\min\\limits_{x=0}^{n-1}\\min\\limits_{c_{1}=0,c_{2}=0}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}+c_{1}-B_{(i+x)\\%n}-c_{2})^{2}$$\n\n因为我们关心的只是两个数的差的平方，我们完全可以将$c_{1}$和$c_{2}$这两个非负整数合并成一个整数$c$。\n\n$$\\min\\limits_{x=0}^{n-1}\\min\\limits_{c=-m}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}$$\n\n我们仔细观察一下那个$\\Sigma$。\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}\\\\\n=&\\sum\\limits_{i=0}^{n-1}(A_{i}^{2}+B_{(i+x)\\%n}^{2}+c^{2}-2A_{i}B_{(i+x)\\%n}+2cA_{i}-2cB_{(i+x)\\%n})\\\\\n=&\\sum\\limits_{i=0}^{n-1}A_{i}^{2}+\\sum\\limits_{i=0}^{n-1}B_{i}^{2}+nc^{2}+2c(\\sum\\limits_{i=0}^{n-1}A_{i}-\\sum\\limits_{i=0}^{n-1}B_{i})-2\\sum\\limits_{i=0}^{n-1}A_{i}B_{(i+x)\\%n}\n\\end{aligned}$$\n\n首先$\\Sigma A_{i}^{2}$和$\\Sigma B_{i}^{2}$可以看成是常数项。\n\n$nc^{2}+2c(\\Sigma A_{i}-\\Sigma B_{i})$可以看成是一个关于$c$的二次函数，令$k=(\\Sigma A_{i}-\\Sigma B_{i})$，我们知道它在$c=-\\cfrac{k}{n}$处取得最小值。但是根据题意，$c$应当是一个整数，因此我们需要将$c=\\lfloor -\\cfrac{k}{n}\\rfloor$和$c=\\lceil -\\cfrac{k}{n}\\rceil$两者都代入原式，然后取较小值。\n\n然后我们想要求出$\\Sigma A_{i}B_{(i+x)\\%n}$的最大值，加上上面那两项就是最终答案了。首先这个取模不好搞，我们把它拆开。\n\n$$\\sum\\limits_{i=0}^{n-x-1}A_{i}B_{i+x}+\\sum\\limits_{i=0}^{x-1}A_{i-x+n}B_{i}$$\n\n然后我们看到这个东西好像卷积啊，但是卷积要求两个下标加起来是常数，这个下标是加上一个数没办法卷积啊。\n\n然后一想，我们可以倒过来搞啊。\n\n定义$F^{R}(x)$是将$F(x)$的系数数组翻转过来得到的新多项式。于是我们可以将上式写成\n\n$$\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-x-1}A_{i}B^{R}_{n-x-1-i}+\\sum\\limits_{i=0}^{x-1}A^{R}_{x-1-i}B_{i}\\\\\n=&(AB^{R})_{n-x-1}+(A^{R}B)_{x-1}\n\\end{aligned}$$\n\n然后套一波多项式乘法的板子，扫一遍系数求个最大值就行了。需要注意的是当$x=0$的时候就只有$(AB^{R})_{n-1}$一项。\n\n以下是代码：\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define re register\n#define maxn 131072\n#define mod 998244353\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,ans,k,mx;\nint unit[2][24],rev[maxn+1],A[maxn+1],B[maxn+1],C[maxn+1],D[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(A[i]);\n\t\tans+=A[i]*A[i];\n\t\tk+=A[i];\n\t\tC[n-1-i]=A[i];\n\t}\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(B[i]);\n\t\tans+=B[i]*B[i];\n\t\tk-=B[i];\n\t\tD[n-1-i]=B[i];\n\t}\n\tans+=min(n*floor(1.0*k/n)*floor(1.0*k/n)-2*k*floor(1.0*k/n),n*ceil(1.0*k/n)*ceil(1.0*k/n)-2*k*ceil(1.0*k/n));\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(m=1;m<n;m<<=1);\n\tm<<=1;\n\tfor(re int i=0;i<m;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(m>>1):0);\n\tNTT(A,m,0);\n\tNTT(B,m,0);\n\tNTT(C,m,0);\n\tNTT(D,m,0);\n\tfor(re int i=0;i<m;++i){\n\t\tA[i]=1LL*A[i]*D[i]%mod;\n\t\tB[i]=1LL*B[i]*C[i]%mod;\n\t}\n\tNTT(A,m,1);\n\tNTT(B,m,1);\n\tmx=A[n-1];\n\tfor(re int i=1;i<n;++i)\n\t\tmx=max(mx,A[n-1-i]+B[i-1]);\n\tcltstream::write(ans-=2*mx);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"luogu-p3723-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng01000omku9gpxc92qn","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P3723\">传送门</a></p>\n<a id=\"more\"></a>\n<p>首先我们要有一个简单粗暴的暴力。</p>\n<script type=\"math/tex; mode=display\">\\min\\limits_{x=0}^{n-1}\\min\\limits_{c_{1}=0,c_{2}=0}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}+c_{1}-B_{(i+x)\\%n}-c_{2})^{2}</script><p>因为我们关心的只是两个数的差的平方，我们完全可以将$c_{1}$和$c_{2}$这两个非负整数合并成一个整数$c$。</p>\n<script type=\"math/tex; mode=display\">\\min\\limits_{x=0}^{n-1}\\min\\limits_{c=-m}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}</script><p>我们仔细观察一下那个$\\Sigma$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}\\\\\n=&\\sum\\limits_{i=0}^{n-1}(A_{i}^{2}+B_{(i+x)\\%n}^{2}+c^{2}-2A_{i}B_{(i+x)\\%n}+2cA_{i}-2cB_{(i+x)\\%n})\\\\\n=&\\sum\\limits_{i=0}^{n-1}A_{i}^{2}+\\sum\\limits_{i=0}^{n-1}B_{i}^{2}+nc^{2}+2c(\\sum\\limits_{i=0}^{n-1}A_{i}-\\sum\\limits_{i=0}^{n-1}B_{i})-2\\sum\\limits_{i=0}^{n-1}A_{i}B_{(i+x)\\%n}\n\\end{aligned}</script><p>首先$\\Sigma A_{i}^{2}$和$\\Sigma B_{i}^{2}$可以看成是常数项。</p>\n<p>$nc^{2}+2c(\\Sigma A_{i}-\\Sigma B_{i})$可以看成是一个关于$c$的二次函数，令$k=(\\Sigma A_{i}-\\Sigma B_{i})$，我们知道它在$c=-\\cfrac{k}{n}$处取得最小值。但是根据题意，$c$应当是一个整数，因此我们需要将$c=\\lfloor -\\cfrac{k}{n}\\rfloor$和$c=\\lceil -\\cfrac{k}{n}\\rceil$两者都代入原式，然后取较小值。</p>\n<p>然后我们想要求出$\\Sigma A_{i}B_{(i+x)\\%n}$的最大值，加上上面那两项就是最终答案了。首先这个取模不好搞，我们把它拆开。</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=0}^{n-x-1}A_{i}B_{i+x}+\\sum\\limits_{i=0}^{x-1}A_{i-x+n}B_{i}</script><p>然后我们看到这个东西好像卷积啊，但是卷积要求两个下标加起来是常数，这个下标是加上一个数没办法卷积啊。</p>\n<p>然后一想，我们可以倒过来搞啊。</p>\n<p>定义$F^{R}(x)$是将$F(x)$的系数数组翻转过来得到的新多项式。于是我们可以将上式写成</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-x-1}A_{i}B^{R}_{n-x-1-i}+\\sum\\limits_{i=0}^{x-1}A^{R}_{x-1-i}B_{i}\\\\\n=&(AB^{R})_{n-x-1}+(A^{R}B)_{x-1}\n\\end{aligned}</script><p>然后套一波多项式乘法的板子，扫一遍系数求个最大值就行了。需要注意的是当$x=0$的时候就只有$(AB^{R})_{n-1}$一项。</p>\n<p>以下是代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 131072</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,ans,k,mx;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],A[maxn+<span class=\"number\">1</span>],B[maxn+<span class=\"number\">1</span>],C[maxn+<span class=\"number\">1</span>],D[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(A[i]);</span><br><span class=\"line\">        ans+=A[i]*A[i];</span><br><span class=\"line\">        k+=A[i];</span><br><span class=\"line\">        C[n<span class=\"number\">-1</span>-i]=A[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(B[i]);</span><br><span class=\"line\">        ans+=B[i]*B[i];</span><br><span class=\"line\">        k-=B[i];</span><br><span class=\"line\">        D[n<span class=\"number\">-1</span>-i]=B[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans+=min(n*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n)*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n)<span class=\"number\">-2</span>*k*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n),n*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n)*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n)<span class=\"number\">-2</span>*k*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n));</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m=<span class=\"number\">1</span>;m&lt;n;m&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    m&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(m&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(A,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(B,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(C,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(D,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)&#123;</span><br><span class=\"line\">        A[i]=<span class=\"number\">1L</span>L*A[i]*D[i]%mod;</span><br><span class=\"line\">        B[i]=<span class=\"number\">1L</span>L*B[i]*C[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NTT(A,m,<span class=\"number\">1</span>);</span><br><span class=\"line\">    NTT(B,m,<span class=\"number\">1</span>);</span><br><span class=\"line\">    mx=A[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        mx=max(mx,A[n<span class=\"number\">-1</span>-i]+B[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    cltstream::write(ans-=<span class=\"number\">2</span>*mx);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P3723\">传送门</a></p>","more":"<p>首先我们要有一个简单粗暴的暴力。</p>\n<script type=\"math/tex; mode=display\">\\min\\limits_{x=0}^{n-1}\\min\\limits_{c_{1}=0,c_{2}=0}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}+c_{1}-B_{(i+x)\\%n}-c_{2})^{2}</script><p>因为我们关心的只是两个数的差的平方，我们完全可以将$c_{1}$和$c_{2}$这两个非负整数合并成一个整数$c$。</p>\n<script type=\"math/tex; mode=display\">\\min\\limits_{x=0}^{n-1}\\min\\limits_{c=-m}^{m}\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}</script><p>我们仔细观察一下那个$\\Sigma$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-1}(A_{i}-B_{(i+x)\\%n}+c)^{2}\\\\\n=&\\sum\\limits_{i=0}^{n-1}(A_{i}^{2}+B_{(i+x)\\%n}^{2}+c^{2}-2A_{i}B_{(i+x)\\%n}+2cA_{i}-2cB_{(i+x)\\%n})\\\\\n=&\\sum\\limits_{i=0}^{n-1}A_{i}^{2}+\\sum\\limits_{i=0}^{n-1}B_{i}^{2}+nc^{2}+2c(\\sum\\limits_{i=0}^{n-1}A_{i}-\\sum\\limits_{i=0}^{n-1}B_{i})-2\\sum\\limits_{i=0}^{n-1}A_{i}B_{(i+x)\\%n}\n\\end{aligned}</script><p>首先$\\Sigma A_{i}^{2}$和$\\Sigma B_{i}^{2}$可以看成是常数项。</p>\n<p>$nc^{2}+2c(\\Sigma A_{i}-\\Sigma B_{i})$可以看成是一个关于$c$的二次函数，令$k=(\\Sigma A_{i}-\\Sigma B_{i})$，我们知道它在$c=-\\cfrac{k}{n}$处取得最小值。但是根据题意，$c$应当是一个整数，因此我们需要将$c=\\lfloor -\\cfrac{k}{n}\\rfloor$和$c=\\lceil -\\cfrac{k}{n}\\rceil$两者都代入原式，然后取较小值。</p>\n<p>然后我们想要求出$\\Sigma A_{i}B_{(i+x)\\%n}$的最大值，加上上面那两项就是最终答案了。首先这个取模不好搞，我们把它拆开。</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=0}^{n-x-1}A_{i}B_{i+x}+\\sum\\limits_{i=0}^{x-1}A_{i-x+n}B_{i}</script><p>然后我们看到这个东西好像卷积啊，但是卷积要求两个下标加起来是常数，这个下标是加上一个数没办法卷积啊。</p>\n<p>然后一想，我们可以倒过来搞啊。</p>\n<p>定义$F^{R}(x)$是将$F(x)$的系数数组翻转过来得到的新多项式。于是我们可以将上式写成</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum\\limits_{i=0}^{n-x-1}A_{i}B^{R}_{n-x-1-i}+\\sum\\limits_{i=0}^{x-1}A^{R}_{x-1-i}B_{i}\\\\\n=&(AB^{R})_{n-x-1}+(A^{R}B)_{x-1}\n\\end{aligned}</script><p>然后套一波多项式乘法的板子，扫一遍系数求个最大值就行了。需要注意的是当$x=0$的时候就只有$(AB^{R})_{n-1}$一项。</p>\n<p>以下是代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 131072</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,ans,k,mx;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],A[maxn+<span class=\"number\">1</span>],B[maxn+<span class=\"number\">1</span>],C[maxn+<span class=\"number\">1</span>],D[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(A[i]);</span><br><span class=\"line\">        ans+=A[i]*A[i];</span><br><span class=\"line\">        k+=A[i];</span><br><span class=\"line\">        C[n<span class=\"number\">-1</span>-i]=A[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(B[i]);</span><br><span class=\"line\">        ans+=B[i]*B[i];</span><br><span class=\"line\">        k-=B[i];</span><br><span class=\"line\">        D[n<span class=\"number\">-1</span>-i]=B[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans+=min(n*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n)*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n)<span class=\"number\">-2</span>*k*<span class=\"built_in\">floor</span>(<span class=\"number\">1.0</span>*k/n),n*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n)*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n)<span class=\"number\">-2</span>*k*<span class=\"built_in\">ceil</span>(<span class=\"number\">1.0</span>*k/n));</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m=<span class=\"number\">1</span>;m&lt;n;m&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    m&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(m&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(A,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(B,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(C,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(D,m,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)&#123;</span><br><span class=\"line\">        A[i]=<span class=\"number\">1L</span>L*A[i]*D[i]%mod;</span><br><span class=\"line\">        B[i]=<span class=\"number\">1L</span>L*B[i]*C[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NTT(A,m,<span class=\"number\">1</span>);</span><br><span class=\"line\">    NTT(B,m,<span class=\"number\">1</span>);</span><br><span class=\"line\">    mx=A[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        mx=max(mx,A[n<span class=\"number\">-1</span>-i]+B[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    cltstream::write(ans-=<span class=\"number\">2</span>*mx);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-07T11:05:03.000Z","title":"「HEOI2012」采花","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P4113)\n\n[Taduro的题解](https://dftyem.github.io/2019/01/07/HEOI2012-采花/)\n\nsto __Taduro__ orz\n\n<!-- more -->\n\n首先，读完题一定有人要跳出来喊「莫队！」。\n\n~~莫队！~~\n\n然后再一看数据范围\n\n> 对于$100\\%$的数据，$1\\leqslant c\\leqslant n,m\\leqslant 2\\times 10^{6}$。\n\n~~笑容逐渐消失。~~\n\n然后根据数据范围，我们不难猜出正解是树状数组。然后问题来了~~，树状数组什么时候有这种操作了~~。\n\n首先这个样例比较菜，我们手造一个：\n\n```plain\n1 6 2 4 2 3 6 2\n```\n\n首先我们维护一个`nxt`数组，表示当前颜色下一次出现的位置，不存在的话就是$0$。上面的样例对应的`nxt`差不多长这样：\n\n| `i` | $1$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `nxt[i]` | $0$ | $7$ | $5$ | $0$ | $8$ | $0$ | $0$ | $0$ |\n\n然后我们把所有询问离线下来，以左端点为第一关键字，右端点为第二关键字排一下序。维护一个指针，让它一直跟着当前询问的左端点走。一开始它在$1$。\n\n然后我们还需要一个数组`ans`，对于每一种颜色，我们令__其在指针所在位置及其之后的部分中第二次出现的位置__的`ans`为$1$。\n\n| `i` | $1$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n因为一种颜色第一次出现不会被统计，第二次出现才会被统计，在这之后就算再出现也不会多统计了。\n\n不难发现，此时$\\sum_{i=1}^{x}ans[i]$就是询问`1 x`的答案。\n\n需要移动指针时，我们每次只移动一个位置。移动完之后，移动前指针所在位置的颜色第二次出现的位置就变成了第一次出现，因此我们需要将这个位置上的`ans`置为$0$。同理，第三次就变成了第二次，因此我们需要将其置为$1$。因为我们每次只移动一个位置，所以说只有一个颜色的状态会发生变化。\n\n这个时候`nxt`数组就派上用场了，我们可以通过它块速地定位到当前颜色后面的出现位置。\n\n让我们以上面的样例为例，稍微模拟一下指针的移动（下划线表示指针当前位置）：\n\n| `i` | $\\underline{1}$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n| `i` | $1$ | $\\underline{2}$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n| `i` | $1$ | $2$ | $\\underline{3}$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | ${\\color{red}6}$ | $2$ | $4$ | $2$ | $3$ | ${\\color{red}6}$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | ${\\color{red}0}$ | $0$ |\n\n| `i` | $1$ | $2$ | $3$ | $\\underline{4}$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | ${\\color{red}2}$ | $4$ | ${\\color{red}2}$ | $3$ | $6$ | ${\\color{red}2}$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | ${\\color{red}0}$ | $0$ | $0$ | ${\\color{red}1}$ |\n\n对于一次询问`l r`，我们将指针移动到`l`这个位置之后查询$\\sum_{i=l}^{r}ans[i]$即可。\n\n代码就不贴了~~，其实我还没写（~~\n","source":"_posts/2019-01-07-luogu-p4113-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-07 19:05:03\ntitle: 「HEOI2012」采花\ntags:\n  - HEOI\n  - 2012\n  - 分块\n  - 莫队\n  - 树状数组\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P4113)\n\n[Taduro的题解](https://dftyem.github.io/2019/01/07/HEOI2012-采花/)\n\nsto __Taduro__ orz\n\n<!-- more -->\n\n首先，读完题一定有人要跳出来喊「莫队！」。\n\n~~莫队！~~\n\n然后再一看数据范围\n\n> 对于$100\\%$的数据，$1\\leqslant c\\leqslant n,m\\leqslant 2\\times 10^{6}$。\n\n~~笑容逐渐消失。~~\n\n然后根据数据范围，我们不难猜出正解是树状数组。然后问题来了~~，树状数组什么时候有这种操作了~~。\n\n首先这个样例比较菜，我们手造一个：\n\n```plain\n1 6 2 4 2 3 6 2\n```\n\n首先我们维护一个`nxt`数组，表示当前颜色下一次出现的位置，不存在的话就是$0$。上面的样例对应的`nxt`差不多长这样：\n\n| `i` | $1$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `nxt[i]` | $0$ | $7$ | $5$ | $0$ | $8$ | $0$ | $0$ | $0$ |\n\n然后我们把所有询问离线下来，以左端点为第一关键字，右端点为第二关键字排一下序。维护一个指针，让它一直跟着当前询问的左端点走。一开始它在$1$。\n\n然后我们还需要一个数组`ans`，对于每一种颜色，我们令__其在指针所在位置及其之后的部分中第二次出现的位置__的`ans`为$1$。\n\n| `i` | $1$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n因为一种颜色第一次出现不会被统计，第二次出现才会被统计，在这之后就算再出现也不会多统计了。\n\n不难发现，此时$\\sum_{i=1}^{x}ans[i]$就是询问`1 x`的答案。\n\n需要移动指针时，我们每次只移动一个位置。移动完之后，移动前指针所在位置的颜色第二次出现的位置就变成了第一次出现，因此我们需要将这个位置上的`ans`置为$0$。同理，第三次就变成了第二次，因此我们需要将其置为$1$。因为我们每次只移动一个位置，所以说只有一个颜色的状态会发生变化。\n\n这个时候`nxt`数组就派上用场了，我们可以通过它块速地定位到当前颜色后面的出现位置。\n\n让我们以上面的样例为例，稍微模拟一下指针的移动（下划线表示指针当前位置）：\n\n| `i` | $\\underline{1}$ | $2$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n| `i` | $1$ | $\\underline{2}$ | $3$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | $2$ | $4$ | $2$ | $3$ | $6$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n| `i` | $1$ | $2$ | $\\underline{3}$ | $4$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | ${\\color{red}6}$ | $2$ | $4$ | $2$ | $3$ | ${\\color{red}6}$ | $2$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | $1$ | $0$ | ${\\color{red}0}$ | $0$ |\n\n| `i` | $1$ | $2$ | $3$ | $\\underline{4}$ | $5$ | $6$ | $7$ | $8$ |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| `c[i]` | $1$ | $6$ | ${\\color{red}2}$ | $4$ | ${\\color{red}2}$ | $3$ | $6$ | ${\\color{red}2}$ |\n| `ans[i]` | $0$ | $0$ | $0$ | $0$ | ${\\color{red}0}$ | $0$ | $0$ | ${\\color{red}1}$ |\n\n对于一次询问`l r`，我们将指针移动到`l`这个位置之后查询$\\sum_{i=l}^{r}ans[i]$即可。\n\n代码就不贴了~~，其实我还没写（~~\n","slug":"luogu-p4113-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng02000tmku9f1jxaitq","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P4113\">传送门</a></p>\n<p><a href=\"https://dftyem.github.io/2019/01/07/HEOI2012-采花/\">Taduro的题解</a></p>\n<p>sto <strong>Taduro</strong> orz</p>\n<a id=\"more\"></a>\n<p>首先，读完题一定有人要跳出来喊「莫队！」。</p>\n<p><del>莫队！</del></p>\n<p>然后再一看数据范围</p>\n<blockquote>\n<p>对于$100\\%$的数据，$1\\leqslant c\\leqslant n,m\\leqslant 2\\times 10^{6}$。</p>\n</blockquote>\n<p><del>笑容逐渐消失。</del></p>\n<p>然后根据数据范围，我们不难猜出正解是树状数组。然后问题来了<del>，树状数组什么时候有这种操作了</del>。</p>\n<p>首先这个样例比较菜，我们手造一个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 6 2 4 2 3 6 2</span><br></pre></td></tr></table></figure>\n<p>首先我们维护一个<code>nxt</code>数组，表示当前颜色下一次出现的位置，不存在的话就是$0$。上面的样例对应的<code>nxt</code>差不多长这样：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>nxt[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$8$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>然后我们把所有询问离线下来，以左端点为第一关键字，右端点为第二关键字排一下序。维护一个指针，让它一直跟着当前询问的左端点走。一开始它在$1$。</p>\n<p>然后我们还需要一个数组<code>ans</code>，对于每一种颜色，我们令<strong>其在指针所在位置及其之后的部分中第二次出现的位置</strong>的<code>ans</code>为$1$。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>因为一种颜色第一次出现不会被统计，第二次出现才会被统计，在这之后就算再出现也不会多统计了。</p>\n<p>不难发现，此时$\\sum_{i=1}^{x}ans[i]$就是询问<code>1 x</code>的答案。</p>\n<p>需要移动指针时，我们每次只移动一个位置。移动完之后，移动前指针所在位置的颜色第二次出现的位置就变成了第一次出现，因此我们需要将这个位置上的<code>ans</code>置为$0$。同理，第三次就变成了第二次，因此我们需要将其置为$1$。因为我们每次只移动一个位置，所以说只有一个颜色的状态会发生变化。</p>\n<p>这个时候<code>nxt</code>数组就派上用场了，我们可以通过它块速地定位到当前颜色后面的出现位置。</p>\n<p>让我们以上面的样例为例，稍微模拟一下指针的移动（下划线表示指针当前位置）：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$\\underline{1}$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$\\underline{2}$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$\\underline{3}$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">${\\color{red}6}$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">${\\color{red}6}$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}0}$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$\\underline{4}$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}0}$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}1}$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>对于一次询问<code>l r</code>，我们将指针移动到<code>l</code>这个位置之后查询$\\sum_{i=l}^{r}ans[i]$即可。</p>\n<p>代码就不贴了<del>，其实我还没写（</del></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P4113\">传送门</a></p>\n<p><a href=\"https://dftyem.github.io/2019/01/07/HEOI2012-采花/\">Taduro的题解</a></p>\n<p>sto <strong>Taduro</strong> orz</p>","more":"<p>首先，读完题一定有人要跳出来喊「莫队！」。</p>\n<p><del>莫队！</del></p>\n<p>然后再一看数据范围</p>\n<blockquote>\n<p>对于$100\\%$的数据，$1\\leqslant c\\leqslant n,m\\leqslant 2\\times 10^{6}$。</p>\n</blockquote>\n<p><del>笑容逐渐消失。</del></p>\n<p>然后根据数据范围，我们不难猜出正解是树状数组。然后问题来了<del>，树状数组什么时候有这种操作了</del>。</p>\n<p>首先这个样例比较菜，我们手造一个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 6 2 4 2 3 6 2</span><br></pre></td></tr></table></figure>\n<p>首先我们维护一个<code>nxt</code>数组，表示当前颜色下一次出现的位置，不存在的话就是$0$。上面的样例对应的<code>nxt</code>差不多长这样：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>nxt[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$8$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>然后我们把所有询问离线下来，以左端点为第一关键字，右端点为第二关键字排一下序。维护一个指针，让它一直跟着当前询问的左端点走。一开始它在$1$。</p>\n<p>然后我们还需要一个数组<code>ans</code>，对于每一种颜色，我们令<strong>其在指针所在位置及其之后的部分中第二次出现的位置</strong>的<code>ans</code>为$1$。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>因为一种颜色第一次出现不会被统计，第二次出现才会被统计，在这之后就算再出现也不会多统计了。</p>\n<p>不难发现，此时$\\sum_{i=1}^{x}ans[i]$就是询问<code>1 x</code>的答案。</p>\n<p>需要移动指针时，我们每次只移动一个位置。移动完之后，移动前指针所在位置的颜色第二次出现的位置就变成了第一次出现，因此我们需要将这个位置上的<code>ans</code>置为$0$。同理，第三次就变成了第二次，因此我们需要将其置为$1$。因为我们每次只移动一个位置，所以说只有一个颜色的状态会发生变化。</p>\n<p>这个时候<code>nxt</code>数组就派上用场了，我们可以通过它块速地定位到当前颜色后面的出现位置。</p>\n<p>让我们以上面的样例为例，稍微模拟一下指针的移动（下划线表示指针当前位置）：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$\\underline{1}$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$\\underline{2}$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$\\underline{3}$</th>\n<th style=\"text-align:center\">$4$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">${\\color{red}6}$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">${\\color{red}6}$</td>\n<td style=\"text-align:center\">$2$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}0}$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><code>i</code></th>\n<th style=\"text-align:center\">$1$</th>\n<th style=\"text-align:center\">$2$</th>\n<th style=\"text-align:center\">$3$</th>\n<th style=\"text-align:center\">$\\underline{4}$</th>\n<th style=\"text-align:center\">$5$</th>\n<th style=\"text-align:center\">$6$</th>\n<th style=\"text-align:center\">$7$</th>\n<th style=\"text-align:center\">$8$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>c[i]</code></td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">${\\color{red}2}$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ans[i]</code></td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}0}$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">${\\color{red}1}$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>对于一次询问<code>l r</code>，我们将指针移动到<code>l</code>这个位置之后查询$\\sum_{i=l}^{r}ans[i]$即可。</p>\n<p>代码就不贴了<del>，其实我还没写（</del></p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-14T13:18:08.000Z","title":"有上下界的网络流问题与预留推进学习笔记","password":null,"_content":"感觉最近好颓啊（\n\n这是一篇正在咕咕咕的blog。\n<!-- more -->\n\n### [无源汇有上下界可行流](https://loj.ac/problem/115)\n\n我们发现，这道题中每条边的流量有一个下界。相比起我们以前做过的网络流题目，我们发现它们并不对流量下界作出要求，也就是说，下界都是$0$。一种简单的想法就是，将每条边的流量上界置为$\\text{upper}(e)-\\text{lower}(e)$，下界置为$0$。然后我们发现，这样做可能会导致流量不平衡，我们需要调整。令\n\n$$w(u)=\\sum_{v\\in V,(v,u)\\in E}\\text{lower}((v,u))-\\sum_{v\\in V,(u,v)\\in E}\\text{lower}((u,v))$$\n\n- 如果$w(u)=0$，说明我们不需要对点$u$做出调整。\n- 如果$w(u)\\gt 0$，说明调整上下界后，流入$u$的流量减少地要比流出$u$的流量多，我们就建立一个源点，从其向点$u$连一条流量上界为$w(u)$的边。\n- 如果$w(u)\\lt 0$，说明调整上下界后，流出$u$的流量减少地要比流入$u$的流量多，我们就建立一个汇点，从点$u$向其连一条流量上界为$-w(u)$的边。\n\n然后直接跑一边从源点到汇点的最大流即可。\n\n需要注意的是我们额外向图中加入的边，加入它们的目的是为了平衡流量，易知，如果它们没有完全满载，就一定不能完全平衡原图的流量，此时问题无解。\n\n否则，我们就已经构造出了一组可行解。\n\n### [有源汇有上下界最大流](https://loj.ac/problem/116)\n\n这道题与上面的区别在于限制了源点和汇点，并且要求求出最大流。\n\n我们可以从汇点到源点连一条流量上界为$+\\infty$的边，然后这整个网络就循环了，然后我们跑一遍无源汇有上下界可行流。\n\n需要注意的是，我们毕竟只是求出了可行流，原图可能还并没有满载。因此，我们删去之前求解可行流时创建的超源和超汇，在原图的残余网络上再跑一边最大流，两次的流量之和就是问题的解。\n\n当然，求解可行流时无解的话，整个问题无解。\n\n### [有源汇有上下界最小流](https://loj.ac/problem/117)\n\n还没看懂，先咕着。\n\n### [最高标号预流推进（HLPP-Highest Label Preflow Pushing？）](https://loj.ac/problem/127)\n\n还没看懂，先咕着。\n","source":"_posts/2019-01-14-something-about-network-flow-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-14 21:18:08\ntitle: 有上下界的网络流问题与预留推进学习笔记\ntags:\n  - 网络流\n  - 最大流\n  - 预留推进\ncategories:\n  - 学习笔记\npassword:\n---\n感觉最近好颓啊（\n\n这是一篇正在咕咕咕的blog。\n<!-- more -->\n\n### [无源汇有上下界可行流](https://loj.ac/problem/115)\n\n我们发现，这道题中每条边的流量有一个下界。相比起我们以前做过的网络流题目，我们发现它们并不对流量下界作出要求，也就是说，下界都是$0$。一种简单的想法就是，将每条边的流量上界置为$\\text{upper}(e)-\\text{lower}(e)$，下界置为$0$。然后我们发现，这样做可能会导致流量不平衡，我们需要调整。令\n\n$$w(u)=\\sum_{v\\in V,(v,u)\\in E}\\text{lower}((v,u))-\\sum_{v\\in V,(u,v)\\in E}\\text{lower}((u,v))$$\n\n- 如果$w(u)=0$，说明我们不需要对点$u$做出调整。\n- 如果$w(u)\\gt 0$，说明调整上下界后，流入$u$的流量减少地要比流出$u$的流量多，我们就建立一个源点，从其向点$u$连一条流量上界为$w(u)$的边。\n- 如果$w(u)\\lt 0$，说明调整上下界后，流出$u$的流量减少地要比流入$u$的流量多，我们就建立一个汇点，从点$u$向其连一条流量上界为$-w(u)$的边。\n\n然后直接跑一边从源点到汇点的最大流即可。\n\n需要注意的是我们额外向图中加入的边，加入它们的目的是为了平衡流量，易知，如果它们没有完全满载，就一定不能完全平衡原图的流量，此时问题无解。\n\n否则，我们就已经构造出了一组可行解。\n\n### [有源汇有上下界最大流](https://loj.ac/problem/116)\n\n这道题与上面的区别在于限制了源点和汇点，并且要求求出最大流。\n\n我们可以从汇点到源点连一条流量上界为$+\\infty$的边，然后这整个网络就循环了，然后我们跑一遍无源汇有上下界可行流。\n\n需要注意的是，我们毕竟只是求出了可行流，原图可能还并没有满载。因此，我们删去之前求解可行流时创建的超源和超汇，在原图的残余网络上再跑一边最大流，两次的流量之和就是问题的解。\n\n当然，求解可行流时无解的话，整个问题无解。\n\n### [有源汇有上下界最小流](https://loj.ac/problem/117)\n\n还没看懂，先咕着。\n\n### [最高标号预流推进（HLPP-Highest Label Preflow Pushing？）](https://loj.ac/problem/127)\n\n还没看懂，先咕着。\n","slug":"something-about-network-flow-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng03000umku9e0xhgqhb","content":"<p>感觉最近好颓啊（</p>\n<p>这是一篇正在咕咕咕的blog。<br><a id=\"more\"></a></p>\n<h3 id=\"无源汇有上下界可行流\"><a href=\"#无源汇有上下界可行流\" class=\"headerlink\" title=\"无源汇有上下界可行流\"></a><a href=\"https://loj.ac/problem/115\">无源汇有上下界可行流</a></h3><p>我们发现，这道题中每条边的流量有一个下界。相比起我们以前做过的网络流题目，我们发现它们并不对流量下界作出要求，也就是说，下界都是$0$。一种简单的想法就是，将每条边的流量上界置为$\\text{upper}(e)-\\text{lower}(e)$，下界置为$0$。然后我们发现，这样做可能会导致流量不平衡，我们需要调整。令</p>\n<script type=\"math/tex; mode=display\">w(u)=\\sum_{v\\in V,(v,u)\\in E}\\text{lower}((v,u))-\\sum_{v\\in V,(u,v)\\in E}\\text{lower}((u,v))</script><ul>\n<li>如果$w(u)=0$，说明我们不需要对点$u$做出调整。</li>\n<li>如果$w(u)\\gt 0$，说明调整上下界后，流入$u$的流量减少地要比流出$u$的流量多，我们就建立一个源点，从其向点$u$连一条流量上界为$w(u)$的边。</li>\n<li>如果$w(u)\\lt 0$，说明调整上下界后，流出$u$的流量减少地要比流入$u$的流量多，我们就建立一个汇点，从点$u$向其连一条流量上界为$-w(u)$的边。</li>\n</ul>\n<p>然后直接跑一边从源点到汇点的最大流即可。</p>\n<p>需要注意的是我们额外向图中加入的边，加入它们的目的是为了平衡流量，易知，如果它们没有完全满载，就一定不能完全平衡原图的流量，此时问题无解。</p>\n<p>否则，我们就已经构造出了一组可行解。</p>\n<h3 id=\"有源汇有上下界最大流\"><a href=\"#有源汇有上下界最大流\" class=\"headerlink\" title=\"有源汇有上下界最大流\"></a><a href=\"https://loj.ac/problem/116\">有源汇有上下界最大流</a></h3><p>这道题与上面的区别在于限制了源点和汇点，并且要求求出最大流。</p>\n<p>我们可以从汇点到源点连一条流量上界为$+\\infty$的边，然后这整个网络就循环了，然后我们跑一遍无源汇有上下界可行流。</p>\n<p>需要注意的是，我们毕竟只是求出了可行流，原图可能还并没有满载。因此，我们删去之前求解可行流时创建的超源和超汇，在原图的残余网络上再跑一边最大流，两次的流量之和就是问题的解。</p>\n<p>当然，求解可行流时无解的话，整个问题无解。</p>\n<h3 id=\"有源汇有上下界最小流\"><a href=\"#有源汇有上下界最小流\" class=\"headerlink\" title=\"有源汇有上下界最小流\"></a><a href=\"https://loj.ac/problem/117\">有源汇有上下界最小流</a></h3><p>还没看懂，先咕着。</p>\n<h3 id=\"最高标号预流推进（HLPP-Highest-Label-Preflow-Pushing？）\"><a href=\"#最高标号预流推进（HLPP-Highest-Label-Preflow-Pushing？）\" class=\"headerlink\" title=\"最高标号预流推进（HLPP-Highest Label Preflow Pushing？）\"></a><a href=\"https://loj.ac/problem/127\">最高标号预流推进（HLPP-Highest Label Preflow Pushing？）</a></h3><p>还没看懂，先咕着。</p>\n","site":{"data":{}},"excerpt":"<p>感觉最近好颓啊（</p>\n<p>这是一篇正在咕咕咕的blog。<br>","more":"</p>\n<h3 id=\"无源汇有上下界可行流\"><a href=\"#无源汇有上下界可行流\" class=\"headerlink\" title=\"无源汇有上下界可行流\"></a><a href=\"https://loj.ac/problem/115\">无源汇有上下界可行流</a></h3><p>我们发现，这道题中每条边的流量有一个下界。相比起我们以前做过的网络流题目，我们发现它们并不对流量下界作出要求，也就是说，下界都是$0$。一种简单的想法就是，将每条边的流量上界置为$\\text{upper}(e)-\\text{lower}(e)$，下界置为$0$。然后我们发现，这样做可能会导致流量不平衡，我们需要调整。令</p>\n<script type=\"math/tex; mode=display\">w(u)=\\sum_{v\\in V,(v,u)\\in E}\\text{lower}((v,u))-\\sum_{v\\in V,(u,v)\\in E}\\text{lower}((u,v))</script><ul>\n<li>如果$w(u)=0$，说明我们不需要对点$u$做出调整。</li>\n<li>如果$w(u)\\gt 0$，说明调整上下界后，流入$u$的流量减少地要比流出$u$的流量多，我们就建立一个源点，从其向点$u$连一条流量上界为$w(u)$的边。</li>\n<li>如果$w(u)\\lt 0$，说明调整上下界后，流出$u$的流量减少地要比流入$u$的流量多，我们就建立一个汇点，从点$u$向其连一条流量上界为$-w(u)$的边。</li>\n</ul>\n<p>然后直接跑一边从源点到汇点的最大流即可。</p>\n<p>需要注意的是我们额外向图中加入的边，加入它们的目的是为了平衡流量，易知，如果它们没有完全满载，就一定不能完全平衡原图的流量，此时问题无解。</p>\n<p>否则，我们就已经构造出了一组可行解。</p>\n<h3 id=\"有源汇有上下界最大流\"><a href=\"#有源汇有上下界最大流\" class=\"headerlink\" title=\"有源汇有上下界最大流\"></a><a href=\"https://loj.ac/problem/116\">有源汇有上下界最大流</a></h3><p>这道题与上面的区别在于限制了源点和汇点，并且要求求出最大流。</p>\n<p>我们可以从汇点到源点连一条流量上界为$+\\infty$的边，然后这整个网络就循环了，然后我们跑一遍无源汇有上下界可行流。</p>\n<p>需要注意的是，我们毕竟只是求出了可行流，原图可能还并没有满载。因此，我们删去之前求解可行流时创建的超源和超汇，在原图的残余网络上再跑一边最大流，两次的流量之和就是问题的解。</p>\n<p>当然，求解可行流时无解的话，整个问题无解。</p>\n<h3 id=\"有源汇有上下界最小流\"><a href=\"#有源汇有上下界最小流\" class=\"headerlink\" title=\"有源汇有上下界最小流\"></a><a href=\"https://loj.ac/problem/117\">有源汇有上下界最小流</a></h3><p>还没看懂，先咕着。</p>\n<h3 id=\"最高标号预流推进（HLPP-Highest-Label-Preflow-Pushing？）\"><a href=\"#最高标号预流推进（HLPP-Highest-Label-Preflow-Pushing？）\" class=\"headerlink\" title=\"最高标号预流推进（HLPP-Highest Label Preflow Pushing？）\"></a><a href=\"https://loj.ac/problem/127\">最高标号预流推进（HLPP-Highest Label Preflow Pushing？）</a></h3><p>还没看懂，先咕着。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-17T03:28:06.000Z","title":"「HEOI2016/TJOI2016」求和","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P4091)\n\n感觉最近意志消沉啥也不想干，于是继续来颓blog（\n\n<!-- more -->\n\n仔细一推发现也不是什么很难的题，感觉几天前的自己就是个傻子（\n\n首先我们知道如果$n\\gt m$，$S(n,m)=0$。于是我们将原式写成\n\n$$\\sum_{i=0}^{n}\\sum_{j=0}^{n}2^{j}j!S(i,j)=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)$$\n\n第二类斯特林数有一个通项公式，它长这样\n\n$$S(n,m)=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}$$\n\n直观理解一下，$S(n,m)$说的是将$n$个有标号的小球放进$m$个无标号的盒子，且不允许空盒的方案数。我们令$F(n,m,k)$表示将$n$个有标号的小球放进$m$个有标号的盒子，且其中至少有$k$个空盒的方案数。不难发现\n\n$$F(n,m,k)=C(m,k)(m-k)^{n}$$\n\n然后我们容斥一下，得到将$n$个有标号的小球放进$m$个有标号的盒子，且不允许空盒的方案数$G(n,m)$。不难发现\n\n$$G(n,m)=\\sum_{i=0}^{m}(-1)^{i}F(n,m,i)=\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}$$\n\n因为$S(n,m)$的定义中要求盒子无标号，我们再除以盒子的排列方案$m!$即可。\n\n然后我们继续推式子\n\n$$\\begin{aligned}\n\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}\\cfrac{j!}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}\n\\end{aligned}$$\n\n我们看到右边就是一个等比数列求和，于是\n\n$$\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}$$\n\n定义\n\n$$F[i]=\\cfrac{(-1)^{i}}{i!}$$\n\n右边的等比数列求和比较麻烦，我们需要一些特判。\n\n$$G[i]=\\begin{cases}\n&1&(i=0)\\\\\n&n+1&(i=1)\\\\\n&\\cfrac{i^{n+1}-1}{i!(i-1)}\\;\\;&(i>1)\n\\end{cases}$$\n\n然后我们就有\n\n$$\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}=\\sum_{j=0}^{n}2^{j}j!(F\\times G)[j]$$\n\n这么一想前几天的我还只会暴力二项式定理展开（\n\n![](/images/TIM图片20181209192946.jpg)\n","source":"_posts/2019-01-17-luogu-p4091-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-17 11:28:06\ntitle: 「HEOI2016/TJOI2016」求和\ntags:\n  - HEOI\n  - TJOI\n  - 2016\n  - NTT\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P4091)\n\n感觉最近意志消沉啥也不想干，于是继续来颓blog（\n\n<!-- more -->\n\n仔细一推发现也不是什么很难的题，感觉几天前的自己就是个傻子（\n\n首先我们知道如果$n\\gt m$，$S(n,m)=0$。于是我们将原式写成\n\n$$\\sum_{i=0}^{n}\\sum_{j=0}^{n}2^{j}j!S(i,j)=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)$$\n\n第二类斯特林数有一个通项公式，它长这样\n\n$$S(n,m)=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}$$\n\n直观理解一下，$S(n,m)$说的是将$n$个有标号的小球放进$m$个无标号的盒子，且不允许空盒的方案数。我们令$F(n,m,k)$表示将$n$个有标号的小球放进$m$个有标号的盒子，且其中至少有$k$个空盒的方案数。不难发现\n\n$$F(n,m,k)=C(m,k)(m-k)^{n}$$\n\n然后我们容斥一下，得到将$n$个有标号的小球放进$m$个有标号的盒子，且不允许空盒的方案数$G(n,m)$。不难发现\n\n$$G(n,m)=\\sum_{i=0}^{m}(-1)^{i}F(n,m,i)=\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}$$\n\n因为$S(n,m)$的定义中要求盒子无标号，我们再除以盒子的排列方案$m!$即可。\n\n然后我们继续推式子\n\n$$\\begin{aligned}\n\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}\\cfrac{j!}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}\n\\end{aligned}$$\n\n我们看到右边就是一个等比数列求和，于是\n\n$$\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}$$\n\n定义\n\n$$F[i]=\\cfrac{(-1)^{i}}{i!}$$\n\n右边的等比数列求和比较麻烦，我们需要一些特判。\n\n$$G[i]=\\begin{cases}\n&1&(i=0)\\\\\n&n+1&(i=1)\\\\\n&\\cfrac{i^{n+1}-1}{i!(i-1)}\\;\\;&(i>1)\n\\end{cases}$$\n\n然后我们就有\n\n$$\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}=\\sum_{j=0}^{n}2^{j}j!(F\\times G)[j]$$\n\n这么一想前几天的我还只会暴力二项式定理展开（\n\n![](/images/TIM图片20181209192946.jpg)\n","slug":"luogu-p4091-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng04000ymku9djscf8fn","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P4091\">传送门</a></p>\n<p>感觉最近意志消沉啥也不想干，于是继续来颓blog（</p>\n<a id=\"more\"></a>\n<p>仔细一推发现也不是什么很难的题，感觉几天前的自己就是个傻子（</p>\n<p>首先我们知道如果$n\\gt m$，$S(n,m)=0$。于是我们将原式写成</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}\\sum_{j=0}^{n}2^{j}j!S(i,j)=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)</script><p>第二类斯特林数有一个通项公式，它长这样</p>\n<script type=\"math/tex; mode=display\">S(n,m)=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}</script><p>直观理解一下，$S(n,m)$说的是将$n$个有标号的小球放进$m$个无标号的盒子，且不允许空盒的方案数。我们令$F(n,m,k)$表示将$n$个有标号的小球放进$m$个有标号的盒子，且其中至少有$k$个空盒的方案数。不难发现</p>\n<script type=\"math/tex; mode=display\">F(n,m,k)=C(m,k)(m-k)^{n}</script><p>然后我们容斥一下，得到将$n$个有标号的小球放进$m$个有标号的盒子，且不允许空盒的方案数$G(n,m)$。不难发现</p>\n<script type=\"math/tex; mode=display\">G(n,m)=\\sum_{i=0}^{m}(-1)^{i}F(n,m,i)=\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}</script><p>因为$S(n,m)$的定义中要求盒子无标号，我们再除以盒子的排列方案$m!$即可。</p>\n<p>然后我们继续推式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}\\cfrac{j!}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}\n\\end{aligned}</script><p>我们看到右边就是一个等比数列求和，于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F[i]=\\cfrac{(-1)^{i}}{i!}</script><p>右边的等比数列求和比较麻烦，我们需要一些特判。</p>\n<script type=\"math/tex; mode=display\">G[i]=\\begin{cases}\n&1&(i=0)\\\\\n&n+1&(i=1)\\\\\n&\\cfrac{i^{n+1}-1}{i!(i-1)}\\;\\;&(i>1)\n\\end{cases}</script><p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}=\\sum_{j=0}^{n}2^{j}j!(F\\times G)[j]</script><p>这么一想前几天的我还只会暴力二项式定理展开（</p>\n<p><img src=\"/images/TIM图片20181209192946.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P4091\">传送门</a></p>\n<p>感觉最近意志消沉啥也不想干，于是继续来颓blog（</p>","more":"<p>仔细一推发现也不是什么很难的题，感觉几天前的自己就是个傻子（</p>\n<p>首先我们知道如果$n\\gt m$，$S(n,m)=0$。于是我们将原式写成</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}\\sum_{j=0}^{n}2^{j}j!S(i,j)=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)</script><p>第二类斯特林数有一个通项公式，它长这样</p>\n<script type=\"math/tex; mode=display\">S(n,m)=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}</script><p>直观理解一下，$S(n,m)$说的是将$n$个有标号的小球放进$m$个无标号的盒子，且不允许空盒的方案数。我们令$F(n,m,k)$表示将$n$个有标号的小球放进$m$个有标号的盒子，且其中至少有$k$个空盒的方案数。不难发现</p>\n<script type=\"math/tex; mode=display\">F(n,m,k)=C(m,k)(m-k)^{n}</script><p>然后我们容斥一下，得到将$n$个有标号的小球放进$m$个有标号的盒子，且不允许空盒的方案数$G(n,m)$。不难发现</p>\n<script type=\"math/tex; mode=display\">G(n,m)=\\sum_{i=0}^{m}(-1)^{i}F(n,m,i)=\\sum_{i=0}^{m}(-1)^{i}C(m,i)(m-i)^{n}</script><p>因为$S(n,m)$的定义中要求盒子无标号，我们再除以盒子的排列方案$m!$即可。</p>\n<p>然后我们继续推式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}S(i,j)&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}\\cfrac{j!}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{i=0}^{n}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}(j-k)^{i}\\\\\n&=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}\n\\end{aligned}</script><p>我们看到右边就是一个等比数列求和，于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!(j-k)!}\\sum_{i=0}^{n}(j-k)^{i}=\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F[i]=\\cfrac{(-1)^{i}}{i!}</script><p>右边的等比数列求和比较麻烦，我们需要一些特判。</p>\n<script type=\"math/tex; mode=display\">G[i]=\\begin{cases}\n&1&(i=0)\\\\\n&n+1&(i=1)\\\\\n&\\cfrac{i^{n+1}-1}{i!(i-1)}\\;\\;&(i>1)\n\\end{cases}</script><p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=0}^{n}2^{j}j!\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{(j-k)^{n+1}-1}{(j-k)!(j-k-1)}=\\sum_{j=0}^{n}2^{j}j!(F\\times G)[j]</script><p>这么一想前几天的我还只会暴力二项式定理展开（</p>\n<p><img src=\"/images/TIM图片20181209192946.jpg\" alt=\"\"></p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-20T09:43:14.000Z","title":"2019-01-20：loli的两场模拟赛的题解","password":null,"_content":"今天loli搞了上午下午连续两场模拟赛，于是来写一篇题解。\n\n上午记为D1，下午记为D2。\n\n<!-- more -->\n\n### D1\n\n#### T1 简 - simple\n\n给你$2n$个数，让你配成$n$对数，每个数恰属于一对数，一对数的得分是其中的较小值，让你最大化得分和。\n\n$n\\leqslant 100000$。\n\n不予置评。\n\n#### T2 单 - single\n\n给你一棵树，每个点有点权$a_{i}$，$dist(u,v)$表示$u$到$v$的树上路径经过的边数。定义\n\n$$b_{u}=\\sum_{i=1}^{n}dist(u,i)a_{i}$$\n\n还会给你一个$\\text{tp}$，$\\text{tp}=0$时给你$\\{a_{n}\\}$让你求$\\{b_{n}\\}$，$\\text{tp}=1$时给你$\\{b_{n}\\}$让你求$\\{a_{n}\\}$。多组数据。\n\n$n\\leqslant 100000,T\\leqslant 5$。\n\n$\\text{tp}=0$时就是一个简单的树形DP。\n\n$\\text{tp}=1$……高斯消元？不是很会写而且$O(n^{3})$会T飞啊（\n\n他给的题解我也没看懂（\n\n我就打了$\\text{tp}=0$的$30$分。\n\n#### T3 题 - problem\n\n有一个平面直角坐标系。一开始你在原点，每次移动可以从$(x,y)$移动到$(x+1,y)$，$(x-1,y)$，$(x,y+1)$，$(x,y-1)$。再给你一个无穷点集$S$，你只能停留在这个点集内的点上，问你恰好$n$步后回到原点的方案数。对$10^{9}+7$取模。\n\n关于$S$，首先会给你一个$\\text{tp}$，然后$S$如下定义\n\n$$S=\\begin{cases}\n&\\{(x,y)\\mid x,y\\in\\mathbb{Z}\\}\\;\\;&(\\text{tp}=0)\\\\\n&\\{(x,y)\\mid x\\in\\mathbb{N},y=0\\}&(\\text{tp}=1)\\\\\n&\\{(x,y)\\mid xy=0\\}&(\\text{tp}=2)\\\\\n&\\{(x,y)\\mid x,y\\in\\mathbb{N}\\}&(\\text{tp}=3)\n\\end{cases}$$\n\n$n\\leqslant 100000$，$n\\equiv 0\\pmod{2}$，$\\text{tp}\\in\\{0,1,2,3\\}$。特殊地，当$\\text{tp}=2$时$n\\leqslant 1000$。\n\n四合一数论提答（\n\n很明显，无论是$x$坐标上还是$y$坐标上，我们都需要移动偶数次。再加上$n$保证是偶数，我们可以将$n$除以$2$，然后走$2n$步。\n\n$\\text{tp}=0$时，我们枚举$2i$步沿$x$轴方向走，$2(n-i)$步沿$y$轴方向走。\n我们可以将这抽象成一个序列，其中有$i$个$x+1/x-1$，$n-i$个$y+1/y-1$，总排列方案数就是$\\cfrac{(2n)!}{i!i!(n-i)!(n-i)!}$。因此\n\n$$\\text{Ans}=(2n)!\\sum_{i=0}^{n}\\cfrac{1}{i!i!(n-i)!(n-i)!}$$\n\n$\\text{tp}=1$直接卡特兰数。\n\n$\\text{tp}=2$比较特殊。因为我们不能离开坐标系，一旦我们离开了原点，我们必须要先走回原点，才能沿着另一个坐标轴的方向继续走。我们可以考虑两种不同的括号，不同种括号之间不能嵌套，然后问有多少个长度为$2n$的序列是匹配的。\n\n如果说我们有连续一段一共$i$对同种括号，不难发现排列方案数是$\\cfrac{(2i)!}{i!i!}$，于是我们就有了一个$O(n^{2})$的DP\n\n$$f[x]=\\sum_{i=1}^{x}f[x-i]\\cfrac{(2i)!}{i!i!}$$\n\n其实如果改一下模数的话这个东西可以用NTT优化到$O(n\\log n)$的。虽然现在这个样子MTT也能搞……但是我不会写（\n\n$\\text{tp}=3$大概是$\\text{tp}=0$与$\\text{tp}=1$的结合。枚举沿$x$轴方向走多少步，然后两个方向分别卡特兰，然后把两个序列合并起来。于是\n\n$$\\begin{aligned}\n\\text{Ans}&=\\sum_{i=0}^{n}C_{2n}^{2i}C_{i}C_{n-i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{(2n)!}{(2i)!(2(n-i))!}\\left(\\cfrac{(2i)!}{i!i!}-\\cfrac{(2i)!}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{(2(n-i))!}{(n-i)!(n-i)!}-\\cfrac{(2(n-i))!}{(n-i+1)!(n-i-1)!}\\right)\\\\\n&=(2n)!\\sum_{i=0}^{n}\\left(\\cfrac{1}{i!i!}-\\cfrac{1}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{1}{(n-i)!(n-i)!}-\\cfrac{1}{(n-i+1)!(n-i-1)!}\\right)\n\\end{aligned}$$\n\n于是愉快地$230$直接rank1（\n\n话说wzx打了$240$分的啊……然而炸成$210$（\n\n### D2\n\n#### T1 印章 - seal\n\n给你一张$n\\times m$的纸，上面有些格子要印墨水。你有一个$r\\times c$的印章，上面有些格子是凸起的可以印。纸和印章不可以旋转，不可以重复印同一个格子，不可以把墨水印到纸外面去。问是否可行。多组数据。\n\n$n,m,r,c\\leqslant 1000,T\\leqslant 10$。\n\n首先我们不难想出一个$O((n-r)(m-c)rc)$也就是差不多$O(n^{4})$的暴力。不过这样只有$60$分。当时我用了一个`bitset`瞎搞了一波把复杂度降到了$O(n^{3})$，然而……并没有什么用（\n\n拿了$60$就跑（\n\n#### T2 多边形 - polygon\n\n一个$0-n$边形被定义为一个正常的$n$边形。对于一个$k-n$边形，对于它最外层的每一条边，我们向外做$n$边形，得到一个$(k+1)-n$边形。\n\n这是一个$0-4$边形\n\n![](/images/图片1.png)\n\n\n这是一个$1-4$边形\n\n![](/images/图片2.png)\n\n这是一个$2-4$边形\n\n![](/images/图片3.png)\n\n给你一个$k-n$边形，问你它的生成树数量。对$998244353$取模。\n\n$0\\leqslant k\\leqslant 10^{6},3\\leqslant n\\leqslant 10^{9}$。\n\n![](/images/TIM图片20181023195537.jpg)\n\n告辞（\n\n彻底放弃治疗（\n\n#### T3 扔球 - ball\n\n给你$n$个球和$n$个瓶子，编号从$1$到$n$。每个球只能扔到指定集合的瓶子里。对于每个球，把它指定集合里的瓶子按编号从小到大排序，然后依次往里面扔球。每次扔进去的概率是$p$，扔不进去就试下一个瓶子，试完所有瓶子一遍还是没扔进去就从头再来一遍直到扔进去为止。指定集合为空就跳过这个球。\n\n所有球扔完之后，记$i$号球被扔进了$a_{i}$号瓶子，问你$\\{a_{n}\\}$的期望逆序对数量。四舍五入保留两位小数。\n\n如果扔球时跳过了$i$号球，那么当做$a_{i}$不存在。\n\n$n\\leqslant 500000,0.4\\leqslant p\\leqslant 0.6$。记$i$号球的指定集合为$S_{i}$，$\\Sigma|S_{i}|\\leqslant 500000$。\n\n从后往前扫，扫到$x$时枚举$a_{x}$的可能取值$y$，将答案累加上$a_{x}=y$的概率与$a_{x+1}$到$a_{n}$中小于$y$的数的数量的期望值的乘积。然后$a_{x}$到$a_{n}$中$y$的出现次数的期望值就是$a_{x+1}$到$a_{n}$中$y$的出现次数的期望值再加上$a_{x}=y$的概率。\n\n套个树状数组就行。\n\n但是等会，$a_{x}=y$的概率怎么算啊。\n\n首先我们考虑集合中最小的那个数，把球扔进那个瓶子的概率应该是\n\n$$\n\\begin{aligned}\n\\lim_{n\\rightarrow+\\infty}\\sum_{i=0}^{n}(1-p)^{i|S_{x}|}p&=p\\cfrac{(1-p)^{(n+1)|S_{x}|}-1}{(1-p)^{|S_{x}|}-1}\\\\\n&=\\cfrac{p}{1-(1-p)^{|S_{x}|}}\n\\end{aligned}$$\n\n那么第$2$小呢？首先我们第一次扔不能扔进去，所以首先需要乘个$1-p$，然后就和上面一样了。依次类推，扔进编号第$i$小的瓶子的概率为\n\n$$\\cfrac{p(1-p)^{i-1}}{1-(1-p)^{|S_{x}|}}$$\n\n最后总分只有$160$，被$190$分的wzx吊着打（\n","source":"_posts/2019-01-20-lolioi-2019-01-20-solutions.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-20 17:43:14\ntitle: 2019-01-20：loli的两场模拟赛的题解\ntags:\n  - loli\n  - 模拟赛\ncategories:\n  - 题解\npassword:\n---\n今天loli搞了上午下午连续两场模拟赛，于是来写一篇题解。\n\n上午记为D1，下午记为D2。\n\n<!-- more -->\n\n### D1\n\n#### T1 简 - simple\n\n给你$2n$个数，让你配成$n$对数，每个数恰属于一对数，一对数的得分是其中的较小值，让你最大化得分和。\n\n$n\\leqslant 100000$。\n\n不予置评。\n\n#### T2 单 - single\n\n给你一棵树，每个点有点权$a_{i}$，$dist(u,v)$表示$u$到$v$的树上路径经过的边数。定义\n\n$$b_{u}=\\sum_{i=1}^{n}dist(u,i)a_{i}$$\n\n还会给你一个$\\text{tp}$，$\\text{tp}=0$时给你$\\{a_{n}\\}$让你求$\\{b_{n}\\}$，$\\text{tp}=1$时给你$\\{b_{n}\\}$让你求$\\{a_{n}\\}$。多组数据。\n\n$n\\leqslant 100000,T\\leqslant 5$。\n\n$\\text{tp}=0$时就是一个简单的树形DP。\n\n$\\text{tp}=1$……高斯消元？不是很会写而且$O(n^{3})$会T飞啊（\n\n他给的题解我也没看懂（\n\n我就打了$\\text{tp}=0$的$30$分。\n\n#### T3 题 - problem\n\n有一个平面直角坐标系。一开始你在原点，每次移动可以从$(x,y)$移动到$(x+1,y)$，$(x-1,y)$，$(x,y+1)$，$(x,y-1)$。再给你一个无穷点集$S$，你只能停留在这个点集内的点上，问你恰好$n$步后回到原点的方案数。对$10^{9}+7$取模。\n\n关于$S$，首先会给你一个$\\text{tp}$，然后$S$如下定义\n\n$$S=\\begin{cases}\n&\\{(x,y)\\mid x,y\\in\\mathbb{Z}\\}\\;\\;&(\\text{tp}=0)\\\\\n&\\{(x,y)\\mid x\\in\\mathbb{N},y=0\\}&(\\text{tp}=1)\\\\\n&\\{(x,y)\\mid xy=0\\}&(\\text{tp}=2)\\\\\n&\\{(x,y)\\mid x,y\\in\\mathbb{N}\\}&(\\text{tp}=3)\n\\end{cases}$$\n\n$n\\leqslant 100000$，$n\\equiv 0\\pmod{2}$，$\\text{tp}\\in\\{0,1,2,3\\}$。特殊地，当$\\text{tp}=2$时$n\\leqslant 1000$。\n\n四合一数论提答（\n\n很明显，无论是$x$坐标上还是$y$坐标上，我们都需要移动偶数次。再加上$n$保证是偶数，我们可以将$n$除以$2$，然后走$2n$步。\n\n$\\text{tp}=0$时，我们枚举$2i$步沿$x$轴方向走，$2(n-i)$步沿$y$轴方向走。\n我们可以将这抽象成一个序列，其中有$i$个$x+1/x-1$，$n-i$个$y+1/y-1$，总排列方案数就是$\\cfrac{(2n)!}{i!i!(n-i)!(n-i)!}$。因此\n\n$$\\text{Ans}=(2n)!\\sum_{i=0}^{n}\\cfrac{1}{i!i!(n-i)!(n-i)!}$$\n\n$\\text{tp}=1$直接卡特兰数。\n\n$\\text{tp}=2$比较特殊。因为我们不能离开坐标系，一旦我们离开了原点，我们必须要先走回原点，才能沿着另一个坐标轴的方向继续走。我们可以考虑两种不同的括号，不同种括号之间不能嵌套，然后问有多少个长度为$2n$的序列是匹配的。\n\n如果说我们有连续一段一共$i$对同种括号，不难发现排列方案数是$\\cfrac{(2i)!}{i!i!}$，于是我们就有了一个$O(n^{2})$的DP\n\n$$f[x]=\\sum_{i=1}^{x}f[x-i]\\cfrac{(2i)!}{i!i!}$$\n\n其实如果改一下模数的话这个东西可以用NTT优化到$O(n\\log n)$的。虽然现在这个样子MTT也能搞……但是我不会写（\n\n$\\text{tp}=3$大概是$\\text{tp}=0$与$\\text{tp}=1$的结合。枚举沿$x$轴方向走多少步，然后两个方向分别卡特兰，然后把两个序列合并起来。于是\n\n$$\\begin{aligned}\n\\text{Ans}&=\\sum_{i=0}^{n}C_{2n}^{2i}C_{i}C_{n-i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{(2n)!}{(2i)!(2(n-i))!}\\left(\\cfrac{(2i)!}{i!i!}-\\cfrac{(2i)!}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{(2(n-i))!}{(n-i)!(n-i)!}-\\cfrac{(2(n-i))!}{(n-i+1)!(n-i-1)!}\\right)\\\\\n&=(2n)!\\sum_{i=0}^{n}\\left(\\cfrac{1}{i!i!}-\\cfrac{1}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{1}{(n-i)!(n-i)!}-\\cfrac{1}{(n-i+1)!(n-i-1)!}\\right)\n\\end{aligned}$$\n\n于是愉快地$230$直接rank1（\n\n话说wzx打了$240$分的啊……然而炸成$210$（\n\n### D2\n\n#### T1 印章 - seal\n\n给你一张$n\\times m$的纸，上面有些格子要印墨水。你有一个$r\\times c$的印章，上面有些格子是凸起的可以印。纸和印章不可以旋转，不可以重复印同一个格子，不可以把墨水印到纸外面去。问是否可行。多组数据。\n\n$n,m,r,c\\leqslant 1000,T\\leqslant 10$。\n\n首先我们不难想出一个$O((n-r)(m-c)rc)$也就是差不多$O(n^{4})$的暴力。不过这样只有$60$分。当时我用了一个`bitset`瞎搞了一波把复杂度降到了$O(n^{3})$，然而……并没有什么用（\n\n拿了$60$就跑（\n\n#### T2 多边形 - polygon\n\n一个$0-n$边形被定义为一个正常的$n$边形。对于一个$k-n$边形，对于它最外层的每一条边，我们向外做$n$边形，得到一个$(k+1)-n$边形。\n\n这是一个$0-4$边形\n\n![](/images/图片1.png)\n\n\n这是一个$1-4$边形\n\n![](/images/图片2.png)\n\n这是一个$2-4$边形\n\n![](/images/图片3.png)\n\n给你一个$k-n$边形，问你它的生成树数量。对$998244353$取模。\n\n$0\\leqslant k\\leqslant 10^{6},3\\leqslant n\\leqslant 10^{9}$。\n\n![](/images/TIM图片20181023195537.jpg)\n\n告辞（\n\n彻底放弃治疗（\n\n#### T3 扔球 - ball\n\n给你$n$个球和$n$个瓶子，编号从$1$到$n$。每个球只能扔到指定集合的瓶子里。对于每个球，把它指定集合里的瓶子按编号从小到大排序，然后依次往里面扔球。每次扔进去的概率是$p$，扔不进去就试下一个瓶子，试完所有瓶子一遍还是没扔进去就从头再来一遍直到扔进去为止。指定集合为空就跳过这个球。\n\n所有球扔完之后，记$i$号球被扔进了$a_{i}$号瓶子，问你$\\{a_{n}\\}$的期望逆序对数量。四舍五入保留两位小数。\n\n如果扔球时跳过了$i$号球，那么当做$a_{i}$不存在。\n\n$n\\leqslant 500000,0.4\\leqslant p\\leqslant 0.6$。记$i$号球的指定集合为$S_{i}$，$\\Sigma|S_{i}|\\leqslant 500000$。\n\n从后往前扫，扫到$x$时枚举$a_{x}$的可能取值$y$，将答案累加上$a_{x}=y$的概率与$a_{x+1}$到$a_{n}$中小于$y$的数的数量的期望值的乘积。然后$a_{x}$到$a_{n}$中$y$的出现次数的期望值就是$a_{x+1}$到$a_{n}$中$y$的出现次数的期望值再加上$a_{x}=y$的概率。\n\n套个树状数组就行。\n\n但是等会，$a_{x}=y$的概率怎么算啊。\n\n首先我们考虑集合中最小的那个数，把球扔进那个瓶子的概率应该是\n\n$$\n\\begin{aligned}\n\\lim_{n\\rightarrow+\\infty}\\sum_{i=0}^{n}(1-p)^{i|S_{x}|}p&=p\\cfrac{(1-p)^{(n+1)|S_{x}|}-1}{(1-p)^{|S_{x}|}-1}\\\\\n&=\\cfrac{p}{1-(1-p)^{|S_{x}|}}\n\\end{aligned}$$\n\n那么第$2$小呢？首先我们第一次扔不能扔进去，所以首先需要乘个$1-p$，然后就和上面一样了。依次类推，扔进编号第$i$小的瓶子的概率为\n\n$$\\cfrac{p(1-p)^{i-1}}{1-(1-p)^{|S_{x}|}}$$\n\n最后总分只有$160$，被$190$分的wzx吊着打（\n","slug":"lolioi-2019-01-20-solutions","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng050010mku9af36f6it","content":"<p>今天loli搞了上午下午连续两场模拟赛，于是来写一篇题解。</p>\n<p>上午记为D1，下午记为D2。</p>\n<a id=\"more\"></a>\n<h3 id=\"D1\"><a href=\"#D1\" class=\"headerlink\" title=\"D1\"></a>D1</h3><h4 id=\"T1-简-simple\"><a href=\"#T1-简-simple\" class=\"headerlink\" title=\"T1 简 - simple\"></a>T1 简 - simple</h4><p>给你$2n$个数，让你配成$n$对数，每个数恰属于一对数，一对数的得分是其中的较小值，让你最大化得分和。</p>\n<p>$n\\leqslant 100000$。</p>\n<p>不予置评。</p>\n<h4 id=\"T2-单-single\"><a href=\"#T2-单-single\" class=\"headerlink\" title=\"T2 单 - single\"></a>T2 单 - single</h4><p>给你一棵树，每个点有点权$a_{i}$，$dist(u,v)$表示$u$到$v$的树上路径经过的边数。定义</p>\n<script type=\"math/tex; mode=display\">b_{u}=\\sum_{i=1}^{n}dist(u,i)a_{i}</script><p>还会给你一个$\\text{tp}$，$\\text{tp}=0$时给你$\\{a_{n}\\}$让你求$\\{b_{n}\\}$，$\\text{tp}=1$时给你$\\{b_{n}\\}$让你求$\\{a_{n}\\}$。多组数据。</p>\n<p>$n\\leqslant 100000,T\\leqslant 5$。</p>\n<p>$\\text{tp}=0$时就是一个简单的树形DP。</p>\n<p>$\\text{tp}=1$……高斯消元？不是很会写而且$O(n^{3})$会T飞啊（</p>\n<p>他给的题解我也没看懂（</p>\n<p>我就打了$\\text{tp}=0$的$30$分。</p>\n<h4 id=\"T3-题-problem\"><a href=\"#T3-题-problem\" class=\"headerlink\" title=\"T3 题 - problem\"></a>T3 题 - problem</h4><p>有一个平面直角坐标系。一开始你在原点，每次移动可以从$(x,y)$移动到$(x+1,y)$，$(x-1,y)$，$(x,y+1)$，$(x,y-1)$。再给你一个无穷点集$S$，你只能停留在这个点集内的点上，问你恰好$n$步后回到原点的方案数。对$10^{9}+7$取模。</p>\n<p>关于$S$，首先会给你一个$\\text{tp}$，然后$S$如下定义</p>\n<script type=\"math/tex; mode=display\">S=\\begin{cases}\n&\\{(x,y)\\mid x,y\\in\\mathbb{Z}\\}\\;\\;&(\\text{tp}=0)\\\\\n&\\{(x,y)\\mid x\\in\\mathbb{N},y=0\\}&(\\text{tp}=1)\\\\\n&\\{(x,y)\\mid xy=0\\}&(\\text{tp}=2)\\\\\n&\\{(x,y)\\mid x,y\\in\\mathbb{N}\\}&(\\text{tp}=3)\n\\end{cases}</script><p>$n\\leqslant 100000$，$n\\equiv 0\\pmod{2}$，$\\text{tp}\\in\\{0,1,2,3\\}$。特殊地，当$\\text{tp}=2$时$n\\leqslant 1000$。</p>\n<p>四合一数论提答（</p>\n<p>很明显，无论是$x$坐标上还是$y$坐标上，我们都需要移动偶数次。再加上$n$保证是偶数，我们可以将$n$除以$2$，然后走$2n$步。</p>\n<p>$\\text{tp}=0$时，我们枚举$2i$步沿$x$轴方向走，$2(n-i)$步沿$y$轴方向走。<br>我们可以将这抽象成一个序列，其中有$i$个$x+1/x-1$，$n-i$个$y+1/y-1$，总排列方案数就是$\\cfrac{(2n)!}{i!i!(n-i)!(n-i)!}$。因此</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=(2n)!\\sum_{i=0}^{n}\\cfrac{1}{i!i!(n-i)!(n-i)!}</script><p>$\\text{tp}=1$直接卡特兰数。</p>\n<p>$\\text{tp}=2$比较特殊。因为我们不能离开坐标系，一旦我们离开了原点，我们必须要先走回原点，才能沿着另一个坐标轴的方向继续走。我们可以考虑两种不同的括号，不同种括号之间不能嵌套，然后问有多少个长度为$2n$的序列是匹配的。</p>\n<p>如果说我们有连续一段一共$i$对同种括号，不难发现排列方案数是$\\cfrac{(2i)!}{i!i!}$，于是我们就有了一个$O(n^{2})$的DP</p>\n<script type=\"math/tex; mode=display\">f[x]=\\sum_{i=1}^{x}f[x-i]\\cfrac{(2i)!}{i!i!}</script><p>其实如果改一下模数的话这个东西可以用NTT优化到$O(n\\log n)$的。虽然现在这个样子MTT也能搞……但是我不会写（</p>\n<p>$\\text{tp}=3$大概是$\\text{tp}=0$与$\\text{tp}=1$的结合。枚举沿$x$轴方向走多少步，然后两个方向分别卡特兰，然后把两个序列合并起来。于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=\\sum_{i=0}^{n}C_{2n}^{2i}C_{i}C_{n-i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{(2n)!}{(2i)!(2(n-i))!}\\left(\\cfrac{(2i)!}{i!i!}-\\cfrac{(2i)!}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{(2(n-i))!}{(n-i)!(n-i)!}-\\cfrac{(2(n-i))!}{(n-i+1)!(n-i-1)!}\\right)\\\\\n&=(2n)!\\sum_{i=0}^{n}\\left(\\cfrac{1}{i!i!}-\\cfrac{1}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{1}{(n-i)!(n-i)!}-\\cfrac{1}{(n-i+1)!(n-i-1)!}\\right)\n\\end{aligned}</script><p>于是愉快地$230$直接rank1（</p>\n<p>话说wzx打了$240$分的啊……然而炸成$210$（</p>\n<h3 id=\"D2\"><a href=\"#D2\" class=\"headerlink\" title=\"D2\"></a>D2</h3><h4 id=\"T1-印章-seal\"><a href=\"#T1-印章-seal\" class=\"headerlink\" title=\"T1 印章 - seal\"></a>T1 印章 - seal</h4><p>给你一张$n\\times m$的纸，上面有些格子要印墨水。你有一个$r\\times c$的印章，上面有些格子是凸起的可以印。纸和印章不可以旋转，不可以重复印同一个格子，不可以把墨水印到纸外面去。问是否可行。多组数据。</p>\n<p>$n,m,r,c\\leqslant 1000,T\\leqslant 10$。</p>\n<p>首先我们不难想出一个$O((n-r)(m-c)rc)$也就是差不多$O(n^{4})$的暴力。不过这样只有$60$分。当时我用了一个<code>bitset</code>瞎搞了一波把复杂度降到了$O(n^{3})$，然而……并没有什么用（</p>\n<p>拿了$60$就跑（</p>\n<h4 id=\"T2-多边形-polygon\"><a href=\"#T2-多边形-polygon\" class=\"headerlink\" title=\"T2 多边形 - polygon\"></a>T2 多边形 - polygon</h4><p>一个$0-n$边形被定义为一个正常的$n$边形。对于一个$k-n$边形，对于它最外层的每一条边，我们向外做$n$边形，得到一个$(k+1)-n$边形。</p>\n<p>这是一个$0-4$边形</p>\n<p><img src=\"/images/图片1.png\" alt=\"\"></p>\n<p>这是一个$1-4$边形</p>\n<p><img src=\"/images/图片2.png\" alt=\"\"></p>\n<p>这是一个$2-4$边形</p>\n<p><img src=\"/images/图片3.png\" alt=\"\"></p>\n<p>给你一个$k-n$边形，问你它的生成树数量。对$998244353$取模。</p>\n<p>$0\\leqslant k\\leqslant 10^{6},3\\leqslant n\\leqslant 10^{9}$。</p>\n<p><img src=\"/images/TIM图片20181023195537.jpg\" alt=\"\"></p>\n<p>告辞（</p>\n<p>彻底放弃治疗（</p>\n<h4 id=\"T3-扔球-ball\"><a href=\"#T3-扔球-ball\" class=\"headerlink\" title=\"T3 扔球 - ball\"></a>T3 扔球 - ball</h4><p>给你$n$个球和$n$个瓶子，编号从$1$到$n$。每个球只能扔到指定集合的瓶子里。对于每个球，把它指定集合里的瓶子按编号从小到大排序，然后依次往里面扔球。每次扔进去的概率是$p$，扔不进去就试下一个瓶子，试完所有瓶子一遍还是没扔进去就从头再来一遍直到扔进去为止。指定集合为空就跳过这个球。</p>\n<p>所有球扔完之后，记$i$号球被扔进了$a_{i}$号瓶子，问你$\\{a_{n}\\}$的期望逆序对数量。四舍五入保留两位小数。</p>\n<p>如果扔球时跳过了$i$号球，那么当做$a_{i}$不存在。</p>\n<p>$n\\leqslant 500000,0.4\\leqslant p\\leqslant 0.6$。记$i$号球的指定集合为$S_{i}$，$\\Sigma|S_{i}|\\leqslant 500000$。</p>\n<p>从后往前扫，扫到$x$时枚举$a_{x}$的可能取值$y$，将答案累加上$a_{x}=y$的概率与$a_{x+1}$到$a_{n}$中小于$y$的数的数量的期望值的乘积。然后$a_{x}$到$a_{n}$中$y$的出现次数的期望值就是$a_{x+1}$到$a_{n}$中$y$的出现次数的期望值再加上$a_{x}=y$的概率。</p>\n<p>套个树状数组就行。</p>\n<p>但是等会，$a_{x}=y$的概率怎么算啊。</p>\n<p>首先我们考虑集合中最小的那个数，把球扔进那个瓶子的概率应该是</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\lim_{n\\rightarrow+\\infty}\\sum_{i=0}^{n}(1-p)^{i|S_{x}|}p&=p\\cfrac{(1-p)^{(n+1)|S_{x}|}-1}{(1-p)^{|S_{x}|}-1}\\\\\n&=\\cfrac{p}{1-(1-p)^{|S_{x}|}}\n\\end{aligned}</script><p>那么第$2$小呢？首先我们第一次扔不能扔进去，所以首先需要乘个$1-p$，然后就和上面一样了。依次类推，扔进编号第$i$小的瓶子的概率为</p>\n<script type=\"math/tex; mode=display\">\\cfrac{p(1-p)^{i-1}}{1-(1-p)^{|S_{x}|}}</script><p>最后总分只有$160$，被$190$分的wzx吊着打（</p>\n","site":{"data":{}},"excerpt":"<p>今天loli搞了上午下午连续两场模拟赛，于是来写一篇题解。</p>\n<p>上午记为D1，下午记为D2。</p>","more":"<h3 id=\"D1\"><a href=\"#D1\" class=\"headerlink\" title=\"D1\"></a>D1</h3><h4 id=\"T1-简-simple\"><a href=\"#T1-简-simple\" class=\"headerlink\" title=\"T1 简 - simple\"></a>T1 简 - simple</h4><p>给你$2n$个数，让你配成$n$对数，每个数恰属于一对数，一对数的得分是其中的较小值，让你最大化得分和。</p>\n<p>$n\\leqslant 100000$。</p>\n<p>不予置评。</p>\n<h4 id=\"T2-单-single\"><a href=\"#T2-单-single\" class=\"headerlink\" title=\"T2 单 - single\"></a>T2 单 - single</h4><p>给你一棵树，每个点有点权$a_{i}$，$dist(u,v)$表示$u$到$v$的树上路径经过的边数。定义</p>\n<script type=\"math/tex; mode=display\">b_{u}=\\sum_{i=1}^{n}dist(u,i)a_{i}</script><p>还会给你一个$\\text{tp}$，$\\text{tp}=0$时给你$\\{a_{n}\\}$让你求$\\{b_{n}\\}$，$\\text{tp}=1$时给你$\\{b_{n}\\}$让你求$\\{a_{n}\\}$。多组数据。</p>\n<p>$n\\leqslant 100000,T\\leqslant 5$。</p>\n<p>$\\text{tp}=0$时就是一个简单的树形DP。</p>\n<p>$\\text{tp}=1$……高斯消元？不是很会写而且$O(n^{3})$会T飞啊（</p>\n<p>他给的题解我也没看懂（</p>\n<p>我就打了$\\text{tp}=0$的$30$分。</p>\n<h4 id=\"T3-题-problem\"><a href=\"#T3-题-problem\" class=\"headerlink\" title=\"T3 题 - problem\"></a>T3 题 - problem</h4><p>有一个平面直角坐标系。一开始你在原点，每次移动可以从$(x,y)$移动到$(x+1,y)$，$(x-1,y)$，$(x,y+1)$，$(x,y-1)$。再给你一个无穷点集$S$，你只能停留在这个点集内的点上，问你恰好$n$步后回到原点的方案数。对$10^{9}+7$取模。</p>\n<p>关于$S$，首先会给你一个$\\text{tp}$，然后$S$如下定义</p>\n<script type=\"math/tex; mode=display\">S=\\begin{cases}\n&\\{(x,y)\\mid x,y\\in\\mathbb{Z}\\}\\;\\;&(\\text{tp}=0)\\\\\n&\\{(x,y)\\mid x\\in\\mathbb{N},y=0\\}&(\\text{tp}=1)\\\\\n&\\{(x,y)\\mid xy=0\\}&(\\text{tp}=2)\\\\\n&\\{(x,y)\\mid x,y\\in\\mathbb{N}\\}&(\\text{tp}=3)\n\\end{cases}</script><p>$n\\leqslant 100000$，$n\\equiv 0\\pmod{2}$，$\\text{tp}\\in\\{0,1,2,3\\}$。特殊地，当$\\text{tp}=2$时$n\\leqslant 1000$。</p>\n<p>四合一数论提答（</p>\n<p>很明显，无论是$x$坐标上还是$y$坐标上，我们都需要移动偶数次。再加上$n$保证是偶数，我们可以将$n$除以$2$，然后走$2n$步。</p>\n<p>$\\text{tp}=0$时，我们枚举$2i$步沿$x$轴方向走，$2(n-i)$步沿$y$轴方向走。<br>我们可以将这抽象成一个序列，其中有$i$个$x+1/x-1$，$n-i$个$y+1/y-1$，总排列方案数就是$\\cfrac{(2n)!}{i!i!(n-i)!(n-i)!}$。因此</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=(2n)!\\sum_{i=0}^{n}\\cfrac{1}{i!i!(n-i)!(n-i)!}</script><p>$\\text{tp}=1$直接卡特兰数。</p>\n<p>$\\text{tp}=2$比较特殊。因为我们不能离开坐标系，一旦我们离开了原点，我们必须要先走回原点，才能沿着另一个坐标轴的方向继续走。我们可以考虑两种不同的括号，不同种括号之间不能嵌套，然后问有多少个长度为$2n$的序列是匹配的。</p>\n<p>如果说我们有连续一段一共$i$对同种括号，不难发现排列方案数是$\\cfrac{(2i)!}{i!i!}$，于是我们就有了一个$O(n^{2})$的DP</p>\n<script type=\"math/tex; mode=display\">f[x]=\\sum_{i=1}^{x}f[x-i]\\cfrac{(2i)!}{i!i!}</script><p>其实如果改一下模数的话这个东西可以用NTT优化到$O(n\\log n)$的。虽然现在这个样子MTT也能搞……但是我不会写（</p>\n<p>$\\text{tp}=3$大概是$\\text{tp}=0$与$\\text{tp}=1$的结合。枚举沿$x$轴方向走多少步，然后两个方向分别卡特兰，然后把两个序列合并起来。于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=\\sum_{i=0}^{n}C_{2n}^{2i}C_{i}C_{n-i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{(2n)!}{(2i)!(2(n-i))!}\\left(\\cfrac{(2i)!}{i!i!}-\\cfrac{(2i)!}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{(2(n-i))!}{(n-i)!(n-i)!}-\\cfrac{(2(n-i))!}{(n-i+1)!(n-i-1)!}\\right)\\\\\n&=(2n)!\\sum_{i=0}^{n}\\left(\\cfrac{1}{i!i!}-\\cfrac{1}{(i+1)!(i-1)!}\\right)\\left(\\cfrac{1}{(n-i)!(n-i)!}-\\cfrac{1}{(n-i+1)!(n-i-1)!}\\right)\n\\end{aligned}</script><p>于是愉快地$230$直接rank1（</p>\n<p>话说wzx打了$240$分的啊……然而炸成$210$（</p>\n<h3 id=\"D2\"><a href=\"#D2\" class=\"headerlink\" title=\"D2\"></a>D2</h3><h4 id=\"T1-印章-seal\"><a href=\"#T1-印章-seal\" class=\"headerlink\" title=\"T1 印章 - seal\"></a>T1 印章 - seal</h4><p>给你一张$n\\times m$的纸，上面有些格子要印墨水。你有一个$r\\times c$的印章，上面有些格子是凸起的可以印。纸和印章不可以旋转，不可以重复印同一个格子，不可以把墨水印到纸外面去。问是否可行。多组数据。</p>\n<p>$n,m,r,c\\leqslant 1000,T\\leqslant 10$。</p>\n<p>首先我们不难想出一个$O((n-r)(m-c)rc)$也就是差不多$O(n^{4})$的暴力。不过这样只有$60$分。当时我用了一个<code>bitset</code>瞎搞了一波把复杂度降到了$O(n^{3})$，然而……并没有什么用（</p>\n<p>拿了$60$就跑（</p>\n<h4 id=\"T2-多边形-polygon\"><a href=\"#T2-多边形-polygon\" class=\"headerlink\" title=\"T2 多边形 - polygon\"></a>T2 多边形 - polygon</h4><p>一个$0-n$边形被定义为一个正常的$n$边形。对于一个$k-n$边形，对于它最外层的每一条边，我们向外做$n$边形，得到一个$(k+1)-n$边形。</p>\n<p>这是一个$0-4$边形</p>\n<p><img src=\"/images/图片1.png\" alt=\"\"></p>\n<p>这是一个$1-4$边形</p>\n<p><img src=\"/images/图片2.png\" alt=\"\"></p>\n<p>这是一个$2-4$边形</p>\n<p><img src=\"/images/图片3.png\" alt=\"\"></p>\n<p>给你一个$k-n$边形，问你它的生成树数量。对$998244353$取模。</p>\n<p>$0\\leqslant k\\leqslant 10^{6},3\\leqslant n\\leqslant 10^{9}$。</p>\n<p><img src=\"/images/TIM图片20181023195537.jpg\" alt=\"\"></p>\n<p>告辞（</p>\n<p>彻底放弃治疗（</p>\n<h4 id=\"T3-扔球-ball\"><a href=\"#T3-扔球-ball\" class=\"headerlink\" title=\"T3 扔球 - ball\"></a>T3 扔球 - ball</h4><p>给你$n$个球和$n$个瓶子，编号从$1$到$n$。每个球只能扔到指定集合的瓶子里。对于每个球，把它指定集合里的瓶子按编号从小到大排序，然后依次往里面扔球。每次扔进去的概率是$p$，扔不进去就试下一个瓶子，试完所有瓶子一遍还是没扔进去就从头再来一遍直到扔进去为止。指定集合为空就跳过这个球。</p>\n<p>所有球扔完之后，记$i$号球被扔进了$a_{i}$号瓶子，问你$\\{a_{n}\\}$的期望逆序对数量。四舍五入保留两位小数。</p>\n<p>如果扔球时跳过了$i$号球，那么当做$a_{i}$不存在。</p>\n<p>$n\\leqslant 500000,0.4\\leqslant p\\leqslant 0.6$。记$i$号球的指定集合为$S_{i}$，$\\Sigma|S_{i}|\\leqslant 500000$。</p>\n<p>从后往前扫，扫到$x$时枚举$a_{x}$的可能取值$y$，将答案累加上$a_{x}=y$的概率与$a_{x+1}$到$a_{n}$中小于$y$的数的数量的期望值的乘积。然后$a_{x}$到$a_{n}$中$y$的出现次数的期望值就是$a_{x+1}$到$a_{n}$中$y$的出现次数的期望值再加上$a_{x}=y$的概率。</p>\n<p>套个树状数组就行。</p>\n<p>但是等会，$a_{x}=y$的概率怎么算啊。</p>\n<p>首先我们考虑集合中最小的那个数，把球扔进那个瓶子的概率应该是</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\lim_{n\\rightarrow+\\infty}\\sum_{i=0}^{n}(1-p)^{i|S_{x}|}p&=p\\cfrac{(1-p)^{(n+1)|S_{x}|}-1}{(1-p)^{|S_{x}|}-1}\\\\\n&=\\cfrac{p}{1-(1-p)^{|S_{x}|}}\n\\end{aligned}</script><p>那么第$2$小呢？首先我们第一次扔不能扔进去，所以首先需要乘个$1-p$，然后就和上面一样了。依次类推，扔进编号第$i$小的瓶子的概率为</p>\n<script type=\"math/tex; mode=display\">\\cfrac{p(1-p)^{i-1}}{1-(1-p)^{|S_{x}|}}</script><p>最后总分只有$160$，被$190$分的wzx吊着打（</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-02-15T11:25:37.000Z","title":"「Luogu-P3613」睡觉困难综合征","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P3613)\n\n<!-- more -->\n\n### xjb扯\n\n以前刚学树剖时看到这题感觉好神仙啊没法做啊。\n\n然后现在学了LCT过来一看~~，这不就一水题（~~\n\nxjb写了棵LCT一交。\n\n![](/images/TIM截图20190215193107.png)\n\nemmmmmm……\n\n然后改的时候才发现全是细节错误，LCT的部分动都没动一下（\n\n就比如说，下面是我第一次交的程序的主程序部分。\n\n```cpp\nfor(re int i=1;i<=m;++i){\n\tint opt,x,y;\n\tcltstream::read(opt);\n\tcltstream::read(x);\n\tcltstream::read(y);\n\tif(opt==1){\n\t\tint z;\n\t\t//我都不知道我当时是怎么想的（\n\t\tcltstream::read(z);\n\t\tsplit(mempool+x,mempool+y);\n\t\tre unsigned long long ans0=(mempool+y)->ans0,ans1=(mempool+y)->ans1,ans=0;\n\t\tfor(re int j=k-1;j>=0;--j)\n\t\t\tif(((ans0>>j)&1)>=((ans1>>j)&1)||z<(1<<j))\n\t\t\t//甚至忘了用1ULL（\n\t\t\t\tans^=ans0&(1<<j);\n\t\t\telse{\n\t\t\t\tz-=1<<j;\n\t\t\t\tans^=ans1&(1<<j);\n\t\t\t}\n\t\tcltstream::write(ans,10);\n\t}\n\telse{\n\t\tunsigned long long z;\n\t\tcltstream::read(z);\n\t\taccess(mempool+x);\n\t\t(mempool+x)->tp=y;\n\t\t(mempool+x)->val=z;\n\t\t(mempool+y)->pushUp();\n\t\t//？？？\n\t}\n}\n```\n\n然后我Splay节点的内部信息甚至开成了`unsigned`，excuse me？？？\n\n~~不这个东西这不是我写的（~~\n\n### 真正的题解\n\n首先LCT。\n\n不过首先的首先您还是要先做了[这道题](https://www.luogu.org/problemnew/show/P2114)。\n\n每个Splay节点维护两个值，分别是把$0$和$-1$在它所在的实链的一部分中按照深度递增的方向跑一遍得到的结果。\n\n我们记这两个值为`ans0`和`ans1`。\n\n左子树和节点本身的信息很好维护。\n\n而关于右子树，看上去我们没办法迅速求出把到现在为止的`ans0`和`ans1`扔进去跑一遍的结果。\n\n但是注意到这些都是按位运算，位与位之间不互相影响。\n\n我们可以对于`ans0`中是$1$的那些位，提取出`rc->ans1`的对应位，对于`ans0`中是$0$的那些位，提取出`rc->ans0`的对应位。\n\n然后`ans1`也类似处理就行了。\n\n```cpp\nstruct SplayNode{\n\tSplayNode *ftr,*lc,*rc;\n\tint tp,rev;\n\tunsigned val,ans0,ans1;\n\n\tinline unsigned long long apply(unsigned long long x){\n\t\treturn tp==1?(x&val):tp==2?(x|val):(x^val);\n\t}\n\n\t/*...*/\n\n\tinline void pushUp(){\n\t\tans0=0,ans1=-1;\n\t\tif(lc!=NULL){\n\t\t\tans0=lc->ans0;\n\t\t\tans1=lc->ans1;\n\t\t}\n\t\tans0=apply(ans0),ans1=apply(ans1);\n\t\tif(rc!=NULL){\n\t\t\tans0=(ans0&rc->ans1)|((~ans0)&rc->ans0);\n\t\t\tans1=(ans1&rc->ans1)|((~ans1)&rc->ans0);\n\t\t}\n\t}\n};\n```\n\n但是还有一个问题是，LCT在连边和提取路径时需要`makeRoot`，也就是说需要区间翻转。\n\n但是由于不同种类的位运算混在一起没有交换律，我们无法快速地算出翻转后的答案。\n\n那么提前维护好就行了。提前维护好`sna0`和`sna1`，表示把$0$和$-1$反过来跑一遍的结果。\n\n然后就没了。\n","source":"_posts/2019-02-15-luogu-p3613-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-02-15 19:25:37\ntitle: 「Luogu-P3613」睡觉困难综合征\ntags:\n  - 树链剖分\n  - LCT\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P3613)\n\n<!-- more -->\n\n### xjb扯\n\n以前刚学树剖时看到这题感觉好神仙啊没法做啊。\n\n然后现在学了LCT过来一看~~，这不就一水题（~~\n\nxjb写了棵LCT一交。\n\n![](/images/TIM截图20190215193107.png)\n\nemmmmmm……\n\n然后改的时候才发现全是细节错误，LCT的部分动都没动一下（\n\n就比如说，下面是我第一次交的程序的主程序部分。\n\n```cpp\nfor(re int i=1;i<=m;++i){\n\tint opt,x,y;\n\tcltstream::read(opt);\n\tcltstream::read(x);\n\tcltstream::read(y);\n\tif(opt==1){\n\t\tint z;\n\t\t//我都不知道我当时是怎么想的（\n\t\tcltstream::read(z);\n\t\tsplit(mempool+x,mempool+y);\n\t\tre unsigned long long ans0=(mempool+y)->ans0,ans1=(mempool+y)->ans1,ans=0;\n\t\tfor(re int j=k-1;j>=0;--j)\n\t\t\tif(((ans0>>j)&1)>=((ans1>>j)&1)||z<(1<<j))\n\t\t\t//甚至忘了用1ULL（\n\t\t\t\tans^=ans0&(1<<j);\n\t\t\telse{\n\t\t\t\tz-=1<<j;\n\t\t\t\tans^=ans1&(1<<j);\n\t\t\t}\n\t\tcltstream::write(ans,10);\n\t}\n\telse{\n\t\tunsigned long long z;\n\t\tcltstream::read(z);\n\t\taccess(mempool+x);\n\t\t(mempool+x)->tp=y;\n\t\t(mempool+x)->val=z;\n\t\t(mempool+y)->pushUp();\n\t\t//？？？\n\t}\n}\n```\n\n然后我Splay节点的内部信息甚至开成了`unsigned`，excuse me？？？\n\n~~不这个东西这不是我写的（~~\n\n### 真正的题解\n\n首先LCT。\n\n不过首先的首先您还是要先做了[这道题](https://www.luogu.org/problemnew/show/P2114)。\n\n每个Splay节点维护两个值，分别是把$0$和$-1$在它所在的实链的一部分中按照深度递增的方向跑一遍得到的结果。\n\n我们记这两个值为`ans0`和`ans1`。\n\n左子树和节点本身的信息很好维护。\n\n而关于右子树，看上去我们没办法迅速求出把到现在为止的`ans0`和`ans1`扔进去跑一遍的结果。\n\n但是注意到这些都是按位运算，位与位之间不互相影响。\n\n我们可以对于`ans0`中是$1$的那些位，提取出`rc->ans1`的对应位，对于`ans0`中是$0$的那些位，提取出`rc->ans0`的对应位。\n\n然后`ans1`也类似处理就行了。\n\n```cpp\nstruct SplayNode{\n\tSplayNode *ftr,*lc,*rc;\n\tint tp,rev;\n\tunsigned val,ans0,ans1;\n\n\tinline unsigned long long apply(unsigned long long x){\n\t\treturn tp==1?(x&val):tp==2?(x|val):(x^val);\n\t}\n\n\t/*...*/\n\n\tinline void pushUp(){\n\t\tans0=0,ans1=-1;\n\t\tif(lc!=NULL){\n\t\t\tans0=lc->ans0;\n\t\t\tans1=lc->ans1;\n\t\t}\n\t\tans0=apply(ans0),ans1=apply(ans1);\n\t\tif(rc!=NULL){\n\t\t\tans0=(ans0&rc->ans1)|((~ans0)&rc->ans0);\n\t\t\tans1=(ans1&rc->ans1)|((~ans1)&rc->ans0);\n\t\t}\n\t}\n};\n```\n\n但是还有一个问题是，LCT在连边和提取路径时需要`makeRoot`，也就是说需要区间翻转。\n\n但是由于不同种类的位运算混在一起没有交换律，我们无法快速地算出翻转后的答案。\n\n那么提前维护好就行了。提前维护好`sna0`和`sna1`，表示把$0$和$-1$反过来跑一遍的结果。\n\n然后就没了。\n","slug":"luogu-p3613-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng060013mku98a7ge3gw","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P3613\">传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"xjb扯\"><a href=\"#xjb扯\" class=\"headerlink\" title=\"xjb扯\"></a>xjb扯</h3><p>以前刚学树剖时看到这题感觉好神仙啊没法做啊。</p>\n<p>然后现在学了LCT过来一看<del>，这不就一水题（</del></p>\n<p>xjb写了棵LCT一交。</p>\n<p><img src=\"/images/TIM截图20190215193107.png\" alt=\"\"></p>\n<p>emmmmmm……</p>\n<p>然后改的时候才发现全是细节错误，LCT的部分动都没动一下（</p>\n<p>就比如说，下面是我第一次交的程序的主程序部分。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> opt,x,y;</span><br><span class=\"line\">    cltstream::read(opt);</span><br><span class=\"line\">    cltstream::read(x);</span><br><span class=\"line\">    cltstream::read(y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(opt==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> z;</span><br><span class=\"line\">        <span class=\"comment\">//我都不知道我当时是怎么想的（</span></span><br><span class=\"line\">        cltstream::read(z);</span><br><span class=\"line\">        split(mempool+x,mempool+y);</span><br><span class=\"line\">        re <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans0=(mempool+y)-&gt;ans0,ans1=(mempool+y)-&gt;ans1,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=k<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(((ans0&gt;&gt;j)&amp;<span class=\"number\">1</span>)&gt;=((ans1&gt;&gt;j)&amp;<span class=\"number\">1</span>)||z&lt;(<span class=\"number\">1</span>&lt;&lt;j))</span><br><span class=\"line\">            <span class=\"comment\">//甚至忘了用1ULL（</span></span><br><span class=\"line\">                ans^=ans0&amp;(<span class=\"number\">1</span>&lt;&lt;j);</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                z-=<span class=\"number\">1</span>&lt;&lt;j;</span><br><span class=\"line\">                ans^=ans1&amp;(<span class=\"number\">1</span>&lt;&lt;j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        cltstream::write(ans,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> z;</span><br><span class=\"line\">        cltstream::read(z);</span><br><span class=\"line\">        access(mempool+x);</span><br><span class=\"line\">        (mempool+x)-&gt;tp=y;</span><br><span class=\"line\">        (mempool+x)-&gt;val=z;</span><br><span class=\"line\">        (mempool+y)-&gt;pushUp();</span><br><span class=\"line\">        <span class=\"comment\">//？？？</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我Splay节点的内部信息甚至开成了<code>unsigned</code>，excuse me？？？</p>\n<p><del>不这个东西这不是我写的（</del></p>\n<h3 id=\"真正的题解\"><a href=\"#真正的题解\" class=\"headerlink\" title=\"真正的题解\"></a>真正的题解</h3><p>首先LCT。</p>\n<p>不过首先的首先您还是要先做了<a href=\"https://www.luogu.org/problemnew/show/P2114\">这道题</a>。</p>\n<p>每个Splay节点维护两个值，分别是把$0$和$-1$在它所在的实链的一部分中按照深度递增的方向跑一遍得到的结果。</p>\n<p>我们记这两个值为<code>ans0</code>和<code>ans1</code>。</p>\n<p>左子树和节点本身的信息很好维护。</p>\n<p>而关于右子树，看上去我们没办法迅速求出把到现在为止的<code>ans0</code>和<code>ans1</code>扔进去跑一遍的结果。</p>\n<p>但是注意到这些都是按位运算，位与位之间不互相影响。</p>\n<p>我们可以对于<code>ans0</code>中是$1$的那些位，提取出<code>rc-&gt;ans1</code>的对应位，对于<code>ans0</code>中是$0$的那些位，提取出<code>rc-&gt;ans0</code>的对应位。</p>\n<p>然后<code>ans1</code>也类似处理就行了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    SplayNode *ftr,*lc,*rc;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tp,rev;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> val,ans0,ans1;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">apply</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> tp==<span class=\"number\">1</span>?(x&amp;val):tp==<span class=\"number\">2</span>?(x|val):(x^val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*...*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        ans0=<span class=\"number\">0</span>,ans1=<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ans0=lc-&gt;ans0;</span><br><span class=\"line\">            ans1=lc-&gt;ans1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans0=apply(ans0),ans1=apply(ans1);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ans0=(ans0&amp;rc-&gt;ans1)|((~ans0)&amp;rc-&gt;ans0);</span><br><span class=\"line\">            ans1=(ans1&amp;rc-&gt;ans1)|((~ans1)&amp;rc-&gt;ans0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>但是还有一个问题是，LCT在连边和提取路径时需要<code>makeRoot</code>，也就是说需要区间翻转。</p>\n<p>但是由于不同种类的位运算混在一起没有交换律，我们无法快速地算出翻转后的答案。</p>\n<p>那么提前维护好就行了。提前维护好<code>sna0</code>和<code>sna1</code>，表示把$0$和$-1$反过来跑一遍的结果。</p>\n<p>然后就没了。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P3613\">传送门</a></p>","more":"<h3 id=\"xjb扯\"><a href=\"#xjb扯\" class=\"headerlink\" title=\"xjb扯\"></a>xjb扯</h3><p>以前刚学树剖时看到这题感觉好神仙啊没法做啊。</p>\n<p>然后现在学了LCT过来一看<del>，这不就一水题（</del></p>\n<p>xjb写了棵LCT一交。</p>\n<p><img src=\"/images/TIM截图20190215193107.png\" alt=\"\"></p>\n<p>emmmmmm……</p>\n<p>然后改的时候才发现全是细节错误，LCT的部分动都没动一下（</p>\n<p>就比如说，下面是我第一次交的程序的主程序部分。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> opt,x,y;</span><br><span class=\"line\">    cltstream::read(opt);</span><br><span class=\"line\">    cltstream::read(x);</span><br><span class=\"line\">    cltstream::read(y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(opt==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> z;</span><br><span class=\"line\">        <span class=\"comment\">//我都不知道我当时是怎么想的（</span></span><br><span class=\"line\">        cltstream::read(z);</span><br><span class=\"line\">        split(mempool+x,mempool+y);</span><br><span class=\"line\">        re <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans0=(mempool+y)-&gt;ans0,ans1=(mempool+y)-&gt;ans1,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=k<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(((ans0&gt;&gt;j)&amp;<span class=\"number\">1</span>)&gt;=((ans1&gt;&gt;j)&amp;<span class=\"number\">1</span>)||z&lt;(<span class=\"number\">1</span>&lt;&lt;j))</span><br><span class=\"line\">            <span class=\"comment\">//甚至忘了用1ULL（</span></span><br><span class=\"line\">                ans^=ans0&amp;(<span class=\"number\">1</span>&lt;&lt;j);</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                z-=<span class=\"number\">1</span>&lt;&lt;j;</span><br><span class=\"line\">                ans^=ans1&amp;(<span class=\"number\">1</span>&lt;&lt;j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        cltstream::write(ans,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> z;</span><br><span class=\"line\">        cltstream::read(z);</span><br><span class=\"line\">        access(mempool+x);</span><br><span class=\"line\">        (mempool+x)-&gt;tp=y;</span><br><span class=\"line\">        (mempool+x)-&gt;val=z;</span><br><span class=\"line\">        (mempool+y)-&gt;pushUp();</span><br><span class=\"line\">        <span class=\"comment\">//？？？</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我Splay节点的内部信息甚至开成了<code>unsigned</code>，excuse me？？？</p>\n<p><del>不这个东西这不是我写的（</del></p>\n<h3 id=\"真正的题解\"><a href=\"#真正的题解\" class=\"headerlink\" title=\"真正的题解\"></a>真正的题解</h3><p>首先LCT。</p>\n<p>不过首先的首先您还是要先做了<a href=\"https://www.luogu.org/problemnew/show/P2114\">这道题</a>。</p>\n<p>每个Splay节点维护两个值，分别是把$0$和$-1$在它所在的实链的一部分中按照深度递增的方向跑一遍得到的结果。</p>\n<p>我们记这两个值为<code>ans0</code>和<code>ans1</code>。</p>\n<p>左子树和节点本身的信息很好维护。</p>\n<p>而关于右子树，看上去我们没办法迅速求出把到现在为止的<code>ans0</code>和<code>ans1</code>扔进去跑一遍的结果。</p>\n<p>但是注意到这些都是按位运算，位与位之间不互相影响。</p>\n<p>我们可以对于<code>ans0</code>中是$1$的那些位，提取出<code>rc-&gt;ans1</code>的对应位，对于<code>ans0</code>中是$0$的那些位，提取出<code>rc-&gt;ans0</code>的对应位。</p>\n<p>然后<code>ans1</code>也类似处理就行了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    SplayNode *ftr,*lc,*rc;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tp,rev;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> val,ans0,ans1;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">apply</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> tp==<span class=\"number\">1</span>?(x&amp;val):tp==<span class=\"number\">2</span>?(x|val):(x^val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*...*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        ans0=<span class=\"number\">0</span>,ans1=<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ans0=lc-&gt;ans0;</span><br><span class=\"line\">            ans1=lc-&gt;ans1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans0=apply(ans0),ans1=apply(ans1);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ans0=(ans0&amp;rc-&gt;ans1)|((~ans0)&amp;rc-&gt;ans0);</span><br><span class=\"line\">            ans1=(ans1&amp;rc-&gt;ans1)|((~ans1)&amp;rc-&gt;ans0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>但是还有一个问题是，LCT在连边和提取路径时需要<code>makeRoot</code>，也就是说需要区间翻转。</p>\n<p>但是由于不同种类的位运算混在一起没有交换律，我们无法快速地算出翻转后的答案。</p>\n<p>那么提前维护好就行了。提前维护好<code>sna0</code>和<code>sna1</code>，表示把$0$和$-1$反过来跑一遍的结果。</p>\n<p>然后就没了。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-12T11:49:47.000Z","title":"「Luogu-P4705」Van♂游戏","password":null,"_content":"下个月就要省选了我还在颓怕不是要凉\n\n然后再一翻wzx的blog发现他更新频率快到爆炸\n\n大概这就是神吧\n\n啊啊我好菜啊，不过还是来抄篇题解吧\n\n[传送门](https://www.luogu.org/problemnew/show/P4705)\n\n<!-- more -->\n\n令$\\text{Ans}[t]$表示$t$次价值：\n\n$$\\begin{aligned}\n\\text{Ans}[t]&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_{i}+b_{j})^{t}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t}C_{t}^{k}a_{i}^{k}b_{j}^{t-k}\\\\\n&=t!\\sum_{k=0}^{t}\\cfrac{\\sum a_{i}^{k}}{k!}\\cfrac{\\sum b_{j}^{t-k}}{(t-k)!}\n\\end{aligned}$$\n\n然后我们看到了$\\sum a_{i}^{k}$这种东西，要算的话时间复杂度至少要是$O(nt)$的（\n\n从这里往下是抄的题解。\n\n定义\n\n$$F(x)=\\prod_{i=1}^{n}(a_{i}x+1)$$\n\n$$\\begin{aligned}\nG(x)&=\\ln F(x)\\\\\n&=\\ln\\prod_{i=1}^{n}(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\n\\end{aligned}$$\n\n我们先来考虑如何求出$F$。定义$Q_{i}$为从$\\{a_{n}\\}$中选出$i$个数相乘，这样的所有方案结果的总和，且$Q_{0}=1$。我们有\n\n$$F(x)=\\sum_{i=0}^{n}Q_{i}x^{i}$$\n\n然后分治。假设我们现在已经求出了$[l,mid]$上的$Q_{L,0},Q_{L,1},\\cdots,Q_{L,mid-l+1}$和$(mid,r]$上的$Q_{R,0},Q_{R,1},\\cdots,Q_{R,r-mid}$，不难发现\n\n$$Q_{i}=\\sum_{j=0}^{i}Q_{L,j}Q_{R,i-j}$$\n\n这部分的时间复杂度为$O(n\\log^{2}n)$。\n\n然后我们将$G$在$1$这个位置泰勒展开。先回忆一下[泰勒展开](/polynomial-learning-notes-pt2/)的式子\n\n$$g(x)=\\sum\\limits_{i=1}^{+\\infty}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i$$\n\n$$\\ln^{(n)}(x)=(-1)^{n-1}(n-1)!x^{-n}$$\n\n$$\\begin{aligned}\nG(x)&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{\\ln^{(j)}(1)}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}(j-1)!1^{-j}}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}a_{i}^{j}x^{j}\\\\\n&=\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}\\left(\\sum_{i=1}^{n}a_{i}^{j}\\right)x^{j}\n\\end{aligned}$$\n\n![](/images/TIM图片20190123161752.jpg)\n\n令人窒息（\n\n然后这道题就做出来了（\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,t;\nint unit[2][24],rev[maxn+1],inv[maxn+1]={1,1};\nint A[maxn+1],B[maxn+1],F[maxn+1],G[maxn+1],tmp1[maxn+1],tmp2[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=0;\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp1[k]=F[k];\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\ttmp1[k]=0;\n\t\tNTT(tmp1,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp1[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t}\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n}\n\ninline void Ln(re int* F,re int* G,re int n){\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tfor(re int i=1;i<n;++i)\n\t\tG[i-1]=1LL*F[i]*i%mod;\n\tG[n-1]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n\tNTT(G,N,0);\n\tInv(F,tmp2,n);\n\tNTT(tmp2,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=1LL*G[i]*tmp2[i]%mod;\n\tNTT(G,N,1);\n\tfor(re int i=n-1;i>=1;--i)\n\t\tG[i]=1LL*G[i-1]*inv[i]%mod;\n\tG[0]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n}\n\nvoid calc(re int* P,re int l,re int r){\n\tif(l<r){\n\t\tre int mid=(l+r)>>1,N=1;\n\t\tcalc(P,l,mid);\n\t\tcalc(P,mid+1,r);\n\t\tfor(;N<r-l+2;N<<=1);\n\t\tF[0]=1;\n\t\tfor(re int i=1;i<=mid-l+1;++i)\n\t\t\tF[i]=P[l+i-1];\n\t\tfor(re int i=mid-l+2;i<N;++i)\n\t\t\tF[i]=0;\n\t\tNTT(F,N,0);\n\t\tG[0]=1;\n\t\tfor(re int i=1;i<=r-mid;++i)\n\t\t\tG[i]=P[mid+i];\n\t\tfor(re int i=r-mid+1;i<N;++i)\n\t\t\tG[i]=0;\n\t\tNTT(G,N,0);\n\t\tfor(re int i=0;i<N;++i)\n\t\t\tF[i]=1LL*F[i]*G[i]%mod;\n\t\tNTT(F,N,1);\n\t\tfor(re int i=1;i<=r-l+1;++i)\n\t\t\tP[l+i-1]=F[i];\n\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tA[0]=1;\n\tfor(re int i=1;i<=n;++i)\n\t\tcltstream::read(A[i]);\n\tB[0]=1;\n\tfor(re int i=1;i<=m;++i)\n\t\tcltstream::read(B[i]);\n\tcltstream::read(t);\n\tcalc(A,1,n);\n\tcalc(B,1,m);\n\tLn(A,F,t+1);\n\tLn(B,G,t+1);\n\tF[0]=n;\n\tfor(re int i=1,j=1;i<=t;j=1LL*j*(mod-inv[i])%mod,++i)\n\t\tF[i]=1LL*F[i]*j%mod;\n\tG[0]=m;\n\tfor(re int i=1,j=1;i<=t;j=1LL*j*(mod-inv[i])%mod,++i)\n\t\tG[i]=1LL*G[i]*j%mod;\n\tre int N=1;\n\tfor(;N<(t<<1|1);N<<=1);\n\tfor(re int i=t+1;i<N;++i)\n\t\tF[i]=G[i]=0;\n\tNTT(F,N,0);\n\tNTT(G,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tF[i]=1LL*F[i]*G[i]%mod;\n\tNTT(F,N,1);\n\tN=cltpow(1LL*n*m%mod,mod-2);\n\tfor(re int i=1,j=N;i<=t;++i,j=1LL*j*i%mod)\n\t\tcltstream::write(1LL*F[i]*j%mod,10);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-03-12-luogu-p4705-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-12 19:49:47\ntitle: 「Luogu-P4705」Van♂游戏\ntags:\n  - NTT\ncategories:\n  - 题解\npassword:\n---\n下个月就要省选了我还在颓怕不是要凉\n\n然后再一翻wzx的blog发现他更新频率快到爆炸\n\n大概这就是神吧\n\n啊啊我好菜啊，不过还是来抄篇题解吧\n\n[传送门](https://www.luogu.org/problemnew/show/P4705)\n\n<!-- more -->\n\n令$\\text{Ans}[t]$表示$t$次价值：\n\n$$\\begin{aligned}\n\\text{Ans}[t]&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_{i}+b_{j})^{t}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t}C_{t}^{k}a_{i}^{k}b_{j}^{t-k}\\\\\n&=t!\\sum_{k=0}^{t}\\cfrac{\\sum a_{i}^{k}}{k!}\\cfrac{\\sum b_{j}^{t-k}}{(t-k)!}\n\\end{aligned}$$\n\n然后我们看到了$\\sum a_{i}^{k}$这种东西，要算的话时间复杂度至少要是$O(nt)$的（\n\n从这里往下是抄的题解。\n\n定义\n\n$$F(x)=\\prod_{i=1}^{n}(a_{i}x+1)$$\n\n$$\\begin{aligned}\nG(x)&=\\ln F(x)\\\\\n&=\\ln\\prod_{i=1}^{n}(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\n\\end{aligned}$$\n\n我们先来考虑如何求出$F$。定义$Q_{i}$为从$\\{a_{n}\\}$中选出$i$个数相乘，这样的所有方案结果的总和，且$Q_{0}=1$。我们有\n\n$$F(x)=\\sum_{i=0}^{n}Q_{i}x^{i}$$\n\n然后分治。假设我们现在已经求出了$[l,mid]$上的$Q_{L,0},Q_{L,1},\\cdots,Q_{L,mid-l+1}$和$(mid,r]$上的$Q_{R,0},Q_{R,1},\\cdots,Q_{R,r-mid}$，不难发现\n\n$$Q_{i}=\\sum_{j=0}^{i}Q_{L,j}Q_{R,i-j}$$\n\n这部分的时间复杂度为$O(n\\log^{2}n)$。\n\n然后我们将$G$在$1$这个位置泰勒展开。先回忆一下[泰勒展开](/polynomial-learning-notes-pt2/)的式子\n\n$$g(x)=\\sum\\limits_{i=1}^{+\\infty}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i$$\n\n$$\\ln^{(n)}(x)=(-1)^{n-1}(n-1)!x^{-n}$$\n\n$$\\begin{aligned}\nG(x)&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{\\ln^{(j)}(1)}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}(j-1)!1^{-j}}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}a_{i}^{j}x^{j}\\\\\n&=\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}\\left(\\sum_{i=1}^{n}a_{i}^{j}\\right)x^{j}\n\\end{aligned}$$\n\n![](/images/TIM图片20190123161752.jpg)\n\n令人窒息（\n\n然后这道题就做出来了（\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,t;\nint unit[2][24],rev[maxn+1],inv[maxn+1]={1,1};\nint A[maxn+1],B[maxn+1],F[maxn+1],G[maxn+1],tmp1[maxn+1],tmp2[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=0;\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp1[k]=F[k];\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\ttmp1[k]=0;\n\t\tNTT(tmp1,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp1[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t}\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n}\n\ninline void Ln(re int* F,re int* G,re int n){\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tfor(re int i=1;i<n;++i)\n\t\tG[i-1]=1LL*F[i]*i%mod;\n\tG[n-1]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n\tNTT(G,N,0);\n\tInv(F,tmp2,n);\n\tNTT(tmp2,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=1LL*G[i]*tmp2[i]%mod;\n\tNTT(G,N,1);\n\tfor(re int i=n-1;i>=1;--i)\n\t\tG[i]=1LL*G[i-1]*inv[i]%mod;\n\tG[0]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n}\n\nvoid calc(re int* P,re int l,re int r){\n\tif(l<r){\n\t\tre int mid=(l+r)>>1,N=1;\n\t\tcalc(P,l,mid);\n\t\tcalc(P,mid+1,r);\n\t\tfor(;N<r-l+2;N<<=1);\n\t\tF[0]=1;\n\t\tfor(re int i=1;i<=mid-l+1;++i)\n\t\t\tF[i]=P[l+i-1];\n\t\tfor(re int i=mid-l+2;i<N;++i)\n\t\t\tF[i]=0;\n\t\tNTT(F,N,0);\n\t\tG[0]=1;\n\t\tfor(re int i=1;i<=r-mid;++i)\n\t\t\tG[i]=P[mid+i];\n\t\tfor(re int i=r-mid+1;i<N;++i)\n\t\t\tG[i]=0;\n\t\tNTT(G,N,0);\n\t\tfor(re int i=0;i<N;++i)\n\t\t\tF[i]=1LL*F[i]*G[i]%mod;\n\t\tNTT(F,N,1);\n\t\tfor(re int i=1;i<=r-l+1;++i)\n\t\t\tP[l+i-1]=F[i];\n\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tA[0]=1;\n\tfor(re int i=1;i<=n;++i)\n\t\tcltstream::read(A[i]);\n\tB[0]=1;\n\tfor(re int i=1;i<=m;++i)\n\t\tcltstream::read(B[i]);\n\tcltstream::read(t);\n\tcalc(A,1,n);\n\tcalc(B,1,m);\n\tLn(A,F,t+1);\n\tLn(B,G,t+1);\n\tF[0]=n;\n\tfor(re int i=1,j=1;i<=t;j=1LL*j*(mod-inv[i])%mod,++i)\n\t\tF[i]=1LL*F[i]*j%mod;\n\tG[0]=m;\n\tfor(re int i=1,j=1;i<=t;j=1LL*j*(mod-inv[i])%mod,++i)\n\t\tG[i]=1LL*G[i]*j%mod;\n\tre int N=1;\n\tfor(;N<(t<<1|1);N<<=1);\n\tfor(re int i=t+1;i<N;++i)\n\t\tF[i]=G[i]=0;\n\tNTT(F,N,0);\n\tNTT(G,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tF[i]=1LL*F[i]*G[i]%mod;\n\tNTT(F,N,1);\n\tN=cltpow(1LL*n*m%mod,mod-2);\n\tfor(re int i=1,j=N;i<=t;++i,j=1LL*j*i%mod)\n\t\tcltstream::write(1LL*F[i]*j%mod,10);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"luogu-p4705-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng070017mku97pw8goqx","content":"<p>下个月就要省选了我还在颓怕不是要凉</p>\n<p>然后再一翻wzx的blog发现他更新频率快到爆炸</p>\n<p>大概这就是神吧</p>\n<p>啊啊我好菜啊，不过还是来抄篇题解吧</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P4705\">传送门</a></p>\n<a id=\"more\"></a>\n<p>令$\\text{Ans}[t]$表示$t$次价值：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}[t]&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_{i}+b_{j})^{t}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t}C_{t}^{k}a_{i}^{k}b_{j}^{t-k}\\\\\n&=t!\\sum_{k=0}^{t}\\cfrac{\\sum a_{i}^{k}}{k!}\\cfrac{\\sum b_{j}^{t-k}}{(t-k)!}\n\\end{aligned}</script><p>然后我们看到了$\\sum a_{i}^{k}$这种东西，要算的话时间复杂度至少要是$O(nt)$的（</p>\n<p>从这里往下是抄的题解。</p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">F(x)=\\prod_{i=1}^{n}(a_{i}x+1)</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\ln F(x)\\\\\n&=\\ln\\prod_{i=1}^{n}(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\n\\end{aligned}</script><p>我们先来考虑如何求出$F$。定义$Q_{i}$为从$\\{a_{n}\\}$中选出$i$个数相乘，这样的所有方案结果的总和，且$Q_{0}=1$。我们有</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum_{i=0}^{n}Q_{i}x^{i}</script><p>然后分治。假设我们现在已经求出了$[l,mid]$上的$Q_{L,0},Q_{L,1},\\cdots,Q_{L,mid-l+1}$和$(mid,r]$上的$Q_{R,0},Q_{R,1},\\cdots,Q_{R,r-mid}$，不难发现</p>\n<script type=\"math/tex; mode=display\">Q_{i}=\\sum_{j=0}^{i}Q_{L,j}Q_{R,i-j}</script><p>这部分的时间复杂度为$O(n\\log^{2}n)$。</p>\n<p>然后我们将$G$在$1$这个位置泰勒展开。先回忆一下<a href=\"/polynomial-learning-notes-pt2/\">泰勒展开</a>的式子</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=1}^{+\\infty}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i</script><script type=\"math/tex; mode=display\">\\ln^{(n)}(x)=(-1)^{n-1}(n-1)!x^{-n}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{\\ln^{(j)}(1)}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}(j-1)!1^{-j}}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}a_{i}^{j}x^{j}\\\\\n&=\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}\\left(\\sum_{i=1}^{n}a_{i}^{j}\\right)x^{j}\n\\end{aligned}</script><p><img src=\"/images/TIM图片20190123161752.jpg\" alt=\"\"></p>\n<p>令人窒息（</p>\n<p>然后这道题就做出来了（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,t;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[maxn+<span class=\"number\">1</span>],B[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>],tmp1[maxn+<span class=\"number\">1</span>],tmp2[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp1[k]=F[k];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            tmp1[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(tmp1,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp1[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i<span class=\"number\">-1</span>]=<span class=\"number\">1L</span>L*F[i]*i%mod;</span><br><span class=\"line\">    G[n<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    Inv(F,tmp2,n);</span><br><span class=\"line\">    NTT(tmp2,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*tmp2[i]%mod;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">calc</span><span class=\"params\">(re <span class=\"keyword\">int</span>* P,re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&lt;r)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>,N=<span class=\"number\">1</span>;</span><br><span class=\"line\">        calc(P,l,mid);</span><br><span class=\"line\">        calc(P,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;N&lt;r-l+<span class=\"number\">2</span>;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">        F[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mid-l+<span class=\"number\">1</span>;++i)</span><br><span class=\"line\">            F[i]=P[l+i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=mid-l+<span class=\"number\">2</span>;i&lt;N;++i)</span><br><span class=\"line\">            F[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(F,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">        G[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=r-mid;++i)</span><br><span class=\"line\">            G[i]=P[mid+i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=r-mid+<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">            G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">            F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">        NTT(F,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=r-l+<span class=\"number\">1</span>;++i)</span><br><span class=\"line\">            P[l+i<span class=\"number\">-1</span>]=F[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    A[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::read(A[i]);</span><br><span class=\"line\">    B[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)</span><br><span class=\"line\">        cltstream::read(B[i]);</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    calc(A,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">    calc(B,<span class=\"number\">1</span>,m);</span><br><span class=\"line\">    Ln(A,F,t+<span class=\"number\">1</span>);</span><br><span class=\"line\">    Ln(B,G,t+<span class=\"number\">1</span>);</span><br><span class=\"line\">    F[<span class=\"number\">0</span>]=n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=t;j=<span class=\"number\">1L</span>L*j*(mod-inv[i])%mod,++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*j%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=t;j=<span class=\"number\">1L</span>L*j*(mod-inv[i])%mod,++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*j%mod;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;(t&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>);N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=t+<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">        F[i]=G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    NTT(F,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">    NTT(F,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    N=cltpow(<span class=\"number\">1L</span>L*n*m%mod,mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=N;i&lt;=t;++i,j=<span class=\"number\">1L</span>L*j*i%mod)</span><br><span class=\"line\">        cltstream::write(<span class=\"number\">1L</span>L*F[i]*j%mod,<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>下个月就要省选了我还在颓怕不是要凉</p>\n<p>然后再一翻wzx的blog发现他更新频率快到爆炸</p>\n<p>大概这就是神吧</p>\n<p>啊啊我好菜啊，不过还是来抄篇题解吧</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P4705\">传送门</a></p>","more":"<p>令$\\text{Ans}[t]$表示$t$次价值：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}[t]&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_{i}+b_{j})^{t}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t}C_{t}^{k}a_{i}^{k}b_{j}^{t-k}\\\\\n&=t!\\sum_{k=0}^{t}\\cfrac{\\sum a_{i}^{k}}{k!}\\cfrac{\\sum b_{j}^{t-k}}{(t-k)!}\n\\end{aligned}</script><p>然后我们看到了$\\sum a_{i}^{k}$这种东西，要算的话时间复杂度至少要是$O(nt)$的（</p>\n<p>从这里往下是抄的题解。</p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">F(x)=\\prod_{i=1}^{n}(a_{i}x+1)</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\ln F(x)\\\\\n&=\\ln\\prod_{i=1}^{n}(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\n\\end{aligned}</script><p>我们先来考虑如何求出$F$。定义$Q_{i}$为从$\\{a_{n}\\}$中选出$i$个数相乘，这样的所有方案结果的总和，且$Q_{0}=1$。我们有</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum_{i=0}^{n}Q_{i}x^{i}</script><p>然后分治。假设我们现在已经求出了$[l,mid]$上的$Q_{L,0},Q_{L,1},\\cdots,Q_{L,mid-l+1}$和$(mid,r]$上的$Q_{R,0},Q_{R,1},\\cdots,Q_{R,r-mid}$，不难发现</p>\n<script type=\"math/tex; mode=display\">Q_{i}=\\sum_{j=0}^{i}Q_{L,j}Q_{R,i-j}</script><p>这部分的时间复杂度为$O(n\\log^{2}n)$。</p>\n<p>然后我们将$G$在$1$这个位置泰勒展开。先回忆一下<a href=\"/polynomial-learning-notes-pt2/\">泰勒展开</a>的式子</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=1}^{+\\infty}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i</script><script type=\"math/tex; mode=display\">\\ln^{(n)}(x)=(-1)^{n-1}(n-1)!x^{-n}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\sum_{i=1}^{n}\\ln(a_{i}x+1)\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{\\ln^{(j)}(1)}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}(j-1)!1^{-j}}{j!}a_{i}^{j}x^{j}\\\\\n&=\\sum_{i=1}^{n}\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}a_{i}^{j}x^{j}\\\\\n&=\\sum_{j=1}^{+\\infty}\\cfrac{(-1)^{j-1}}{j}\\left(\\sum_{i=1}^{n}a_{i}^{j}\\right)x^{j}\n\\end{aligned}</script><p><img src=\"/images/TIM图片20190123161752.jpg\" alt=\"\"></p>\n<p>令人窒息（</p>\n<p>然后这道题就做出来了（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,t;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[maxn+<span class=\"number\">1</span>],B[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>],tmp1[maxn+<span class=\"number\">1</span>],tmp2[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp1[k]=F[k];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            tmp1[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(tmp1,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp1[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i<span class=\"number\">-1</span>]=<span class=\"number\">1L</span>L*F[i]*i%mod;</span><br><span class=\"line\">    G[n<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    Inv(F,tmp2,n);</span><br><span class=\"line\">    NTT(tmp2,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*tmp2[i]%mod;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">calc</span><span class=\"params\">(re <span class=\"keyword\">int</span>* P,re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&lt;r)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>,N=<span class=\"number\">1</span>;</span><br><span class=\"line\">        calc(P,l,mid);</span><br><span class=\"line\">        calc(P,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;N&lt;r-l+<span class=\"number\">2</span>;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">        F[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mid-l+<span class=\"number\">1</span>;++i)</span><br><span class=\"line\">            F[i]=P[l+i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=mid-l+<span class=\"number\">2</span>;i&lt;N;++i)</span><br><span class=\"line\">            F[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(F,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">        G[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=r-mid;++i)</span><br><span class=\"line\">            G[i]=P[mid+i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=r-mid+<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">            G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">            F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">        NTT(F,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=r-l+<span class=\"number\">1</span>;++i)</span><br><span class=\"line\">            P[l+i<span class=\"number\">-1</span>]=F[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    A[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::read(A[i]);</span><br><span class=\"line\">    B[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)</span><br><span class=\"line\">        cltstream::read(B[i]);</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    calc(A,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">    calc(B,<span class=\"number\">1</span>,m);</span><br><span class=\"line\">    Ln(A,F,t+<span class=\"number\">1</span>);</span><br><span class=\"line\">    Ln(B,G,t+<span class=\"number\">1</span>);</span><br><span class=\"line\">    F[<span class=\"number\">0</span>]=n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=t;j=<span class=\"number\">1L</span>L*j*(mod-inv[i])%mod,++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*j%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=t;j=<span class=\"number\">1L</span>L*j*(mod-inv[i])%mod,++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*j%mod;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;(t&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>);N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=t+<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">        F[i]=G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    NTT(F,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">    NTT(F,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    N=cltpow(<span class=\"number\">1L</span>L*n*m%mod,mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=N;i&lt;=t;++i,j=<span class=\"number\">1L</span>L*j*i%mod)</span><br><span class=\"line\">        cltstream::write(<span class=\"number\">1L</span>L*F[i]*j%mod,<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-02-21T09:37:23.000Z","title":"「网络流学习笔记Part II」总之XJB写点啥（","password":null,"_content":"Part I大概是[这篇](/something-about-network-flow-learning-notes/)。\n\n去郑州的时候讲的网络流部分。\n\n什么你说游记？咕咕咕。\n\n<!-- more -->\n\n### 一种似乎没有名字的二元组模型\n\n#### 简化版\n\n你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个三元组~~（虽然说不是标题说的二元组不过不要在意这些细节）~~，每一个三元组形如$(x,y,c)$，意思是如果$x$和$y$两个任务在不同的机器上完成需要额外付出$c$的代价。你需要完成这$n$个任务，并最小化代价和。\n\n我们都知道最小割=最大流。因此在一些题目中，如果无法将问题抽象成最大流问题，我们可以试着抽象成最小割问题。\n\n对于任务$i$，连边$(S,i,a_{i}),(i,T,b_{i})$。对于一个三元组$(x,y,c)$，连边$(x,y,c),(y,x,c)$。\n\n割断$(S,i,a_{i})$意味着任务$i$在第一台机器上完成，割断$(i,T,b_{i})$意味着任务$i$在第二台机器上完成。\n\n首先很明显的是，同时割断$(S,i,a_{i})$和$(i,T,b_{i})$一定不是最优的决策。因此一个任务只会在一台机器上被完成。\n\n对于一个三元组$(x,y,c)$，如果我们同时割断$(S,x,a_{x})$和$(S,y,a_{y})$，$S$与$T$直接就断开了，这样我们的代价是$a_{x}+a_{y}$。同时割断$(x,T,b_{x})$和$(y,T,b_{y})$也是类似的。\n\n如果说我们同时割断$(S,x,a_{x})$和$(y,T,b_{y})$，图上仍存在$\\{(S,y,a_{y}),(y,x,c),(x,T,b_{x})\\}$这样一条路径，我们还需要割断$(y,x,c)$，这样我们的代价是$a_{x}+b_{y}+c$。同时割断$(x,T,b_{x})$和$(S,y,a_{y})$也是类似的。\n\n#### 一般化\n\n你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个六元组，每一个六元组形如$(x,y,c_{1},c_{2},c_{3},c_{4})$，意思是你需要为$x$和$y$这两个任务付出一些额外代价：\n\n- 如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{1}$。\n- 如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{2}$。\n- 如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{3}$。\n- 如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{4}$。\n\n你需要完成这$n$个任务，并最小化代价和。\n\n首先仍然是连边$(S,i,a_{i}),(i,T,b_{i})$。对于每一个六元组，连边$(S,x,A),(S,y,B),(x,T,C),(y,T,D),(x,y,E),(y,x,F)$。我们发现\n\n- 如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,x,A),(S,y,B)$，付出$A+B$的代价。\n- 如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(x,T,C),(y,T,D)$，付出$C+D$的代价。\n- 如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(S,x,A),(y,T,D),(y,x,F)$，付出$A+D+F$的代价。\n- 如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,y,B),(x,T,C),(x,y,E)$，付出$B+C+E$的代价。\n\n因此我们列出如下的方程组\n\n$$\\begin{cases}\n&A+B=c_{1}&(1)\\\\\n&C+D=c_{2}&(2)\\\\\n&A+D+F=c_{3}\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;&(3)\\\\\n&B+C+E=c_{4}&(4)\n\\end{cases}$$\n\n因为我们要将问题转化成最大流问题，首先想到，我们要有$A,B,C,D,E,F\\geqslant 0$。注意到，$(S,x,A)$和$(x,T,C)$中有且仅有一条边会出现在最小割集中，因此我们可以将$A$和$C$同时加上一个数，求出最小割后在答案中减去。$B$和$D$也可以类似处理。\n\n需要注意的是，$E$和$F$不能被这样处理，因为我们不能确定它们在答案中产生了几次贡献。\n\n$(3)+(4)-(1)-(2)$，我们得到\n\n$$E+F=c_{3}+c_{4}-c_{1}-c_{2}$$\n\n定义$K=c_{3}+c_{4}-c_{1}-c_{2}$，当$K\\geqslant 0$时它有意义，我们直接令$E=F=\\cfrac{K}{2}$即可。\n\n剩下的四个量随便给几个值，好算就行。\n\n其实就算$K\\lt 0$有时也是可以做的，但是我太菜了不会（\n\n因为太菜了所以没有图（\n\n#### 例题\n\n##### [「国家集训队」happiness](https://www.luogu.org/problemnew/show/P1646)\n\n题目要求最大化总收益，我们可以先将所有数取相反数，然后最小化总代价。\n\n令位置$i$选文的单独收益是$a_{i}$，选理的单独收益是$b_{i}$，连边$(S,i,-a_{i}),(i,T,-b_{i})$。\n\n考虑一对相邻的位置，他们都选文的额外收益是$v_{1}$，都选理的额外收益是$v_{2}$，列出方程组\n\n$$\\begin{cases}\n&A+B=-v_{1}\\\\\n&C+D=-v_{2}\\\\\n&A+D+E=0\\\\\n&B+C+E=0\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=-\\cfrac{v_{1}}{2}\\\\\n&B=-\\cfrac{v_{1}}{2}\\\\\n&C=-\\cfrac{v_{2}}{2}\\\\\n&D=-\\cfrac{v_{2}}{2}\\\\\n&E=\\cfrac{v_{1}+v_{2}}{2}\n\\end{cases}$$\n\n为了避免浮点数，我们把上面所有边的容量乘以$2$，包括$(S,i,-a_{i}),(i,T,-b_{i})$，最后再除回来。\n\n然后，为了避免负数，我们将$A,B,C,D$加上$v_{1}+v_{2}$，把边$(S,i,-2a_{i}),(i,T,-2b_{i})$的容量加上$2a_{i}+2b_{i}$，最后再减回来。\n\n总结一下就是，对于一个位置$i$，连边$(S,i,2b_{i}),(i,T,2a_{i})$。对于一对相邻位置$x,y$，连边$(S,x,v_{2}),(S,y,v_{2}),(x,T,v_{1}),(y,T,v_{1}),(x,y,v_{1}+v_{2}),(y,x,v_{1}+v_{2})$。\n\n$$\\text{Ans}=\\sum(a_{i}+b_{i})+\\sum(v_{1}+v_{2})-\\cfrac{\\text{MinCut}(S,T)}{2}$$\n\n但是我的[代码](https://www.luogu.org/recordnew/show/16563258)不知道为什么写炸了（\n\n反正这个式子应该是没问题的（\n\n那么告辞吧（\n\n### 闭合子图\n\n#### 定义\n\n对于一个有向图$G$，它的一个闭合子图指的是一个顶点集合$V$，满足$V\\subset G$，且\n\n$$\\forall u\\in V\\wedge(u,v)\\in G,v\\in V$$\n\n其中$|V|$最大的$V$被称为$G$的最大闭合子图。\n\n如果$G$中的点有点权，$\\sum_{u\\in V}w(u)$最大的$V$被称为$G$的最大权闭合子图。\n\n#### 解法\n\n首先，我们还是需要将所有点权取相反数，转为求最小权闭合子图。\n\n对于$G$中的一个点$x$，割断与$S$之间的边表示$x\\notin V$，割断与$T$之间的边表示$x\\in V$。对于$G$中的一条边$(x,y)$，如果$x\\in V$，那么一定有$y\\in V$。我们可以认为，如果令$x\\in V$，$y\\notin V$，需要付出$+\\infty$的代价。由此列出方程组\n\n$$\\begin{cases}\n&A+B=0\\\\\n&C+D=-w(x)-w(y)\\\\\n&A+D+F=-w(x)\\\\\n&B+C+E=-w(y)+\\infty\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=0\\\\\n&B=0\\\\\n&C=-w(x)\\\\\n&D=-w(y)\\\\\n&E=+\\infty\\\\\n&F=0\n\\end{cases}$$\n\n于是，去掉所有容量为$0$的边，我们得到$(x,T,-w(x)),(y,T,-w(y)),(x,y,+\\infty)$这三条边。如果$w(x)\\geqslant 0$，我们需要把边$(S,x,0),(x,T,-w(x))$的容量都加上$w(x)$，相当于是把$(x,T,-w(x))$换成了$(S,x,w(x))$。\n\n总结一下就是，对于原图中的一个正权点$x$，连边$(S,x,w(x))$，对于原图中的一个负权点$x$，连边$(x,T,-w(x))$。对于原图中的一条边$(x,y)$，连边$(x,y,+\\infty)$。\n\n$$\\text{Ans}=\\sum_{w(x)\\geqslant 0}w(x)-\\text{MinCut}(S,T)$$\n","source":"_posts/2019-02-21-network-flow-learning-notes-pt2.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-02-21 17:37:23\ntitle: 「网络流学习笔记Part II」总之XJB写点啥（\ntags:\n  - 网络流\ncategories:\n  - 学习笔记\npassword:\n---\nPart I大概是[这篇](/something-about-network-flow-learning-notes/)。\n\n去郑州的时候讲的网络流部分。\n\n什么你说游记？咕咕咕。\n\n<!-- more -->\n\n### 一种似乎没有名字的二元组模型\n\n#### 简化版\n\n你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个三元组~~（虽然说不是标题说的二元组不过不要在意这些细节）~~，每一个三元组形如$(x,y,c)$，意思是如果$x$和$y$两个任务在不同的机器上完成需要额外付出$c$的代价。你需要完成这$n$个任务，并最小化代价和。\n\n我们都知道最小割=最大流。因此在一些题目中，如果无法将问题抽象成最大流问题，我们可以试着抽象成最小割问题。\n\n对于任务$i$，连边$(S,i,a_{i}),(i,T,b_{i})$。对于一个三元组$(x,y,c)$，连边$(x,y,c),(y,x,c)$。\n\n割断$(S,i,a_{i})$意味着任务$i$在第一台机器上完成，割断$(i,T,b_{i})$意味着任务$i$在第二台机器上完成。\n\n首先很明显的是，同时割断$(S,i,a_{i})$和$(i,T,b_{i})$一定不是最优的决策。因此一个任务只会在一台机器上被完成。\n\n对于一个三元组$(x,y,c)$，如果我们同时割断$(S,x,a_{x})$和$(S,y,a_{y})$，$S$与$T$直接就断开了，这样我们的代价是$a_{x}+a_{y}$。同时割断$(x,T,b_{x})$和$(y,T,b_{y})$也是类似的。\n\n如果说我们同时割断$(S,x,a_{x})$和$(y,T,b_{y})$，图上仍存在$\\{(S,y,a_{y}),(y,x,c),(x,T,b_{x})\\}$这样一条路径，我们还需要割断$(y,x,c)$，这样我们的代价是$a_{x}+b_{y}+c$。同时割断$(x,T,b_{x})$和$(S,y,a_{y})$也是类似的。\n\n#### 一般化\n\n你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个六元组，每一个六元组形如$(x,y,c_{1},c_{2},c_{3},c_{4})$，意思是你需要为$x$和$y$这两个任务付出一些额外代价：\n\n- 如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{1}$。\n- 如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{2}$。\n- 如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{3}$。\n- 如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{4}$。\n\n你需要完成这$n$个任务，并最小化代价和。\n\n首先仍然是连边$(S,i,a_{i}),(i,T,b_{i})$。对于每一个六元组，连边$(S,x,A),(S,y,B),(x,T,C),(y,T,D),(x,y,E),(y,x,F)$。我们发现\n\n- 如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,x,A),(S,y,B)$，付出$A+B$的代价。\n- 如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(x,T,C),(y,T,D)$，付出$C+D$的代价。\n- 如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(S,x,A),(y,T,D),(y,x,F)$，付出$A+D+F$的代价。\n- 如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,y,B),(x,T,C),(x,y,E)$，付出$B+C+E$的代价。\n\n因此我们列出如下的方程组\n\n$$\\begin{cases}\n&A+B=c_{1}&(1)\\\\\n&C+D=c_{2}&(2)\\\\\n&A+D+F=c_{3}\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;&(3)\\\\\n&B+C+E=c_{4}&(4)\n\\end{cases}$$\n\n因为我们要将问题转化成最大流问题，首先想到，我们要有$A,B,C,D,E,F\\geqslant 0$。注意到，$(S,x,A)$和$(x,T,C)$中有且仅有一条边会出现在最小割集中，因此我们可以将$A$和$C$同时加上一个数，求出最小割后在答案中减去。$B$和$D$也可以类似处理。\n\n需要注意的是，$E$和$F$不能被这样处理，因为我们不能确定它们在答案中产生了几次贡献。\n\n$(3)+(4)-(1)-(2)$，我们得到\n\n$$E+F=c_{3}+c_{4}-c_{1}-c_{2}$$\n\n定义$K=c_{3}+c_{4}-c_{1}-c_{2}$，当$K\\geqslant 0$时它有意义，我们直接令$E=F=\\cfrac{K}{2}$即可。\n\n剩下的四个量随便给几个值，好算就行。\n\n其实就算$K\\lt 0$有时也是可以做的，但是我太菜了不会（\n\n因为太菜了所以没有图（\n\n#### 例题\n\n##### [「国家集训队」happiness](https://www.luogu.org/problemnew/show/P1646)\n\n题目要求最大化总收益，我们可以先将所有数取相反数，然后最小化总代价。\n\n令位置$i$选文的单独收益是$a_{i}$，选理的单独收益是$b_{i}$，连边$(S,i,-a_{i}),(i,T,-b_{i})$。\n\n考虑一对相邻的位置，他们都选文的额外收益是$v_{1}$，都选理的额外收益是$v_{2}$，列出方程组\n\n$$\\begin{cases}\n&A+B=-v_{1}\\\\\n&C+D=-v_{2}\\\\\n&A+D+E=0\\\\\n&B+C+E=0\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=-\\cfrac{v_{1}}{2}\\\\\n&B=-\\cfrac{v_{1}}{2}\\\\\n&C=-\\cfrac{v_{2}}{2}\\\\\n&D=-\\cfrac{v_{2}}{2}\\\\\n&E=\\cfrac{v_{1}+v_{2}}{2}\n\\end{cases}$$\n\n为了避免浮点数，我们把上面所有边的容量乘以$2$，包括$(S,i,-a_{i}),(i,T,-b_{i})$，最后再除回来。\n\n然后，为了避免负数，我们将$A,B,C,D$加上$v_{1}+v_{2}$，把边$(S,i,-2a_{i}),(i,T,-2b_{i})$的容量加上$2a_{i}+2b_{i}$，最后再减回来。\n\n总结一下就是，对于一个位置$i$，连边$(S,i,2b_{i}),(i,T,2a_{i})$。对于一对相邻位置$x,y$，连边$(S,x,v_{2}),(S,y,v_{2}),(x,T,v_{1}),(y,T,v_{1}),(x,y,v_{1}+v_{2}),(y,x,v_{1}+v_{2})$。\n\n$$\\text{Ans}=\\sum(a_{i}+b_{i})+\\sum(v_{1}+v_{2})-\\cfrac{\\text{MinCut}(S,T)}{2}$$\n\n但是我的[代码](https://www.luogu.org/recordnew/show/16563258)不知道为什么写炸了（\n\n反正这个式子应该是没问题的（\n\n那么告辞吧（\n\n### 闭合子图\n\n#### 定义\n\n对于一个有向图$G$，它的一个闭合子图指的是一个顶点集合$V$，满足$V\\subset G$，且\n\n$$\\forall u\\in V\\wedge(u,v)\\in G,v\\in V$$\n\n其中$|V|$最大的$V$被称为$G$的最大闭合子图。\n\n如果$G$中的点有点权，$\\sum_{u\\in V}w(u)$最大的$V$被称为$G$的最大权闭合子图。\n\n#### 解法\n\n首先，我们还是需要将所有点权取相反数，转为求最小权闭合子图。\n\n对于$G$中的一个点$x$，割断与$S$之间的边表示$x\\notin V$，割断与$T$之间的边表示$x\\in V$。对于$G$中的一条边$(x,y)$，如果$x\\in V$，那么一定有$y\\in V$。我们可以认为，如果令$x\\in V$，$y\\notin V$，需要付出$+\\infty$的代价。由此列出方程组\n\n$$\\begin{cases}\n&A+B=0\\\\\n&C+D=-w(x)-w(y)\\\\\n&A+D+F=-w(x)\\\\\n&B+C+E=-w(y)+\\infty\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=0\\\\\n&B=0\\\\\n&C=-w(x)\\\\\n&D=-w(y)\\\\\n&E=+\\infty\\\\\n&F=0\n\\end{cases}$$\n\n于是，去掉所有容量为$0$的边，我们得到$(x,T,-w(x)),(y,T,-w(y)),(x,y,+\\infty)$这三条边。如果$w(x)\\geqslant 0$，我们需要把边$(S,x,0),(x,T,-w(x))$的容量都加上$w(x)$，相当于是把$(x,T,-w(x))$换成了$(S,x,w(x))$。\n\n总结一下就是，对于原图中的一个正权点$x$，连边$(S,x,w(x))$，对于原图中的一个负权点$x$，连边$(x,T,-w(x))$。对于原图中的一条边$(x,y)$，连边$(x,y,+\\infty)$。\n\n$$\\text{Ans}=\\sum_{w(x)\\geqslant 0}w(x)-\\text{MinCut}(S,T)$$\n","slug":"network-flow-learning-notes-pt2","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0a001bmku90ng1fi5w","content":"<p>Part I大概是<a href=\"/something-about-network-flow-learning-notes/\">这篇</a>。</p>\n<p>去郑州的时候讲的网络流部分。</p>\n<p>什么你说游记？咕咕咕。</p>\n<a id=\"more\"></a>\n<h3 id=\"一种似乎没有名字的二元组模型\"><a href=\"#一种似乎没有名字的二元组模型\" class=\"headerlink\" title=\"一种似乎没有名字的二元组模型\"></a>一种似乎没有名字的二元组模型</h3><h4 id=\"简化版\"><a href=\"#简化版\" class=\"headerlink\" title=\"简化版\"></a>简化版</h4><p>你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个三元组<del>（虽然说不是标题说的二元组不过不要在意这些细节）</del>，每一个三元组形如$(x,y,c)$，意思是如果$x$和$y$两个任务在不同的机器上完成需要额外付出$c$的代价。你需要完成这$n$个任务，并最小化代价和。</p>\n<p>我们都知道最小割=最大流。因此在一些题目中，如果无法将问题抽象成最大流问题，我们可以试着抽象成最小割问题。</p>\n<p>对于任务$i$，连边$(S,i,a_{i}),(i,T,b_{i})$。对于一个三元组$(x,y,c)$，连边$(x,y,c),(y,x,c)$。</p>\n<p>割断$(S,i,a_{i})$意味着任务$i$在第一台机器上完成，割断$(i,T,b_{i})$意味着任务$i$在第二台机器上完成。</p>\n<p>首先很明显的是，同时割断$(S,i,a_{i})$和$(i,T,b_{i})$一定不是最优的决策。因此一个任务只会在一台机器上被完成。</p>\n<p>对于一个三元组$(x,y,c)$，如果我们同时割断$(S,x,a_{x})$和$(S,y,a_{y})$，$S$与$T$直接就断开了，这样我们的代价是$a_{x}+a_{y}$。同时割断$(x,T,b_{x})$和$(y,T,b_{y})$也是类似的。</p>\n<p>如果说我们同时割断$(S,x,a_{x})$和$(y,T,b_{y})$，图上仍存在$\\{(S,y,a_{y}),(y,x,c),(x,T,b_{x})\\}$这样一条路径，我们还需要割断$(y,x,c)$，这样我们的代价是$a_{x}+b_{y}+c$。同时割断$(x,T,b_{x})$和$(S,y,a_{y})$也是类似的。</p>\n<h4 id=\"一般化\"><a href=\"#一般化\" class=\"headerlink\" title=\"一般化\"></a>一般化</h4><p>你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个六元组，每一个六元组形如$(x,y,c_{1},c_{2},c_{3},c_{4})$，意思是你需要为$x$和$y$这两个任务付出一些额外代价：</p>\n<ul>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{1}$。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{2}$。</li>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{3}$。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{4}$。</li>\n</ul>\n<p>你需要完成这$n$个任务，并最小化代价和。</p>\n<p>首先仍然是连边$(S,i,a_{i}),(i,T,b_{i})$。对于每一个六元组，连边$(S,x,A),(S,y,B),(x,T,C),(y,T,D),(x,y,E),(y,x,F)$。我们发现</p>\n<ul>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,x,A),(S,y,B)$，付出$A+B$的代价。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(x,T,C),(y,T,D)$，付出$C+D$的代价。</li>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(S,x,A),(y,T,D),(y,x,F)$，付出$A+D+F$的代价。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,y,B),(x,T,C),(x,y,E)$，付出$B+C+E$的代价。</li>\n</ul>\n<p>因此我们列出如下的方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=c_{1}&(1)\\\\\n&C+D=c_{2}&(2)\\\\\n&A+D+F=c_{3}\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;&(3)\\\\\n&B+C+E=c_{4}&(4)\n\\end{cases}</script><p>因为我们要将问题转化成最大流问题，首先想到，我们要有$A,B,C,D,E,F\\geqslant 0$。注意到，$(S,x,A)$和$(x,T,C)$中有且仅有一条边会出现在最小割集中，因此我们可以将$A$和$C$同时加上一个数，求出最小割后在答案中减去。$B$和$D$也可以类似处理。</p>\n<p>需要注意的是，$E$和$F$不能被这样处理，因为我们不能确定它们在答案中产生了几次贡献。</p>\n<p>$(3)+(4)-(1)-(2)$，我们得到</p>\n<script type=\"math/tex; mode=display\">E+F=c_{3}+c_{4}-c_{1}-c_{2}</script><p>定义$K=c_{3}+c_{4}-c_{1}-c_{2}$，当$K\\geqslant 0$时它有意义，我们直接令$E=F=\\cfrac{K}{2}$即可。</p>\n<p>剩下的四个量随便给几个值，好算就行。</p>\n<p>其实就算$K\\lt 0$有时也是可以做的，但是我太菜了不会（</p>\n<p>因为太菜了所以没有图（</p>\n<h4 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h4><h5 id=\"「国家集训队」happiness\"><a href=\"#「国家集训队」happiness\" class=\"headerlink\" title=\"「国家集训队」happiness\"></a><a href=\"https://www.luogu.org/problemnew/show/P1646\">「国家集训队」happiness</a></h5><p>题目要求最大化总收益，我们可以先将所有数取相反数，然后最小化总代价。</p>\n<p>令位置$i$选文的单独收益是$a_{i}$，选理的单独收益是$b_{i}$，连边$(S,i,-a_{i}),(i,T,-b_{i})$。</p>\n<p>考虑一对相邻的位置，他们都选文的额外收益是$v_{1}$，都选理的额外收益是$v_{2}$，列出方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=-v_{1}\\\\\n&C+D=-v_{2}\\\\\n&A+D+E=0\\\\\n&B+C+E=0\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=-\\cfrac{v_{1}}{2}\\\\\n&B=-\\cfrac{v_{1}}{2}\\\\\n&C=-\\cfrac{v_{2}}{2}\\\\\n&D=-\\cfrac{v_{2}}{2}\\\\\n&E=\\cfrac{v_{1}+v_{2}}{2}\n\\end{cases}</script><p>为了避免浮点数，我们把上面所有边的容量乘以$2$，包括$(S,i,-a_{i}),(i,T,-b_{i})$，最后再除回来。</p>\n<p>然后，为了避免负数，我们将$A,B,C,D$加上$v_{1}+v_{2}$，把边$(S,i,-2a_{i}),(i,T,-2b_{i})$的容量加上$2a_{i}+2b_{i}$，最后再减回来。</p>\n<p>总结一下就是，对于一个位置$i$，连边$(S,i,2b_{i}),(i,T,2a_{i})$。对于一对相邻位置$x,y$，连边$(S,x,v_{2}),(S,y,v_{2}),(x,T,v_{1}),(y,T,v_{1}),(x,y,v_{1}+v_{2}),(y,x,v_{1}+v_{2})$。</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=\\sum(a_{i}+b_{i})+\\sum(v_{1}+v_{2})-\\cfrac{\\text{MinCut}(S,T)}{2}</script><p>但是我的<a href=\"https://www.luogu.org/recordnew/show/16563258\">代码</a>不知道为什么写炸了（</p>\n<p>反正这个式子应该是没问题的（</p>\n<p>那么告辞吧（</p>\n<h3 id=\"闭合子图\"><a href=\"#闭合子图\" class=\"headerlink\" title=\"闭合子图\"></a>闭合子图</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>对于一个有向图$G$，它的一个闭合子图指的是一个顶点集合$V$，满足$V\\subset G$，且</p>\n<script type=\"math/tex; mode=display\">\\forall u\\in V\\wedge(u,v)\\in G,v\\in V</script><p>其中$|V|$最大的$V$被称为$G$的最大闭合子图。</p>\n<p>如果$G$中的点有点权，$\\sum_{u\\in V}w(u)$最大的$V$被称为$G$的最大权闭合子图。</p>\n<h4 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h4><p>首先，我们还是需要将所有点权取相反数，转为求最小权闭合子图。</p>\n<p>对于$G$中的一个点$x$，割断与$S$之间的边表示$x\\notin V$，割断与$T$之间的边表示$x\\in V$。对于$G$中的一条边$(x,y)$，如果$x\\in V$，那么一定有$y\\in V$。我们可以认为，如果令$x\\in V$，$y\\notin V$，需要付出$+\\infty$的代价。由此列出方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=0\\\\\n&C+D=-w(x)-w(y)\\\\\n&A+D+F=-w(x)\\\\\n&B+C+E=-w(y)+\\infty\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=0\\\\\n&B=0\\\\\n&C=-w(x)\\\\\n&D=-w(y)\\\\\n&E=+\\infty\\\\\n&F=0\n\\end{cases}</script><p>于是，去掉所有容量为$0$的边，我们得到$(x,T,-w(x)),(y,T,-w(y)),(x,y,+\\infty)$这三条边。如果$w(x)\\geqslant 0$，我们需要把边$(S,x,0),(x,T,-w(x))$的容量都加上$w(x)$，相当于是把$(x,T,-w(x))$换成了$(S,x,w(x))$。</p>\n<p>总结一下就是，对于原图中的一个正权点$x$，连边$(S,x,w(x))$，对于原图中的一个负权点$x$，连边$(x,T,-w(x))$。对于原图中的一条边$(x,y)$，连边$(x,y,+\\infty)$。</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=\\sum_{w(x)\\geqslant 0}w(x)-\\text{MinCut}(S,T)</script>","site":{"data":{}},"excerpt":"<p>Part I大概是<a href=\"/something-about-network-flow-learning-notes/\">这篇</a>。</p>\n<p>去郑州的时候讲的网络流部分。</p>\n<p>什么你说游记？咕咕咕。</p>","more":"<h3 id=\"一种似乎没有名字的二元组模型\"><a href=\"#一种似乎没有名字的二元组模型\" class=\"headerlink\" title=\"一种似乎没有名字的二元组模型\"></a>一种似乎没有名字的二元组模型</h3><h4 id=\"简化版\"><a href=\"#简化版\" class=\"headerlink\" title=\"简化版\"></a>简化版</h4><p>你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个三元组<del>（虽然说不是标题说的二元组不过不要在意这些细节）</del>，每一个三元组形如$(x,y,c)$，意思是如果$x$和$y$两个任务在不同的机器上完成需要额外付出$c$的代价。你需要完成这$n$个任务，并最小化代价和。</p>\n<p>我们都知道最小割=最大流。因此在一些题目中，如果无法将问题抽象成最大流问题，我们可以试着抽象成最小割问题。</p>\n<p>对于任务$i$，连边$(S,i,a_{i}),(i,T,b_{i})$。对于一个三元组$(x,y,c)$，连边$(x,y,c),(y,x,c)$。</p>\n<p>割断$(S,i,a_{i})$意味着任务$i$在第一台机器上完成，割断$(i,T,b_{i})$意味着任务$i$在第二台机器上完成。</p>\n<p>首先很明显的是，同时割断$(S,i,a_{i})$和$(i,T,b_{i})$一定不是最优的决策。因此一个任务只会在一台机器上被完成。</p>\n<p>对于一个三元组$(x,y,c)$，如果我们同时割断$(S,x,a_{x})$和$(S,y,a_{y})$，$S$与$T$直接就断开了，这样我们的代价是$a_{x}+a_{y}$。同时割断$(x,T,b_{x})$和$(y,T,b_{y})$也是类似的。</p>\n<p>如果说我们同时割断$(S,x,a_{x})$和$(y,T,b_{y})$，图上仍存在$\\{(S,y,a_{y}),(y,x,c),(x,T,b_{x})\\}$这样一条路径，我们还需要割断$(y,x,c)$，这样我们的代价是$a_{x}+b_{y}+c$。同时割断$(x,T,b_{x})$和$(S,y,a_{y})$也是类似的。</p>\n<h4 id=\"一般化\"><a href=\"#一般化\" class=\"headerlink\" title=\"一般化\"></a>一般化</h4><p>你有两台机器和$n$个任务。用第一台机器完成第$i$个任务需要付出$a_{i}$的代价，用第二台完成需要$b_{i}$的代价。你有$m$个六元组，每一个六元组形如$(x,y,c_{1},c_{2},c_{3},c_{4})$，意思是你需要为$x$和$y$这两个任务付出一些额外代价：</p>\n<ul>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{1}$。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{2}$。</li>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，这个额外代价是$c_{3}$。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，这个额外代价是$c_{4}$。</li>\n</ul>\n<p>你需要完成这$n$个任务，并最小化代价和。</p>\n<p>首先仍然是连边$(S,i,a_{i}),(i,T,b_{i})$。对于每一个六元组，连边$(S,x,A),(S,y,B),(x,T,C),(y,T,D),(x,y,E),(y,x,F)$。我们发现</p>\n<ul>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,x,A),(S,y,B)$，付出$A+B$的代价。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(x,T,C),(y,T,D)$，付出$C+D$的代价。</li>\n<li>如果任务$x$在第一台机器上完成，任务$y$在第二台机器上完成，我们需要割断$(S,x,A),(y,T,D),(y,x,F)$，付出$A+D+F$的代价。</li>\n<li>如果任务$x$在第二台机器上完成，任务$y$在第一台机器上完成，我们需要割断$(S,y,B),(x,T,C),(x,y,E)$，付出$B+C+E$的代价。</li>\n</ul>\n<p>因此我们列出如下的方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=c_{1}&(1)\\\\\n&C+D=c_{2}&(2)\\\\\n&A+D+F=c_{3}\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;&(3)\\\\\n&B+C+E=c_{4}&(4)\n\\end{cases}</script><p>因为我们要将问题转化成最大流问题，首先想到，我们要有$A,B,C,D,E,F\\geqslant 0$。注意到，$(S,x,A)$和$(x,T,C)$中有且仅有一条边会出现在最小割集中，因此我们可以将$A$和$C$同时加上一个数，求出最小割后在答案中减去。$B$和$D$也可以类似处理。</p>\n<p>需要注意的是，$E$和$F$不能被这样处理，因为我们不能确定它们在答案中产生了几次贡献。</p>\n<p>$(3)+(4)-(1)-(2)$，我们得到</p>\n<script type=\"math/tex; mode=display\">E+F=c_{3}+c_{4}-c_{1}-c_{2}</script><p>定义$K=c_{3}+c_{4}-c_{1}-c_{2}$，当$K\\geqslant 0$时它有意义，我们直接令$E=F=\\cfrac{K}{2}$即可。</p>\n<p>剩下的四个量随便给几个值，好算就行。</p>\n<p>其实就算$K\\lt 0$有时也是可以做的，但是我太菜了不会（</p>\n<p>因为太菜了所以没有图（</p>\n<h4 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h4><h5 id=\"「国家集训队」happiness\"><a href=\"#「国家集训队」happiness\" class=\"headerlink\" title=\"「国家集训队」happiness\"></a><a href=\"https://www.luogu.org/problemnew/show/P1646\">「国家集训队」happiness</a></h5><p>题目要求最大化总收益，我们可以先将所有数取相反数，然后最小化总代价。</p>\n<p>令位置$i$选文的单独收益是$a_{i}$，选理的单独收益是$b_{i}$，连边$(S,i,-a_{i}),(i,T,-b_{i})$。</p>\n<p>考虑一对相邻的位置，他们都选文的额外收益是$v_{1}$，都选理的额外收益是$v_{2}$，列出方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=-v_{1}\\\\\n&C+D=-v_{2}\\\\\n&A+D+E=0\\\\\n&B+C+E=0\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=-\\cfrac{v_{1}}{2}\\\\\n&B=-\\cfrac{v_{1}}{2}\\\\\n&C=-\\cfrac{v_{2}}{2}\\\\\n&D=-\\cfrac{v_{2}}{2}\\\\\n&E=\\cfrac{v_{1}+v_{2}}{2}\n\\end{cases}</script><p>为了避免浮点数，我们把上面所有边的容量乘以$2$，包括$(S,i,-a_{i}),(i,T,-b_{i})$，最后再除回来。</p>\n<p>然后，为了避免负数，我们将$A,B,C,D$加上$v_{1}+v_{2}$，把边$(S,i,-2a_{i}),(i,T,-2b_{i})$的容量加上$2a_{i}+2b_{i}$，最后再减回来。</p>\n<p>总结一下就是，对于一个位置$i$，连边$(S,i,2b_{i}),(i,T,2a_{i})$。对于一对相邻位置$x,y$，连边$(S,x,v_{2}),(S,y,v_{2}),(x,T,v_{1}),(y,T,v_{1}),(x,y,v_{1}+v_{2}),(y,x,v_{1}+v_{2})$。</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=\\sum(a_{i}+b_{i})+\\sum(v_{1}+v_{2})-\\cfrac{\\text{MinCut}(S,T)}{2}</script><p>但是我的<a href=\"https://www.luogu.org/recordnew/show/16563258\">代码</a>不知道为什么写炸了（</p>\n<p>反正这个式子应该是没问题的（</p>\n<p>那么告辞吧（</p>\n<h3 id=\"闭合子图\"><a href=\"#闭合子图\" class=\"headerlink\" title=\"闭合子图\"></a>闭合子图</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>对于一个有向图$G$，它的一个闭合子图指的是一个顶点集合$V$，满足$V\\subset G$，且</p>\n<script type=\"math/tex; mode=display\">\\forall u\\in V\\wedge(u,v)\\in G,v\\in V</script><p>其中$|V|$最大的$V$被称为$G$的最大闭合子图。</p>\n<p>如果$G$中的点有点权，$\\sum_{u\\in V}w(u)$最大的$V$被称为$G$的最大权闭合子图。</p>\n<h4 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h4><p>首先，我们还是需要将所有点权取相反数，转为求最小权闭合子图。</p>\n<p>对于$G$中的一个点$x$，割断与$S$之间的边表示$x\\notin V$，割断与$T$之间的边表示$x\\in V$。对于$G$中的一条边$(x,y)$，如果$x\\in V$，那么一定有$y\\in V$。我们可以认为，如果令$x\\in V$，$y\\notin V$，需要付出$+\\infty$的代价。由此列出方程组</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&A+B=0\\\\\n&C+D=-w(x)-w(y)\\\\\n&A+D+F=-w(x)\\\\\n&B+C+E=-w(y)+\\infty\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&A=0\\\\\n&B=0\\\\\n&C=-w(x)\\\\\n&D=-w(y)\\\\\n&E=+\\infty\\\\\n&F=0\n\\end{cases}</script><p>于是，去掉所有容量为$0$的边，我们得到$(x,T,-w(x)),(y,T,-w(y)),(x,y,+\\infty)$这三条边。如果$w(x)\\geqslant 0$，我们需要把边$(S,x,0),(x,T,-w(x))$的容量都加上$w(x)$，相当于是把$(x,T,-w(x))$换成了$(S,x,w(x))$。</p>\n<p>总结一下就是，对于原图中的一个正权点$x$，连边$(S,x,w(x))$，对于原图中的一个负权点$x$，连边$(x,T,-w(x))$。对于原图中的一条边$(x,y)$，连边$(x,y,+\\infty)$。</p>\n<script type=\"math/tex; mode=display\">\\text{Ans}=\\sum_{w(x)\\geqslant 0}w(x)-\\text{MinCut}(S,T)</script>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-19T07:57:35.000Z","title":"「Ynoi2014D2T2」人人本着正义之名","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P5066)\n\n~~一人血书放大常数Splay一条生路。~~\n\n<!-- more -->\n\n之前Ynoi2014唯一一道没公开的题。\n\n写个$O(nm)$的暴力就有30了。\n\n我们来分析一下操作$3,4,5,6$都在干些啥。\n\n以操作$3$为例，如果在操作前，有一个位置的数字是$1$，它左边是一个$0$，操作完之后那个$0$就会变成$1$。除此之外不会再有其它改变。\n\n仔细想象一下这个过程，我们发现这实际上是将操作区间内所有极长连续$1$的左端点向左扩展了$1$位，所有极长连续$0$的右端点向左收缩了$1$位。\n\n操作$4,5,6$也是类似的。\n\n那么我们写一棵珂朵莉树就可以获得50分了。\n\n但实际上emmmmm……我的珂朵莉树可能和别人不一样（\n\n别人的珂朵莉树：\n\n![](/images/TIM截图20190319161404.png)\n\n我的珂朵莉树：\n\n![](/images/TIM截图20190319161900.png)\n\n那么满分做法？\n\n手写平衡树。没了。\n\n~~虽然这么说，但是lxl都写了将近10KB（~~\n\n总体思路就是，手写平衡树维护所有极长连续段的长度，并不需要维护端点因为可以算出来，单独维护还麻烦。每个节点维护子树内极长连续$0$和$1$的数量、长度最小值，以及连续段的长度变化量（标记）。修改时判断一下如果最小值变成了$0$，那么就暴力重构。~~反正lxl说因为有前两个操作的存在这么做时间复杂度是对的。~~\n\n首先有一个问题就是，这样做每个节点维护的必须要是__极长连续段__。想象一下，如果有两个相邻的节点值都是$1$，我们进行一次操作$3$或$4$，会发生什么？\n\n两个节点的长度都加了$1$。然后整个序列莫名其妙多出来$1$个数。再然后您就WA了。\n\n然后就是各种各样乱七八糟的细节。虽然这么说但好像没什么可列举的了。\n\n然后您按照上面的思路打完四五百行的代码之后交上去一看：\n\n![](/images/TIM截图20190319171721.png)\n\n虽然说暴力重构的时间复杂度~~应该~~是对的，但是不难发现它常数大啊。\n\n但是如果不重构，合并相邻的连续段就会变得非常麻烦。\n\n结论就是这题不可写，散了吧散了吧。\n","source":"_posts/2019-03-19-luogu-p5066-solution-not.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-19 15:57:35\ntitle: 「Ynoi2014D2T2」人人本着正义之名\ntags:\n  - 珂朵莉树\n  - 平衡树\n  - 毒瘤\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P5066)\n\n~~一人血书放大常数Splay一条生路。~~\n\n<!-- more -->\n\n之前Ynoi2014唯一一道没公开的题。\n\n写个$O(nm)$的暴力就有30了。\n\n我们来分析一下操作$3,4,5,6$都在干些啥。\n\n以操作$3$为例，如果在操作前，有一个位置的数字是$1$，它左边是一个$0$，操作完之后那个$0$就会变成$1$。除此之外不会再有其它改变。\n\n仔细想象一下这个过程，我们发现这实际上是将操作区间内所有极长连续$1$的左端点向左扩展了$1$位，所有极长连续$0$的右端点向左收缩了$1$位。\n\n操作$4,5,6$也是类似的。\n\n那么我们写一棵珂朵莉树就可以获得50分了。\n\n但实际上emmmmm……我的珂朵莉树可能和别人不一样（\n\n别人的珂朵莉树：\n\n![](/images/TIM截图20190319161404.png)\n\n我的珂朵莉树：\n\n![](/images/TIM截图20190319161900.png)\n\n那么满分做法？\n\n手写平衡树。没了。\n\n~~虽然这么说，但是lxl都写了将近10KB（~~\n\n总体思路就是，手写平衡树维护所有极长连续段的长度，并不需要维护端点因为可以算出来，单独维护还麻烦。每个节点维护子树内极长连续$0$和$1$的数量、长度最小值，以及连续段的长度变化量（标记）。修改时判断一下如果最小值变成了$0$，那么就暴力重构。~~反正lxl说因为有前两个操作的存在这么做时间复杂度是对的。~~\n\n首先有一个问题就是，这样做每个节点维护的必须要是__极长连续段__。想象一下，如果有两个相邻的节点值都是$1$，我们进行一次操作$3$或$4$，会发生什么？\n\n两个节点的长度都加了$1$。然后整个序列莫名其妙多出来$1$个数。再然后您就WA了。\n\n然后就是各种各样乱七八糟的细节。虽然这么说但好像没什么可列举的了。\n\n然后您按照上面的思路打完四五百行的代码之后交上去一看：\n\n![](/images/TIM截图20190319171721.png)\n\n虽然说暴力重构的时间复杂度~~应该~~是对的，但是不难发现它常数大啊。\n\n但是如果不重构，合并相邻的连续段就会变得非常麻烦。\n\n结论就是这题不可写，散了吧散了吧。\n","slug":"luogu-p5066-solution-not","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0b001fmku9h3ndhfd5","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P5066\">传送门</a></p>\n<p><del>一人血书放大常数Splay一条生路。</del></p>\n<a id=\"more\"></a>\n<p>之前Ynoi2014唯一一道没公开的题。</p>\n<p>写个$O(nm)$的暴力就有30了。</p>\n<p>我们来分析一下操作$3,4,5,6$都在干些啥。</p>\n<p>以操作$3$为例，如果在操作前，有一个位置的数字是$1$，它左边是一个$0$，操作完之后那个$0$就会变成$1$。除此之外不会再有其它改变。</p>\n<p>仔细想象一下这个过程，我们发现这实际上是将操作区间内所有极长连续$1$的左端点向左扩展了$1$位，所有极长连续$0$的右端点向左收缩了$1$位。</p>\n<p>操作$4,5,6$也是类似的。</p>\n<p>那么我们写一棵珂朵莉树就可以获得50分了。</p>\n<p>但实际上emmmmm……我的珂朵莉树可能和别人不一样（</p>\n<p>别人的珂朵莉树：</p>\n<p><img src=\"/images/TIM截图20190319161404.png\" alt=\"\"></p>\n<p>我的珂朵莉树：</p>\n<p><img src=\"/images/TIM截图20190319161900.png\" alt=\"\"></p>\n<p>那么满分做法？</p>\n<p>手写平衡树。没了。</p>\n<p><del>虽然这么说，但是lxl都写了将近10KB（</del></p>\n<p>总体思路就是，手写平衡树维护所有极长连续段的长度，并不需要维护端点因为可以算出来，单独维护还麻烦。每个节点维护子树内极长连续$0$和$1$的数量、长度最小值，以及连续段的长度变化量（标记）。修改时判断一下如果最小值变成了$0$，那么就暴力重构。<del>反正lxl说因为有前两个操作的存在这么做时间复杂度是对的。</del></p>\n<p>首先有一个问题就是，这样做每个节点维护的必须要是<strong>极长连续段</strong>。想象一下，如果有两个相邻的节点值都是$1$，我们进行一次操作$3$或$4$，会发生什么？</p>\n<p>两个节点的长度都加了$1$。然后整个序列莫名其妙多出来$1$个数。再然后您就WA了。</p>\n<p>然后就是各种各样乱七八糟的细节。虽然这么说但好像没什么可列举的了。</p>\n<p>然后您按照上面的思路打完四五百行的代码之后交上去一看：</p>\n<p><img src=\"/images/TIM截图20190319171721.png\" alt=\"\"></p>\n<p>虽然说暴力重构的时间复杂度<del>应该</del>是对的，但是不难发现它常数大啊。</p>\n<p>但是如果不重构，合并相邻的连续段就会变得非常麻烦。</p>\n<p>结论就是这题不可写，散了吧散了吧。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P5066\">传送门</a></p>\n<p><del>一人血书放大常数Splay一条生路。</del></p>","more":"<p>之前Ynoi2014唯一一道没公开的题。</p>\n<p>写个$O(nm)$的暴力就有30了。</p>\n<p>我们来分析一下操作$3,4,5,6$都在干些啥。</p>\n<p>以操作$3$为例，如果在操作前，有一个位置的数字是$1$，它左边是一个$0$，操作完之后那个$0$就会变成$1$。除此之外不会再有其它改变。</p>\n<p>仔细想象一下这个过程，我们发现这实际上是将操作区间内所有极长连续$1$的左端点向左扩展了$1$位，所有极长连续$0$的右端点向左收缩了$1$位。</p>\n<p>操作$4,5,6$也是类似的。</p>\n<p>那么我们写一棵珂朵莉树就可以获得50分了。</p>\n<p>但实际上emmmmm……我的珂朵莉树可能和别人不一样（</p>\n<p>别人的珂朵莉树：</p>\n<p><img src=\"/images/TIM截图20190319161404.png\" alt=\"\"></p>\n<p>我的珂朵莉树：</p>\n<p><img src=\"/images/TIM截图20190319161900.png\" alt=\"\"></p>\n<p>那么满分做法？</p>\n<p>手写平衡树。没了。</p>\n<p><del>虽然这么说，但是lxl都写了将近10KB（</del></p>\n<p>总体思路就是，手写平衡树维护所有极长连续段的长度，并不需要维护端点因为可以算出来，单独维护还麻烦。每个节点维护子树内极长连续$0$和$1$的数量、长度最小值，以及连续段的长度变化量（标记）。修改时判断一下如果最小值变成了$0$，那么就暴力重构。<del>反正lxl说因为有前两个操作的存在这么做时间复杂度是对的。</del></p>\n<p>首先有一个问题就是，这样做每个节点维护的必须要是<strong>极长连续段</strong>。想象一下，如果有两个相邻的节点值都是$1$，我们进行一次操作$3$或$4$，会发生什么？</p>\n<p>两个节点的长度都加了$1$。然后整个序列莫名其妙多出来$1$个数。再然后您就WA了。</p>\n<p>然后就是各种各样乱七八糟的细节。虽然这么说但好像没什么可列举的了。</p>\n<p>然后您按照上面的思路打完四五百行的代码之后交上去一看：</p>\n<p><img src=\"/images/TIM截图20190319171721.png\" alt=\"\"></p>\n<p>虽然说暴力重构的时间复杂度<del>应该</del>是对的，但是不难发现它常数大啊。</p>\n<p>但是如果不重构，合并相邻的连续段就会变得非常麻烦。</p>\n<p>结论就是这题不可写，散了吧散了吧。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-17T03:06:25.000Z","title":"来扯点多项式？","password":null,"_content":"在luogu上看到了多项式三角函数/反三角函数的板子。\n\n不过还没加进公共题库，没人交，于是不敢交（\n\n于是来口胡一波吧。\n\n<!-- more -->\n\n### 三角函数\n\n总之就是求$\\sin F(x)$，$\\cos F(x)$，其他的三角函数都可以用这两个凑出来因此不需要单独讨论。\n\n虽然说我们也有$\\cos x=\\sin(x+\\cfrac{\\pi}{2})$，但是问题来了，模意义下怎么表示$\\pi$（\n\n首先我们有欧拉公式\n\n$$e^{ix}=\\cos x+i\\sin x$$\n\n于是\n\n$$e^{iF}=\\cos F+i\\sin F$$\n\n根据定义，$i^{2}\\equiv -1\\equiv 998244352\\pmod{998244353}$。而$998244352$是模$998244353$的二次剩余，说人话就是这样的$i$是存在的。\n\n但是问题来了，我们该怎么分离$\\sin$和$\\cos$？\n\n我们还需要有\n\n$$e^{i(-F)}=\\cos F-i\\sin F$$\n\n很明显地\n\n$$\\sin F=\\cfrac{e^{iF}-e^{i(-F)}}{2i}$$\n\n$$\\cos F=\\cfrac{e^{iF}+e^{i(-F)}}{2}$$\n\n### 反三角函数\n\n求$\\arcsin F(x)$，$\\arccos F(x)$。\n\n我们令答案的多项式为$G(x)$。\n\n我们都知道\n\n$$\\sin^{2}x+\\cos^{2}x=1$$\n\n于是知道了$\\sin G$或者是$\\cos G$，我们就可以推出另一项，然后再根据\n\n$$e^{iG}=\\cos G+i\\sin G$$\n\n$$G=\\cfrac{\\ln(\\cos G+i\\sin G)}{i}$$\n\n就可以算出$G$了。\n\n那么$\\arctan F(x)$？\n\n$$\\sin^{2}G+\\cos^{2}G=1$$\n\n因为$\\tan G$有意义，所以$\\cos G\\neq0$。\n\n$$\\tan^{2}G+1=\\sec^{2}G$$\n\n$$\\cos G=\\cfrac{1}{\\sqrt{\\tan^{2}G+1}}$$\n\n但是看着就麻烦（\n\n> Updated on 2019-03-18\n>\n> 上面这种做法大概不是正解，因为这样需要对一个常数项不是$1$，最低次非零系数也不是$1$的多项式求平方根，很明显这需要二次剩余~~，而且我不会~~。\n>\n> 考虑倍增。\n>\n> $$\\sin G_{0}-F\\equiv 0\\pmod{x^{t}}$$\n>\n> $$\\sin G-F\\equiv 0\\pmod{x^{2t}}$$\n>\n> $$G\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{(\\sin G_{0}-F)^{\\prime}}\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{\\cos G_{0}}\\pmod{x^{2t}}$$\n>\n> 然后是$\\arccos$。\n>\n> $$G\\equiv G_{0}-\\cfrac{\\cos G_{0}-F}{(\\cos G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\cos G_{0}-F}{\\sin G_{0}}\\pmod{x^{2t}}$$\n>\n> 然后是$\\arctan$。不过我不怎么会求导$\\tan$（\n>\n> $$\\begin{aligned}\n> (\\tan x)^{\\prime}&=(\\cfrac{\\sin x}{\\cos x})^{\\prime}\\\\\n> &=\\cfrac{(\\sin x)^{\\prime}}{\\cos x}+\\sin x(\\cfrac{1}{\\cos x})^{\\prime}\\\\\n> &=1+\\tan^{2}x\n> \\end{aligned}$$\n>\n> $$G\\equiv G_{0}-\\cfrac{\\tan G_{0}-F}{(\\tan G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\tan G_{0}-F}{1+\\tan^{2} G_{0}}\\pmod{x^{2t}}$$\n>\n> 这大概不能写（\n\n### 多项式GCD/LCM\n\n既然多项式能够整除和取模，那么GCD和LCM一定也是可以算的吧！\n\n……应该可以吧（\n","source":"_posts/2019-03-17-polynomial-triangle-function.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-17 11:06:25\ntitle: 来扯点多项式？\ntags:\n  - 多项式\n  - 三角函数\ncategories:\n  - 瞎扯\npassword:\n---\n在luogu上看到了多项式三角函数/反三角函数的板子。\n\n不过还没加进公共题库，没人交，于是不敢交（\n\n于是来口胡一波吧。\n\n<!-- more -->\n\n### 三角函数\n\n总之就是求$\\sin F(x)$，$\\cos F(x)$，其他的三角函数都可以用这两个凑出来因此不需要单独讨论。\n\n虽然说我们也有$\\cos x=\\sin(x+\\cfrac{\\pi}{2})$，但是问题来了，模意义下怎么表示$\\pi$（\n\n首先我们有欧拉公式\n\n$$e^{ix}=\\cos x+i\\sin x$$\n\n于是\n\n$$e^{iF}=\\cos F+i\\sin F$$\n\n根据定义，$i^{2}\\equiv -1\\equiv 998244352\\pmod{998244353}$。而$998244352$是模$998244353$的二次剩余，说人话就是这样的$i$是存在的。\n\n但是问题来了，我们该怎么分离$\\sin$和$\\cos$？\n\n我们还需要有\n\n$$e^{i(-F)}=\\cos F-i\\sin F$$\n\n很明显地\n\n$$\\sin F=\\cfrac{e^{iF}-e^{i(-F)}}{2i}$$\n\n$$\\cos F=\\cfrac{e^{iF}+e^{i(-F)}}{2}$$\n\n### 反三角函数\n\n求$\\arcsin F(x)$，$\\arccos F(x)$。\n\n我们令答案的多项式为$G(x)$。\n\n我们都知道\n\n$$\\sin^{2}x+\\cos^{2}x=1$$\n\n于是知道了$\\sin G$或者是$\\cos G$，我们就可以推出另一项，然后再根据\n\n$$e^{iG}=\\cos G+i\\sin G$$\n\n$$G=\\cfrac{\\ln(\\cos G+i\\sin G)}{i}$$\n\n就可以算出$G$了。\n\n那么$\\arctan F(x)$？\n\n$$\\sin^{2}G+\\cos^{2}G=1$$\n\n因为$\\tan G$有意义，所以$\\cos G\\neq0$。\n\n$$\\tan^{2}G+1=\\sec^{2}G$$\n\n$$\\cos G=\\cfrac{1}{\\sqrt{\\tan^{2}G+1}}$$\n\n但是看着就麻烦（\n\n> Updated on 2019-03-18\n>\n> 上面这种做法大概不是正解，因为这样需要对一个常数项不是$1$，最低次非零系数也不是$1$的多项式求平方根，很明显这需要二次剩余~~，而且我不会~~。\n>\n> 考虑倍增。\n>\n> $$\\sin G_{0}-F\\equiv 0\\pmod{x^{t}}$$\n>\n> $$\\sin G-F\\equiv 0\\pmod{x^{2t}}$$\n>\n> $$G\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{(\\sin G_{0}-F)^{\\prime}}\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{\\cos G_{0}}\\pmod{x^{2t}}$$\n>\n> 然后是$\\arccos$。\n>\n> $$G\\equiv G_{0}-\\cfrac{\\cos G_{0}-F}{(\\cos G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\cos G_{0}-F}{\\sin G_{0}}\\pmod{x^{2t}}$$\n>\n> 然后是$\\arctan$。不过我不怎么会求导$\\tan$（\n>\n> $$\\begin{aligned}\n> (\\tan x)^{\\prime}&=(\\cfrac{\\sin x}{\\cos x})^{\\prime}\\\\\n> &=\\cfrac{(\\sin x)^{\\prime}}{\\cos x}+\\sin x(\\cfrac{1}{\\cos x})^{\\prime}\\\\\n> &=1+\\tan^{2}x\n> \\end{aligned}$$\n>\n> $$G\\equiv G_{0}-\\cfrac{\\tan G_{0}-F}{(\\tan G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\tan G_{0}-F}{1+\\tan^{2} G_{0}}\\pmod{x^{2t}}$$\n>\n> 这大概不能写（\n\n### 多项式GCD/LCM\n\n既然多项式能够整除和取模，那么GCD和LCM一定也是可以算的吧！\n\n……应该可以吧（\n","slug":"polynomial-triangle-function","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0b001hmku98y64g7f4","content":"<p>在luogu上看到了多项式三角函数/反三角函数的板子。</p>\n<p>不过还没加进公共题库，没人交，于是不敢交（</p>\n<p>于是来口胡一波吧。</p>\n<a id=\"more\"></a>\n<h3 id=\"三角函数\"><a href=\"#三角函数\" class=\"headerlink\" title=\"三角函数\"></a>三角函数</h3><p>总之就是求$\\sin F(x)$，$\\cos F(x)$，其他的三角函数都可以用这两个凑出来因此不需要单独讨论。</p>\n<p>虽然说我们也有$\\cos x=\\sin(x+\\cfrac{\\pi}{2})$，但是问题来了，模意义下怎么表示$\\pi$（</p>\n<p>首先我们有欧拉公式</p>\n<script type=\"math/tex; mode=display\">e^{ix}=\\cos x+i\\sin x</script><p>于是</p>\n<script type=\"math/tex; mode=display\">e^{iF}=\\cos F+i\\sin F</script><p>根据定义，$i^{2}\\equiv -1\\equiv 998244352\\pmod{998244353}$。而$998244352$是模$998244353$的二次剩余，说人话就是这样的$i$是存在的。</p>\n<p>但是问题来了，我们该怎么分离$\\sin$和$\\cos$？</p>\n<p>我们还需要有</p>\n<script type=\"math/tex; mode=display\">e^{i(-F)}=\\cos F-i\\sin F</script><p>很明显地</p>\n<script type=\"math/tex; mode=display\">\\sin F=\\cfrac{e^{iF}-e^{i(-F)}}{2i}</script><script type=\"math/tex; mode=display\">\\cos F=\\cfrac{e^{iF}+e^{i(-F)}}{2}</script><h3 id=\"反三角函数\"><a href=\"#反三角函数\" class=\"headerlink\" title=\"反三角函数\"></a>反三角函数</h3><p>求$\\arcsin F(x)$，$\\arccos F(x)$。</p>\n<p>我们令答案的多项式为$G(x)$。</p>\n<p>我们都知道</p>\n<script type=\"math/tex; mode=display\">\\sin^{2}x+\\cos^{2}x=1</script><p>于是知道了$\\sin G$或者是$\\cos G$，我们就可以推出另一项，然后再根据</p>\n<script type=\"math/tex; mode=display\">e^{iG}=\\cos G+i\\sin G</script><script type=\"math/tex; mode=display\">G=\\cfrac{\\ln(\\cos G+i\\sin G)}{i}</script><p>就可以算出$G$了。</p>\n<p>那么$\\arctan F(x)$？</p>\n<script type=\"math/tex; mode=display\">\\sin^{2}G+\\cos^{2}G=1</script><p>因为$\\tan G$有意义，所以$\\cos G\\neq0$。</p>\n<script type=\"math/tex; mode=display\">\\tan^{2}G+1=\\sec^{2}G</script><script type=\"math/tex; mode=display\">\\cos G=\\cfrac{1}{\\sqrt{\\tan^{2}G+1}}</script><p>但是看着就麻烦（</p>\n<blockquote>\n<p>Updated on 2019-03-18</p>\n<p>上面这种做法大概不是正解，因为这样需要对一个常数项不是$1$，最低次非零系数也不是$1$的多项式求平方根，很明显这需要二次剩余<del>，而且我不会</del>。</p>\n<p>考虑倍增。</p>\n<script type=\"math/tex; mode=display\">\\sin G_{0}-F\\equiv 0\\pmod{x^{t}}</script><script type=\"math/tex; mode=display\">\\sin G-F\\equiv 0\\pmod{x^{2t}}</script><script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{(\\sin G_{0}-F)^{\\prime}}\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{\\cos G_{0}}\\pmod{x^{2t}}</script><p>然后是$\\arccos$。</p>\n<script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\cos G_{0}-F}{(\\cos G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\cos G_{0}-F}{\\sin G_{0}}\\pmod{x^{2t}}</script><p>然后是$\\arctan$。不过我不怎么会求导$\\tan$（</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(\\tan x)^{\\prime}&=(\\cfrac{\\sin x}{\\cos x})^{\\prime}\\\\\n&=\\cfrac{(\\sin x)^{\\prime}}{\\cos x}+\\sin x(\\cfrac{1}{\\cos x})^{\\prime}\\\\\n&=1+\\tan^{2}x\n\\end{aligned}</script><script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\tan G_{0}-F}{(\\tan G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\tan G_{0}-F}{1+\\tan^{2} G_{0}}\\pmod{x^{2t}}</script><p>这大概不能写（</p>\n</blockquote>\n<h3 id=\"多项式GCD-LCM\"><a href=\"#多项式GCD-LCM\" class=\"headerlink\" title=\"多项式GCD/LCM\"></a>多项式GCD/LCM</h3><p>既然多项式能够整除和取模，那么GCD和LCM一定也是可以算的吧！</p>\n<p>……应该可以吧（</p>\n","site":{"data":{}},"excerpt":"<p>在luogu上看到了多项式三角函数/反三角函数的板子。</p>\n<p>不过还没加进公共题库，没人交，于是不敢交（</p>\n<p>于是来口胡一波吧。</p>","more":"<h3 id=\"三角函数\"><a href=\"#三角函数\" class=\"headerlink\" title=\"三角函数\"></a>三角函数</h3><p>总之就是求$\\sin F(x)$，$\\cos F(x)$，其他的三角函数都可以用这两个凑出来因此不需要单独讨论。</p>\n<p>虽然说我们也有$\\cos x=\\sin(x+\\cfrac{\\pi}{2})$，但是问题来了，模意义下怎么表示$\\pi$（</p>\n<p>首先我们有欧拉公式</p>\n<script type=\"math/tex; mode=display\">e^{ix}=\\cos x+i\\sin x</script><p>于是</p>\n<script type=\"math/tex; mode=display\">e^{iF}=\\cos F+i\\sin F</script><p>根据定义，$i^{2}\\equiv -1\\equiv 998244352\\pmod{998244353}$。而$998244352$是模$998244353$的二次剩余，说人话就是这样的$i$是存在的。</p>\n<p>但是问题来了，我们该怎么分离$\\sin$和$\\cos$？</p>\n<p>我们还需要有</p>\n<script type=\"math/tex; mode=display\">e^{i(-F)}=\\cos F-i\\sin F</script><p>很明显地</p>\n<script type=\"math/tex; mode=display\">\\sin F=\\cfrac{e^{iF}-e^{i(-F)}}{2i}</script><script type=\"math/tex; mode=display\">\\cos F=\\cfrac{e^{iF}+e^{i(-F)}}{2}</script><h3 id=\"反三角函数\"><a href=\"#反三角函数\" class=\"headerlink\" title=\"反三角函数\"></a>反三角函数</h3><p>求$\\arcsin F(x)$，$\\arccos F(x)$。</p>\n<p>我们令答案的多项式为$G(x)$。</p>\n<p>我们都知道</p>\n<script type=\"math/tex; mode=display\">\\sin^{2}x+\\cos^{2}x=1</script><p>于是知道了$\\sin G$或者是$\\cos G$，我们就可以推出另一项，然后再根据</p>\n<script type=\"math/tex; mode=display\">e^{iG}=\\cos G+i\\sin G</script><script type=\"math/tex; mode=display\">G=\\cfrac{\\ln(\\cos G+i\\sin G)}{i}</script><p>就可以算出$G$了。</p>\n<p>那么$\\arctan F(x)$？</p>\n<script type=\"math/tex; mode=display\">\\sin^{2}G+\\cos^{2}G=1</script><p>因为$\\tan G$有意义，所以$\\cos G\\neq0$。</p>\n<script type=\"math/tex; mode=display\">\\tan^{2}G+1=\\sec^{2}G</script><script type=\"math/tex; mode=display\">\\cos G=\\cfrac{1}{\\sqrt{\\tan^{2}G+1}}</script><p>但是看着就麻烦（</p>\n<blockquote>\n<p>Updated on 2019-03-18</p>\n<p>上面这种做法大概不是正解，因为这样需要对一个常数项不是$1$，最低次非零系数也不是$1$的多项式求平方根，很明显这需要二次剩余<del>，而且我不会</del>。</p>\n<p>考虑倍增。</p>\n<script type=\"math/tex; mode=display\">\\sin G_{0}-F\\equiv 0\\pmod{x^{t}}</script><script type=\"math/tex; mode=display\">\\sin G-F\\equiv 0\\pmod{x^{2t}}</script><script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{(\\sin G_{0}-F)^{\\prime}}\\equiv G_{0}-\\cfrac{\\sin G_{0}-F}{\\cos G_{0}}\\pmod{x^{2t}}</script><p>然后是$\\arccos$。</p>\n<script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\cos G_{0}-F}{(\\cos G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\cos G_{0}-F}{\\sin G_{0}}\\pmod{x^{2t}}</script><p>然后是$\\arctan$。不过我不怎么会求导$\\tan$（</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(\\tan x)^{\\prime}&=(\\cfrac{\\sin x}{\\cos x})^{\\prime}\\\\\n&=\\cfrac{(\\sin x)^{\\prime}}{\\cos x}+\\sin x(\\cfrac{1}{\\cos x})^{\\prime}\\\\\n&=1+\\tan^{2}x\n\\end{aligned}</script><script type=\"math/tex; mode=display\">G\\equiv G_{0}-\\cfrac{\\tan G_{0}-F}{(\\tan G_{0}-F)^{\\prime}}\\equiv G_{0}+\\cfrac{\\tan G_{0}-F}{1+\\tan^{2} G_{0}}\\pmod{x^{2t}}</script><p>这大概不能写（</p>\n</blockquote>\n<h3 id=\"多项式GCD-LCM\"><a href=\"#多项式GCD-LCM\" class=\"headerlink\" title=\"多项式GCD/LCM\"></a>多项式GCD/LCM</h3><p>既然多项式能够整除和取模，那么GCD和LCM一定也是可以算的吧！</p>\n<p>……应该可以吧（</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-29T10:47:10.000Z","title":"「AT987」高橋君","password":null,"_content":"[传送门](https://tenka1-2014-final.contest.atcoder.jp/tasks/tenka1_2014_final_d)\n\n[Luogu](https://www.luogu.org/problemnew/show/AT987)\n\n第一道AtCoder的题解。\n\n联动一波[asuldb](https://www.cnblogs.com/asuldb/p/10623281.html)。\n\n<!-- more -->\n\n「啊这题怎么做啊。看起来好难啊。不会啊。」\n\n「我们来蒙一个做法吧。比如说就莫队了！」\n\n$$\\sum_{i=0}^{m+1}C_{n}^{i}=\\sum_{i=0}^{m}C_{n}^{i}+C_{n}^{m+1}$$\n\n$$\\sum_{i=0}^{m}C_{n+1}^{i}=\\sum_{i=0}^{m}(C_{n}^{i}+C_{n}^{i-1})=\\sum_{i=0}^{m}C_{n}^{i}+\\sum_{i=0}^{m-1}C_{n}^{i-1}=2\\sum_{i=0}^{m}C_{n}^{i}-C_{n}^{m}$$\n\n这是左右端点向右移动的情况。向左移动就反过来。\n\n就这样。\n\n但是不知道为什么奇偶性排序会WA。\n\n好短啊QAQ\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define re register\n#define maxn 100000\n#define mod 1000000007\n#define id(a) (a/sq+1)\n#define C(n,m) (1LL*fac[n]*inv[m]%mod*inv[n-m]%mod)\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,sq;\nint fac[maxn+1],inv[maxn+1];\nstruct Query{\n\tint t,l,r;\n};\nQuery q[maxn+1];\nint ans[maxn+1];\n\ninline bool operator<(re Query p1,re Query p2){\n\treturn id(p1.l)==id(p2.l)?p1.r<p2.r:p1.l<p2.l;\n}\n\nint main(){\n\tfac[0]=inv[0]=fac[1]=inv[1]=1;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tfor(re int i=2;i<=maxn;++i){\n\t\tfac[i]=1LL*fac[i-1]*i%mod;\n\t\tinv[i]=1LL*inv[i-1]*inv[i]%mod;\n\t}\n\tcltstream::read(n);\n\tsq=maxn/sqrt(n);\n\tfor(re int i=1;i<=n;++i){\n\t\tq[i].t=i;\n\t\tcltstream::read(q[i].r);\n\t\tcltstream::read(q[i].l);\n\t}\n\tstd::sort(q+1,q+n+1);\n\tre int L=0,R=0,res=1;\n\tfor(re int i=1;i<=n;++i){\n\t\tfor(;R<q[i].r;res=(2*res-C(R,L)+mod)%mod,++R);\n\t\tfor(;R>q[i].r;--R,res=inv[2]*(res+C(R,L))%mod);\n\t\tfor(;L<q[i].l;++L,res=(res+C(R,L))%mod);\n\t\tfor(;L>q[i].l;res=(res-C(R,L)+mod)%mod,--L);\n\t\tans[q[i].t]=res;\n\t}\n\tfor(re int i=1;i<=n;++i)\n\t\tcltstream::write(ans[i],10);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-03-29-at987-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-29 18:47:10\ntitle: 「AT987」高橋君\ntags:\n  - 莫队\n  - 组合数学\n  - 玄学\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://tenka1-2014-final.contest.atcoder.jp/tasks/tenka1_2014_final_d)\n\n[Luogu](https://www.luogu.org/problemnew/show/AT987)\n\n第一道AtCoder的题解。\n\n联动一波[asuldb](https://www.cnblogs.com/asuldb/p/10623281.html)。\n\n<!-- more -->\n\n「啊这题怎么做啊。看起来好难啊。不会啊。」\n\n「我们来蒙一个做法吧。比如说就莫队了！」\n\n$$\\sum_{i=0}^{m+1}C_{n}^{i}=\\sum_{i=0}^{m}C_{n}^{i}+C_{n}^{m+1}$$\n\n$$\\sum_{i=0}^{m}C_{n+1}^{i}=\\sum_{i=0}^{m}(C_{n}^{i}+C_{n}^{i-1})=\\sum_{i=0}^{m}C_{n}^{i}+\\sum_{i=0}^{m-1}C_{n}^{i-1}=2\\sum_{i=0}^{m}C_{n}^{i}-C_{n}^{m}$$\n\n这是左右端点向右移动的情况。向左移动就反过来。\n\n就这样。\n\n但是不知道为什么奇偶性排序会WA。\n\n好短啊QAQ\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define re register\n#define maxn 100000\n#define mod 1000000007\n#define id(a) (a/sq+1)\n#define C(n,m) (1LL*fac[n]*inv[m]%mod*inv[n-m]%mod)\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,sq;\nint fac[maxn+1],inv[maxn+1];\nstruct Query{\n\tint t,l,r;\n};\nQuery q[maxn+1];\nint ans[maxn+1];\n\ninline bool operator<(re Query p1,re Query p2){\n\treturn id(p1.l)==id(p2.l)?p1.r<p2.r:p1.l<p2.l;\n}\n\nint main(){\n\tfac[0]=inv[0]=fac[1]=inv[1]=1;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tfor(re int i=2;i<=maxn;++i){\n\t\tfac[i]=1LL*fac[i-1]*i%mod;\n\t\tinv[i]=1LL*inv[i-1]*inv[i]%mod;\n\t}\n\tcltstream::read(n);\n\tsq=maxn/sqrt(n);\n\tfor(re int i=1;i<=n;++i){\n\t\tq[i].t=i;\n\t\tcltstream::read(q[i].r);\n\t\tcltstream::read(q[i].l);\n\t}\n\tstd::sort(q+1,q+n+1);\n\tre int L=0,R=0,res=1;\n\tfor(re int i=1;i<=n;++i){\n\t\tfor(;R<q[i].r;res=(2*res-C(R,L)+mod)%mod,++R);\n\t\tfor(;R>q[i].r;--R,res=inv[2]*(res+C(R,L))%mod);\n\t\tfor(;L<q[i].l;++L,res=(res+C(R,L))%mod);\n\t\tfor(;L>q[i].l;res=(res-C(R,L)+mod)%mod,--L);\n\t\tans[q[i].t]=res;\n\t}\n\tfor(re int i=1;i<=n;++i)\n\t\tcltstream::write(ans[i],10);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"at987-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0c001lmku9cmkf9j2c","content":"<p><a href=\"https://tenka1-2014-final.contest.atcoder.jp/tasks/tenka1_2014_final_d\">传送门</a></p>\n<p><a href=\"https://www.luogu.org/problemnew/show/AT987\">Luogu</a></p>\n<p>第一道AtCoder的题解。</p>\n<p>联动一波<a href=\"https://www.cnblogs.com/asuldb/p/10623281.html\">asuldb</a>。</p>\n<a id=\"more\"></a>\n<p>「啊这题怎么做啊。看起来好难啊。不会啊。」</p>\n<p>「我们来蒙一个做法吧。比如说就莫队了！」</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{m+1}C_{n}^{i}=\\sum_{i=0}^{m}C_{n}^{i}+C_{n}^{m+1}</script><script type=\"math/tex; mode=display\">\\sum_{i=0}^{m}C_{n+1}^{i}=\\sum_{i=0}^{m}(C_{n}^{i}+C_{n}^{i-1})=\\sum_{i=0}^{m}C_{n}^{i}+\\sum_{i=0}^{m-1}C_{n}^{i-1}=2\\sum_{i=0}^{m}C_{n}^{i}-C_{n}^{m}</script><p>这是左右端点向右移动的情况。向左移动就反过来。</p>\n<p>就这样。</p>\n<p>但是不知道为什么奇偶性排序会WA。</p>\n<p>好短啊QAQ</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000007</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> id(a) (a/sq+1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> C(n,m) (1LL*fac[n]*inv[m]%mod*inv[n-m]%mod)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,sq;</span><br><span class=\"line\"><span class=\"keyword\">int</span> fac[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Query</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,l,r;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">Query q[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(re Query p1,re Query p2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id(p1.l)==id(p2.l)?p1.r&lt;p2.r:p1.l&lt;p2.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>]=inv[<span class=\"number\">0</span>]=fac[<span class=\"number\">1</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        fac[i]=<span class=\"number\">1L</span>L*fac[i<span class=\"number\">-1</span>]*i%mod;</span><br><span class=\"line\">        inv[i]=<span class=\"number\">1L</span>L*inv[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    sq=maxn/<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        q[i].t=i;</span><br><span class=\"line\">        cltstream::read(q[i].r);</span><br><span class=\"line\">        cltstream::read(q[i].l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(q+<span class=\"number\">1</span>,q+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> L=<span class=\"number\">0</span>,R=<span class=\"number\">0</span>,res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;R&lt;q[i].r;res=(<span class=\"number\">2</span>*res-C(R,L)+mod)%mod,++R);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;R&gt;q[i].r;--R,res=inv[<span class=\"number\">2</span>]*(res+C(R,L))%mod);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;L&lt;q[i].l;++L,res=(res+C(R,L))%mod);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;L&gt;q[i].l;res=(res-C(R,L)+mod)%mod,--L);</span><br><span class=\"line\">        ans[q[i].t]=res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::write(ans[i],<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://tenka1-2014-final.contest.atcoder.jp/tasks/tenka1_2014_final_d\">传送门</a></p>\n<p><a href=\"https://www.luogu.org/problemnew/show/AT987\">Luogu</a></p>\n<p>第一道AtCoder的题解。</p>\n<p>联动一波<a href=\"https://www.cnblogs.com/asuldb/p/10623281.html\">asuldb</a>。</p>","more":"<p>「啊这题怎么做啊。看起来好难啊。不会啊。」</p>\n<p>「我们来蒙一个做法吧。比如说就莫队了！」</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{m+1}C_{n}^{i}=\\sum_{i=0}^{m}C_{n}^{i}+C_{n}^{m+1}</script><script type=\"math/tex; mode=display\">\\sum_{i=0}^{m}C_{n+1}^{i}=\\sum_{i=0}^{m}(C_{n}^{i}+C_{n}^{i-1})=\\sum_{i=0}^{m}C_{n}^{i}+\\sum_{i=0}^{m-1}C_{n}^{i-1}=2\\sum_{i=0}^{m}C_{n}^{i}-C_{n}^{m}</script><p>这是左右端点向右移动的情况。向左移动就反过来。</p>\n<p>就这样。</p>\n<p>但是不知道为什么奇偶性排序会WA。</p>\n<p>好短啊QAQ</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000007</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> id(a) (a/sq+1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> C(n,m) (1LL*fac[n]*inv[m]%mod*inv[n-m]%mod)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,sq;</span><br><span class=\"line\"><span class=\"keyword\">int</span> fac[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Query</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,l,r;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">Query q[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(re Query p1,re Query p2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id(p1.l)==id(p2.l)?p1.r&lt;p2.r:p1.l&lt;p2.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>]=inv[<span class=\"number\">0</span>]=fac[<span class=\"number\">1</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        fac[i]=<span class=\"number\">1L</span>L*fac[i<span class=\"number\">-1</span>]*i%mod;</span><br><span class=\"line\">        inv[i]=<span class=\"number\">1L</span>L*inv[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    sq=maxn/<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        q[i].t=i;</span><br><span class=\"line\">        cltstream::read(q[i].r);</span><br><span class=\"line\">        cltstream::read(q[i].l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(q+<span class=\"number\">1</span>,q+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> L=<span class=\"number\">0</span>,R=<span class=\"number\">0</span>,res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;R&lt;q[i].r;res=(<span class=\"number\">2</span>*res-C(R,L)+mod)%mod,++R);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;R&gt;q[i].r;--R,res=inv[<span class=\"number\">2</span>]*(res+C(R,L))%mod);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;L&lt;q[i].l;++L,res=(res+C(R,L))%mod);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;L&gt;q[i].l;res=(res-C(R,L)+mod)%mod,--L);</span><br><span class=\"line\">        ans[q[i].t]=res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::write(ans[i],<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-25T09:34:10.000Z","title":"后缀数组自闭笔记","password":null,"_content":"省选前最后两周。同时也是退役前最后两周。\n\n~~在wzx的鼓动下~~开了字符串。\n\n然后自闭了。\n\n<!-- more -->\n\n以下，我们约定，$S_{l,r}$表示字符串$S$下标为$[l,r]$的子串，下标从$1$开始。超过串长的部分用小于其他所有字符的空字符填充。\n\n### [后缀排序](https://www.luogu.org/problemnew/show/P3809)\n\n~~`std::sort`（光速逃~~\n\n不过`std::sort`也是可以做的（\n\n我们发现，这种做法的瓶颈在于比较两个后缀的大小。我们可以二分+Hash求出它们的最长公共前缀的长度，然后比较这个前缀后一个字符的大小。这么做的时间复杂度是$O(n\\log^{2}n)$的。\n\n~~但是没什么用（~~\n\n然后我们就需要用到后缀数组（Suffix Array）了。\n\nSA一共有四种构建方式，分别是$O(n\\log n)$的倍增，$O(n)$的DC3和SA-IS，以及$O(1)$的潮爷排序。~~但是后三种太高端了我都不会（~~\n\n假设对于每一个位置$i$，我们已经按照$S_{i,i+k-1}$的大小排好了序，并且有了一个排名。我们以$i$的排名为第一关键字，$i+k$的排名为第二关键字，排一遍序，整个字符串就被按照$S_{i,i+2k-1}$的大小排好了序。当所有位置的排名都不同时，说明整个过程可以结束了。\n\n~~但是问题来了，排一遍序不是$O(n\\log n)$的吗（~~\n\n~~我们有基数排序啊（~~\n\n```cpp\n// s[i]：原字符串\n// fst[i]：后缀i的第一关键字\n// snd[i]：第二关键字排名为i的后缀\n// tak[i]：桶\n// sa[i]：排名为i的后缀\n// 一开始时以首字符为第一关键字，位置为第二关键字排序\nfor(re int i=1;i<=n;++i)\n\t++tak[fst[i]=s[i]];\nfor(re int i=1;i<=122;++i)\n\ttak[i]+=tak[i-1];\n\t// 处理桶内前缀和，用来求出第一关键字为i的后缀的最大可能排名\nfor(re int i=n;i>=1;--i)\n\tsa[tak[fst[i]]--]=i;\n\t// 第一关键字相同时，第二关键字排名越大总排名越大，因此倒序枚举\n\t// 因为第二关键字是位置，所以snd[i]=i\nfor(re int mx=122,k=1;;k<<=1){\n\tre int cnt=0;\n\tfor(re int i=n-k+1;i<=n;++i)\n\t\tsnd[++cnt]=i;\n\t\t// (n-k,n]的这些后缀没有第二关键字，因此排名最靠前\n\tfor(re int i=1;i<=n;++i)\n\t\tif(sa[i]>k)\n\t\t\tsnd[++cnt]=sa[i]-k;\n\tfor(re int i=1;i<=mx;++i)\n\t\ttak[i]=0;\n\tfor(re int i=1;i<=n;++i)\n\t\t++tak[fst[i]];\n\tfor(re int i=1;i<=mx;++i)\n\t\ttak[i]+=tak[i-1];\n\tfor(re int i=n;i>=1;--i)\n\t\tsa[tak[fst[snd[i]]]--]=snd[i];\n\tfor(re int i=1;i<=n;++i)\n\t\tsnd[i]=fst[i];\n\t\t// 因为要生成下一轮排序时的第一关键字，把fst里的信息先扔到snd里\n\tfor(re int i=1;i<=n;++i)\n\t\tfst[sa[i]]=fst[sa[i-1]]+(snd[sa[i]]!=snd[sa[i-1]]||snd[sa[i]+k]!=snd[sa[i-1]+k]);\n\t\t// 如果当前后缀与前一个后缀相同则共用排名，否则+1\n\tif(fst[sa[n]]==n)\n\t\tbreak;\n\telse\n\t\tmx=fst[sa[n]];\n}\n```\n\n看上去非常的绕（\n\n最后直接输出`sa`数组即可。\n\n### `rnk`数组\n\n`rnk[i]`表示排名为$i$的后缀。\n\n不难发现`rnk[sa[i]]=sa[rnk[i]]=i`。\n\n### `het`数组\n\n大概算是SA的重点。\n\n令`lcp(x,y)`表示$x,y$两个后缀的最长公共前缀（Longest Common Prefix）的长度。\n\n`het[i]`就被定义为`lcp(sa[i],sa[i-1])`。`het[1]=0`。\n\n不难发现`lcp(x,z)=min(lcp(x,y),lcp(y,z))(x<y<z)`，`lcp(x,y)=min{lcp(i,i-1)}=min{het[i]}(rnk[x]<i<=rnk[y])`。\n\n~~那么问题来了，怎么求呢（~~\n\n首先我们是肯定不能暴力枚举的。\n\n二分+Hash？太麻烦而且复杂度不够优秀（\n\nSA的`het`数组有一个性质，就是`het[rnk[i]]>=het[rnk[i-1]]-1`。\n\n我们只考虑`het[rnk[i-1]]>0`时的情况。\n\n令`k=sa[rnk[i-1]-1]`，`lcp(i-1,k)=het[rnk[i-1]]`，又因为后缀$i$是后缀$i-1$删去首字符得到的，后缀$k+1$是后缀$k$删去首字符得到的，从而`lcp(i,k+1)=het[rnk[i-1]]-1`。\n\n后缀$i-1$比后缀$k$大，删去首字符后，后缀$i$肯定也比后缀$k+1$大。根据`lcp`的性质我们有`lcp(i,sa[rnk[i]-1])>=lcp(i,k+1)`，也即`het[rnk[i]]>=het[rnk[i-1]]-1`。\n\n利用这个性质，我们就可以在$O(n)$的时间复杂度内求出`het`数组了。\n\n```cpp\nfor(re int i=1,j=0;i<=n;++i)\n\tif(rnk[i]>1){\n\t\tj-=!!j;\n\t\tre int pos=sa[rnk[i]-1];\n\t\tfor(;i+j<=n&&pos+j<=n&&s[i+j]==s[pos+j];++j);\n\t\thet[rnk[i]]=j;\n\t}\n```\n\n然后SA就彻底建好了。没错就这么点东西（\n\n### ~~板子~~应用\n\n#### 不同子串个数\n\n给定一个长度为$n$的字符串$S$，求其本质不同的子串的数量。\n\n首先有一个很显然的结论是，如果一个字符串是$S$的子串，那么它一定是$S$的若干个排名连续的后缀的公共前缀。\n\n对于排名为$1$和排名为$2$的两个后缀来说，它们一共有`het[2]`个公共前缀；排名为$2$和排名为$3$的两个后缀一共有`het[3]`个公共前缀……\n\n因此，$S$的不同子串个数就是它的所有子串个数，$\\cfrac{n(n+1)}{2}$，减去所有`het`的和。\n\n#### 最长公共子串\n\n给定$n$个字符串$S_{1},S_{2},\\cdots,S_{n}$，求它们的最长公共子串。\n\n我们首先将这$n$个串拼在一起，中间插入特殊字符将相邻的两个串隔开。然后我们将每个串内部的字符染色，第$1$个串染成颜色$1$，第$2$个串染成颜色$2$，用尺取法找出`sa[l],sa[l+1],...,sa[r]`覆盖全部$n$种颜色的区间$[l,r]$，求出其中`min{het[i]}(l<i<=r)`的最大值即可。\n\n#### 模式串出现次数\n\n给定$n$个文本串和$m$个模式串，询问每个模式串在$n$个文本串中一共出现了多少次。\n\n首先将所有文本串拼在一起。对于每一个模式串，如果我们能够找到这个长串的任意一个后缀$x$，使得其拥有这个模式串作为前缀，然后找到一个最小的$l$和一个最大的$r$，使得`min{het[i]}(l<i<=rnk[x])`和`min{het[i]}(rnk[x]<i<=r)`均大于等于该模式串长度，$r-l+1$就是答案。不难看出向两边取$\\min$这个操作具有单调性，因此我们可以二分。\n\n但是问题来了，我们该怎么找到这个后缀啊。\n\n一想，把模式串也接到文本串后就可以了。\n\n那如果说模式串出现了互相包含的情况呢？\n\n我们可以再开一个数组`col`，`col[i]`表示`sa[i]`的首字符是否属于一个文本串。因为这个是静态的，直接一遍前缀和就行。\n\n#### 母串数量\n\n给定$n$个文本串和$m$个模式串，询问每个模式串在多少个文本串中出现过。也就是说，在同一个文本串中出现多次只记一次。\n\n和上面一样，只不过是最后一步`col[i]`表示`sa[i]`的首字符所属的文本串的编号，对于每一个模式串，二分出区间后数一下颜色种类数。\n\n### 课后习题\n\n自己找去吧（\n\n然后您就会发现字符串的题一道比一道神仙（\n","source":"_posts/2019-03-25-suffix-array-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-25 17:34:10\ntitle: 后缀数组自闭笔记\ntags:\n  - 字符串\n  - SA\ncategories:\n  - 学习笔记\npassword:\n---\n省选前最后两周。同时也是退役前最后两周。\n\n~~在wzx的鼓动下~~开了字符串。\n\n然后自闭了。\n\n<!-- more -->\n\n以下，我们约定，$S_{l,r}$表示字符串$S$下标为$[l,r]$的子串，下标从$1$开始。超过串长的部分用小于其他所有字符的空字符填充。\n\n### [后缀排序](https://www.luogu.org/problemnew/show/P3809)\n\n~~`std::sort`（光速逃~~\n\n不过`std::sort`也是可以做的（\n\n我们发现，这种做法的瓶颈在于比较两个后缀的大小。我们可以二分+Hash求出它们的最长公共前缀的长度，然后比较这个前缀后一个字符的大小。这么做的时间复杂度是$O(n\\log^{2}n)$的。\n\n~~但是没什么用（~~\n\n然后我们就需要用到后缀数组（Suffix Array）了。\n\nSA一共有四种构建方式，分别是$O(n\\log n)$的倍增，$O(n)$的DC3和SA-IS，以及$O(1)$的潮爷排序。~~但是后三种太高端了我都不会（~~\n\n假设对于每一个位置$i$，我们已经按照$S_{i,i+k-1}$的大小排好了序，并且有了一个排名。我们以$i$的排名为第一关键字，$i+k$的排名为第二关键字，排一遍序，整个字符串就被按照$S_{i,i+2k-1}$的大小排好了序。当所有位置的排名都不同时，说明整个过程可以结束了。\n\n~~但是问题来了，排一遍序不是$O(n\\log n)$的吗（~~\n\n~~我们有基数排序啊（~~\n\n```cpp\n// s[i]：原字符串\n// fst[i]：后缀i的第一关键字\n// snd[i]：第二关键字排名为i的后缀\n// tak[i]：桶\n// sa[i]：排名为i的后缀\n// 一开始时以首字符为第一关键字，位置为第二关键字排序\nfor(re int i=1;i<=n;++i)\n\t++tak[fst[i]=s[i]];\nfor(re int i=1;i<=122;++i)\n\ttak[i]+=tak[i-1];\n\t// 处理桶内前缀和，用来求出第一关键字为i的后缀的最大可能排名\nfor(re int i=n;i>=1;--i)\n\tsa[tak[fst[i]]--]=i;\n\t// 第一关键字相同时，第二关键字排名越大总排名越大，因此倒序枚举\n\t// 因为第二关键字是位置，所以snd[i]=i\nfor(re int mx=122,k=1;;k<<=1){\n\tre int cnt=0;\n\tfor(re int i=n-k+1;i<=n;++i)\n\t\tsnd[++cnt]=i;\n\t\t// (n-k,n]的这些后缀没有第二关键字，因此排名最靠前\n\tfor(re int i=1;i<=n;++i)\n\t\tif(sa[i]>k)\n\t\t\tsnd[++cnt]=sa[i]-k;\n\tfor(re int i=1;i<=mx;++i)\n\t\ttak[i]=0;\n\tfor(re int i=1;i<=n;++i)\n\t\t++tak[fst[i]];\n\tfor(re int i=1;i<=mx;++i)\n\t\ttak[i]+=tak[i-1];\n\tfor(re int i=n;i>=1;--i)\n\t\tsa[tak[fst[snd[i]]]--]=snd[i];\n\tfor(re int i=1;i<=n;++i)\n\t\tsnd[i]=fst[i];\n\t\t// 因为要生成下一轮排序时的第一关键字，把fst里的信息先扔到snd里\n\tfor(re int i=1;i<=n;++i)\n\t\tfst[sa[i]]=fst[sa[i-1]]+(snd[sa[i]]!=snd[sa[i-1]]||snd[sa[i]+k]!=snd[sa[i-1]+k]);\n\t\t// 如果当前后缀与前一个后缀相同则共用排名，否则+1\n\tif(fst[sa[n]]==n)\n\t\tbreak;\n\telse\n\t\tmx=fst[sa[n]];\n}\n```\n\n看上去非常的绕（\n\n最后直接输出`sa`数组即可。\n\n### `rnk`数组\n\n`rnk[i]`表示排名为$i$的后缀。\n\n不难发现`rnk[sa[i]]=sa[rnk[i]]=i`。\n\n### `het`数组\n\n大概算是SA的重点。\n\n令`lcp(x,y)`表示$x,y$两个后缀的最长公共前缀（Longest Common Prefix）的长度。\n\n`het[i]`就被定义为`lcp(sa[i],sa[i-1])`。`het[1]=0`。\n\n不难发现`lcp(x,z)=min(lcp(x,y),lcp(y,z))(x<y<z)`，`lcp(x,y)=min{lcp(i,i-1)}=min{het[i]}(rnk[x]<i<=rnk[y])`。\n\n~~那么问题来了，怎么求呢（~~\n\n首先我们是肯定不能暴力枚举的。\n\n二分+Hash？太麻烦而且复杂度不够优秀（\n\nSA的`het`数组有一个性质，就是`het[rnk[i]]>=het[rnk[i-1]]-1`。\n\n我们只考虑`het[rnk[i-1]]>0`时的情况。\n\n令`k=sa[rnk[i-1]-1]`，`lcp(i-1,k)=het[rnk[i-1]]`，又因为后缀$i$是后缀$i-1$删去首字符得到的，后缀$k+1$是后缀$k$删去首字符得到的，从而`lcp(i,k+1)=het[rnk[i-1]]-1`。\n\n后缀$i-1$比后缀$k$大，删去首字符后，后缀$i$肯定也比后缀$k+1$大。根据`lcp`的性质我们有`lcp(i,sa[rnk[i]-1])>=lcp(i,k+1)`，也即`het[rnk[i]]>=het[rnk[i-1]]-1`。\n\n利用这个性质，我们就可以在$O(n)$的时间复杂度内求出`het`数组了。\n\n```cpp\nfor(re int i=1,j=0;i<=n;++i)\n\tif(rnk[i]>1){\n\t\tj-=!!j;\n\t\tre int pos=sa[rnk[i]-1];\n\t\tfor(;i+j<=n&&pos+j<=n&&s[i+j]==s[pos+j];++j);\n\t\thet[rnk[i]]=j;\n\t}\n```\n\n然后SA就彻底建好了。没错就这么点东西（\n\n### ~~板子~~应用\n\n#### 不同子串个数\n\n给定一个长度为$n$的字符串$S$，求其本质不同的子串的数量。\n\n首先有一个很显然的结论是，如果一个字符串是$S$的子串，那么它一定是$S$的若干个排名连续的后缀的公共前缀。\n\n对于排名为$1$和排名为$2$的两个后缀来说，它们一共有`het[2]`个公共前缀；排名为$2$和排名为$3$的两个后缀一共有`het[3]`个公共前缀……\n\n因此，$S$的不同子串个数就是它的所有子串个数，$\\cfrac{n(n+1)}{2}$，减去所有`het`的和。\n\n#### 最长公共子串\n\n给定$n$个字符串$S_{1},S_{2},\\cdots,S_{n}$，求它们的最长公共子串。\n\n我们首先将这$n$个串拼在一起，中间插入特殊字符将相邻的两个串隔开。然后我们将每个串内部的字符染色，第$1$个串染成颜色$1$，第$2$个串染成颜色$2$，用尺取法找出`sa[l],sa[l+1],...,sa[r]`覆盖全部$n$种颜色的区间$[l,r]$，求出其中`min{het[i]}(l<i<=r)`的最大值即可。\n\n#### 模式串出现次数\n\n给定$n$个文本串和$m$个模式串，询问每个模式串在$n$个文本串中一共出现了多少次。\n\n首先将所有文本串拼在一起。对于每一个模式串，如果我们能够找到这个长串的任意一个后缀$x$，使得其拥有这个模式串作为前缀，然后找到一个最小的$l$和一个最大的$r$，使得`min{het[i]}(l<i<=rnk[x])`和`min{het[i]}(rnk[x]<i<=r)`均大于等于该模式串长度，$r-l+1$就是答案。不难看出向两边取$\\min$这个操作具有单调性，因此我们可以二分。\n\n但是问题来了，我们该怎么找到这个后缀啊。\n\n一想，把模式串也接到文本串后就可以了。\n\n那如果说模式串出现了互相包含的情况呢？\n\n我们可以再开一个数组`col`，`col[i]`表示`sa[i]`的首字符是否属于一个文本串。因为这个是静态的，直接一遍前缀和就行。\n\n#### 母串数量\n\n给定$n$个文本串和$m$个模式串，询问每个模式串在多少个文本串中出现过。也就是说，在同一个文本串中出现多次只记一次。\n\n和上面一样，只不过是最后一步`col[i]`表示`sa[i]`的首字符所属的文本串的编号，对于每一个模式串，二分出区间后数一下颜色种类数。\n\n### 课后习题\n\n自己找去吧（\n\n然后您就会发现字符串的题一道比一道神仙（\n","slug":"suffix-array-learning-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0d001nmku97b2h1yih","content":"<p>省选前最后两周。同时也是退役前最后两周。</p>\n<p><del>在wzx的鼓动下</del>开了字符串。</p>\n<p>然后自闭了。</p>\n<a id=\"more\"></a>\n<p>以下，我们约定，$S_{l,r}$表示字符串$S$下标为$[l,r]$的子串，下标从$1$开始。超过串长的部分用小于其他所有字符的空字符填充。</p>\n<h3 id=\"后缀排序\"><a href=\"#后缀排序\" class=\"headerlink\" title=\"后缀排序\"></a><a href=\"https://www.luogu.org/problemnew/show/P3809\">后缀排序</a></h3><p><del><code>std::sort</code>（光速逃</del></p>\n<p>不过<code>std::sort</code>也是可以做的（</p>\n<p>我们发现，这种做法的瓶颈在于比较两个后缀的大小。我们可以二分+Hash求出它们的最长公共前缀的长度，然后比较这个前缀后一个字符的大小。这么做的时间复杂度是$O(n\\log^{2}n)$的。</p>\n<p><del>但是没什么用（</del></p>\n<p>然后我们就需要用到后缀数组（Suffix Array）了。</p>\n<p>SA一共有四种构建方式，分别是$O(n\\log n)$的倍增，$O(n)$的DC3和SA-IS，以及$O(1)$的潮爷排序。<del>但是后三种太高端了我都不会（</del></p>\n<p>假设对于每一个位置$i$，我们已经按照$S_{i,i+k-1}$的大小排好了序，并且有了一个排名。我们以$i$的排名为第一关键字，$i+k$的排名为第二关键字，排一遍序，整个字符串就被按照$S_{i,i+2k-1}$的大小排好了序。当所有位置的排名都不同时，说明整个过程可以结束了。</p>\n<p><del>但是问题来了，排一遍序不是$O(n\\log n)$的吗（</del></p>\n<p><del>我们有基数排序啊（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// s[i]：原字符串</span></span><br><span class=\"line\"><span class=\"comment\">// fst[i]：后缀i的第一关键字</span></span><br><span class=\"line\"><span class=\"comment\">// snd[i]：第二关键字排名为i的后缀</span></span><br><span class=\"line\"><span class=\"comment\">// tak[i]：桶</span></span><br><span class=\"line\"><span class=\"comment\">// sa[i]：排名为i的后缀</span></span><br><span class=\"line\"><span class=\"comment\">// 一开始时以首字符为第一关键字，位置为第二关键字排序</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    ++tak[fst[i]=s[i]];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">122</span>;++i)</span><br><span class=\"line\">    tak[i]+=tak[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 处理桶内前缀和，用来求出第一关键字为i的后缀的最大可能排名</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">    sa[tak[fst[i]]--]=i;</span><br><span class=\"line\">    <span class=\"comment\">// 第一关键字相同时，第二关键字排名越大总排名越大，因此倒序枚举</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为第二关键字是位置，所以snd[i]=i</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> mx=<span class=\"number\">122</span>,k=<span class=\"number\">1</span>;;k&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n-k+<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        snd[++cnt]=i;</span><br><span class=\"line\">        <span class=\"comment\">// (n-k,n]的这些后缀没有第二关键字，因此排名最靠前</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sa[i]&gt;k)</span><br><span class=\"line\">            snd[++cnt]=sa[i]-k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mx;++i)</span><br><span class=\"line\">        tak[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        ++tak[fst[i]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mx;++i)</span><br><span class=\"line\">        tak[i]+=tak[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        sa[tak[fst[snd[i]]]--]=snd[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        snd[i]=fst[i];</span><br><span class=\"line\">        <span class=\"comment\">// 因为要生成下一轮排序时的第一关键字，把fst里的信息先扔到snd里</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        fst[sa[i]]=fst[sa[i<span class=\"number\">-1</span>]]+(snd[sa[i]]!=snd[sa[i<span class=\"number\">-1</span>]]||snd[sa[i]+k]!=snd[sa[i<span class=\"number\">-1</span>]+k]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果当前后缀与前一个后缀相同则共用排名，否则+1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fst[sa[n]]==n)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        mx=fst[sa[n]];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看上去非常的绕（</p>\n<p>最后直接输出<code>sa</code>数组即可。</p>\n<h3 id=\"rnk数组\"><a href=\"#rnk数组\" class=\"headerlink\" title=\"rnk数组\"></a><code>rnk</code>数组</h3><p><code>rnk[i]</code>表示排名为$i$的后缀。</p>\n<p>不难发现<code>rnk[sa[i]]=sa[rnk[i]]=i</code>。</p>\n<h3 id=\"het数组\"><a href=\"#het数组\" class=\"headerlink\" title=\"het数组\"></a><code>het</code>数组</h3><p>大概算是SA的重点。</p>\n<p>令<code>lcp(x,y)</code>表示$x,y$两个后缀的最长公共前缀（Longest Common Prefix）的长度。</p>\n<p><code>het[i]</code>就被定义为<code>lcp(sa[i],sa[i-1])</code>。<code>het[1]=0</code>。</p>\n<p>不难发现<code>lcp(x,z)=min(lcp(x,y),lcp(y,z))(x&lt;y&lt;z)</code>，<code>lcp(x,y)=min{lcp(i,i-1)}=min{het[i]}(rnk[x]&lt;i&lt;=rnk[y])</code>。</p>\n<p><del>那么问题来了，怎么求呢（</del></p>\n<p>首先我们是肯定不能暴力枚举的。</p>\n<p>二分+Hash？太麻烦而且复杂度不够优秀（</p>\n<p>SA的<code>het</code>数组有一个性质，就是<code>het[rnk[i]]&gt;=het[rnk[i-1]]-1</code>。</p>\n<p>我们只考虑<code>het[rnk[i-1]]&gt;0</code>时的情况。</p>\n<p>令<code>k=sa[rnk[i-1]-1]</code>，<code>lcp(i-1,k)=het[rnk[i-1]]</code>，又因为后缀$i$是后缀$i-1$删去首字符得到的，后缀$k+1$是后缀$k$删去首字符得到的，从而<code>lcp(i,k+1)=het[rnk[i-1]]-1</code>。</p>\n<p>后缀$i-1$比后缀$k$大，删去首字符后，后缀$i$肯定也比后缀$k+1$大。根据<code>lcp</code>的性质我们有<code>lcp(i,sa[rnk[i]-1])&gt;=lcp(i,k+1)</code>，也即<code>het[rnk[i]]&gt;=het[rnk[i-1]]-1</code>。</p>\n<p>利用这个性质，我们就可以在$O(n)$的时间复杂度内求出<code>het</code>数组了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rnk[i]&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        j-=!!j;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> pos=sa[rnk[i]<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;i+j&lt;=n&amp;&amp;pos+j&lt;=n&amp;&amp;s[i+j]==s[pos+j];++j);</span><br><span class=\"line\">        het[rnk[i]]=j;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>然后SA就彻底建好了。没错就这么点东西（</p>\n<h3 id=\"板子应用\"><a href=\"#板子应用\" class=\"headerlink\" title=\"板子应用\"></a><del>板子</del>应用</h3><h4 id=\"不同子串个数\"><a href=\"#不同子串个数\" class=\"headerlink\" title=\"不同子串个数\"></a>不同子串个数</h4><p>给定一个长度为$n$的字符串$S$，求其本质不同的子串的数量。</p>\n<p>首先有一个很显然的结论是，如果一个字符串是$S$的子串，那么它一定是$S$的若干个排名连续的后缀的公共前缀。</p>\n<p>对于排名为$1$和排名为$2$的两个后缀来说，它们一共有<code>het[2]</code>个公共前缀；排名为$2$和排名为$3$的两个后缀一共有<code>het[3]</code>个公共前缀……</p>\n<p>因此，$S$的不同子串个数就是它的所有子串个数，$\\cfrac{n(n+1)}{2}$，减去所有<code>het</code>的和。</p>\n<h4 id=\"最长公共子串\"><a href=\"#最长公共子串\" class=\"headerlink\" title=\"最长公共子串\"></a>最长公共子串</h4><p>给定$n$个字符串$S_{1},S_{2},\\cdots,S_{n}$，求它们的最长公共子串。</p>\n<p>我们首先将这$n$个串拼在一起，中间插入特殊字符将相邻的两个串隔开。然后我们将每个串内部的字符染色，第$1$个串染成颜色$1$，第$2$个串染成颜色$2$，用尺取法找出<code>sa[l],sa[l+1],...,sa[r]</code>覆盖全部$n$种颜色的区间$[l,r]$，求出其中<code>min{het[i]}(l&lt;i&lt;=r)</code>的最大值即可。</p>\n<h4 id=\"模式串出现次数\"><a href=\"#模式串出现次数\" class=\"headerlink\" title=\"模式串出现次数\"></a>模式串出现次数</h4><p>给定$n$个文本串和$m$个模式串，询问每个模式串在$n$个文本串中一共出现了多少次。</p>\n<p>首先将所有文本串拼在一起。对于每一个模式串，如果我们能够找到这个长串的任意一个后缀$x$，使得其拥有这个模式串作为前缀，然后找到一个最小的$l$和一个最大的$r$，使得<code>min{het[i]}(l&lt;i&lt;=rnk[x])</code>和<code>min{het[i]}(rnk[x]&lt;i&lt;=r)</code>均大于等于该模式串长度，$r-l+1$就是答案。不难看出向两边取$\\min$这个操作具有单调性，因此我们可以二分。</p>\n<p>但是问题来了，我们该怎么找到这个后缀啊。</p>\n<p>一想，把模式串也接到文本串后就可以了。</p>\n<p>那如果说模式串出现了互相包含的情况呢？</p>\n<p>我们可以再开一个数组<code>col</code>，<code>col[i]</code>表示<code>sa[i]</code>的首字符是否属于一个文本串。因为这个是静态的，直接一遍前缀和就行。</p>\n<h4 id=\"母串数量\"><a href=\"#母串数量\" class=\"headerlink\" title=\"母串数量\"></a>母串数量</h4><p>给定$n$个文本串和$m$个模式串，询问每个模式串在多少个文本串中出现过。也就是说，在同一个文本串中出现多次只记一次。</p>\n<p>和上面一样，只不过是最后一步<code>col[i]</code>表示<code>sa[i]</code>的首字符所属的文本串的编号，对于每一个模式串，二分出区间后数一下颜色种类数。</p>\n<h3 id=\"课后习题\"><a href=\"#课后习题\" class=\"headerlink\" title=\"课后习题\"></a>课后习题</h3><p>自己找去吧（</p>\n<p>然后您就会发现字符串的题一道比一道神仙（</p>\n","site":{"data":{}},"excerpt":"<p>省选前最后两周。同时也是退役前最后两周。</p>\n<p><del>在wzx的鼓动下</del>开了字符串。</p>\n<p>然后自闭了。</p>","more":"<p>以下，我们约定，$S_{l,r}$表示字符串$S$下标为$[l,r]$的子串，下标从$1$开始。超过串长的部分用小于其他所有字符的空字符填充。</p>\n<h3 id=\"后缀排序\"><a href=\"#后缀排序\" class=\"headerlink\" title=\"后缀排序\"></a><a href=\"https://www.luogu.org/problemnew/show/P3809\">后缀排序</a></h3><p><del><code>std::sort</code>（光速逃</del></p>\n<p>不过<code>std::sort</code>也是可以做的（</p>\n<p>我们发现，这种做法的瓶颈在于比较两个后缀的大小。我们可以二分+Hash求出它们的最长公共前缀的长度，然后比较这个前缀后一个字符的大小。这么做的时间复杂度是$O(n\\log^{2}n)$的。</p>\n<p><del>但是没什么用（</del></p>\n<p>然后我们就需要用到后缀数组（Suffix Array）了。</p>\n<p>SA一共有四种构建方式，分别是$O(n\\log n)$的倍增，$O(n)$的DC3和SA-IS，以及$O(1)$的潮爷排序。<del>但是后三种太高端了我都不会（</del></p>\n<p>假设对于每一个位置$i$，我们已经按照$S_{i,i+k-1}$的大小排好了序，并且有了一个排名。我们以$i$的排名为第一关键字，$i+k$的排名为第二关键字，排一遍序，整个字符串就被按照$S_{i,i+2k-1}$的大小排好了序。当所有位置的排名都不同时，说明整个过程可以结束了。</p>\n<p><del>但是问题来了，排一遍序不是$O(n\\log n)$的吗（</del></p>\n<p><del>我们有基数排序啊（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// s[i]：原字符串</span></span><br><span class=\"line\"><span class=\"comment\">// fst[i]：后缀i的第一关键字</span></span><br><span class=\"line\"><span class=\"comment\">// snd[i]：第二关键字排名为i的后缀</span></span><br><span class=\"line\"><span class=\"comment\">// tak[i]：桶</span></span><br><span class=\"line\"><span class=\"comment\">// sa[i]：排名为i的后缀</span></span><br><span class=\"line\"><span class=\"comment\">// 一开始时以首字符为第一关键字，位置为第二关键字排序</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    ++tak[fst[i]=s[i]];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">122</span>;++i)</span><br><span class=\"line\">    tak[i]+=tak[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 处理桶内前缀和，用来求出第一关键字为i的后缀的最大可能排名</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">    sa[tak[fst[i]]--]=i;</span><br><span class=\"line\">    <span class=\"comment\">// 第一关键字相同时，第二关键字排名越大总排名越大，因此倒序枚举</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为第二关键字是位置，所以snd[i]=i</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> mx=<span class=\"number\">122</span>,k=<span class=\"number\">1</span>;;k&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n-k+<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        snd[++cnt]=i;</span><br><span class=\"line\">        <span class=\"comment\">// (n-k,n]的这些后缀没有第二关键字，因此排名最靠前</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sa[i]&gt;k)</span><br><span class=\"line\">            snd[++cnt]=sa[i]-k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mx;++i)</span><br><span class=\"line\">        tak[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        ++tak[fst[i]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=mx;++i)</span><br><span class=\"line\">        tak[i]+=tak[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        sa[tak[fst[snd[i]]]--]=snd[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        snd[i]=fst[i];</span><br><span class=\"line\">        <span class=\"comment\">// 因为要生成下一轮排序时的第一关键字，把fst里的信息先扔到snd里</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        fst[sa[i]]=fst[sa[i<span class=\"number\">-1</span>]]+(snd[sa[i]]!=snd[sa[i<span class=\"number\">-1</span>]]||snd[sa[i]+k]!=snd[sa[i<span class=\"number\">-1</span>]+k]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果当前后缀与前一个后缀相同则共用排名，否则+1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fst[sa[n]]==n)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        mx=fst[sa[n]];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看上去非常的绕（</p>\n<p>最后直接输出<code>sa</code>数组即可。</p>\n<h3 id=\"rnk数组\"><a href=\"#rnk数组\" class=\"headerlink\" title=\"rnk数组\"></a><code>rnk</code>数组</h3><p><code>rnk[i]</code>表示排名为$i$的后缀。</p>\n<p>不难发现<code>rnk[sa[i]]=sa[rnk[i]]=i</code>。</p>\n<h3 id=\"het数组\"><a href=\"#het数组\" class=\"headerlink\" title=\"het数组\"></a><code>het</code>数组</h3><p>大概算是SA的重点。</p>\n<p>令<code>lcp(x,y)</code>表示$x,y$两个后缀的最长公共前缀（Longest Common Prefix）的长度。</p>\n<p><code>het[i]</code>就被定义为<code>lcp(sa[i],sa[i-1])</code>。<code>het[1]=0</code>。</p>\n<p>不难发现<code>lcp(x,z)=min(lcp(x,y),lcp(y,z))(x&lt;y&lt;z)</code>，<code>lcp(x,y)=min{lcp(i,i-1)}=min{het[i]}(rnk[x]&lt;i&lt;=rnk[y])</code>。</p>\n<p><del>那么问题来了，怎么求呢（</del></p>\n<p>首先我们是肯定不能暴力枚举的。</p>\n<p>二分+Hash？太麻烦而且复杂度不够优秀（</p>\n<p>SA的<code>het</code>数组有一个性质，就是<code>het[rnk[i]]&gt;=het[rnk[i-1]]-1</code>。</p>\n<p>我们只考虑<code>het[rnk[i-1]]&gt;0</code>时的情况。</p>\n<p>令<code>k=sa[rnk[i-1]-1]</code>，<code>lcp(i-1,k)=het[rnk[i-1]]</code>，又因为后缀$i$是后缀$i-1$删去首字符得到的，后缀$k+1$是后缀$k$删去首字符得到的，从而<code>lcp(i,k+1)=het[rnk[i-1]]-1</code>。</p>\n<p>后缀$i-1$比后缀$k$大，删去首字符后，后缀$i$肯定也比后缀$k+1$大。根据<code>lcp</code>的性质我们有<code>lcp(i,sa[rnk[i]-1])&gt;=lcp(i,k+1)</code>，也即<code>het[rnk[i]]&gt;=het[rnk[i-1]]-1</code>。</p>\n<p>利用这个性质，我们就可以在$O(n)$的时间复杂度内求出<code>het</code>数组了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rnk[i]&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        j-=!!j;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> pos=sa[rnk[i]<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;i+j&lt;=n&amp;&amp;pos+j&lt;=n&amp;&amp;s[i+j]==s[pos+j];++j);</span><br><span class=\"line\">        het[rnk[i]]=j;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>然后SA就彻底建好了。没错就这么点东西（</p>\n<h3 id=\"板子应用\"><a href=\"#板子应用\" class=\"headerlink\" title=\"板子应用\"></a><del>板子</del>应用</h3><h4 id=\"不同子串个数\"><a href=\"#不同子串个数\" class=\"headerlink\" title=\"不同子串个数\"></a>不同子串个数</h4><p>给定一个长度为$n$的字符串$S$，求其本质不同的子串的数量。</p>\n<p>首先有一个很显然的结论是，如果一个字符串是$S$的子串，那么它一定是$S$的若干个排名连续的后缀的公共前缀。</p>\n<p>对于排名为$1$和排名为$2$的两个后缀来说，它们一共有<code>het[2]</code>个公共前缀；排名为$2$和排名为$3$的两个后缀一共有<code>het[3]</code>个公共前缀……</p>\n<p>因此，$S$的不同子串个数就是它的所有子串个数，$\\cfrac{n(n+1)}{2}$，减去所有<code>het</code>的和。</p>\n<h4 id=\"最长公共子串\"><a href=\"#最长公共子串\" class=\"headerlink\" title=\"最长公共子串\"></a>最长公共子串</h4><p>给定$n$个字符串$S_{1},S_{2},\\cdots,S_{n}$，求它们的最长公共子串。</p>\n<p>我们首先将这$n$个串拼在一起，中间插入特殊字符将相邻的两个串隔开。然后我们将每个串内部的字符染色，第$1$个串染成颜色$1$，第$2$个串染成颜色$2$，用尺取法找出<code>sa[l],sa[l+1],...,sa[r]</code>覆盖全部$n$种颜色的区间$[l,r]$，求出其中<code>min{het[i]}(l&lt;i&lt;=r)</code>的最大值即可。</p>\n<h4 id=\"模式串出现次数\"><a href=\"#模式串出现次数\" class=\"headerlink\" title=\"模式串出现次数\"></a>模式串出现次数</h4><p>给定$n$个文本串和$m$个模式串，询问每个模式串在$n$个文本串中一共出现了多少次。</p>\n<p>首先将所有文本串拼在一起。对于每一个模式串，如果我们能够找到这个长串的任意一个后缀$x$，使得其拥有这个模式串作为前缀，然后找到一个最小的$l$和一个最大的$r$，使得<code>min{het[i]}(l&lt;i&lt;=rnk[x])</code>和<code>min{het[i]}(rnk[x]&lt;i&lt;=r)</code>均大于等于该模式串长度，$r-l+1$就是答案。不难看出向两边取$\\min$这个操作具有单调性，因此我们可以二分。</p>\n<p>但是问题来了，我们该怎么找到这个后缀啊。</p>\n<p>一想，把模式串也接到文本串后就可以了。</p>\n<p>那如果说模式串出现了互相包含的情况呢？</p>\n<p>我们可以再开一个数组<code>col</code>，<code>col[i]</code>表示<code>sa[i]</code>的首字符是否属于一个文本串。因为这个是静态的，直接一遍前缀和就行。</p>\n<h4 id=\"母串数量\"><a href=\"#母串数量\" class=\"headerlink\" title=\"母串数量\"></a>母串数量</h4><p>给定$n$个文本串和$m$个模式串，询问每个模式串在多少个文本串中出现过。也就是说，在同一个文本串中出现多次只记一次。</p>\n<p>和上面一样，只不过是最后一步<code>col[i]</code>表示<code>sa[i]</code>的首字符所属的文本串的编号，对于每一个模式串，二分出区间后数一下颜色种类数。</p>\n<h3 id=\"课后习题\"><a href=\"#课后习题\" class=\"headerlink\" title=\"课后习题\"></a>课后习题</h3><p>自己找去吧（</p>\n<p>然后您就会发现字符串的题一道比一道神仙（</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-31T01:33:49.000Z","title":"伯努利数失败笔记","password":null,"_content":"> 「クールでまばゆいばかりのアルゴリズムを学ばないでください、それはうまく検索することが最も重要です。」\n>\n> ——loli\n\n~~以上，我失败了（~~\n\n[前半部分的抄袭来源](https://www.luogu.org/blog/ShadowassIIXVIIIIV/guan-yu-bo-nu-li-shuo-zhuai-hua-zi-ran-shuo-mi-hu-gong-shi-di-zheng-mi)。\n\n<!-- more -->\n\n### 定义\n\n伯努利数$B_{n}$具有如下性质：\n\n$$\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]$$\n\n### 自然数幂和\n\n我们定义\n\n$$S(n,k)=\\sum_{i=0}^{n-1}i^{k}$$\n\n$$T(n,k)=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}$$\n\n我们希望证明$S(n,k)=T(n,k)$。\n\n在这里，我们采用一种名为「强归纳法」（或者「完全归纳法」）的方法。具体来说，假设我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，利用这个结论推出$S(n,k)=T(n,k)$成立。\n\n当$k=0$时\n\n$$S(n,k)=n$$\n\n$$T(n,k)=C_{1}^{0}B_{0}n$$\n\n因为我们有\n\n$$C_{1}^{0}B_{0}=[0=0]=1$$\n\n从而$S(n,k)=T(n,k)$成立。\n\n当$k\\gt 0$时\n\n$$S(n,k+1)=\\sum_{i=0}^{n-1}i^{k+1}$$\n\n$$\\begin{aligned}\nS(n,k+1)+n^{k+1}&=\\sum_{i=0}^{n-1}(i+1)^{k+1}\\\\\n&=\\sum_{i=0}^{n-1}\\sum_{j=0}^{k+1}C_{k+1}^{j}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}\\sum_{i=0}^{n-1}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)+C_{k+1}^{k+1}S(n,k+1)\n\\end{aligned}$$\n\n注意到$C_{k+1}^{k+1}=1$，我们就能得到\n\n$$n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)$$\n\n因为我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，我们就可以将上式进一步变形\n\n$$\\begin{aligned}\nn^{k+1}&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)+C_{k+1}^{k}T(n,k)-C_{k+1}^{k}T(n,k)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)-C_{k+1}^{k}T(n,k)\n\\end{aligned}$$\n\n接下来，如果我们能够证明\n\n$$n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)$$\n\n自然就能得出$S(n,k)=T(n,k)$。\n\n愉快地推式子\n\n$$\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i}B_{i}n^{j-i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i+1}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}\\cfrac{j+1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{j}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{i}C_{k-i+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\n\\end{aligned}$$\n\n上面的第二个等号是将后面的那个$\\sum$倒过来（$i\\rightarrow j-i$）求和。\n\n~~返回本页面最上端之后，~~我们回想起伯努利数还有个这么个性质\n\n$$\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]$$\n\n于是\n\n$$\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}[i=k]\\\\\n&=\\cfrac{1}{k+1}C_{k+1}^{k}n^{k+1}\\\\\n&=n^{k+1}\n\\end{aligned}$$\n\n$$\\text{QED}$$\n\n### 诶刚才我干了些什么来着\n\n哦我好像是证明了这么一个东西\n\n$$\\sum_{i=0}^{n-1}i^{k}=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}$$\n\n### 如何求伯努利数\n\n~~根据题解，~~我们知道伯努利数的生成函数是\n\n$$\\cfrac{x}{e^{x}-1}=\\cfrac{x}{\\sum\\limits_{i=1}^{+\\infty}\\cfrac{x^{i}}{i!}}=\\cfrac{1}{\\sum\\limits_{i=0}^{+\\infty}\\cfrac{x^{i}}{(i+1)!}}$$\n\n### 例题\n\n#### [「Luogu-P3711」仓鼠的数学题](https://www.luogu.org/problemnew/show/P3711)\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x-1}j^{i}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{j}B_{j}x^{i-j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{i-j}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}\\cfrac{(i+1)!}{(i-j)!(j+1)!}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}i!a_{i}\\sum_{j=0}^{i}\\cfrac{1}{(j+1)!}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\n\\end{aligned}$$\n\n定义\n\n$$F(x)=\\sum_{i=0}^{n}(n-i)!a_{n-i}x^{i}$$\n\n$$B(x)=\\sum_{i=0}^{n}\\cfrac{B_{i}}{i!}x^{i}$$\n\n那么\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{FB[n-j]}{(j+1)!}x^{j+1}\n\\end{aligned}$$\n","source":"_posts/2019-03-31-bernoulli-number-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-31 09:33:49\ntitle: 伯努利数失败笔记\ntags:\n  - 数论\n  - 伯努利数\ncategories:\n  - 学习笔记\npassword:\n---\n> 「クールでまばゆいばかりのアルゴリズムを学ばないでください、それはうまく検索することが最も重要です。」\n>\n> ——loli\n\n~~以上，我失败了（~~\n\n[前半部分的抄袭来源](https://www.luogu.org/blog/ShadowassIIXVIIIIV/guan-yu-bo-nu-li-shuo-zhuai-hua-zi-ran-shuo-mi-hu-gong-shi-di-zheng-mi)。\n\n<!-- more -->\n\n### 定义\n\n伯努利数$B_{n}$具有如下性质：\n\n$$\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]$$\n\n### 自然数幂和\n\n我们定义\n\n$$S(n,k)=\\sum_{i=0}^{n-1}i^{k}$$\n\n$$T(n,k)=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}$$\n\n我们希望证明$S(n,k)=T(n,k)$。\n\n在这里，我们采用一种名为「强归纳法」（或者「完全归纳法」）的方法。具体来说，假设我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，利用这个结论推出$S(n,k)=T(n,k)$成立。\n\n当$k=0$时\n\n$$S(n,k)=n$$\n\n$$T(n,k)=C_{1}^{0}B_{0}n$$\n\n因为我们有\n\n$$C_{1}^{0}B_{0}=[0=0]=1$$\n\n从而$S(n,k)=T(n,k)$成立。\n\n当$k\\gt 0$时\n\n$$S(n,k+1)=\\sum_{i=0}^{n-1}i^{k+1}$$\n\n$$\\begin{aligned}\nS(n,k+1)+n^{k+1}&=\\sum_{i=0}^{n-1}(i+1)^{k+1}\\\\\n&=\\sum_{i=0}^{n-1}\\sum_{j=0}^{k+1}C_{k+1}^{j}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}\\sum_{i=0}^{n-1}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)+C_{k+1}^{k+1}S(n,k+1)\n\\end{aligned}$$\n\n注意到$C_{k+1}^{k+1}=1$，我们就能得到\n\n$$n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)$$\n\n因为我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，我们就可以将上式进一步变形\n\n$$\\begin{aligned}\nn^{k+1}&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)+C_{k+1}^{k}T(n,k)-C_{k+1}^{k}T(n,k)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)-C_{k+1}^{k}T(n,k)\n\\end{aligned}$$\n\n接下来，如果我们能够证明\n\n$$n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)$$\n\n自然就能得出$S(n,k)=T(n,k)$。\n\n愉快地推式子\n\n$$\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i}B_{i}n^{j-i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i+1}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}\\cfrac{j+1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{j}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{i}C_{k-i+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\n\\end{aligned}$$\n\n上面的第二个等号是将后面的那个$\\sum$倒过来（$i\\rightarrow j-i$）求和。\n\n~~返回本页面最上端之后，~~我们回想起伯努利数还有个这么个性质\n\n$$\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]$$\n\n于是\n\n$$\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}[i=k]\\\\\n&=\\cfrac{1}{k+1}C_{k+1}^{k}n^{k+1}\\\\\n&=n^{k+1}\n\\end{aligned}$$\n\n$$\\text{QED}$$\n\n### 诶刚才我干了些什么来着\n\n哦我好像是证明了这么一个东西\n\n$$\\sum_{i=0}^{n-1}i^{k}=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}$$\n\n### 如何求伯努利数\n\n~~根据题解，~~我们知道伯努利数的生成函数是\n\n$$\\cfrac{x}{e^{x}-1}=\\cfrac{x}{\\sum\\limits_{i=1}^{+\\infty}\\cfrac{x^{i}}{i!}}=\\cfrac{1}{\\sum\\limits_{i=0}^{+\\infty}\\cfrac{x^{i}}{(i+1)!}}$$\n\n### 例题\n\n#### [「Luogu-P3711」仓鼠的数学题](https://www.luogu.org/problemnew/show/P3711)\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x-1}j^{i}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{j}B_{j}x^{i-j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{i-j}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}\\cfrac{(i+1)!}{(i-j)!(j+1)!}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}i!a_{i}\\sum_{j=0}^{i}\\cfrac{1}{(j+1)!}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\n\\end{aligned}$$\n\n定义\n\n$$F(x)=\\sum_{i=0}^{n}(n-i)!a_{n-i}x^{i}$$\n\n$$B(x)=\\sum_{i=0}^{n}\\cfrac{B_{i}}{i!}x^{i}$$\n\n那么\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{FB[n-j]}{(j+1)!}x^{j+1}\n\\end{aligned}$$\n","slug":"bernoulli-number-learning-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0j001rmku9gyca0ur4","content":"<blockquote>\n<p>「クールでまばゆいばかりのアルゴリズムを学ばないでください、それはうまく検索することが最も重要です。」</p>\n<p>——loli</p>\n</blockquote>\n<p><del>以上，我失败了（</del></p>\n<p><a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/guan-yu-bo-nu-li-shuo-zhuai-hua-zi-ran-shuo-mi-hu-gong-shi-di-zheng-mi\">前半部分的抄袭来源</a>。</p>\n<a id=\"more\"></a>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>伯努利数$B_{n}$具有如下性质：</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]</script><h3 id=\"自然数幂和\"><a href=\"#自然数幂和\" class=\"headerlink\" title=\"自然数幂和\"></a>自然数幂和</h3><p>我们定义</p>\n<script type=\"math/tex; mode=display\">S(n,k)=\\sum_{i=0}^{n-1}i^{k}</script><script type=\"math/tex; mode=display\">T(n,k)=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}</script><p>我们希望证明$S(n,k)=T(n,k)$。</p>\n<p>在这里，我们采用一种名为「强归纳法」（或者「完全归纳法」）的方法。具体来说，假设我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，利用这个结论推出$S(n,k)=T(n,k)$成立。</p>\n<p>当$k=0$时</p>\n<script type=\"math/tex; mode=display\">S(n,k)=n</script><script type=\"math/tex; mode=display\">T(n,k)=C_{1}^{0}B_{0}n</script><p>因为我们有</p>\n<script type=\"math/tex; mode=display\">C_{1}^{0}B_{0}=[0=0]=1</script><p>从而$S(n,k)=T(n,k)$成立。</p>\n<p>当$k\\gt 0$时</p>\n<script type=\"math/tex; mode=display\">S(n,k+1)=\\sum_{i=0}^{n-1}i^{k+1}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nS(n,k+1)+n^{k+1}&=\\sum_{i=0}^{n-1}(i+1)^{k+1}\\\\\n&=\\sum_{i=0}^{n-1}\\sum_{j=0}^{k+1}C_{k+1}^{j}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}\\sum_{i=0}^{n-1}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)+C_{k+1}^{k+1}S(n,k+1)\n\\end{aligned}</script><p>注意到$C_{k+1}^{k+1}=1$，我们就能得到</p>\n<script type=\"math/tex; mode=display\">n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)</script><p>因为我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，我们就可以将上式进一步变形</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nn^{k+1}&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)+C_{k+1}^{k}T(n,k)-C_{k+1}^{k}T(n,k)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)-C_{k+1}^{k}T(n,k)\n\\end{aligned}</script><p>接下来，如果我们能够证明</p>\n<script type=\"math/tex; mode=display\">n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)</script><p>自然就能得出$S(n,k)=T(n,k)$。</p>\n<p>愉快地推式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i}B_{i}n^{j-i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i+1}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}\\cfrac{j+1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{j}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{i}C_{k-i+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\n\\end{aligned}</script><p>上面的第二个等号是将后面的那个$\\sum$倒过来（$i\\rightarrow j-i$）求和。</p>\n<p><del>返回本页面最上端之后，</del>我们回想起伯努利数还有个这么个性质</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}[i=k]\\\\\n&=\\cfrac{1}{k+1}C_{k+1}^{k}n^{k+1}\\\\\n&=n^{k+1}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\text{QED}</script><h3 id=\"诶刚才我干了些什么来着\"><a href=\"#诶刚才我干了些什么来着\" class=\"headerlink\" title=\"诶刚才我干了些什么来着\"></a>诶刚才我干了些什么来着</h3><p>哦我好像是证明了这么一个东西</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n-1}i^{k}=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}</script><h3 id=\"如何求伯努利数\"><a href=\"#如何求伯努利数\" class=\"headerlink\" title=\"如何求伯努利数\"></a>如何求伯努利数</h3><p><del>根据题解，</del>我们知道伯努利数的生成函数是</p>\n<script type=\"math/tex; mode=display\">\\cfrac{x}{e^{x}-1}=\\cfrac{x}{\\sum\\limits_{i=1}^{+\\infty}\\cfrac{x^{i}}{i!}}=\\cfrac{1}{\\sum\\limits_{i=0}^{+\\infty}\\cfrac{x^{i}}{(i+1)!}}</script><h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><h4 id=\"「Luogu-P3711」仓鼠的数学题\"><a href=\"#「Luogu-P3711」仓鼠的数学题\" class=\"headerlink\" title=\"「Luogu-P3711」仓鼠的数学题\"></a><a href=\"https://www.luogu.org/problemnew/show/P3711\">「Luogu-P3711」仓鼠的数学题</a></h4><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x-1}j^{i}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{j}B_{j}x^{i-j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{i-j}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}\\cfrac{(i+1)!}{(i-j)!(j+1)!}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}i!a_{i}\\sum_{j=0}^{i}\\cfrac{1}{(j+1)!}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\n\\end{aligned}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum_{i=0}^{n}(n-i)!a_{n-i}x^{i}</script><script type=\"math/tex; mode=display\">B(x)=\\sum_{i=0}^{n}\\cfrac{B_{i}}{i!}x^{i}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{FB[n-j]}{(j+1)!}x^{j+1}\n\\end{aligned}</script>","site":{"data":{}},"excerpt":"<blockquote>\n<p>「クールでまばゆいばかりのアルゴリズムを学ばないでください、それはうまく検索することが最も重要です。」</p>\n<p>——loli</p>\n</blockquote>\n<p><del>以上，我失败了（</del></p>\n<p><a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/guan-yu-bo-nu-li-shuo-zhuai-hua-zi-ran-shuo-mi-hu-gong-shi-di-zheng-mi\">前半部分的抄袭来源</a>。</p>","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>伯努利数$B_{n}$具有如下性质：</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]</script><h3 id=\"自然数幂和\"><a href=\"#自然数幂和\" class=\"headerlink\" title=\"自然数幂和\"></a>自然数幂和</h3><p>我们定义</p>\n<script type=\"math/tex; mode=display\">S(n,k)=\\sum_{i=0}^{n-1}i^{k}</script><script type=\"math/tex; mode=display\">T(n,k)=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}</script><p>我们希望证明$S(n,k)=T(n,k)$。</p>\n<p>在这里，我们采用一种名为「强归纳法」（或者「完全归纳法」）的方法。具体来说，假设我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，利用这个结论推出$S(n,k)=T(n,k)$成立。</p>\n<p>当$k=0$时</p>\n<script type=\"math/tex; mode=display\">S(n,k)=n</script><script type=\"math/tex; mode=display\">T(n,k)=C_{1}^{0}B_{0}n</script><p>因为我们有</p>\n<script type=\"math/tex; mode=display\">C_{1}^{0}B_{0}=[0=0]=1</script><p>从而$S(n,k)=T(n,k)$成立。</p>\n<p>当$k\\gt 0$时</p>\n<script type=\"math/tex; mode=display\">S(n,k+1)=\\sum_{i=0}^{n-1}i^{k+1}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nS(n,k+1)+n^{k+1}&=\\sum_{i=0}^{n-1}(i+1)^{k+1}\\\\\n&=\\sum_{i=0}^{n-1}\\sum_{j=0}^{k+1}C_{k+1}^{j}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}\\sum_{i=0}^{n-1}i^{j}\\\\\n&=\\sum_{j=0}^{k+1}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)+C_{k+1}^{k+1}S(n,k+1)\n\\end{aligned}</script><p>注意到$C_{k+1}^{k+1}=1$，我们就能得到</p>\n<script type=\"math/tex; mode=display\">n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)</script><p>因为我们已经对于任意的$0\\leqslant j\\lt k$，证明了$S(n,j)=T(n,j)$成立，我们就可以将上式进一步变形</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nn^{k+1}&=\\sum_{j=0}^{k}C_{k+1}^{j}S(n,j)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)\\\\\n&=\\sum_{j=0}^{k-1}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)+C_{k+1}^{k}T(n,k)-C_{k+1}^{k}T(n,k)\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)+C_{k+1}^{k}S(n,k)-C_{k+1}^{k}T(n,k)\n\\end{aligned}</script><p>接下来，如果我们能够证明</p>\n<script type=\"math/tex; mode=display\">n^{k+1}=\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)</script><p>自然就能得出$S(n,k)=T(n,k)$。</p>\n<p>愉快地推式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i}B_{i}n^{j-i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}C_{j+1}^{i+1}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\cfrac{1}{j+1}\\sum_{i=0}^{j}\\cfrac{j+1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{j=0}^{k}C_{k+1}^{j}\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{j}C_{j}^{i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}\\sum_{j=i}^{k}C_{k+1}^{i}C_{k-i+1}^{j-i}B_{j-i}n^{i+1}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\n\\end{aligned}</script><p>上面的第二个等号是将后面的那个$\\sum$倒过来（$i\\rightarrow j-i$）求和。</p>\n<p><del>返回本页面最上端之后，</del>我们回想起伯努利数还有个这么个性质</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}C_{n+1}^{i}B_{i}=[n=0]</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{j=0}^{k}C_{k+1}^{j}T(n,j)&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}\\sum_{j=0}^{k-i}C_{k-i+1}^{j}B_{j}\\\\\n&=\\sum_{i=0}^{j}\\cfrac{1}{i+1}C_{k+1}^{i}n^{i+1}[i=k]\\\\\n&=\\cfrac{1}{k+1}C_{k+1}^{k}n^{k+1}\\\\\n&=n^{k+1}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\text{QED}</script><h3 id=\"诶刚才我干了些什么来着\"><a href=\"#诶刚才我干了些什么来着\" class=\"headerlink\" title=\"诶刚才我干了些什么来着\"></a>诶刚才我干了些什么来着</h3><p>哦我好像是证明了这么一个东西</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n-1}i^{k}=\\cfrac{1}{k+1}\\sum_{i=0}^{k}C_{k+1}^{i}B_{i}n^{k-i+1}</script><h3 id=\"如何求伯努利数\"><a href=\"#如何求伯努利数\" class=\"headerlink\" title=\"如何求伯努利数\"></a>如何求伯努利数</h3><p><del>根据题解，</del>我们知道伯努利数的生成函数是</p>\n<script type=\"math/tex; mode=display\">\\cfrac{x}{e^{x}-1}=\\cfrac{x}{\\sum\\limits_{i=1}^{+\\infty}\\cfrac{x^{i}}{i!}}=\\cfrac{1}{\\sum\\limits_{i=0}^{+\\infty}\\cfrac{x^{i}}{(i+1)!}}</script><h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><h4 id=\"「Luogu-P3711」仓鼠的数学题\"><a href=\"#「Luogu-P3711」仓鼠的数学题\" class=\"headerlink\" title=\"「Luogu-P3711」仓鼠的数学题\"></a><a href=\"https://www.luogu.org/problemnew/show/P3711\">「Luogu-P3711」仓鼠的数学题</a></h4><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x-1}j^{i}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{j}B_{j}x^{i-j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}C_{i+1}^{i-j}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}\\cfrac{a_{i}}{i+1}\\sum_{j=0}^{i}\\cfrac{(i+1)!}{(i-j)!(j+1)!}B_{i-j}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{i=0}^{n}i!a_{i}\\sum_{j=0}^{i}\\cfrac{1}{(j+1)!}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\n\\end{aligned}</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum_{i=0}^{n}(n-i)!a_{n-i}x^{i}</script><script type=\"math/tex; mode=display\">B(x)=\\sum_{i=0}^{n}\\cfrac{B_{i}}{i!}x^{i}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n}a_{i}\\sum_{j=0}^{x}j^{i}&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{1}{(j+1)!}\\sum_{i=j}^{n}i!a_{i}\\cfrac{B_{i-j}}{(i-j)!}x^{j+1}\\\\\n&=\\sum_{i=0}^{n}a_{i}x^{i}+\\sum_{j=0}^{n}\\cfrac{FB[n-j]}{(j+1)!}x^{j+1}\n\\end{aligned}</script>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-09T00:31:53.000Z","title":"「SDOI2019R1游记」僕らは泥を這いつくばるもの","password":null,"_content":"被强大无比且随手吊打我的shzr催更了，于是诚惶诚恐赶来写这篇游记。\n\n<!-- more -->\n\n### Day -X\n\n经过讨论，我们机房研究出了以下两个堪称完美的战术，若能施加实际行动，定能令SLYZ省选大获全胜：\n\n1. 让潮子分身，在每一位dalao（如rqy、ckw等）身边分别派一个，然后潮他们，他们就炸了。\n2. 让潮子在厕所蹲着，每看到有选手上厕所，等他上到一半跑到他背后，潮之曰「你稳了」，他就炸了。\n\n~~这都什么鬼东西（~~\n\n### Day -2\n\n「省选快到了，我想回家休息休息。」\n\n像这样理直气壮地请假回家颓废了。\n\n### Day 0\n\n#### 下午\n\n12：30从学校坐车走，等到了济南已经是大概16：00了。\n\n到了宾馆loli让我们自由组合。然后mhr学长主动邀请我住一个房间。\n\n我直接就答应了。\n\n#### 晚上\n\n晚上出去吃饭的时候，潮子一直在潮。\n\n就比如说钦定wzx的SAM没有了A，只剩下了一些奇怪的东西一道题都A不动了。\n\n可惜绝大部分名言已经失传了。\n\n这可真是糟糕，OI文学界的一大损失啊。\n\n### Day 1\n\n就算没有解压密码也是可以看压缩包内部的文件有哪些的。\n\n然后就看到了T3有16个样例有点方。\n\n解压密码直接一坨乱码。龙虾选手表示解压体验(?)极差。\n\n#### [T1](https://www.luogu.org/problemnew/show/P5283)\n\n诶怎么感觉有点像超级钢琴啊。\n\n但是因为我超级钢琴只会ST表+堆，想了想发现这题不能这么做。\n\n好吧，暴力60分先安排上。\n\n出了考场发现人均A掉T1。\n\n#### [T2](https://www.luogu.org/problemnew/show/P5284)\n\n字符串（\n\n不难想到这么一个做法：对于这$n_{a}+n_{b}$个串每一个建一个点，如果$A$类串$x$支配$B$类串$y$，或者$B$类串$x$是$A$类串$y$的前缀，从$x$向$y$连边。最后整张图有环就是$-1$，没有D个P就出来了。\n\n然后暴力建图。莫名其妙能有60分。\n\n#### [T3](https://www.luogu.org/problemnew/show/P5285)\n\n写作传统题读作提交答案题。\n\n考场上只想出来了`1_998244353`的12分。\n\n然后出考场被各路dalao吊打。\n\n关于测试点8-16，一开始我的想法是给出两个数$x,y$，有一个长度为$x$的区间从左向右扫过$[1,y]$这个区间。\n\n但实际上是$[x,y]$这个区间内每个数的性质。想到这一点后面的一些数据范围比较小的点就没啥问题了。\n\n但是数据范围比较大的点怎么办？\n\n打一些比较小的表（\n\n标程70KB了一下。\n\n#### 下午\n\n首先是讲评。\n\n没有抢到座位于是只能站着。\n\n因为非常吵什么也听不清。\n\n印象比较深的是讲到T3突然一阵掌声。\n\n然后回到宾馆快乐地颓废。\n\n#### 晚上\n\n集体不想出去吃于是点了肯德基，然后……诶诶诶你们什么时候吃完的太快了吧（\n\n### Day 2\n\n#### [T1](https://www.luogu.org/problemnew/show/P5289)\n\n看到题目名我还以为是网络流。\n\n然后我就在想有没有网络流计数这种操作。\n\n大概是没有吧。\n\n打了个爆搜结果还炸了。\n\n#### [T2](https://www.luogu.org/problemnew/show/P5290)\n\n看上去好神仙啊。\n\n考场上写了45分的状压枚举子集。\n\n结果一出考场听说人均75，就我不会链的贪心和$O(n^{2})$的做法，自毙了。\n\n#### [T3](https://www.luogu.org/problemnew/show/P5291)\n\n想写一写$L=n$或$k=1$的情况。\n\n到最后发现什么也不会，只想到了$L=n$__且__$k=1$的情况。喜提8分。\n\n但是最后测出来好像是12分来着？没仔细看。\n\n#### 下午\n\n因为有人要回去所以讲评提前了半小时。\n\n虽然说抢到了一个座位可是今天比昨天还吵真的什么也听不见了。\n\nT3标程887行了解一下（\n\n![](/images/TIM图片20190409113807.jpg)\n\n结果接我们回东营的车咕了大概有一个多小时吧，最后得有20：30才到家。\n\n#### 晚上\n\n当然是回家……啊什么明天就正常上课啦？咕了！\n\n### 总结\n\n最后60+60+12+0+45+12=189。\n\n随便抓只猴子就比我考的高/kk\n","source":"_posts/2019-04-09-sdoi2019r1-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-09 08:31:53\ntitle: 「SDOI2019R1游记」僕らは泥を這いつくばるもの\ntags:\n  - SDOI\n  - 2019\ncategories:\n  - 游记\npassword:\n---\n被强大无比且随手吊打我的shzr催更了，于是诚惶诚恐赶来写这篇游记。\n\n<!-- more -->\n\n### Day -X\n\n经过讨论，我们机房研究出了以下两个堪称完美的战术，若能施加实际行动，定能令SLYZ省选大获全胜：\n\n1. 让潮子分身，在每一位dalao（如rqy、ckw等）身边分别派一个，然后潮他们，他们就炸了。\n2. 让潮子在厕所蹲着，每看到有选手上厕所，等他上到一半跑到他背后，潮之曰「你稳了」，他就炸了。\n\n~~这都什么鬼东西（~~\n\n### Day -2\n\n「省选快到了，我想回家休息休息。」\n\n像这样理直气壮地请假回家颓废了。\n\n### Day 0\n\n#### 下午\n\n12：30从学校坐车走，等到了济南已经是大概16：00了。\n\n到了宾馆loli让我们自由组合。然后mhr学长主动邀请我住一个房间。\n\n我直接就答应了。\n\n#### 晚上\n\n晚上出去吃饭的时候，潮子一直在潮。\n\n就比如说钦定wzx的SAM没有了A，只剩下了一些奇怪的东西一道题都A不动了。\n\n可惜绝大部分名言已经失传了。\n\n这可真是糟糕，OI文学界的一大损失啊。\n\n### Day 1\n\n就算没有解压密码也是可以看压缩包内部的文件有哪些的。\n\n然后就看到了T3有16个样例有点方。\n\n解压密码直接一坨乱码。龙虾选手表示解压体验(?)极差。\n\n#### [T1](https://www.luogu.org/problemnew/show/P5283)\n\n诶怎么感觉有点像超级钢琴啊。\n\n但是因为我超级钢琴只会ST表+堆，想了想发现这题不能这么做。\n\n好吧，暴力60分先安排上。\n\n出了考场发现人均A掉T1。\n\n#### [T2](https://www.luogu.org/problemnew/show/P5284)\n\n字符串（\n\n不难想到这么一个做法：对于这$n_{a}+n_{b}$个串每一个建一个点，如果$A$类串$x$支配$B$类串$y$，或者$B$类串$x$是$A$类串$y$的前缀，从$x$向$y$连边。最后整张图有环就是$-1$，没有D个P就出来了。\n\n然后暴力建图。莫名其妙能有60分。\n\n#### [T3](https://www.luogu.org/problemnew/show/P5285)\n\n写作传统题读作提交答案题。\n\n考场上只想出来了`1_998244353`的12分。\n\n然后出考场被各路dalao吊打。\n\n关于测试点8-16，一开始我的想法是给出两个数$x,y$，有一个长度为$x$的区间从左向右扫过$[1,y]$这个区间。\n\n但实际上是$[x,y]$这个区间内每个数的性质。想到这一点后面的一些数据范围比较小的点就没啥问题了。\n\n但是数据范围比较大的点怎么办？\n\n打一些比较小的表（\n\n标程70KB了一下。\n\n#### 下午\n\n首先是讲评。\n\n没有抢到座位于是只能站着。\n\n因为非常吵什么也听不清。\n\n印象比较深的是讲到T3突然一阵掌声。\n\n然后回到宾馆快乐地颓废。\n\n#### 晚上\n\n集体不想出去吃于是点了肯德基，然后……诶诶诶你们什么时候吃完的太快了吧（\n\n### Day 2\n\n#### [T1](https://www.luogu.org/problemnew/show/P5289)\n\n看到题目名我还以为是网络流。\n\n然后我就在想有没有网络流计数这种操作。\n\n大概是没有吧。\n\n打了个爆搜结果还炸了。\n\n#### [T2](https://www.luogu.org/problemnew/show/P5290)\n\n看上去好神仙啊。\n\n考场上写了45分的状压枚举子集。\n\n结果一出考场听说人均75，就我不会链的贪心和$O(n^{2})$的做法，自毙了。\n\n#### [T3](https://www.luogu.org/problemnew/show/P5291)\n\n想写一写$L=n$或$k=1$的情况。\n\n到最后发现什么也不会，只想到了$L=n$__且__$k=1$的情况。喜提8分。\n\n但是最后测出来好像是12分来着？没仔细看。\n\n#### 下午\n\n因为有人要回去所以讲评提前了半小时。\n\n虽然说抢到了一个座位可是今天比昨天还吵真的什么也听不见了。\n\nT3标程887行了解一下（\n\n![](/images/TIM图片20190409113807.jpg)\n\n结果接我们回东营的车咕了大概有一个多小时吧，最后得有20：30才到家。\n\n#### 晚上\n\n当然是回家……啊什么明天就正常上课啦？咕了！\n\n### 总结\n\n最后60+60+12+0+45+12=189。\n\n随便抓只猴子就比我考的高/kk\n","slug":"sdoi2019r1-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0k001tmku9bxpef9zx","content":"<p>被强大无比且随手吊打我的shzr催更了，于是诚惶诚恐赶来写这篇游记。</p>\n<a id=\"more\"></a>\n<h3 id=\"Day-X\"><a href=\"#Day-X\" class=\"headerlink\" title=\"Day -X\"></a>Day -X</h3><p>经过讨论，我们机房研究出了以下两个堪称完美的战术，若能施加实际行动，定能令SLYZ省选大获全胜：</p>\n<ol>\n<li>让潮子分身，在每一位dalao（如rqy、ckw等）身边分别派一个，然后潮他们，他们就炸了。</li>\n<li>让潮子在厕所蹲着，每看到有选手上厕所，等他上到一半跑到他背后，潮之曰「你稳了」，他就炸了。</li>\n</ol>\n<p><del>这都什么鬼东西（</del></p>\n<h3 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day -2\"></a>Day -2</h3><p>「省选快到了，我想回家休息休息。」</p>\n<p>像这样理直气壮地请假回家颓废了。</p>\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3><h4 id=\"下午\"><a href=\"#下午\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>12：30从学校坐车走，等到了济南已经是大概16：00了。</p>\n<p>到了宾馆loli让我们自由组合。然后mhr学长主动邀请我住一个房间。</p>\n<p>我直接就答应了。</p>\n<h4 id=\"晚上\"><a href=\"#晚上\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>晚上出去吃饭的时候，潮子一直在潮。</p>\n<p>就比如说钦定wzx的SAM没有了A，只剩下了一些奇怪的东西一道题都A不动了。</p>\n<p>可惜绝大部分名言已经失传了。</p>\n<p>这可真是糟糕，OI文学界的一大损失啊。</p>\n<h3 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h3><p>就算没有解压密码也是可以看压缩包内部的文件有哪些的。</p>\n<p>然后就看到了T3有16个样例有点方。</p>\n<p>解压密码直接一坨乱码。龙虾选手表示解压体验(?)极差。</p>\n<h4 id=\"T1\"><a href=\"#T1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5283\">T1</a></h4><p>诶怎么感觉有点像超级钢琴啊。</p>\n<p>但是因为我超级钢琴只会ST表+堆，想了想发现这题不能这么做。</p>\n<p>好吧，暴力60分先安排上。</p>\n<p>出了考场发现人均A掉T1。</p>\n<h4 id=\"T2\"><a href=\"#T2\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5284\">T2</a></h4><p>字符串（</p>\n<p>不难想到这么一个做法：对于这$n_{a}+n_{b}$个串每一个建一个点，如果$A$类串$x$支配$B$类串$y$，或者$B$类串$x$是$A$类串$y$的前缀，从$x$向$y$连边。最后整张图有环就是$-1$，没有D个P就出来了。</p>\n<p>然后暴力建图。莫名其妙能有60分。</p>\n<h4 id=\"T3\"><a href=\"#T3\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5285\">T3</a></h4><p>写作传统题读作提交答案题。</p>\n<p>考场上只想出来了<code>1_998244353</code>的12分。</p>\n<p>然后出考场被各路dalao吊打。</p>\n<p>关于测试点8-16，一开始我的想法是给出两个数$x,y$，有一个长度为$x$的区间从左向右扫过$[1,y]$这个区间。</p>\n<p>但实际上是$[x,y]$这个区间内每个数的性质。想到这一点后面的一些数据范围比较小的点就没啥问题了。</p>\n<p>但是数据范围比较大的点怎么办？</p>\n<p>打一些比较小的表（</p>\n<p>标程70KB了一下。</p>\n<h4 id=\"下午-1\"><a href=\"#下午-1\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>首先是讲评。</p>\n<p>没有抢到座位于是只能站着。</p>\n<p>因为非常吵什么也听不清。</p>\n<p>印象比较深的是讲到T3突然一阵掌声。</p>\n<p>然后回到宾馆快乐地颓废。</p>\n<h4 id=\"晚上-1\"><a href=\"#晚上-1\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>集体不想出去吃于是点了肯德基，然后……诶诶诶你们什么时候吃完的太快了吧（</p>\n<h3 id=\"Day-2-1\"><a href=\"#Day-2-1\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h3><h4 id=\"T1-1\"><a href=\"#T1-1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5289\">T1</a></h4><p>看到题目名我还以为是网络流。</p>\n<p>然后我就在想有没有网络流计数这种操作。</p>\n<p>大概是没有吧。</p>\n<p>打了个爆搜结果还炸了。</p>\n<h4 id=\"T2-1\"><a href=\"#T2-1\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5290\">T2</a></h4><p>看上去好神仙啊。</p>\n<p>考场上写了45分的状压枚举子集。</p>\n<p>结果一出考场听说人均75，就我不会链的贪心和$O(n^{2})$的做法，自毙了。</p>\n<h4 id=\"T3-1\"><a href=\"#T3-1\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5291\">T3</a></h4><p>想写一写$L=n$或$k=1$的情况。</p>\n<p>到最后发现什么也不会，只想到了$L=n$<strong>且</strong>$k=1$的情况。喜提8分。</p>\n<p>但是最后测出来好像是12分来着？没仔细看。</p>\n<h4 id=\"下午-2\"><a href=\"#下午-2\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>因为有人要回去所以讲评提前了半小时。</p>\n<p>虽然说抢到了一个座位可是今天比昨天还吵真的什么也听不见了。</p>\n<p>T3标程887行了解一下（</p>\n<p><img src=\"/images/TIM图片20190409113807.jpg\" alt=\"\"></p>\n<p>结果接我们回东营的车咕了大概有一个多小时吧，最后得有20：30才到家。</p>\n<h4 id=\"晚上-2\"><a href=\"#晚上-2\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>当然是回家……啊什么明天就正常上课啦？咕了！</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>最后60+60+12+0+45+12=189。</p>\n<p>随便抓只猴子就比我考的高/kk</p>\n","site":{"data":{}},"excerpt":"<p>被强大无比且随手吊打我的shzr催更了，于是诚惶诚恐赶来写这篇游记。</p>","more":"<h3 id=\"Day-X\"><a href=\"#Day-X\" class=\"headerlink\" title=\"Day -X\"></a>Day -X</h3><p>经过讨论，我们机房研究出了以下两个堪称完美的战术，若能施加实际行动，定能令SLYZ省选大获全胜：</p>\n<ol>\n<li>让潮子分身，在每一位dalao（如rqy、ckw等）身边分别派一个，然后潮他们，他们就炸了。</li>\n<li>让潮子在厕所蹲着，每看到有选手上厕所，等他上到一半跑到他背后，潮之曰「你稳了」，他就炸了。</li>\n</ol>\n<p><del>这都什么鬼东西（</del></p>\n<h3 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day -2\"></a>Day -2</h3><p>「省选快到了，我想回家休息休息。」</p>\n<p>像这样理直气壮地请假回家颓废了。</p>\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3><h4 id=\"下午\"><a href=\"#下午\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>12：30从学校坐车走，等到了济南已经是大概16：00了。</p>\n<p>到了宾馆loli让我们自由组合。然后mhr学长主动邀请我住一个房间。</p>\n<p>我直接就答应了。</p>\n<h4 id=\"晚上\"><a href=\"#晚上\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>晚上出去吃饭的时候，潮子一直在潮。</p>\n<p>就比如说钦定wzx的SAM没有了A，只剩下了一些奇怪的东西一道题都A不动了。</p>\n<p>可惜绝大部分名言已经失传了。</p>\n<p>这可真是糟糕，OI文学界的一大损失啊。</p>\n<h3 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h3><p>就算没有解压密码也是可以看压缩包内部的文件有哪些的。</p>\n<p>然后就看到了T3有16个样例有点方。</p>\n<p>解压密码直接一坨乱码。龙虾选手表示解压体验(?)极差。</p>\n<h4 id=\"T1\"><a href=\"#T1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5283\">T1</a></h4><p>诶怎么感觉有点像超级钢琴啊。</p>\n<p>但是因为我超级钢琴只会ST表+堆，想了想发现这题不能这么做。</p>\n<p>好吧，暴力60分先安排上。</p>\n<p>出了考场发现人均A掉T1。</p>\n<h4 id=\"T2\"><a href=\"#T2\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5284\">T2</a></h4><p>字符串（</p>\n<p>不难想到这么一个做法：对于这$n_{a}+n_{b}$个串每一个建一个点，如果$A$类串$x$支配$B$类串$y$，或者$B$类串$x$是$A$类串$y$的前缀，从$x$向$y$连边。最后整张图有环就是$-1$，没有D个P就出来了。</p>\n<p>然后暴力建图。莫名其妙能有60分。</p>\n<h4 id=\"T3\"><a href=\"#T3\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5285\">T3</a></h4><p>写作传统题读作提交答案题。</p>\n<p>考场上只想出来了<code>1_998244353</code>的12分。</p>\n<p>然后出考场被各路dalao吊打。</p>\n<p>关于测试点8-16，一开始我的想法是给出两个数$x,y$，有一个长度为$x$的区间从左向右扫过$[1,y]$这个区间。</p>\n<p>但实际上是$[x,y]$这个区间内每个数的性质。想到这一点后面的一些数据范围比较小的点就没啥问题了。</p>\n<p>但是数据范围比较大的点怎么办？</p>\n<p>打一些比较小的表（</p>\n<p>标程70KB了一下。</p>\n<h4 id=\"下午-1\"><a href=\"#下午-1\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>首先是讲评。</p>\n<p>没有抢到座位于是只能站着。</p>\n<p>因为非常吵什么也听不清。</p>\n<p>印象比较深的是讲到T3突然一阵掌声。</p>\n<p>然后回到宾馆快乐地颓废。</p>\n<h4 id=\"晚上-1\"><a href=\"#晚上-1\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>集体不想出去吃于是点了肯德基，然后……诶诶诶你们什么时候吃完的太快了吧（</p>\n<h3 id=\"Day-2-1\"><a href=\"#Day-2-1\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h3><h4 id=\"T1-1\"><a href=\"#T1-1\" class=\"headerlink\" title=\"T1\"></a><a href=\"https://www.luogu.org/problemnew/show/P5289\">T1</a></h4><p>看到题目名我还以为是网络流。</p>\n<p>然后我就在想有没有网络流计数这种操作。</p>\n<p>大概是没有吧。</p>\n<p>打了个爆搜结果还炸了。</p>\n<h4 id=\"T2-1\"><a href=\"#T2-1\" class=\"headerlink\" title=\"T2\"></a><a href=\"https://www.luogu.org/problemnew/show/P5290\">T2</a></h4><p>看上去好神仙啊。</p>\n<p>考场上写了45分的状压枚举子集。</p>\n<p>结果一出考场听说人均75，就我不会链的贪心和$O(n^{2})$的做法，自毙了。</p>\n<h4 id=\"T3-1\"><a href=\"#T3-1\" class=\"headerlink\" title=\"T3\"></a><a href=\"https://www.luogu.org/problemnew/show/P5291\">T3</a></h4><p>想写一写$L=n$或$k=1$的情况。</p>\n<p>到最后发现什么也不会，只想到了$L=n$<strong>且</strong>$k=1$的情况。喜提8分。</p>\n<p>但是最后测出来好像是12分来着？没仔细看。</p>\n<h4 id=\"下午-2\"><a href=\"#下午-2\" class=\"headerlink\" title=\"下午\"></a>下午</h4><p>因为有人要回去所以讲评提前了半小时。</p>\n<p>虽然说抢到了一个座位可是今天比昨天还吵真的什么也听不见了。</p>\n<p>T3标程887行了解一下（</p>\n<p><img src=\"/images/TIM图片20190409113807.jpg\" alt=\"\"></p>\n<p>结果接我们回东营的车咕了大概有一个多小时吧，最后得有20：30才到家。</p>\n<h4 id=\"晚上-2\"><a href=\"#晚上-2\" class=\"headerlink\" title=\"晚上\"></a>晚上</h4><p>当然是回家……啊什么明天就正常上课啦？咕了！</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>最后60+60+12+0+45+12=189。</p>\n<p>随便抓只猴子就比我考的高/kk</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-14T09:16:32.000Z","title":"「NOI2016」循环之美","password":null,"_content":"突然被wzx安利的一道题。\n\n[传送门](https://www.luogu.org/problemnew/show/P1587)\n\n[wzx的题解](https://www.cnblogs.com/asuldb/p/10706088.html)\n\n<!-- more -->\n\n~~通过查阅fuge的题解，~~我们发现我们要求的式子是\n\n$$\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]$$\n\n$[i\\perp j]$保证了这是一个最简分数从而不会算重，$[j\\perp k]$保证了这是一个纯循环小数。\n\n首先关于$[1,n]$中与某个常数$k$互质的数的数量，我们有一个结论\n\n$$\\sum_{i=1}^{n}[i\\perp k]=\\sum_{i=1}^{n}\\sum_{x|i,x|k}\\mu(x)=\\sum_{x|k}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)$$\n\n然后大力整理\n\n$$\\begin{aligned}\n\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{i=1}^{n}[i\\perp j]\\\\\n&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{x|j}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{x|j}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[jx\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{y|k}\\lfloor\\cfrac{m}{xy}\\rfloor\\mu(y)\n\\end{aligned}$$\n\n这道题有一个突破口在于，$k$的范围很小，只有$2000$，从而$d(k)$的范围会更小，这就使得我们能够暴力枚举$k$的约数来计算第二个$\\sum$。\n\n观察第一个$\\sum$，我们发现，套上一层整除分块之后，我们需要计算的是\n\n$$\\sum_{i=1}^{n}f(i)$$\n\n其中\n\n$$f(n)=[n\\perp k]\\mu(n)$$\n\n考虑杜教筛，我们再找来一个函数\n\n$$g(n)=[n\\perp k]$$\n\n把它们卷积\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum_{d|n}f(d)g(\\cfrac{n}{d})\\\\\n&=\\sum_{d|n}[d\\perp k][\\cfrac{n}{d}\\perp k]\\mu(d)\\\\\n&=[n\\perp k]\\sum_{d|n}\\mu(d)\\\\\n&=\\epsilon(n)\n\\end{aligned}$$\n\n然后就差不多了。\n\n不过有一个问题，像这种对$n$和$m$同时整除分块的情况，不能用类似min_25的trick（$N\\leqslant\\sqrt{n}$时存到`ans1[N]`，否则存到`ans2[n/N]`），只能通过unordered_map或者Hash来记忆化。\n\n代码如下\n\n```cpp\n#include<cstdio>\n#include<tr1/unordered_map>\n#define re register\n#define maxn 1000000\n#define min(a,b) ((a)<=(b)?(a):(b))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,k;\nint d[50],f[maxn+1],g[maxn+1],mu[maxn+1],F[maxn+1];\nstd::tr1::unordered_map<int,long long> ans;\n\nlong long T(re int x){\n\tre long long res=0;\n\tfor(re int i=1;i<=d[0];++i)\n\t\tres+=1LL*(x/d[i])*mu[d[i]];\n\treturn res;\n}\n\nlong long S(re int N){\n\tif(N<=maxn)\n\t\treturn F[N];\n\tif(ans.count(N))\n\t\treturn ans[N];\n\tre long long res=1,lst=T(1);\n\tfor(re int l=2,r;l<=N;l=r+1){\n\t\tr=N/(N/l);\n\t\tre long long tmp=T(r);\n\t\tres-=S(N/l)*(tmp-lst);\n\t\tlst=tmp;\n\t}\n\treturn ans[N]=res;\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tcltstream::read(k);\n\tfor(re int i=1;i<=k;++i)\n\t\tif(k%i==0)\n\t\t\td[++d[0]]=i;\n\tmu[1]=F[1]=1;\n\tfor(re int i=2;i<=maxn;++i){\n\t\tif(!f[i]){\n\t\t\tg[++g[0]]=i;\n\t\t\tmu[i]=-1;\n\t\t\tF[i]=-(k%i!=0);\n\t\t}\n\t\tfor(re int j=1;j<=g[0]&&i*g[j]<=maxn;++j){\n\t\t\tf[i*g[j]]=1;\n\t\t\tif(i%g[j]){\n\t\t\t\tmu[i*g[j]]=mu[i]*mu[g[j]];\n\t\t\t\tF[i*g[j]]=F[i]*F[g[j]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tfor(re int i=1;i<=maxn;++i)\n\t\tF[i]+=F[i-1];\n\tre long long res=0,lst=0;\n\tfor(re int l=1,r;l<=n&&l<=m;l=r+1){\n\t\tr=min(n/(n/l),m/(m/l));\n\t\tre long long tmp=S(r);\n\t\tres+=(n/l)*T(m/l)*(tmp-lst);\n\t\tlst=tmp;\n\t}\n\tcltstream::write(res);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-04-14-luogu-p1587-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-14 17:16:32\ntitle: 「NOI2016」循环之美\ntags:\n  - 数论\ncategories:\n  - 题解\npassword:\n---\n突然被wzx安利的一道题。\n\n[传送门](https://www.luogu.org/problemnew/show/P1587)\n\n[wzx的题解](https://www.cnblogs.com/asuldb/p/10706088.html)\n\n<!-- more -->\n\n~~通过查阅fuge的题解，~~我们发现我们要求的式子是\n\n$$\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]$$\n\n$[i\\perp j]$保证了这是一个最简分数从而不会算重，$[j\\perp k]$保证了这是一个纯循环小数。\n\n首先关于$[1,n]$中与某个常数$k$互质的数的数量，我们有一个结论\n\n$$\\sum_{i=1}^{n}[i\\perp k]=\\sum_{i=1}^{n}\\sum_{x|i,x|k}\\mu(x)=\\sum_{x|k}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)$$\n\n然后大力整理\n\n$$\\begin{aligned}\n\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{i=1}^{n}[i\\perp j]\\\\\n&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{x|j}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{x|j}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[jx\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{y|k}\\lfloor\\cfrac{m}{xy}\\rfloor\\mu(y)\n\\end{aligned}$$\n\n这道题有一个突破口在于，$k$的范围很小，只有$2000$，从而$d(k)$的范围会更小，这就使得我们能够暴力枚举$k$的约数来计算第二个$\\sum$。\n\n观察第一个$\\sum$，我们发现，套上一层整除分块之后，我们需要计算的是\n\n$$\\sum_{i=1}^{n}f(i)$$\n\n其中\n\n$$f(n)=[n\\perp k]\\mu(n)$$\n\n考虑杜教筛，我们再找来一个函数\n\n$$g(n)=[n\\perp k]$$\n\n把它们卷积\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum_{d|n}f(d)g(\\cfrac{n}{d})\\\\\n&=\\sum_{d|n}[d\\perp k][\\cfrac{n}{d}\\perp k]\\mu(d)\\\\\n&=[n\\perp k]\\sum_{d|n}\\mu(d)\\\\\n&=\\epsilon(n)\n\\end{aligned}$$\n\n然后就差不多了。\n\n不过有一个问题，像这种对$n$和$m$同时整除分块的情况，不能用类似min_25的trick（$N\\leqslant\\sqrt{n}$时存到`ans1[N]`，否则存到`ans2[n/N]`），只能通过unordered_map或者Hash来记忆化。\n\n代码如下\n\n```cpp\n#include<cstdio>\n#include<tr1/unordered_map>\n#define re register\n#define maxn 1000000\n#define min(a,b) ((a)<=(b)?(a):(b))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,k;\nint d[50],f[maxn+1],g[maxn+1],mu[maxn+1],F[maxn+1];\nstd::tr1::unordered_map<int,long long> ans;\n\nlong long T(re int x){\n\tre long long res=0;\n\tfor(re int i=1;i<=d[0];++i)\n\t\tres+=1LL*(x/d[i])*mu[d[i]];\n\treturn res;\n}\n\nlong long S(re int N){\n\tif(N<=maxn)\n\t\treturn F[N];\n\tif(ans.count(N))\n\t\treturn ans[N];\n\tre long long res=1,lst=T(1);\n\tfor(re int l=2,r;l<=N;l=r+1){\n\t\tr=N/(N/l);\n\t\tre long long tmp=T(r);\n\t\tres-=S(N/l)*(tmp-lst);\n\t\tlst=tmp;\n\t}\n\treturn ans[N]=res;\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tcltstream::read(k);\n\tfor(re int i=1;i<=k;++i)\n\t\tif(k%i==0)\n\t\t\td[++d[0]]=i;\n\tmu[1]=F[1]=1;\n\tfor(re int i=2;i<=maxn;++i){\n\t\tif(!f[i]){\n\t\t\tg[++g[0]]=i;\n\t\t\tmu[i]=-1;\n\t\t\tF[i]=-(k%i!=0);\n\t\t}\n\t\tfor(re int j=1;j<=g[0]&&i*g[j]<=maxn;++j){\n\t\t\tf[i*g[j]]=1;\n\t\t\tif(i%g[j]){\n\t\t\t\tmu[i*g[j]]=mu[i]*mu[g[j]];\n\t\t\t\tF[i*g[j]]=F[i]*F[g[j]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tfor(re int i=1;i<=maxn;++i)\n\t\tF[i]+=F[i-1];\n\tre long long res=0,lst=0;\n\tfor(re int l=1,r;l<=n&&l<=m;l=r+1){\n\t\tr=min(n/(n/l),m/(m/l));\n\t\tre long long tmp=S(r);\n\t\tres+=(n/l)*T(m/l)*(tmp-lst);\n\t\tlst=tmp;\n\t}\n\tcltstream::write(res);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"luogu-p1587-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0l001wmku91s7357be","content":"<p>突然被wzx安利的一道题。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P1587\">传送门</a></p>\n<p><a href=\"https://www.cnblogs.com/asuldb/p/10706088.html\">wzx的题解</a></p>\n<a id=\"more\"></a>\n<p><del>通过查阅fuge的题解，</del>我们发现我们要求的式子是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]</script><p>$[i\\perp j]$保证了这是一个最简分数从而不会算重，$[j\\perp k]$保证了这是一个纯循环小数。</p>\n<p>首先关于$[1,n]$中与某个常数$k$互质的数的数量，我们有一个结论</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}[i\\perp k]=\\sum_{i=1}^{n}\\sum_{x|i,x|k}\\mu(x)=\\sum_{x|k}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)</script><p>然后大力整理</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{i=1}^{n}[i\\perp j]\\\\\n&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{x|j}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{x|j}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[jx\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{y|k}\\lfloor\\cfrac{m}{xy}\\rfloor\\mu(y)\n\\end{aligned}</script><p>这道题有一个突破口在于，$k$的范围很小，只有$2000$，从而$d(k)$的范围会更小，这就使得我们能够暴力枚举$k$的约数来计算第二个$\\sum$。</p>\n<p>观察第一个$\\sum$，我们发现，套上一层整除分块之后，我们需要计算的是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}f(i)</script><p>其中</p>\n<script type=\"math/tex; mode=display\">f(n)=[n\\perp k]\\mu(n)</script><p>考虑杜教筛，我们再找来一个函数</p>\n<script type=\"math/tex; mode=display\">g(n)=[n\\perp k]</script><p>把它们卷积</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum_{d|n}f(d)g(\\cfrac{n}{d})\\\\\n&=\\sum_{d|n}[d\\perp k][\\cfrac{n}{d}\\perp k]\\mu(d)\\\\\n&=[n\\perp k]\\sum_{d|n}\\mu(d)\\\\\n&=\\epsilon(n)\n\\end{aligned}</script><p>然后就差不多了。</p>\n<p>不过有一个问题，像这种对$n$和$m$同时整除分块的情况，不能用类似min_25的trick（$N\\leqslant\\sqrt{n}$时存到<code>ans1[N]</code>，否则存到<code>ans2[n/N]</code>），只能通过unordered_map或者Hash来记忆化。</p>\n<p>代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;tr1/unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 1000000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,k;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[<span class=\"number\">50</span>],f[maxn+<span class=\"number\">1</span>],g[maxn+<span class=\"number\">1</span>],mu[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">std</span>::tr1::<span class=\"built_in\">unordered_map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; ans;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">T</span><span class=\"params\">(re <span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=d[<span class=\"number\">0</span>];++i)</span><br><span class=\"line\">        res+=<span class=\"number\">1L</span>L*(x/d[i])*mu[d[i]];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(N&lt;=maxn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> F[N];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ans.count(N))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans[N];</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">1</span>,lst=T(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">2</span>,r;l&lt;=N;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        r=N/(N/l);</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> tmp=T(r);</span><br><span class=\"line\">        res-=S(N/l)*(tmp-lst);</span><br><span class=\"line\">        lst=tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans[N]=res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    cltstream::read(k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">            d[++d[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">    mu[<span class=\"number\">1</span>]=F[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">            g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">            mu[i]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">            F[i]=-(k%i!=<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;i*g[j]&lt;=maxn;++j)&#123;</span><br><span class=\"line\">            f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%g[j])&#123;</span><br><span class=\"line\">                mu[i*g[j]]=mu[i]*mu[g[j]];</span><br><span class=\"line\">                F[i*g[j]]=F[i]*F[g[j]];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        F[i]+=F[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>,lst=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n&amp;&amp;l&lt;=m;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        r=min(n/(n/l),m/(m/l));</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> tmp=S(r);</span><br><span class=\"line\">        res+=(n/l)*T(m/l)*(tmp-lst);</span><br><span class=\"line\">        lst=tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::write(res);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>突然被wzx安利的一道题。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P1587\">传送门</a></p>\n<p><a href=\"https://www.cnblogs.com/asuldb/p/10706088.html\">wzx的题解</a></p>","more":"<p><del>通过查阅fuge的题解，</del>我们发现我们要求的式子是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]</script><p>$[i\\perp j]$保证了这是一个最简分数从而不会算重，$[j\\perp k]$保证了这是一个纯循环小数。</p>\n<p>首先关于$[1,n]$中与某个常数$k$互质的数的数量，我们有一个结论</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}[i\\perp k]=\\sum_{i=1}^{n}\\sum_{x|i,x|k}\\mu(x)=\\sum_{x|k}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)</script><p>然后大力整理</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=1}^{n}\\sum_{j=1}^{m}[i\\perp j][j\\perp k]&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{i=1}^{n}[i\\perp j]\\\\\n&=\\sum_{j=1}^{m}[j\\perp k]\\sum_{x|j}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{x|j}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[jx\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{j=1}^{\\tfrac{m}{x}}[j\\perp k]\\\\\n&=\\sum_{x=1}^{m}[x\\perp k]\\lfloor\\cfrac{n}{x}\\rfloor\\mu(x)\\sum_{y|k}\\lfloor\\cfrac{m}{xy}\\rfloor\\mu(y)\n\\end{aligned}</script><p>这道题有一个突破口在于，$k$的范围很小，只有$2000$，从而$d(k)$的范围会更小，这就使得我们能够暴力枚举$k$的约数来计算第二个$\\sum$。</p>\n<p>观察第一个$\\sum$，我们发现，套上一层整除分块之后，我们需要计算的是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{n}f(i)</script><p>其中</p>\n<script type=\"math/tex; mode=display\">f(n)=[n\\perp k]\\mu(n)</script><p>考虑杜教筛，我们再找来一个函数</p>\n<script type=\"math/tex; mode=display\">g(n)=[n\\perp k]</script><p>把它们卷积</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum_{d|n}f(d)g(\\cfrac{n}{d})\\\\\n&=\\sum_{d|n}[d\\perp k][\\cfrac{n}{d}\\perp k]\\mu(d)\\\\\n&=[n\\perp k]\\sum_{d|n}\\mu(d)\\\\\n&=\\epsilon(n)\n\\end{aligned}</script><p>然后就差不多了。</p>\n<p>不过有一个问题，像这种对$n$和$m$同时整除分块的情况，不能用类似min_25的trick（$N\\leqslant\\sqrt{n}$时存到<code>ans1[N]</code>，否则存到<code>ans2[n/N]</code>），只能通过unordered_map或者Hash来记忆化。</p>\n<p>代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;tr1/unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 1000000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,k;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[<span class=\"number\">50</span>],f[maxn+<span class=\"number\">1</span>],g[maxn+<span class=\"number\">1</span>],mu[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">std</span>::tr1::<span class=\"built_in\">unordered_map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; ans;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">T</span><span class=\"params\">(re <span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=d[<span class=\"number\">0</span>];++i)</span><br><span class=\"line\">        res+=<span class=\"number\">1L</span>L*(x/d[i])*mu[d[i]];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(N&lt;=maxn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> F[N];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ans.count(N))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans[N];</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">1</span>,lst=T(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">2</span>,r;l&lt;=N;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        r=N/(N/l);</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> tmp=T(r);</span><br><span class=\"line\">        res-=S(N/l)*(tmp-lst);</span><br><span class=\"line\">        lst=tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans[N]=res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    cltstream::read(k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">            d[++d[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">    mu[<span class=\"number\">1</span>]=F[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">            g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">            mu[i]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">            F[i]=-(k%i!=<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;i*g[j]&lt;=maxn;++j)&#123;</span><br><span class=\"line\">            f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%g[j])&#123;</span><br><span class=\"line\">                mu[i*g[j]]=mu[i]*mu[g[j]];</span><br><span class=\"line\">                F[i*g[j]]=F[i]*F[g[j]];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        F[i]+=F[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>,lst=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n&amp;&amp;l&lt;=m;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        r=min(n/(n/l),m/(m/l));</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> tmp=S(r);</span><br><span class=\"line\">        res+=(n/l)*T(m/l)*(tmp-lst);</span><br><span class=\"line\">        lst=tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::write(res);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-27T05:11:37.000Z","title":"「Luogu-P5178」公约数","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P5176)\n\n<!-- more -->\n\n首先我们看到要求的这个式子……这什么鬼啊能做吗（\n\n冷静分析一波，我们可以根据括号里的两个加号将原式拆分成三个三重$\\sum$\n\n$$\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,k)}{(i,j)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(j,k)}{(i,j)\\cdot(i,k)}\n\\end{aligned}$$\n\n首先我们单独考虑第一个\n\n$$\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,(i,j)k)\\cdot((i,j),k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}(d^{2}xy,dk)\\cdot(d,k)\\cdot\\cfrac{d}{(dx,k)\\cdot(dy,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\cdot(d,k)\\cdot\\cfrac{(dxy,k)}{(dx,k)\\cdot(dy,k)}\\\\\n\\end{aligned}$$\n\n考虑将$d,x,y,k$写成唯一分解形式，然后对于第$i$小的质数$c_{i}$，它在四个数中的指数分别是$r_{d,i},r_{x,i},r_{y,i},r_{k,i}$，那么\n\n$$\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\prod_{i=1}c_{i}^{\\min(r_{d,i},r_{k,i})+\\min(r_{d,i}+r_{x,i}+r_{y,i},r_{k,i})-\\min(r_{d,i}+r_{x,i},r_{k,i})-\\min(r_{d,i}+r_{y,i},r_{k,i})}\n\\end{aligned}$$\n\n因为$x\\perp y$，$r_{x,i}$和$r_{y,i}$中必定有一个为$0$，带入整理后我们得到\n\n$$\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\\\\n=&p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}\n\\end{aligned}$$\n\n对剩下的两个三重$\\sum$也进行类似的化简，最后我们得到答案就是\n\n$$p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}+m\\sum_{i=1}^{n}\\sum_{j=1}^{p}(i,j)^{2}+n\\sum_{i=1}^{m}\\sum_{j=1}^{p}(i,j)^{2}$$\n","source":"_posts/2019-04-27-luogu-p5176-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-27 13:11:37\ntitle: 「Luogu-P5178」公约数\ntags:\n  - 数论\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P5176)\n\n<!-- more -->\n\n首先我们看到要求的这个式子……这什么鬼啊能做吗（\n\n冷静分析一波，我们可以根据括号里的两个加号将原式拆分成三个三重$\\sum$\n\n$$\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,k)}{(i,j)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(j,k)}{(i,j)\\cdot(i,k)}\n\\end{aligned}$$\n\n首先我们单独考虑第一个\n\n$$\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,(i,j)k)\\cdot((i,j),k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}(d^{2}xy,dk)\\cdot(d,k)\\cdot\\cfrac{d}{(dx,k)\\cdot(dy,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\cdot(d,k)\\cdot\\cfrac{(dxy,k)}{(dx,k)\\cdot(dy,k)}\\\\\n\\end{aligned}$$\n\n考虑将$d,x,y,k$写成唯一分解形式，然后对于第$i$小的质数$c_{i}$，它在四个数中的指数分别是$r_{d,i},r_{x,i},r_{y,i},r_{k,i}$，那么\n\n$$\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\prod_{i=1}c_{i}^{\\min(r_{d,i},r_{k,i})+\\min(r_{d,i}+r_{x,i}+r_{y,i},r_{k,i})-\\min(r_{d,i}+r_{x,i},r_{k,i})-\\min(r_{d,i}+r_{y,i},r_{k,i})}\n\\end{aligned}$$\n\n因为$x\\perp y$，$r_{x,i}$和$r_{y,i}$中必定有一个为$0$，带入整理后我们得到\n\n$$\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\\\\n=&p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}\n\\end{aligned}$$\n\n对剩下的两个三重$\\sum$也进行类似的化简，最后我们得到答案就是\n\n$$p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}+m\\sum_{i=1}^{n}\\sum_{j=1}^{p}(i,j)^{2}+n\\sum_{i=1}^{m}\\sum_{j=1}^{p}(i,j)^{2}$$\n","slug":"luogu-p5176-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0m001zmku92ivzh049","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P5176\">传送门</a></p>\n<a id=\"more\"></a>\n<p>首先我们看到要求的这个式子……这什么鬼啊能做吗（</p>\n<p>冷静分析一波，我们可以根据括号里的两个加号将原式拆分成三个三重$\\sum$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,k)}{(i,j)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(j,k)}{(i,j)\\cdot(i,k)}\n\\end{aligned}</script><p>首先我们单独考虑第一个</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,(i,j)k)\\cdot((i,j),k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}(d^{2}xy,dk)\\cdot(d,k)\\cdot\\cfrac{d}{(dx,k)\\cdot(dy,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\cdot(d,k)\\cdot\\cfrac{(dxy,k)}{(dx,k)\\cdot(dy,k)}\\\\\n\\end{aligned}</script><p>考虑将$d,x,y,k$写成唯一分解形式，然后对于第$i$小的质数$c_{i}$，它在四个数中的指数分别是$r_{d,i},r_{x,i},r_{y,i},r_{k,i}$，那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\prod_{i=1}c_{i}^{\\min(r_{d,i},r_{k,i})+\\min(r_{d,i}+r_{x,i}+r_{y,i},r_{k,i})-\\min(r_{d,i}+r_{x,i},r_{k,i})-\\min(r_{d,i}+r_{y,i},r_{k,i})}\n\\end{aligned}</script><p>因为$x\\perp y$，$r_{x,i}$和$r_{y,i}$中必定有一个为$0$，带入整理后我们得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\\\\n=&p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}\n\\end{aligned}</script><p>对剩下的两个三重$\\sum$也进行类似的化简，最后我们得到答案就是</p>\n<script type=\"math/tex; mode=display\">p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}+m\\sum_{i=1}^{n}\\sum_{j=1}^{p}(i,j)^{2}+n\\sum_{i=1}^{m}\\sum_{j=1}^{p}(i,j)^{2}</script>","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P5176\">传送门</a></p>","more":"<p>首先我们看到要求的这个式子……这什么鬼啊能做吗（</p>\n<p>冷静分析一波，我们可以根据括号里的两个加号将原式拆分成三个三重$\\sum$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,k)}{(i,j)\\cdot(j,k)}\\\\\n+&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(j,k)}{(i,j)\\cdot(i,k)}\n\\end{aligned}</script><p>首先我们单独考虑第一个</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,ik,jk)\\cdot(i,j,k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{p}(ij,(i,j)k)\\cdot((i,j),k)\\cdot\\cfrac{(i,j)}{(i,k)\\cdot(j,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}(d^{2}xy,dk)\\cdot(d,k)\\cdot\\cfrac{d}{(dx,k)\\cdot(dy,k)}\\\\\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\cdot(d,k)\\cdot\\cfrac{(dxy,k)}{(dx,k)\\cdot(dy,k)}\\\\\n\\end{aligned}</script><p>考虑将$d,x,y,k$写成唯一分解形式，然后对于第$i$小的质数$c_{i}$，它在四个数中的指数分别是$r_{d,i},r_{x,i},r_{y,i},r_{k,i}$，那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\prod_{i=1}c_{i}^{\\min(r_{d,i},r_{k,i})+\\min(r_{d,i}+r_{x,i}+r_{y,i},r_{k,i})-\\min(r_{d,i}+r_{x,i},r_{k,i})-\\min(r_{d,i}+r_{y,i},r_{k,i})}\n\\end{aligned}</script><p>因为$x\\perp y$，$r_{x,i}$和$r_{y,i}$中必定有一个为$0$，带入整理后我们得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=&\\sum_{d=1}^{\\min(n,m)}\\sum_{x=1}^{\\lfloor\\tfrac{n}{d}\\rfloor}\\sum_{y=1}^{\\lfloor\\tfrac{m}{d}\\rfloor}[x\\perp y]\\sum_{k=1}^{p}d^{2}\\\\\n=&p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}\n\\end{aligned}</script><p>对剩下的两个三重$\\sum$也进行类似的化简，最后我们得到答案就是</p>\n<script type=\"math/tex; mode=display\">p\\sum_{i=1}^{n}\\sum_{j=1}^{m}(i,j)^{2}+m\\sum_{i=1}^{n}\\sum_{j=1}^{p}(i,j)^{2}+n\\sum_{i=1}^{m}\\sum_{j=1}^{p}(i,j)^{2}</script>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-26T10:27:53.000Z","title":"「JSOI2015」染色问题","password":null,"_content":"[传送门](https://www.lydsy.com/JudgeOnline/problem.php?id=4487)\n\nsto [asuldb](https://www.cnblogs.com/asuldb/p/10775580.html) orz\n\n<!-- more -->\n\n我们平时遇到的一维容斥大概长这样\n\n$$F_{i}=\\sum_{x=i}^{n}C_{x}^{i}G_{x}\\Leftrightarrow G_{i}=\\sum_{x=i}^{n}(-1)^{x-i}C_{x}^{i}F_{x}$$\n\n如果说遇到高维容斥，我们只需要一维一维地解决掉即可。\n\n但实际上，我们是可以总结出一个$k$维容斥的式子的\n\n$$F_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}C_{x_{j}}^{i_{j}}\\right)G_{x_{1},x_{2},\\cdots,x_{k}}\\Leftrightarrow G_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}(-1)^{x_{j}-i_{j}}C_{x_{j}}^{i_{j}}\\right)F_{x_{1},x_{2},\\cdots,x_{k}}$$\n\n没错，这道题就是一个三维容斥的大板子。\n\n我们令至少$i$行$j$列为空，至少$k$种颜色未出现的方案数为$F_{i,j,k}$，我们有\n\n$$F_{i,j,k}=C_{n}^{i}C_{m}^{j}C_{c}^{k}(c-k+1)^{(n-i)(m-j)}$$\n\n~~话又说回来了这个东西应该是会算重啊（~~\n\n恰有$i$行$j$列为空，恰有$k$种颜色未出现的方案数为$G_{i,j,k}$，自然\n\n$$F_{i,j,k}=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}C_{x}^{i}C_{y}^{j}C_{z}^{k}G_{x,y,z}$$\n\n$$\\begin{aligned}\nG_{i,j,k}&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}F_{x,y,z}\\\\\n&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{n-i}^{x-i}C_{m-j}^{y-j}C_{c-k}^{z-k}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=0}^{n-i}\\sum_{y=0}^{m-j}\\sum_{z=0}^{c-k}(-1)^{x+y+z}C_{n-i}^{x}C_{m-j}^{y}C_{c-k}^{z}(c-k-z+1)^{(n-i-x)(m-j-y)}\\\n\\end{aligned}$$\n\n我们要求的答案就是$G_{0,0,0}$，简单整理一下就是\n\n$$\\sum_{x=0}^{n}\\sum_{y=0}^{m}\\sum_{z=0}^{c}(-1)^{x+y+z}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}$$\n\n然后你问我为什么要写一篇blog？~~闲得没事干（~~\n\n代码瞎写的就不贴了（\n","source":"_posts/2019-04-26-bzoj4487-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-26 18:27:53\ntitle: 「JSOI2015」染色问题\ntags:\n  - 容斥\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.lydsy.com/JudgeOnline/problem.php?id=4487)\n\nsto [asuldb](https://www.cnblogs.com/asuldb/p/10775580.html) orz\n\n<!-- more -->\n\n我们平时遇到的一维容斥大概长这样\n\n$$F_{i}=\\sum_{x=i}^{n}C_{x}^{i}G_{x}\\Leftrightarrow G_{i}=\\sum_{x=i}^{n}(-1)^{x-i}C_{x}^{i}F_{x}$$\n\n如果说遇到高维容斥，我们只需要一维一维地解决掉即可。\n\n但实际上，我们是可以总结出一个$k$维容斥的式子的\n\n$$F_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}C_{x_{j}}^{i_{j}}\\right)G_{x_{1},x_{2},\\cdots,x_{k}}\\Leftrightarrow G_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}(-1)^{x_{j}-i_{j}}C_{x_{j}}^{i_{j}}\\right)F_{x_{1},x_{2},\\cdots,x_{k}}$$\n\n没错，这道题就是一个三维容斥的大板子。\n\n我们令至少$i$行$j$列为空，至少$k$种颜色未出现的方案数为$F_{i,j,k}$，我们有\n\n$$F_{i,j,k}=C_{n}^{i}C_{m}^{j}C_{c}^{k}(c-k+1)^{(n-i)(m-j)}$$\n\n~~话又说回来了这个东西应该是会算重啊（~~\n\n恰有$i$行$j$列为空，恰有$k$种颜色未出现的方案数为$G_{i,j,k}$，自然\n\n$$F_{i,j,k}=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}C_{x}^{i}C_{y}^{j}C_{z}^{k}G_{x,y,z}$$\n\n$$\\begin{aligned}\nG_{i,j,k}&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}F_{x,y,z}\\\\\n&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{n-i}^{x-i}C_{m-j}^{y-j}C_{c-k}^{z-k}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=0}^{n-i}\\sum_{y=0}^{m-j}\\sum_{z=0}^{c-k}(-1)^{x+y+z}C_{n-i}^{x}C_{m-j}^{y}C_{c-k}^{z}(c-k-z+1)^{(n-i-x)(m-j-y)}\\\n\\end{aligned}$$\n\n我们要求的答案就是$G_{0,0,0}$，简单整理一下就是\n\n$$\\sum_{x=0}^{n}\\sum_{y=0}^{m}\\sum_{z=0}^{c}(-1)^{x+y+z}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}$$\n\n然后你问我为什么要写一篇blog？~~闲得没事干（~~\n\n代码瞎写的就不贴了（\n","slug":"bzoj4487-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0n0022mku9e4r24z45","content":"<p><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=4487\">传送门</a></p>\n<p>sto <a href=\"https://www.cnblogs.com/asuldb/p/10775580.html\">asuldb</a> orz</p>\n<a id=\"more\"></a>\n<p>我们平时遇到的一维容斥大概长这样</p>\n<script type=\"math/tex; mode=display\">F_{i}=\\sum_{x=i}^{n}C_{x}^{i}G_{x}\\Leftrightarrow G_{i}=\\sum_{x=i}^{n}(-1)^{x-i}C_{x}^{i}F_{x}</script><p>如果说遇到高维容斥，我们只需要一维一维地解决掉即可。</p>\n<p>但实际上，我们是可以总结出一个$k$维容斥的式子的</p>\n<script type=\"math/tex; mode=display\">F_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}C_{x_{j}}^{i_{j}}\\right)G_{x_{1},x_{2},\\cdots,x_{k}}\\Leftrightarrow G_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}(-1)^{x_{j}-i_{j}}C_{x_{j}}^{i_{j}}\\right)F_{x_{1},x_{2},\\cdots,x_{k}}</script><p>没错，这道题就是一个三维容斥的大板子。</p>\n<p>我们令至少$i$行$j$列为空，至少$k$种颜色未出现的方案数为$F_{i,j,k}$，我们有</p>\n<script type=\"math/tex; mode=display\">F_{i,j,k}=C_{n}^{i}C_{m}^{j}C_{c}^{k}(c-k+1)^{(n-i)(m-j)}</script><p><del>话又说回来了这个东西应该是会算重啊（</del></p>\n<p>恰有$i$行$j$列为空，恰有$k$种颜色未出现的方案数为$G_{i,j,k}$，自然</p>\n<script type=\"math/tex; mode=display\">F_{i,j,k}=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}C_{x}^{i}C_{y}^{j}C_{z}^{k}G_{x,y,z}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG_{i,j,k}&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}F_{x,y,z}\\\\\n&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{n-i}^{x-i}C_{m-j}^{y-j}C_{c-k}^{z-k}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=0}^{n-i}\\sum_{y=0}^{m-j}\\sum_{z=0}^{c-k}(-1)^{x+y+z}C_{n-i}^{x}C_{m-j}^{y}C_{c-k}^{z}(c-k-z+1)^{(n-i-x)(m-j-y)}\\\n\\end{aligned}</script><p>我们要求的答案就是$G_{0,0,0}$，简单整理一下就是</p>\n<script type=\"math/tex; mode=display\">\\sum_{x=0}^{n}\\sum_{y=0}^{m}\\sum_{z=0}^{c}(-1)^{x+y+z}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}</script><p>然后你问我为什么要写一篇blog？<del>闲得没事干（</del></p>\n<p>代码瞎写的就不贴了（</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=4487\">传送门</a></p>\n<p>sto <a href=\"https://www.cnblogs.com/asuldb/p/10775580.html\">asuldb</a> orz</p>","more":"<p>我们平时遇到的一维容斥大概长这样</p>\n<script type=\"math/tex; mode=display\">F_{i}=\\sum_{x=i}^{n}C_{x}^{i}G_{x}\\Leftrightarrow G_{i}=\\sum_{x=i}^{n}(-1)^{x-i}C_{x}^{i}F_{x}</script><p>如果说遇到高维容斥，我们只需要一维一维地解决掉即可。</p>\n<p>但实际上，我们是可以总结出一个$k$维容斥的式子的</p>\n<script type=\"math/tex; mode=display\">F_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}C_{x_{j}}^{i_{j}}\\right)G_{x_{1},x_{2},\\cdots,x_{k}}\\Leftrightarrow G_{i_{1},i_{2},\\cdots,i_{k}}=\\sum_{x_{1}=i_{1}}^{n_{1}}\\sum_{x_{2}=i_{2}}^{n_{2}}\\cdots\\sum_{x_{k}=i_{k}}^{n_{k}}\\left(\\prod_{j=1}^{k}(-1)^{x_{j}-i_{j}}C_{x_{j}}^{i_{j}}\\right)F_{x_{1},x_{2},\\cdots,x_{k}}</script><p>没错，这道题就是一个三维容斥的大板子。</p>\n<p>我们令至少$i$行$j$列为空，至少$k$种颜色未出现的方案数为$F_{i,j,k}$，我们有</p>\n<script type=\"math/tex; mode=display\">F_{i,j,k}=C_{n}^{i}C_{m}^{j}C_{c}^{k}(c-k+1)^{(n-i)(m-j)}</script><p><del>话又说回来了这个东西应该是会算重啊（</del></p>\n<p>恰有$i$行$j$列为空，恰有$k$种颜色未出现的方案数为$G_{i,j,k}$，自然</p>\n<script type=\"math/tex; mode=display\">F_{i,j,k}=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}C_{x}^{i}C_{y}^{j}C_{z}^{k}G_{x,y,z}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG_{i,j,k}&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}F_{x,y,z}\\\\\n&=\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{x}^{i}C_{y}^{j}C_{z}^{k}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=i}^{n}\\sum_{y=j}^{m}\\sum_{z=k}^{c}(-1)^{x-i+y-j+z-k}C_{n-i}^{x-i}C_{m-j}^{y-j}C_{c-k}^{z-k}(c-z+1)^{(n-x)(m-y)}\\\\\n&=C_{n}^{i}C_{m}^{j}C_{c}^{k}\\sum_{x=0}^{n-i}\\sum_{y=0}^{m-j}\\sum_{z=0}^{c-k}(-1)^{x+y+z}C_{n-i}^{x}C_{m-j}^{y}C_{c-k}^{z}(c-k-z+1)^{(n-i-x)(m-j-y)}\\\n\\end{aligned}</script><p>我们要求的答案就是$G_{0,0,0}$，简单整理一下就是</p>\n<script type=\"math/tex; mode=display\">\\sum_{x=0}^{n}\\sum_{y=0}^{m}\\sum_{z=0}^{c}(-1)^{x+y+z}C_{n}^{x}C_{m}^{y}C_{c}^{z}(c-z+1)^{(n-x)(m-y)}</script><p>然后你问我为什么要写一篇blog？<del>闲得没事干（</del></p>\n<p>代码瞎写的就不贴了（</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-27T05:56:43.000Z","title":"论一条咸鱼如何瞎搞「WC2015」未来程序","password":null,"_content":"[传送门](https://www.luogu.org/problemnew/show/P4920)\n\n~~说不定还会持续更新？（~~\n\n<!-- more -->\n\n### 2019-04-26\n\n闲得没事翻到这道题了想试一试。\n\n首先看到测试点1。\n\n很明显的一个$a\\times b\\operatorname{mod}c$。\n\n啊什么爆`unsigned long long`？Python了解一下（\n\n然后去看测试点2。\n\n差不多能总结出这么一个规律来\n\n$$a_{0}=1\\;\\;\\;\\;b_{0}=0\\;\\;\\;\\;c_{0}=0$$\n\n$$a_{n}=a_{n-1}+2b_{n-1}+c_{n-1}\\;\\;\\;\\;b_{n}=a_{n-1}+b_{n-1}\\;\\;\\;\\;c_{n}=a_{n-1}$$\n\n$$\\text{Ans}=a_{n}-2b_{n}+c_{n}$$\n\n然后手动打表\n\n| $n$ | $a_{n}$ | $b_{n}$ | $c_{n}$ |\n| :-: | :-: | :-: | :-: |\n| $0$ | $1$ | $0$ | $0$ |\n| $1$ | $1$ | $1$ | $1$ |\n| $2$ | $4$ | $2$ | $1$ |\n| $3$ | $9$ | $6$ | $4$ |\n| $4$ | $25$ | $15$ | $9$ |\n| $5$ | $64$ | $40$ | $25$ |\n\n然后发现$a_{n}=F_{n+1}^{2}$，于是推出$b_{n}=\\sum_{i=0}^{n}F_{i}^{2}$，$c_{n}=F_{n}^{2}$。\n\n有一个结论是$\\sum_{i=0}^{n}F_{i}^{2}=F_{n}F_{n+1}$，证明也不难。于是就这样xjb写了个矩乘。\n\n然后去看测试点3。\n\n自然数$k$次方和，恩没难……等等四次方和是啥（\n\nhttps://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html\n\n光速逃（\n\n然后去看测试点4。\n\n如果把`1`看成黑点，`0`看成白点，`type=0`就是在遍历所有黑点对，直接一个$\\text{cnt}(\\text{cnt}-1)$解决。\n\n`type=1`就是对于每个黑点，求出其到所有白点的曼哈顿距离的最小值，再求和。\n\n不难想到枚举这个最小值，虽然复杂度很假但是数据随机啊（\n\n然后去看测试点5。\n\n很明显的仅包含黑点的矩形的计数……等等，这不就是半个[与或和](https://www.luogu.org/problemnew/show/P5300)吗（\n\n然后我就突然回想起来了，那道题WA成0分的记忆。\n\n先把前4个点交上去看看吧。然后10+1+10+6=27。\n\n诶我测试点4怎么6分啊……一看发现`type=0`写成了$\\cfrac{1}{2}\\text{cnt}(\\text{cnt}-1)$……\n\n关于测试点2……先放一放。\n\n然后去看测试点6。\n\n感觉不怎么会光速弃疗。\n\n然后去看测试点7。\n\n经过一番分析，我发现这是在求给定数独字典序最小的解，然后第$i$组数据输出前$i$行？（并不是）\n\n打了个爆搜然后跑到死也只跑出来前三组。\n\n哦不我连搜索都不会写了，我失败了:(\n\n然后去看测试点8。\n\n大致可以抽象成是给你7个点，每个点权值$w_{i}\\in[1,n]\\cap\\mathbb{N}$，再给你一些边，对于一条边$(x,y)$，必须要有$w_{x}\\lt w_{y}$，求方案数。\n\n第1问给了一条链，很明显方案数就是$C_{n}^{7}$。\n\n看到后9问好像十分麻烦，先跳过吧。\n\n然后去看测试点9。\n\n一上来一坨字符画一样的东西差点吓到我。\n\n从VSCode右边的缩略图里能够很明显看出是一个人。\n\n在仔细阅读了代码之后，我发现这是10道解答题。\n\n然后……诶好像差不多该溜了。\n\n### 2019-04-27\n\n一大早上被比我不知道强到哪里去了的asuldb安利了一道[看上去很吓人的题](/luogu-p5176-solution/)。\n\n继续来搞这道提答。\n\n答上了测试点9的前两问，然后去看测试点10……？？！！\n\n这是什么鬼东西怎么这么一大坨子函数……\n\n一开始没看源文件大小，后来一看发现竟然有1000+KB。\n\n吓得我电脑都卡了。\n\n发现本质上是让求`_()`这个函数的调用次数。于是我就让这个函数返回1，其他函数返回它调用的所有函数的返回值之和。\n\n然后……算是勉强凑出来前3问，5行左右。\n\n一交……诶我后两个点怎么还RE了？\n\n不会是我没交4和5的`.out`文件吧……然后发现还真是，补上去两个空文件之后评测结果正常了，10+1+10+10+0+0+0+1+2+5=39。\n\n然后发现测试点7实际上是将整个数独压成一行复读$i$遍。（好像也不是）\n\n6，8，9，10四个点挣扎了一会还是弃疗了。\n\n回去看测试点5……想到反正数据随机，写了一个稍微优化了一点的暴力。\n\n然后改了改测试点2。一交发现什么变化都没有。\n\n~~luogu又出锅了？这么想着~~又交了一遍，然后还是什么变化都没有。\n\n// 以上内容差不多是以回忆的形式写下来的。接下来差不多是边调题边写（\n\n然后发现我测试点5的二维前缀和写错了（\n\n仔细一推测试点2发现\n\n$$\\begin{aligned}\n\\text{Ans}&=F_{n+1}^{2}-2\\sum_{i=0}^{n}F_{i}^{2}+F_{n}^{2}\\\\\n&=F_{n+1}^{2}-2F_{n+1}F_{n}+F_{n}^{2}\\\\\n&=F_{n-1}^{2}\n\\end{aligned}$$\n\n但是就算这样也不应该WA啊……写了个暴力发现是因为偷懒矩阵没清空……\n\n然后再一交，10+10+10+10+10+0+0+1+2+5=58。\n\n然后我突然有了一个想法，对于测试点10，我可以直接用一个`std::map`维护出源文件中的所有函数的值啊。\n\n写了写一交……诶怎么还少了4分？\n\n一检查发现只是计算了调用次数，忘了再乘以那个`___`。\n\n于是再一交，10+10+10+10+10+0+0+1+2+10=63。\n\n回去看了看测试点7，感觉没救了，于是想搞一搞测试点9。\n\n看到第4问的答案只有3个字符，直接搜于是搜出来一个`$_$`。\n\n再像这样搜了一下第5问发现是`we`。\n\n考虑到后面都是英文单词了于是把枚举的范围压缩到了`a`~`z`。\n\n然后搜出了第6问是`hold`，第7问是`these`。\n\n然后上百度一查发现这句话是`we hold these truths to be self-evident`。\n\n那么还剩第3问那个人名……这种问题无解吧，尤其是对于我这种咸鱼来说。\n\n于是一交，10+10+10+10+10+0+0+1+9+10=70。\n\n简单推了一下测试点7，发现指数非常有规律，于是把系数扔到OEIS搜了一波。\n\n虽然是[找到了](http://oeis.org/A137560)，但是公式也没有生成函数也没有什么也没有。\n\n下面还给我来一行approved（\n\n弃疗。告辞。\n","source":"_posts/2019-04-27-luogu-p4920-solving-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-27 13:56:43\ntitle: 论一条咸鱼如何瞎搞「WC2015」未来程序\ntags:\n  - 提交答案\ncategories:\n  - 瞎搞\npassword:\n---\n[传送门](https://www.luogu.org/problemnew/show/P4920)\n\n~~说不定还会持续更新？（~~\n\n<!-- more -->\n\n### 2019-04-26\n\n闲得没事翻到这道题了想试一试。\n\n首先看到测试点1。\n\n很明显的一个$a\\times b\\operatorname{mod}c$。\n\n啊什么爆`unsigned long long`？Python了解一下（\n\n然后去看测试点2。\n\n差不多能总结出这么一个规律来\n\n$$a_{0}=1\\;\\;\\;\\;b_{0}=0\\;\\;\\;\\;c_{0}=0$$\n\n$$a_{n}=a_{n-1}+2b_{n-1}+c_{n-1}\\;\\;\\;\\;b_{n}=a_{n-1}+b_{n-1}\\;\\;\\;\\;c_{n}=a_{n-1}$$\n\n$$\\text{Ans}=a_{n}-2b_{n}+c_{n}$$\n\n然后手动打表\n\n| $n$ | $a_{n}$ | $b_{n}$ | $c_{n}$ |\n| :-: | :-: | :-: | :-: |\n| $0$ | $1$ | $0$ | $0$ |\n| $1$ | $1$ | $1$ | $1$ |\n| $2$ | $4$ | $2$ | $1$ |\n| $3$ | $9$ | $6$ | $4$ |\n| $4$ | $25$ | $15$ | $9$ |\n| $5$ | $64$ | $40$ | $25$ |\n\n然后发现$a_{n}=F_{n+1}^{2}$，于是推出$b_{n}=\\sum_{i=0}^{n}F_{i}^{2}$，$c_{n}=F_{n}^{2}$。\n\n有一个结论是$\\sum_{i=0}^{n}F_{i}^{2}=F_{n}F_{n+1}$，证明也不难。于是就这样xjb写了个矩乘。\n\n然后去看测试点3。\n\n自然数$k$次方和，恩没难……等等四次方和是啥（\n\nhttps://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html\n\n光速逃（\n\n然后去看测试点4。\n\n如果把`1`看成黑点，`0`看成白点，`type=0`就是在遍历所有黑点对，直接一个$\\text{cnt}(\\text{cnt}-1)$解决。\n\n`type=1`就是对于每个黑点，求出其到所有白点的曼哈顿距离的最小值，再求和。\n\n不难想到枚举这个最小值，虽然复杂度很假但是数据随机啊（\n\n然后去看测试点5。\n\n很明显的仅包含黑点的矩形的计数……等等，这不就是半个[与或和](https://www.luogu.org/problemnew/show/P5300)吗（\n\n然后我就突然回想起来了，那道题WA成0分的记忆。\n\n先把前4个点交上去看看吧。然后10+1+10+6=27。\n\n诶我测试点4怎么6分啊……一看发现`type=0`写成了$\\cfrac{1}{2}\\text{cnt}(\\text{cnt}-1)$……\n\n关于测试点2……先放一放。\n\n然后去看测试点6。\n\n感觉不怎么会光速弃疗。\n\n然后去看测试点7。\n\n经过一番分析，我发现这是在求给定数独字典序最小的解，然后第$i$组数据输出前$i$行？（并不是）\n\n打了个爆搜然后跑到死也只跑出来前三组。\n\n哦不我连搜索都不会写了，我失败了:(\n\n然后去看测试点8。\n\n大致可以抽象成是给你7个点，每个点权值$w_{i}\\in[1,n]\\cap\\mathbb{N}$，再给你一些边，对于一条边$(x,y)$，必须要有$w_{x}\\lt w_{y}$，求方案数。\n\n第1问给了一条链，很明显方案数就是$C_{n}^{7}$。\n\n看到后9问好像十分麻烦，先跳过吧。\n\n然后去看测试点9。\n\n一上来一坨字符画一样的东西差点吓到我。\n\n从VSCode右边的缩略图里能够很明显看出是一个人。\n\n在仔细阅读了代码之后，我发现这是10道解答题。\n\n然后……诶好像差不多该溜了。\n\n### 2019-04-27\n\n一大早上被比我不知道强到哪里去了的asuldb安利了一道[看上去很吓人的题](/luogu-p5176-solution/)。\n\n继续来搞这道提答。\n\n答上了测试点9的前两问，然后去看测试点10……？？！！\n\n这是什么鬼东西怎么这么一大坨子函数……\n\n一开始没看源文件大小，后来一看发现竟然有1000+KB。\n\n吓得我电脑都卡了。\n\n发现本质上是让求`_()`这个函数的调用次数。于是我就让这个函数返回1，其他函数返回它调用的所有函数的返回值之和。\n\n然后……算是勉强凑出来前3问，5行左右。\n\n一交……诶我后两个点怎么还RE了？\n\n不会是我没交4和5的`.out`文件吧……然后发现还真是，补上去两个空文件之后评测结果正常了，10+1+10+10+0+0+0+1+2+5=39。\n\n然后发现测试点7实际上是将整个数独压成一行复读$i$遍。（好像也不是）\n\n6，8，9，10四个点挣扎了一会还是弃疗了。\n\n回去看测试点5……想到反正数据随机，写了一个稍微优化了一点的暴力。\n\n然后改了改测试点2。一交发现什么变化都没有。\n\n~~luogu又出锅了？这么想着~~又交了一遍，然后还是什么变化都没有。\n\n// 以上内容差不多是以回忆的形式写下来的。接下来差不多是边调题边写（\n\n然后发现我测试点5的二维前缀和写错了（\n\n仔细一推测试点2发现\n\n$$\\begin{aligned}\n\\text{Ans}&=F_{n+1}^{2}-2\\sum_{i=0}^{n}F_{i}^{2}+F_{n}^{2}\\\\\n&=F_{n+1}^{2}-2F_{n+1}F_{n}+F_{n}^{2}\\\\\n&=F_{n-1}^{2}\n\\end{aligned}$$\n\n但是就算这样也不应该WA啊……写了个暴力发现是因为偷懒矩阵没清空……\n\n然后再一交，10+10+10+10+10+0+0+1+2+5=58。\n\n然后我突然有了一个想法，对于测试点10，我可以直接用一个`std::map`维护出源文件中的所有函数的值啊。\n\n写了写一交……诶怎么还少了4分？\n\n一检查发现只是计算了调用次数，忘了再乘以那个`___`。\n\n于是再一交，10+10+10+10+10+0+0+1+2+10=63。\n\n回去看了看测试点7，感觉没救了，于是想搞一搞测试点9。\n\n看到第4问的答案只有3个字符，直接搜于是搜出来一个`$_$`。\n\n再像这样搜了一下第5问发现是`we`。\n\n考虑到后面都是英文单词了于是把枚举的范围压缩到了`a`~`z`。\n\n然后搜出了第6问是`hold`，第7问是`these`。\n\n然后上百度一查发现这句话是`we hold these truths to be self-evident`。\n\n那么还剩第3问那个人名……这种问题无解吧，尤其是对于我这种咸鱼来说。\n\n于是一交，10+10+10+10+10+0+0+1+9+10=70。\n\n简单推了一下测试点7，发现指数非常有规律，于是把系数扔到OEIS搜了一波。\n\n虽然是[找到了](http://oeis.org/A137560)，但是公式也没有生成函数也没有什么也没有。\n\n下面还给我来一行approved（\n\n弃疗。告辞。\n","slug":"luogu-p4920-solving-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0n0026mku9dzljded4","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P4920\">传送门</a></p>\n<p><del>说不定还会持续更新？（</del></p>\n<a id=\"more\"></a>\n<h3 id=\"2019-04-26\"><a href=\"#2019-04-26\" class=\"headerlink\" title=\"2019-04-26\"></a>2019-04-26</h3><p>闲得没事翻到这道题了想试一试。</p>\n<p>首先看到测试点1。</p>\n<p>很明显的一个$a\\times b\\operatorname{mod}c$。</p>\n<p>啊什么爆<code>unsigned long long</code>？Python了解一下（</p>\n<p>然后去看测试点2。</p>\n<p>差不多能总结出这么一个规律来</p>\n<script type=\"math/tex; mode=display\">a_{0}=1\\;\\;\\;\\;b_{0}=0\\;\\;\\;\\;c_{0}=0</script><script type=\"math/tex; mode=display\">a_{n}=a_{n-1}+2b_{n-1}+c_{n-1}\\;\\;\\;\\;b_{n}=a_{n-1}+b_{n-1}\\;\\;\\;\\;c_{n}=a_{n-1}</script><script type=\"math/tex; mode=display\">\\text{Ans}=a_{n}-2b_{n}+c_{n}</script><p>然后手动打表</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$n$</th>\n<th style=\"text-align:center\">$a_{n}$</th>\n<th style=\"text-align:center\">$b_{n}$</th>\n<th style=\"text-align:center\">$c_{n}$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$1$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$9$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$4$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$25$</td>\n<td style=\"text-align:center\">$15$</td>\n<td style=\"text-align:center\">$9$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$64$</td>\n<td style=\"text-align:center\">$40$</td>\n<td style=\"text-align:center\">$25$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>然后发现$a_{n}=F_{n+1}^{2}$，于是推出$b_{n}=\\sum_{i=0}^{n}F_{i}^{2}$，$c_{n}=F_{n}^{2}$。</p>\n<p>有一个结论是$\\sum_{i=0}^{n}F_{i}^{2}=F_{n}F_{n+1}$，证明也不难。于是就这样xjb写了个矩乘。</p>\n<p>然后去看测试点3。</p>\n<p>自然数$k$次方和，恩没难……等等四次方和是啥（</p>\n<p><a href=\"https://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html\">https://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html</a></p>\n<p>光速逃（</p>\n<p>然后去看测试点4。</p>\n<p>如果把<code>1</code>看成黑点，<code>0</code>看成白点，<code>type=0</code>就是在遍历所有黑点对，直接一个$\\text{cnt}(\\text{cnt}-1)$解决。</p>\n<p><code>type=1</code>就是对于每个黑点，求出其到所有白点的曼哈顿距离的最小值，再求和。</p>\n<p>不难想到枚举这个最小值，虽然复杂度很假但是数据随机啊（</p>\n<p>然后去看测试点5。</p>\n<p>很明显的仅包含黑点的矩形的计数……等等，这不就是半个<a href=\"https://www.luogu.org/problemnew/show/P5300\">与或和</a>吗（</p>\n<p>然后我就突然回想起来了，那道题WA成0分的记忆。</p>\n<p>先把前4个点交上去看看吧。然后10+1+10+6=27。</p>\n<p>诶我测试点4怎么6分啊……一看发现<code>type=0</code>写成了$\\cfrac{1}{2}\\text{cnt}(\\text{cnt}-1)$……</p>\n<p>关于测试点2……先放一放。</p>\n<p>然后去看测试点6。</p>\n<p>感觉不怎么会光速弃疗。</p>\n<p>然后去看测试点7。</p>\n<p>经过一番分析，我发现这是在求给定数独字典序最小的解，然后第$i$组数据输出前$i$行？（并不是）</p>\n<p>打了个爆搜然后跑到死也只跑出来前三组。</p>\n<p>哦不我连搜索都不会写了，我失败了:(</p>\n<p>然后去看测试点8。</p>\n<p>大致可以抽象成是给你7个点，每个点权值$w_{i}\\in[1,n]\\cap\\mathbb{N}$，再给你一些边，对于一条边$(x,y)$，必须要有$w_{x}\\lt w_{y}$，求方案数。</p>\n<p>第1问给了一条链，很明显方案数就是$C_{n}^{7}$。</p>\n<p>看到后9问好像十分麻烦，先跳过吧。</p>\n<p>然后去看测试点9。</p>\n<p>一上来一坨字符画一样的东西差点吓到我。</p>\n<p>从VSCode右边的缩略图里能够很明显看出是一个人。</p>\n<p>在仔细阅读了代码之后，我发现这是10道解答题。</p>\n<p>然后……诶好像差不多该溜了。</p>\n<h3 id=\"2019-04-27\"><a href=\"#2019-04-27\" class=\"headerlink\" title=\"2019-04-27\"></a>2019-04-27</h3><p>一大早上被比我不知道强到哪里去了的asuldb安利了一道<a href=\"/luogu-p5176-solution/\">看上去很吓人的题</a>。</p>\n<p>继续来搞这道提答。</p>\n<p>答上了测试点9的前两问，然后去看测试点10……？？！！</p>\n<p>这是什么鬼东西怎么这么一大坨子函数……</p>\n<p>一开始没看源文件大小，后来一看发现竟然有1000+KB。</p>\n<p>吓得我电脑都卡了。</p>\n<p>发现本质上是让求<code>_()</code>这个函数的调用次数。于是我就让这个函数返回1，其他函数返回它调用的所有函数的返回值之和。</p>\n<p>然后……算是勉强凑出来前3问，5行左右。</p>\n<p>一交……诶我后两个点怎么还RE了？</p>\n<p>不会是我没交4和5的<code>.out</code>文件吧……然后发现还真是，补上去两个空文件之后评测结果正常了，10+1+10+10+0+0+0+1+2+5=39。</p>\n<p>然后发现测试点7实际上是将整个数独压成一行复读$i$遍。（好像也不是）</p>\n<p>6，8，9，10四个点挣扎了一会还是弃疗了。</p>\n<p>回去看测试点5……想到反正数据随机，写了一个稍微优化了一点的暴力。</p>\n<p>然后改了改测试点2。一交发现什么变化都没有。</p>\n<p><del>luogu又出锅了？这么想着</del>又交了一遍，然后还是什么变化都没有。</p>\n<p>// 以上内容差不多是以回忆的形式写下来的。接下来差不多是边调题边写（</p>\n<p>然后发现我测试点5的二维前缀和写错了（</p>\n<p>仔细一推测试点2发现</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=F_{n+1}^{2}-2\\sum_{i=0}^{n}F_{i}^{2}+F_{n}^{2}\\\\\n&=F_{n+1}^{2}-2F_{n+1}F_{n}+F_{n}^{2}\\\\\n&=F_{n-1}^{2}\n\\end{aligned}</script><p>但是就算这样也不应该WA啊……写了个暴力发现是因为偷懒矩阵没清空……</p>\n<p>然后再一交，10+10+10+10+10+0+0+1+2+5=58。</p>\n<p>然后我突然有了一个想法，对于测试点10，我可以直接用一个<code>std::map</code>维护出源文件中的所有函数的值啊。</p>\n<p>写了写一交……诶怎么还少了4分？</p>\n<p>一检查发现只是计算了调用次数，忘了再乘以那个<code>___</code>。</p>\n<p>于是再一交，10+10+10+10+10+0+0+1+2+10=63。</p>\n<p>回去看了看测试点7，感觉没救了，于是想搞一搞测试点9。</p>\n<p>看到第4问的答案只有3个字符，直接搜于是搜出来一个<code>$_$</code>。</p>\n<p>再像这样搜了一下第5问发现是<code>we</code>。</p>\n<p>考虑到后面都是英文单词了于是把枚举的范围压缩到了<code>a</code>~<code>z</code>。</p>\n<p>然后搜出了第6问是<code>hold</code>，第7问是<code>these</code>。</p>\n<p>然后上百度一查发现这句话是<code>we hold these truths to be self-evident</code>。</p>\n<p>那么还剩第3问那个人名……这种问题无解吧，尤其是对于我这种咸鱼来说。</p>\n<p>于是一交，10+10+10+10+10+0+0+1+9+10=70。</p>\n<p>简单推了一下测试点7，发现指数非常有规律，于是把系数扔到OEIS搜了一波。</p>\n<p>虽然是<a href=\"http://oeis.org/A137560\">找到了</a>，但是公式也没有生成函数也没有什么也没有。</p>\n<p>下面还给我来一行approved（</p>\n<p>弃疗。告辞。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P4920\">传送门</a></p>\n<p><del>说不定还会持续更新？（</del></p>","more":"<h3 id=\"2019-04-26\"><a href=\"#2019-04-26\" class=\"headerlink\" title=\"2019-04-26\"></a>2019-04-26</h3><p>闲得没事翻到这道题了想试一试。</p>\n<p>首先看到测试点1。</p>\n<p>很明显的一个$a\\times b\\operatorname{mod}c$。</p>\n<p>啊什么爆<code>unsigned long long</code>？Python了解一下（</p>\n<p>然后去看测试点2。</p>\n<p>差不多能总结出这么一个规律来</p>\n<script type=\"math/tex; mode=display\">a_{0}=1\\;\\;\\;\\;b_{0}=0\\;\\;\\;\\;c_{0}=0</script><script type=\"math/tex; mode=display\">a_{n}=a_{n-1}+2b_{n-1}+c_{n-1}\\;\\;\\;\\;b_{n}=a_{n-1}+b_{n-1}\\;\\;\\;\\;c_{n}=a_{n-1}</script><script type=\"math/tex; mode=display\">\\text{Ans}=a_{n}-2b_{n}+c_{n}</script><p>然后手动打表</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$n$</th>\n<th style=\"text-align:center\">$a_{n}$</th>\n<th style=\"text-align:center\">$b_{n}$</th>\n<th style=\"text-align:center\">$c_{n}$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$0$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$1$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$1$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$9$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$4$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$25$</td>\n<td style=\"text-align:center\">$15$</td>\n<td style=\"text-align:center\">$9$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$64$</td>\n<td style=\"text-align:center\">$40$</td>\n<td style=\"text-align:center\">$25$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>然后发现$a_{n}=F_{n+1}^{2}$，于是推出$b_{n}=\\sum_{i=0}^{n}F_{i}^{2}$，$c_{n}=F_{n}^{2}$。</p>\n<p>有一个结论是$\\sum_{i=0}^{n}F_{i}^{2}=F_{n}F_{n+1}$，证明也不难。于是就这样xjb写了个矩乘。</p>\n<p>然后去看测试点3。</p>\n<p>自然数$k$次方和，恩没难……等等四次方和是啥（</p>\n<p><a href=\"https://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html\">https://www.zybang.com/question/cd5fa7b364c5ac9f3194eac2525ae6aa.html</a></p>\n<p>光速逃（</p>\n<p>然后去看测试点4。</p>\n<p>如果把<code>1</code>看成黑点，<code>0</code>看成白点，<code>type=0</code>就是在遍历所有黑点对，直接一个$\\text{cnt}(\\text{cnt}-1)$解决。</p>\n<p><code>type=1</code>就是对于每个黑点，求出其到所有白点的曼哈顿距离的最小值，再求和。</p>\n<p>不难想到枚举这个最小值，虽然复杂度很假但是数据随机啊（</p>\n<p>然后去看测试点5。</p>\n<p>很明显的仅包含黑点的矩形的计数……等等，这不就是半个<a href=\"https://www.luogu.org/problemnew/show/P5300\">与或和</a>吗（</p>\n<p>然后我就突然回想起来了，那道题WA成0分的记忆。</p>\n<p>先把前4个点交上去看看吧。然后10+1+10+6=27。</p>\n<p>诶我测试点4怎么6分啊……一看发现<code>type=0</code>写成了$\\cfrac{1}{2}\\text{cnt}(\\text{cnt}-1)$……</p>\n<p>关于测试点2……先放一放。</p>\n<p>然后去看测试点6。</p>\n<p>感觉不怎么会光速弃疗。</p>\n<p>然后去看测试点7。</p>\n<p>经过一番分析，我发现这是在求给定数独字典序最小的解，然后第$i$组数据输出前$i$行？（并不是）</p>\n<p>打了个爆搜然后跑到死也只跑出来前三组。</p>\n<p>哦不我连搜索都不会写了，我失败了:(</p>\n<p>然后去看测试点8。</p>\n<p>大致可以抽象成是给你7个点，每个点权值$w_{i}\\in[1,n]\\cap\\mathbb{N}$，再给你一些边，对于一条边$(x,y)$，必须要有$w_{x}\\lt w_{y}$，求方案数。</p>\n<p>第1问给了一条链，很明显方案数就是$C_{n}^{7}$。</p>\n<p>看到后9问好像十分麻烦，先跳过吧。</p>\n<p>然后去看测试点9。</p>\n<p>一上来一坨字符画一样的东西差点吓到我。</p>\n<p>从VSCode右边的缩略图里能够很明显看出是一个人。</p>\n<p>在仔细阅读了代码之后，我发现这是10道解答题。</p>\n<p>然后……诶好像差不多该溜了。</p>\n<h3 id=\"2019-04-27\"><a href=\"#2019-04-27\" class=\"headerlink\" title=\"2019-04-27\"></a>2019-04-27</h3><p>一大早上被比我不知道强到哪里去了的asuldb安利了一道<a href=\"/luogu-p5176-solution/\">看上去很吓人的题</a>。</p>\n<p>继续来搞这道提答。</p>\n<p>答上了测试点9的前两问，然后去看测试点10……？？！！</p>\n<p>这是什么鬼东西怎么这么一大坨子函数……</p>\n<p>一开始没看源文件大小，后来一看发现竟然有1000+KB。</p>\n<p>吓得我电脑都卡了。</p>\n<p>发现本质上是让求<code>_()</code>这个函数的调用次数。于是我就让这个函数返回1，其他函数返回它调用的所有函数的返回值之和。</p>\n<p>然后……算是勉强凑出来前3问，5行左右。</p>\n<p>一交……诶我后两个点怎么还RE了？</p>\n<p>不会是我没交4和5的<code>.out</code>文件吧……然后发现还真是，补上去两个空文件之后评测结果正常了，10+1+10+10+0+0+0+1+2+5=39。</p>\n<p>然后发现测试点7实际上是将整个数独压成一行复读$i$遍。（好像也不是）</p>\n<p>6，8，9，10四个点挣扎了一会还是弃疗了。</p>\n<p>回去看测试点5……想到反正数据随机，写了一个稍微优化了一点的暴力。</p>\n<p>然后改了改测试点2。一交发现什么变化都没有。</p>\n<p><del>luogu又出锅了？这么想着</del>又交了一遍，然后还是什么变化都没有。</p>\n<p>// 以上内容差不多是以回忆的形式写下来的。接下来差不多是边调题边写（</p>\n<p>然后发现我测试点5的二维前缀和写错了（</p>\n<p>仔细一推测试点2发现</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=F_{n+1}^{2}-2\\sum_{i=0}^{n}F_{i}^{2}+F_{n}^{2}\\\\\n&=F_{n+1}^{2}-2F_{n+1}F_{n}+F_{n}^{2}\\\\\n&=F_{n-1}^{2}\n\\end{aligned}</script><p>但是就算这样也不应该WA啊……写了个暴力发现是因为偷懒矩阵没清空……</p>\n<p>然后再一交，10+10+10+10+10+0+0+1+2+5=58。</p>\n<p>然后我突然有了一个想法，对于测试点10，我可以直接用一个<code>std::map</code>维护出源文件中的所有函数的值啊。</p>\n<p>写了写一交……诶怎么还少了4分？</p>\n<p>一检查发现只是计算了调用次数，忘了再乘以那个<code>___</code>。</p>\n<p>于是再一交，10+10+10+10+10+0+0+1+2+10=63。</p>\n<p>回去看了看测试点7，感觉没救了，于是想搞一搞测试点9。</p>\n<p>看到第4问的答案只有3个字符，直接搜于是搜出来一个<code>$_$</code>。</p>\n<p>再像这样搜了一下第5问发现是<code>we</code>。</p>\n<p>考虑到后面都是英文单词了于是把枚举的范围压缩到了<code>a</code>~<code>z</code>。</p>\n<p>然后搜出了第6问是<code>hold</code>，第7问是<code>these</code>。</p>\n<p>然后上百度一查发现这句话是<code>we hold these truths to be self-evident</code>。</p>\n<p>那么还剩第3问那个人名……这种问题无解吧，尤其是对于我这种咸鱼来说。</p>\n<p>于是一交，10+10+10+10+10+0+0+1+9+10=70。</p>\n<p>简单推了一下测试点7，发现指数非常有规律，于是把系数扔到OEIS搜了一波。</p>\n<p>虽然是<a href=\"http://oeis.org/A137560\">找到了</a>，但是公式也没有生成函数也没有什么也没有。</p>\n<p>下面还给我来一行approved（</p>\n<p>弃疗。告辞。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-05-09T09:26:41.000Z","title":"「SDOI2019R2游记」不会起标题了","password":null,"_content":"我好菜啊。\n\n<!-- more -->\n\n### Day -1\n\n上午loli搞了场模拟赛。\n\n发的第一套题目好像学长们都做过，于是又发了第二套。\n\n然后神仙hz随手秒了T2。\n\n想我这种辣鸡只能在旁边看着。\n\n到最后还是没有人认真写，快乐地颓废了一个上午。\n\n下午当然是回家。\n\n感觉自己最近日渐颓废。\n\n### Day 0\n\n一觉睡到11点，然后去学校坐车。\n\n因为人很少所以可以一个人占两个位，虽然我一轮时也是这么坐的。\n\n一路上一边听音乐一边睡觉不知不觉到了济南。\n\n然后翻山越岭走了1km的路去试机。济南的坡多到爆炸。\n\n去抽签发现抽到了最后一个编号83号，这一定预示着我要垫底了。\n\n试机的时候什么也没干，就那么看着其他的神仙敲键盘。\n\n……差点忘了一件事，考场的键盘Ctrl不在最左下角，最左下角是Fn，再往右才是Ctrl，按起来肥肠别扭。\n\n本来loli是想让我们出去吃的，结果我们集体跳车，就只剩下hz、cst、dsq三个人在那~~，想想还有点尬~~。\n\n于是什么也没吃。\n\n晚上玩了玩鬼形兽，不知道是因为资源太少还是啥，糟了好一段时间才通。\n\n睡觉前loli日常奶人。\n\n### Day 1\n\n总之是7点下去吃了早饭。然后再次翻山越岭去考场。\n\n开考前可以随便动键盘，然而就算这样也没干啥。\n\n解压密码画风似乎海星的样子。\n\n首先大概扫了一眼三道题。回来看T1，我们发现这是一道简单题。\n\n然而我却因为这道题调了1h+。自闭。\n\nT2不会，什么毒瘤题部分分都不给的。\n\nT3大概会20左右。\n\n除了考场发现人均120，这样要是一不小心写挂了哪直接就没了啊。\n\n咕掉了下午的讲题。\n\n成绩发下来发现自己100+0+10=110，海星。\n\n然后同级的其他神仙：\n\n- cst：100+0+10=110\n- shzr：50+0+20=70\n- wyx：50+0+0=50\n- wzx：0+0+20=20\n\n~~然后一看rqy甚至也0+100+0=100，但是他切了T2啊orz。~~\n\n大概看了一下群里发的题解，不过自然是什么也看不懂。\n\n快乐地颓了一个下午。\n\n~~闲着没事开了一把桃源宫PH，结果打到终符loli突然杀了进来。~~\n\n然后莫名其妙被loli奶了一口，「zyc比较稳」~~，于是伏笔就这么埋下了~~。\n\n### Day 2\n\n本来对今天也没报多少希望。\n\n拿到压缩包发现今天似乎没有大样例。\n\n解压完之后，还是扫一眼三道题。感觉一道都不会的样子。\n\n去看了看T2，发现好像是个阶梯Nim……但是我不会啊。\n\n开始打表。结果好像真的打出规律来了。\n\n于是头铁玩了5h的T2。并且喜提爆零。\n\n看他们好像都会T1的样子……自闭。\n\n并没有怎么看成绩。反正都爆零了就这样吧。\n\n听wzx说shzr从最开始稳到现在，结果最后一天翻车让wyx翻进女队。\n\n走到最后来发现自己什么也没有，就这样回去了。\n\n大概这就是菜鸡的命运吧。\n\n回头一看，似乎自从一轮D2炸掉之后，我就不应该报太大希望的。\n\n虽然说勉强苟进了二轮，但是这并没有什么用。\n\n告辞。然后一想到后面还有合格考……去世.jpg\n","source":"_posts/2019-05-09-sdoi2019r2-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-05-09 17:26:41\ntitle: 「SDOI2019R2游记」不会起标题了\ntags:\n  - SDOI\n  - 2019\ncategories:\n  - 游记\npassword:\n---\n我好菜啊。\n\n<!-- more -->\n\n### Day -1\n\n上午loli搞了场模拟赛。\n\n发的第一套题目好像学长们都做过，于是又发了第二套。\n\n然后神仙hz随手秒了T2。\n\n想我这种辣鸡只能在旁边看着。\n\n到最后还是没有人认真写，快乐地颓废了一个上午。\n\n下午当然是回家。\n\n感觉自己最近日渐颓废。\n\n### Day 0\n\n一觉睡到11点，然后去学校坐车。\n\n因为人很少所以可以一个人占两个位，虽然我一轮时也是这么坐的。\n\n一路上一边听音乐一边睡觉不知不觉到了济南。\n\n然后翻山越岭走了1km的路去试机。济南的坡多到爆炸。\n\n去抽签发现抽到了最后一个编号83号，这一定预示着我要垫底了。\n\n试机的时候什么也没干，就那么看着其他的神仙敲键盘。\n\n……差点忘了一件事，考场的键盘Ctrl不在最左下角，最左下角是Fn，再往右才是Ctrl，按起来肥肠别扭。\n\n本来loli是想让我们出去吃的，结果我们集体跳车，就只剩下hz、cst、dsq三个人在那~~，想想还有点尬~~。\n\n于是什么也没吃。\n\n晚上玩了玩鬼形兽，不知道是因为资源太少还是啥，糟了好一段时间才通。\n\n睡觉前loli日常奶人。\n\n### Day 1\n\n总之是7点下去吃了早饭。然后再次翻山越岭去考场。\n\n开考前可以随便动键盘，然而就算这样也没干啥。\n\n解压密码画风似乎海星的样子。\n\n首先大概扫了一眼三道题。回来看T1，我们发现这是一道简单题。\n\n然而我却因为这道题调了1h+。自闭。\n\nT2不会，什么毒瘤题部分分都不给的。\n\nT3大概会20左右。\n\n除了考场发现人均120，这样要是一不小心写挂了哪直接就没了啊。\n\n咕掉了下午的讲题。\n\n成绩发下来发现自己100+0+10=110，海星。\n\n然后同级的其他神仙：\n\n- cst：100+0+10=110\n- shzr：50+0+20=70\n- wyx：50+0+0=50\n- wzx：0+0+20=20\n\n~~然后一看rqy甚至也0+100+0=100，但是他切了T2啊orz。~~\n\n大概看了一下群里发的题解，不过自然是什么也看不懂。\n\n快乐地颓了一个下午。\n\n~~闲着没事开了一把桃源宫PH，结果打到终符loli突然杀了进来。~~\n\n然后莫名其妙被loli奶了一口，「zyc比较稳」~~，于是伏笔就这么埋下了~~。\n\n### Day 2\n\n本来对今天也没报多少希望。\n\n拿到压缩包发现今天似乎没有大样例。\n\n解压完之后，还是扫一眼三道题。感觉一道都不会的样子。\n\n去看了看T2，发现好像是个阶梯Nim……但是我不会啊。\n\n开始打表。结果好像真的打出规律来了。\n\n于是头铁玩了5h的T2。并且喜提爆零。\n\n看他们好像都会T1的样子……自闭。\n\n并没有怎么看成绩。反正都爆零了就这样吧。\n\n听wzx说shzr从最开始稳到现在，结果最后一天翻车让wyx翻进女队。\n\n走到最后来发现自己什么也没有，就这样回去了。\n\n大概这就是菜鸡的命运吧。\n\n回头一看，似乎自从一轮D2炸掉之后，我就不应该报太大希望的。\n\n虽然说勉强苟进了二轮，但是这并没有什么用。\n\n告辞。然后一想到后面还有合格考……去世.jpg\n","slug":"sdoi2019r2-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0o0029mku9dfpve9do","content":"<p>我好菜啊。</p>\n<a id=\"more\"></a>\n<h3 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day -1\"></a>Day -1</h3><p>上午loli搞了场模拟赛。</p>\n<p>发的第一套题目好像学长们都做过，于是又发了第二套。</p>\n<p>然后神仙hz随手秒了T2。</p>\n<p>想我这种辣鸡只能在旁边看着。</p>\n<p>到最后还是没有人认真写，快乐地颓废了一个上午。</p>\n<p>下午当然是回家。</p>\n<p>感觉自己最近日渐颓废。</p>\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3><p>一觉睡到11点，然后去学校坐车。</p>\n<p>因为人很少所以可以一个人占两个位，虽然我一轮时也是这么坐的。</p>\n<p>一路上一边听音乐一边睡觉不知不觉到了济南。</p>\n<p>然后翻山越岭走了1km的路去试机。济南的坡多到爆炸。</p>\n<p>去抽签发现抽到了最后一个编号83号，这一定预示着我要垫底了。</p>\n<p>试机的时候什么也没干，就那么看着其他的神仙敲键盘。</p>\n<p>……差点忘了一件事，考场的键盘Ctrl不在最左下角，最左下角是Fn，再往右才是Ctrl，按起来肥肠别扭。</p>\n<p>本来loli是想让我们出去吃的，结果我们集体跳车，就只剩下hz、cst、dsq三个人在那<del>，想想还有点尬</del>。</p>\n<p>于是什么也没吃。</p>\n<p>晚上玩了玩鬼形兽，不知道是因为资源太少还是啥，糟了好一段时间才通。</p>\n<p>睡觉前loli日常奶人。</p>\n<h3 id=\"Day-1-1\"><a href=\"#Day-1-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h3><p>总之是7点下去吃了早饭。然后再次翻山越岭去考场。</p>\n<p>开考前可以随便动键盘，然而就算这样也没干啥。</p>\n<p>解压密码画风似乎海星的样子。</p>\n<p>首先大概扫了一眼三道题。回来看T1，我们发现这是一道简单题。</p>\n<p>然而我却因为这道题调了1h+。自闭。</p>\n<p>T2不会，什么毒瘤题部分分都不给的。</p>\n<p>T3大概会20左右。</p>\n<p>除了考场发现人均120，这样要是一不小心写挂了哪直接就没了啊。</p>\n<p>咕掉了下午的讲题。</p>\n<p>成绩发下来发现自己100+0+10=110，海星。</p>\n<p>然后同级的其他神仙：</p>\n<ul>\n<li>cst：100+0+10=110</li>\n<li>shzr：50+0+20=70</li>\n<li>wyx：50+0+0=50</li>\n<li>wzx：0+0+20=20</li>\n</ul>\n<p><del>然后一看rqy甚至也0+100+0=100，但是他切了T2啊orz。</del></p>\n<p>大概看了一下群里发的题解，不过自然是什么也看不懂。</p>\n<p>快乐地颓了一个下午。</p>\n<p><del>闲着没事开了一把桃源宫PH，结果打到终符loli突然杀了进来。</del></p>\n<p>然后莫名其妙被loli奶了一口，「zyc比较稳」<del>，于是伏笔就这么埋下了</del>。</p>\n<h3 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h3><p>本来对今天也没报多少希望。</p>\n<p>拿到压缩包发现今天似乎没有大样例。</p>\n<p>解压完之后，还是扫一眼三道题。感觉一道都不会的样子。</p>\n<p>去看了看T2，发现好像是个阶梯Nim……但是我不会啊。</p>\n<p>开始打表。结果好像真的打出规律来了。</p>\n<p>于是头铁玩了5h的T2。并且喜提爆零。</p>\n<p>看他们好像都会T1的样子……自闭。</p>\n<p>并没有怎么看成绩。反正都爆零了就这样吧。</p>\n<p>听wzx说shzr从最开始稳到现在，结果最后一天翻车让wyx翻进女队。</p>\n<p>走到最后来发现自己什么也没有，就这样回去了。</p>\n<p>大概这就是菜鸡的命运吧。</p>\n<p>回头一看，似乎自从一轮D2炸掉之后，我就不应该报太大希望的。</p>\n<p>虽然说勉强苟进了二轮，但是这并没有什么用。</p>\n<p>告辞。然后一想到后面还有合格考……去世.jpg</p>\n","site":{"data":{}},"excerpt":"<p>我好菜啊。</p>","more":"<h3 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day -1\"></a>Day -1</h3><p>上午loli搞了场模拟赛。</p>\n<p>发的第一套题目好像学长们都做过，于是又发了第二套。</p>\n<p>然后神仙hz随手秒了T2。</p>\n<p>想我这种辣鸡只能在旁边看着。</p>\n<p>到最后还是没有人认真写，快乐地颓废了一个上午。</p>\n<p>下午当然是回家。</p>\n<p>感觉自己最近日渐颓废。</p>\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3><p>一觉睡到11点，然后去学校坐车。</p>\n<p>因为人很少所以可以一个人占两个位，虽然我一轮时也是这么坐的。</p>\n<p>一路上一边听音乐一边睡觉不知不觉到了济南。</p>\n<p>然后翻山越岭走了1km的路去试机。济南的坡多到爆炸。</p>\n<p>去抽签发现抽到了最后一个编号83号，这一定预示着我要垫底了。</p>\n<p>试机的时候什么也没干，就那么看着其他的神仙敲键盘。</p>\n<p>……差点忘了一件事，考场的键盘Ctrl不在最左下角，最左下角是Fn，再往右才是Ctrl，按起来肥肠别扭。</p>\n<p>本来loli是想让我们出去吃的，结果我们集体跳车，就只剩下hz、cst、dsq三个人在那<del>，想想还有点尬</del>。</p>\n<p>于是什么也没吃。</p>\n<p>晚上玩了玩鬼形兽，不知道是因为资源太少还是啥，糟了好一段时间才通。</p>\n<p>睡觉前loli日常奶人。</p>\n<h3 id=\"Day-1-1\"><a href=\"#Day-1-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h3><p>总之是7点下去吃了早饭。然后再次翻山越岭去考场。</p>\n<p>开考前可以随便动键盘，然而就算这样也没干啥。</p>\n<p>解压密码画风似乎海星的样子。</p>\n<p>首先大概扫了一眼三道题。回来看T1，我们发现这是一道简单题。</p>\n<p>然而我却因为这道题调了1h+。自闭。</p>\n<p>T2不会，什么毒瘤题部分分都不给的。</p>\n<p>T3大概会20左右。</p>\n<p>除了考场发现人均120，这样要是一不小心写挂了哪直接就没了啊。</p>\n<p>咕掉了下午的讲题。</p>\n<p>成绩发下来发现自己100+0+10=110，海星。</p>\n<p>然后同级的其他神仙：</p>\n<ul>\n<li>cst：100+0+10=110</li>\n<li>shzr：50+0+20=70</li>\n<li>wyx：50+0+0=50</li>\n<li>wzx：0+0+20=20</li>\n</ul>\n<p><del>然后一看rqy甚至也0+100+0=100，但是他切了T2啊orz。</del></p>\n<p>大概看了一下群里发的题解，不过自然是什么也看不懂。</p>\n<p>快乐地颓了一个下午。</p>\n<p><del>闲着没事开了一把桃源宫PH，结果打到终符loli突然杀了进来。</del></p>\n<p>然后莫名其妙被loli奶了一口，「zyc比较稳」<del>，于是伏笔就这么埋下了</del>。</p>\n<h3 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h3><p>本来对今天也没报多少希望。</p>\n<p>拿到压缩包发现今天似乎没有大样例。</p>\n<p>解压完之后，还是扫一眼三道题。感觉一道都不会的样子。</p>\n<p>去看了看T2，发现好像是个阶梯Nim……但是我不会啊。</p>\n<p>开始打表。结果好像真的打出规律来了。</p>\n<p>于是头铁玩了5h的T2。并且喜提爆零。</p>\n<p>看他们好像都会T1的样子……自闭。</p>\n<p>并没有怎么看成绩。反正都爆零了就这样吧。</p>\n<p>听wzx说shzr从最开始稳到现在，结果最后一天翻车让wyx翻进女队。</p>\n<p>走到最后来发现自己什么也没有，就这样回去了。</p>\n<p>大概这就是菜鸡的命运吧。</p>\n<p>回头一看，似乎自从一轮D2炸掉之后，我就不应该报太大希望的。</p>\n<p>虽然说勉强苟进了二轮，但是这并没有什么用。</p>\n<p>告辞。然后一想到后面还有合格考……去世.jpg</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-05-22T08:36:15.000Z","title":"不会起标题（理直气壮）","password":null,"_content":"从APIO回来发现luogu多了几道NTT的板子题，于是来写一下。\n\n关于游记……可能不会发了。\n\n<!-- more -->\n\n### [普通多项式转下降幂多项式](https://www.luogu.org/problemnew/show/P5383)\n\n$$x^{n}=\\sum_{i=0}^{n}S(n,i)x^{\\underline{i}}$$\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{i}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}S(i,j)x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}S(i,j)f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{1}{(j-k)!}\\sum_{i=0}^{n-1}(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{F(j-k)}{(j-k)!}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}g_{j}x^{\\underline{j}}\n\\end{aligned}$$\n\n所以\n\n$$g_{i}=\\sum_{j=0}^{i}\\cfrac{(-1)^{j}}{j!}\\cfrac{F(i-j)}{(i-j)!}$$\n\n其中求$F(i-j)$需要多点求值。然而我不会。\n\n告辞。\n\n### [下降幂多项式转普通多项式](https://www.luogu.org/problemnew/show/P5393)\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}s(n,i)x^{i}$$\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{\\underline{i}}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)x^{j}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}(-1)^{i-j}s(i,j)f_{i}x^{j}\n\\end{aligned}$$\n\n……告辞。\n\n### [下降幂多项式乘法](https://www.luogu.org/problemnew/show/P5394)\n\n根据提示，一个下降幂多项式可以唯一确定一个次数相同的普通多项式，我们只需要转过去乘起来再转回来就好了！\n\n……大概吧。\n\n### [第二类斯特林数·行](https://www.luogu.org/problemnew/show/P5395)\n\n紫题警告。不过的确简单。第二类斯特林数的通项公式推一推就能推成卷积形式。\n\n### [第二类斯特林数·列](https://www.luogu.org/problemnew/show/P5396)\n\n~~不会。抄的题解。~~\n\n定义\n\n$$S_{m}(x)=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}$$\n\n利用第二类斯特林数的递推公式\n\n$$S(n,m)=S(n-1,m-1)+mS(n-1,m)$$\n\n我们有\n\n$$\\begin{aligned}\nS_{m}(x)&=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(S(i-1,m-1)+mS(i-1,m))x^{i}\\\\\n&=S_{m-1}(x)x+mS_{m}(x)x\\\\\n&=\\cfrac{S_{m-1}(x)x}{1-mx}\\\\\n&=\\cfrac{x^{m}}{\\prod_{i=1}^{m}(1-ix)}\n\\end{aligned}$$\n\n关于类似$\\prod(1-ix)$这种的怎么计算……我怎么觉得我提过好几遍了呢（\n\n### [第一类斯特林数·行](https://www.luogu.org/problemnew/show/P5408)\n\n思路与「第二类斯特林数·列」类似。\n\n$$s(n,m)=s(n-1,m-1)+(n-1)s(n-1,m)$$\n\n$$\\begin{aligned}\ns_{n}(x)&=\\sum_{i=0}^{+\\infty}s(n,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(s(n-1,i-1)+(n-1)s(n-1,i))x^{i}\\\\\n&=(n-1+x)s_{n-1}(x)\\\\\n&=\\prod_{i=0}^{n-1}(i+x)\n\\end{aligned}$$\n\n### [第一类斯特林数·列](https://www.luogu.org/problemnew/show/P5408)\n\n我们发现「第二类斯特林数·列」和「第一类斯特林数·行」的思路行不通了。\n\n~~题解，打开。~~\n\n我们来观察一下这个式子\n\n$$(1+x)^{t}$$\n\n~~似乎并没有什么用。~~\n\n$$\\begin{aligned}\n(1+x)^{t}&=\\sum_{i=0}^{t}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{t^{\\underline{i}}}{i!}x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)t^{j}x^{i}\\\\\n&=\\sum_{j=0}^{+\\infty}\\sum_{i=j}^{+\\infty}\\cfrac{1}{i!}(-1)^{i-j}s(i,j)x^{i}t^{j}\\\\\n(1+x)^{t}&=e^{t\\ln(1+x)}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{(1+x)^{i}}{i!}t^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}\n\\end{aligned}$$\n\n根据上面两个不同的整理过程，我们有\n\n$$\\sum_{i=0}^{+\\infty}\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}t^{i}=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}$$\n\n进一步地\n\n$$\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}=\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}$$\n","source":"_posts/2019-05-22-polynomial-xxx-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-05-22 16:36:15\ntitle: 不会起标题（理直气壮）\ntags:\n  - NTT\ncategories:\n  - 瞎扯\npassword:\n---\n从APIO回来发现luogu多了几道NTT的板子题，于是来写一下。\n\n关于游记……可能不会发了。\n\n<!-- more -->\n\n### [普通多项式转下降幂多项式](https://www.luogu.org/problemnew/show/P5383)\n\n$$x^{n}=\\sum_{i=0}^{n}S(n,i)x^{\\underline{i}}$$\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{i}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}S(i,j)x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}S(i,j)f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{1}{(j-k)!}\\sum_{i=0}^{n-1}(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{F(j-k)}{(j-k)!}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}g_{j}x^{\\underline{j}}\n\\end{aligned}$$\n\n所以\n\n$$g_{i}=\\sum_{j=0}^{i}\\cfrac{(-1)^{j}}{j!}\\cfrac{F(i-j)}{(i-j)!}$$\n\n其中求$F(i-j)$需要多点求值。然而我不会。\n\n告辞。\n\n### [下降幂多项式转普通多项式](https://www.luogu.org/problemnew/show/P5393)\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}s(n,i)x^{i}$$\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{\\underline{i}}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)x^{j}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}(-1)^{i-j}s(i,j)f_{i}x^{j}\n\\end{aligned}$$\n\n……告辞。\n\n### [下降幂多项式乘法](https://www.luogu.org/problemnew/show/P5394)\n\n根据提示，一个下降幂多项式可以唯一确定一个次数相同的普通多项式，我们只需要转过去乘起来再转回来就好了！\n\n……大概吧。\n\n### [第二类斯特林数·行](https://www.luogu.org/problemnew/show/P5395)\n\n紫题警告。不过的确简单。第二类斯特林数的通项公式推一推就能推成卷积形式。\n\n### [第二类斯特林数·列](https://www.luogu.org/problemnew/show/P5396)\n\n~~不会。抄的题解。~~\n\n定义\n\n$$S_{m}(x)=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}$$\n\n利用第二类斯特林数的递推公式\n\n$$S(n,m)=S(n-1,m-1)+mS(n-1,m)$$\n\n我们有\n\n$$\\begin{aligned}\nS_{m}(x)&=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(S(i-1,m-1)+mS(i-1,m))x^{i}\\\\\n&=S_{m-1}(x)x+mS_{m}(x)x\\\\\n&=\\cfrac{S_{m-1}(x)x}{1-mx}\\\\\n&=\\cfrac{x^{m}}{\\prod_{i=1}^{m}(1-ix)}\n\\end{aligned}$$\n\n关于类似$\\prod(1-ix)$这种的怎么计算……我怎么觉得我提过好几遍了呢（\n\n### [第一类斯特林数·行](https://www.luogu.org/problemnew/show/P5408)\n\n思路与「第二类斯特林数·列」类似。\n\n$$s(n,m)=s(n-1,m-1)+(n-1)s(n-1,m)$$\n\n$$\\begin{aligned}\ns_{n}(x)&=\\sum_{i=0}^{+\\infty}s(n,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(s(n-1,i-1)+(n-1)s(n-1,i))x^{i}\\\\\n&=(n-1+x)s_{n-1}(x)\\\\\n&=\\prod_{i=0}^{n-1}(i+x)\n\\end{aligned}$$\n\n### [第一类斯特林数·列](https://www.luogu.org/problemnew/show/P5408)\n\n我们发现「第二类斯特林数·列」和「第一类斯特林数·行」的思路行不通了。\n\n~~题解，打开。~~\n\n我们来观察一下这个式子\n\n$$(1+x)^{t}$$\n\n~~似乎并没有什么用。~~\n\n$$\\begin{aligned}\n(1+x)^{t}&=\\sum_{i=0}^{t}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{t^{\\underline{i}}}{i!}x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)t^{j}x^{i}\\\\\n&=\\sum_{j=0}^{+\\infty}\\sum_{i=j}^{+\\infty}\\cfrac{1}{i!}(-1)^{i-j}s(i,j)x^{i}t^{j}\\\\\n(1+x)^{t}&=e^{t\\ln(1+x)}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{(1+x)^{i}}{i!}t^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}\n\\end{aligned}$$\n\n根据上面两个不同的整理过程，我们有\n\n$$\\sum_{i=0}^{+\\infty}\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}t^{i}=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}$$\n\n进一步地\n\n$$\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}=\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}$$\n","slug":"polynomial-xxx-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0p002emku93mqq3or5","content":"<p>从APIO回来发现luogu多了几道NTT的板子题，于是来写一下。</p>\n<p>关于游记……可能不会发了。</p>\n<a id=\"more\"></a>\n<h3 id=\"普通多项式转下降幂多项式\"><a href=\"#普通多项式转下降幂多项式\" class=\"headerlink\" title=\"普通多项式转下降幂多项式\"></a><a href=\"https://www.luogu.org/problemnew/show/P5383\">普通多项式转下降幂多项式</a></h3><script type=\"math/tex; mode=display\">x^{n}=\\sum_{i=0}^{n}S(n,i)x^{\\underline{i}}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{i}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}S(i,j)x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}S(i,j)f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{1}{(j-k)!}\\sum_{i=0}^{n-1}(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{F(j-k)}{(j-k)!}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}g_{j}x^{\\underline{j}}\n\\end{aligned}</script><p>所以</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\sum_{j=0}^{i}\\cfrac{(-1)^{j}}{j!}\\cfrac{F(i-j)}{(i-j)!}</script><p>其中求$F(i-j)$需要多点求值。然而我不会。</p>\n<p>告辞。</p>\n<h3 id=\"下降幂多项式转普通多项式\"><a href=\"#下降幂多项式转普通多项式\" class=\"headerlink\" title=\"下降幂多项式转普通多项式\"></a><a href=\"https://www.luogu.org/problemnew/show/P5393\">下降幂多项式转普通多项式</a></h3><script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}s(n,i)x^{i}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{\\underline{i}}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)x^{j}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}(-1)^{i-j}s(i,j)f_{i}x^{j}\n\\end{aligned}</script><p>……告辞。</p>\n<h3 id=\"下降幂多项式乘法\"><a href=\"#下降幂多项式乘法\" class=\"headerlink\" title=\"下降幂多项式乘法\"></a><a href=\"https://www.luogu.org/problemnew/show/P5394\">下降幂多项式乘法</a></h3><p>根据提示，一个下降幂多项式可以唯一确定一个次数相同的普通多项式，我们只需要转过去乘起来再转回来就好了！</p>\n<p>……大概吧。</p>\n<h3 id=\"第二类斯特林数·行\"><a href=\"#第二类斯特林数·行\" class=\"headerlink\" title=\"第二类斯特林数·行\"></a><a href=\"https://www.luogu.org/problemnew/show/P5395\">第二类斯特林数·行</a></h3><p>紫题警告。不过的确简单。第二类斯特林数的通项公式推一推就能推成卷积形式。</p>\n<h3 id=\"第二类斯特林数·列\"><a href=\"#第二类斯特林数·列\" class=\"headerlink\" title=\"第二类斯特林数·列\"></a><a href=\"https://www.luogu.org/problemnew/show/P5396\">第二类斯特林数·列</a></h3><p><del>不会。抄的题解。</del></p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">S_{m}(x)=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}</script><p>利用第二类斯特林数的递推公式</p>\n<script type=\"math/tex; mode=display\">S(n,m)=S(n-1,m-1)+mS(n-1,m)</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nS_{m}(x)&=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(S(i-1,m-1)+mS(i-1,m))x^{i}\\\\\n&=S_{m-1}(x)x+mS_{m}(x)x\\\\\n&=\\cfrac{S_{m-1}(x)x}{1-mx}\\\\\n&=\\cfrac{x^{m}}{\\prod_{i=1}^{m}(1-ix)}\n\\end{aligned}</script><p>关于类似$\\prod(1-ix)$这种的怎么计算……我怎么觉得我提过好几遍了呢（</p>\n<h3 id=\"第一类斯特林数·行\"><a href=\"#第一类斯特林数·行\" class=\"headerlink\" title=\"第一类斯特林数·行\"></a><a href=\"https://www.luogu.org/problemnew/show/P5408\">第一类斯特林数·行</a></h3><p>思路与「第二类斯特林数·列」类似。</p>\n<script type=\"math/tex; mode=display\">s(n,m)=s(n-1,m-1)+(n-1)s(n-1,m)</script><script type=\"math/tex; mode=display\">\\begin{aligned}\ns_{n}(x)&=\\sum_{i=0}^{+\\infty}s(n,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(s(n-1,i-1)+(n-1)s(n-1,i))x^{i}\\\\\n&=(n-1+x)s_{n-1}(x)\\\\\n&=\\prod_{i=0}^{n-1}(i+x)\n\\end{aligned}</script><h3 id=\"第一类斯特林数·列\"><a href=\"#第一类斯特林数·列\" class=\"headerlink\" title=\"第一类斯特林数·列\"></a><a href=\"https://www.luogu.org/problemnew/show/P5408\">第一类斯特林数·列</a></h3><p>我们发现「第二类斯特林数·列」和「第一类斯特林数·行」的思路行不通了。</p>\n<p><del>题解，打开。</del></p>\n<p>我们来观察一下这个式子</p>\n<script type=\"math/tex; mode=display\">(1+x)^{t}</script><p><del>似乎并没有什么用。</del></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(1+x)^{t}&=\\sum_{i=0}^{t}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{t^{\\underline{i}}}{i!}x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)t^{j}x^{i}\\\\\n&=\\sum_{j=0}^{+\\infty}\\sum_{i=j}^{+\\infty}\\cfrac{1}{i!}(-1)^{i-j}s(i,j)x^{i}t^{j}\\\\\n(1+x)^{t}&=e^{t\\ln(1+x)}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{(1+x)^{i}}{i!}t^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}\n\\end{aligned}</script><p>根据上面两个不同的整理过程，我们有</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{+\\infty}\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}t^{i}=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}</script><p>进一步地</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}=\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}</script>","site":{"data":{}},"excerpt":"<p>从APIO回来发现luogu多了几道NTT的板子题，于是来写一下。</p>\n<p>关于游记……可能不会发了。</p>","more":"<h3 id=\"普通多项式转下降幂多项式\"><a href=\"#普通多项式转下降幂多项式\" class=\"headerlink\" title=\"普通多项式转下降幂多项式\"></a><a href=\"https://www.luogu.org/problemnew/show/P5383\">普通多项式转下降幂多项式</a></h3><script type=\"math/tex; mode=display\">x^{n}=\\sum_{i=0}^{n}S(n,i)x^{\\underline{i}}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{i}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}S(i,j)x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}S(i,j)f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}\\cfrac{1}{j!}\\sum_{k=0}^{j}(-1)^{k}C(j,k)(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{1}{(j-k)!}\\sum_{i=0}^{n-1}(j-k)^{i}f_{i}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{k=0}^{j}\\cfrac{(-1)^{k}}{k!}\\cfrac{F(j-k)}{(j-k)!}x^{\\underline{j}}\\\\\n&=\\sum_{j=0}^{n-1}g_{j}x^{\\underline{j}}\n\\end{aligned}</script><p>所以</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\sum_{j=0}^{i}\\cfrac{(-1)^{j}}{j!}\\cfrac{F(i-j)}{(i-j)!}</script><p>其中求$F(i-j)$需要多点求值。然而我不会。</p>\n<p>告辞。</p>\n<h3 id=\"下降幂多项式转普通多项式\"><a href=\"#下降幂多项式转普通多项式\" class=\"headerlink\" title=\"下降幂多项式转普通多项式\"></a><a href=\"https://www.luogu.org/problemnew/show/P5393\">下降幂多项式转普通多项式</a></h3><script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}s(n,i)x^{i}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}f_{i}x^{\\underline{i}}&=\\sum_{i=0}^{n-1}f_{i}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)x^{j}\\\\\n&=\\sum_{j=0}^{n-1}\\sum_{i=0}^{n-1}(-1)^{i-j}s(i,j)f_{i}x^{j}\n\\end{aligned}</script><p>……告辞。</p>\n<h3 id=\"下降幂多项式乘法\"><a href=\"#下降幂多项式乘法\" class=\"headerlink\" title=\"下降幂多项式乘法\"></a><a href=\"https://www.luogu.org/problemnew/show/P5394\">下降幂多项式乘法</a></h3><p>根据提示，一个下降幂多项式可以唯一确定一个次数相同的普通多项式，我们只需要转过去乘起来再转回来就好了！</p>\n<p>……大概吧。</p>\n<h3 id=\"第二类斯特林数·行\"><a href=\"#第二类斯特林数·行\" class=\"headerlink\" title=\"第二类斯特林数·行\"></a><a href=\"https://www.luogu.org/problemnew/show/P5395\">第二类斯特林数·行</a></h3><p>紫题警告。不过的确简单。第二类斯特林数的通项公式推一推就能推成卷积形式。</p>\n<h3 id=\"第二类斯特林数·列\"><a href=\"#第二类斯特林数·列\" class=\"headerlink\" title=\"第二类斯特林数·列\"></a><a href=\"https://www.luogu.org/problemnew/show/P5396\">第二类斯特林数·列</a></h3><p><del>不会。抄的题解。</del></p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">S_{m}(x)=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}</script><p>利用第二类斯特林数的递推公式</p>\n<script type=\"math/tex; mode=display\">S(n,m)=S(n-1,m-1)+mS(n-1,m)</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nS_{m}(x)&=\\sum_{i=0}^{+\\infty}S(i,m)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(S(i-1,m-1)+mS(i-1,m))x^{i}\\\\\n&=S_{m-1}(x)x+mS_{m}(x)x\\\\\n&=\\cfrac{S_{m-1}(x)x}{1-mx}\\\\\n&=\\cfrac{x^{m}}{\\prod_{i=1}^{m}(1-ix)}\n\\end{aligned}</script><p>关于类似$\\prod(1-ix)$这种的怎么计算……我怎么觉得我提过好几遍了呢（</p>\n<h3 id=\"第一类斯特林数·行\"><a href=\"#第一类斯特林数·行\" class=\"headerlink\" title=\"第一类斯特林数·行\"></a><a href=\"https://www.luogu.org/problemnew/show/P5408\">第一类斯特林数·行</a></h3><p>思路与「第二类斯特林数·列」类似。</p>\n<script type=\"math/tex; mode=display\">s(n,m)=s(n-1,m-1)+(n-1)s(n-1,m)</script><script type=\"math/tex; mode=display\">\\begin{aligned}\ns_{n}(x)&=\\sum_{i=0}^{+\\infty}s(n,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}(s(n-1,i-1)+(n-1)s(n-1,i))x^{i}\\\\\n&=(n-1+x)s_{n-1}(x)\\\\\n&=\\prod_{i=0}^{n-1}(i+x)\n\\end{aligned}</script><h3 id=\"第一类斯特林数·列\"><a href=\"#第一类斯特林数·列\" class=\"headerlink\" title=\"第一类斯特林数·列\"></a><a href=\"https://www.luogu.org/problemnew/show/P5408\">第一类斯特林数·列</a></h3><p>我们发现「第二类斯特林数·列」和「第一类斯特林数·行」的思路行不通了。</p>\n<p><del>题解，打开。</del></p>\n<p>我们来观察一下这个式子</p>\n<script type=\"math/tex; mode=display\">(1+x)^{t}</script><p><del>似乎并没有什么用。</del></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(1+x)^{t}&=\\sum_{i=0}^{t}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}C(t,i)x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{t^{\\underline{i}}}{i!}x^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}(-1)^{i-j}s(i,j)t^{j}x^{i}\\\\\n&=\\sum_{j=0}^{+\\infty}\\sum_{i=j}^{+\\infty}\\cfrac{1}{i!}(-1)^{i-j}s(i,j)x^{i}t^{j}\\\\\n(1+x)^{t}&=e^{t\\ln(1+x)}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{(1+x)^{i}}{i!}t^{i}\\\\\n&=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}\n\\end{aligned}</script><p>根据上面两个不同的整理过程，我们有</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{+\\infty}\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}t^{i}=\\sum_{i=0}^{+\\infty}\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}t^{i}</script><p>进一步地</p>\n<script type=\"math/tex; mode=display\">\\sum_{j=i}^{+\\infty}\\cfrac{1}{j!}(-1)^{j-i}s(j,i)x^{j}=\\cfrac{1}{i!}\\sum_{j=0}^{i}C(i,j)x^{j}</script>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-05-11T00:16:15.000Z","title":"「CF570D」Tree Requests","password":null,"_content":"[传送门](http://codeforces.com/problemset/problem/570/D)\n\n<!-- more -->\n\n听说是道dsu on tree的题。然而我不会dsu（\n\n我们把题目给的字母$c$转化成$2^{c-\\mathrm{a}}$。这样如果一些节点的权值异或和是$2^{k}(k\\in\\mathbb{N}^{+})$或$0$，它们就能够排列成回文串。\n\n我们想到，如果我们能将这些节点重新编号，使得每个询问涉及到的所有节点的新编号都是一个连续的区间，我们就可以直接提取出前缀和。\n\n那么如何编号？BFS序。\n\n一个显然的性质是，如果我们在构建DFS序和BFS序时访问每条边的顺序一致，那么对于深度相同且BFS序递增的一段区间，它们的DFS序一定也是递增的。\n\n于是我们在构建BFS序时预处理每个深度的节点的对应区间，然后二分定位到$v_{i}$的子树内的部分。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 500000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,ec;\nint des[maxn+1],suc[maxn+1],las[maxn+1];\nint dfn[maxn+1],dep[maxn+1],size[maxn+1],h[maxn+1],p[maxn+1],bfn[maxn+1],lwr[maxn+2];\nint a[maxn+1],val[maxn+1];\n\ninline void connect(re int x,re int y){\n\tdes[++ec]=y;\n\tsuc[ec]=las[x];\n\tlas[x]=ec;\n}\n\nvoid dfs(re int cur,re int ftr){\n\tdfn[cur]=++dfn[0];\n\tdep[cur]=dep[ftr]+1;\n\tsize[cur]=1;\n\tfor(re int i=las[cur];i;i=suc[i]){\n\t\tdfs(des[i],cur);\n\t\tsize[cur]+=size[des[i]];\n\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=2;i<=n;++i){\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tconnect(x,i);\n\t}\n\tdfs(1,0);\n\th[1]=1;\n\tfor(re int head=0,tail=1;head<tail;){\n\t\tre int x=h[++head];\n\t\tp[head]=dfn[x];\n\t\tbfn[x]=head;\n\t\tdep[x]>dep[h[head-1]]&&(lwr[dep[x]]=head);\n\t\tfor(re int i=las[x];i;i=suc[i])\n\t\t\th[++tail]=des[i];\n\t}\n\tlwr[dep[h[n]]+1]=n+1;\n\tfor(re int i=1;i<=n;++i){\n\t\tre char c=cltstream::gc();\n\t\tfor(;c<'a'||c>'z';c=cltstream::gc());\n\t\ta[i]=1<<(c-'a');\n\t}\n\tfor(re int i=1;i<=n;++i)\n\t\tval[i]=val[i-1]^a[h[i]];\n\tfor(re int i=1;i<=m;++i){\n\t\tint x,y;\n\t\tcltstream::read(x);\n\t\tcltstream::read(y);\n\t\tre int L=std::lower_bound(p+lwr[y],p+lwr[y+1],dfn[x])-p;\n\t\tre int R=std::lower_bound(p+lwr[y],p+lwr[y+1],dfn[x]+size[x])-p-1;\n\t\tif(L<=R){\n\t\t\tre int v=val[R]^val[L-1];\n\t\t\tif((v&(v-1))==0)\n\t\t\t\tcltstream::pc('Y'),cltstream::pc('e'),cltstream::pc('s'),cltstream::pc(10);\n\t\t\telse\n\t\t\t\tcltstream::pc('N'),cltstream::pc('o'),cltstream::pc(10);\n\t\t}\n\t\telse\n\t\t\tcltstream::pc('Y'),cltstream::pc('e'),cltstream::pc('s'),cltstream::pc(10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-05-11-cf570d-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-05-11 08:16:15\ntitle: 「CF570D」Tree Requests\ntags:\n  - DFS序\n  - BFS序\ncategories:\n  - 题解\npassword:\n---\n[传送门](http://codeforces.com/problemset/problem/570/D)\n\n<!-- more -->\n\n听说是道dsu on tree的题。然而我不会dsu（\n\n我们把题目给的字母$c$转化成$2^{c-\\mathrm{a}}$。这样如果一些节点的权值异或和是$2^{k}(k\\in\\mathbb{N}^{+})$或$0$，它们就能够排列成回文串。\n\n我们想到，如果我们能将这些节点重新编号，使得每个询问涉及到的所有节点的新编号都是一个连续的区间，我们就可以直接提取出前缀和。\n\n那么如何编号？BFS序。\n\n一个显然的性质是，如果我们在构建DFS序和BFS序时访问每条边的顺序一致，那么对于深度相同且BFS序递增的一段区间，它们的DFS序一定也是递增的。\n\n于是我们在构建BFS序时预处理每个深度的节点的对应区间，然后二分定位到$v_{i}$的子树内的部分。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 500000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,ec;\nint des[maxn+1],suc[maxn+1],las[maxn+1];\nint dfn[maxn+1],dep[maxn+1],size[maxn+1],h[maxn+1],p[maxn+1],bfn[maxn+1],lwr[maxn+2];\nint a[maxn+1],val[maxn+1];\n\ninline void connect(re int x,re int y){\n\tdes[++ec]=y;\n\tsuc[ec]=las[x];\n\tlas[x]=ec;\n}\n\nvoid dfs(re int cur,re int ftr){\n\tdfn[cur]=++dfn[0];\n\tdep[cur]=dep[ftr]+1;\n\tsize[cur]=1;\n\tfor(re int i=las[cur];i;i=suc[i]){\n\t\tdfs(des[i],cur);\n\t\tsize[cur]+=size[des[i]];\n\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=2;i<=n;++i){\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tconnect(x,i);\n\t}\n\tdfs(1,0);\n\th[1]=1;\n\tfor(re int head=0,tail=1;head<tail;){\n\t\tre int x=h[++head];\n\t\tp[head]=dfn[x];\n\t\tbfn[x]=head;\n\t\tdep[x]>dep[h[head-1]]&&(lwr[dep[x]]=head);\n\t\tfor(re int i=las[x];i;i=suc[i])\n\t\t\th[++tail]=des[i];\n\t}\n\tlwr[dep[h[n]]+1]=n+1;\n\tfor(re int i=1;i<=n;++i){\n\t\tre char c=cltstream::gc();\n\t\tfor(;c<'a'||c>'z';c=cltstream::gc());\n\t\ta[i]=1<<(c-'a');\n\t}\n\tfor(re int i=1;i<=n;++i)\n\t\tval[i]=val[i-1]^a[h[i]];\n\tfor(re int i=1;i<=m;++i){\n\t\tint x,y;\n\t\tcltstream::read(x);\n\t\tcltstream::read(y);\n\t\tre int L=std::lower_bound(p+lwr[y],p+lwr[y+1],dfn[x])-p;\n\t\tre int R=std::lower_bound(p+lwr[y],p+lwr[y+1],dfn[x]+size[x])-p-1;\n\t\tif(L<=R){\n\t\t\tre int v=val[R]^val[L-1];\n\t\t\tif((v&(v-1))==0)\n\t\t\t\tcltstream::pc('Y'),cltstream::pc('e'),cltstream::pc('s'),cltstream::pc(10);\n\t\t\telse\n\t\t\t\tcltstream::pc('N'),cltstream::pc('o'),cltstream::pc(10);\n\t\t}\n\t\telse\n\t\t\tcltstream::pc('Y'),cltstream::pc('e'),cltstream::pc('s'),cltstream::pc(10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n","slug":"cf570d-solution","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0p002hmku9bdad5kbx","content":"<p><a href=\"http://codeforces.com/problemset/problem/570/D\">传送门</a></p>\n<a id=\"more\"></a>\n<p>听说是道dsu on tree的题。然而我不会dsu（</p>\n<p>我们把题目给的字母$c$转化成$2^{c-\\mathrm{a}}$。这样如果一些节点的权值异或和是$2^{k}(k\\in\\mathbb{N}^{+})$或$0$，它们就能够排列成回文串。</p>\n<p>我们想到，如果我们能将这些节点重新编号，使得每个询问涉及到的所有节点的新编号都是一个连续的区间，我们就可以直接提取出前缀和。</p>\n<p>那么如何编号？BFS序。</p>\n<p>一个显然的性质是，如果我们在构建DFS序和BFS序时访问每条边的顺序一致，那么对于深度相同且BFS序递增的一段区间，它们的DFS序一定也是递增的。</p>\n<p>于是我们在构建BFS序时预处理每个深度的节点的对应区间，然后二分定位到$v_{i}$的子树内的部分。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 500000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,ec;</span><br><span class=\"line\"><span class=\"keyword\">int</span> des[maxn+<span class=\"number\">1</span>],suc[maxn+<span class=\"number\">1</span>],las[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dfn[maxn+<span class=\"number\">1</span>],dep[maxn+<span class=\"number\">1</span>],size[maxn+<span class=\"number\">1</span>],h[maxn+<span class=\"number\">1</span>],p[maxn+<span class=\"number\">1</span>],bfn[maxn+<span class=\"number\">1</span>],lwr[maxn+<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[maxn+<span class=\"number\">1</span>],val[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    des[++ec]=y;</span><br><span class=\"line\">    suc[ec]=las[x];</span><br><span class=\"line\">    las[x]=ec;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    dfn[cur]=++dfn[<span class=\"number\">0</span>];</span><br><span class=\"line\">    dep[cur]=dep[ftr]+<span class=\"number\">1</span>;</span><br><span class=\"line\">    size[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])&#123;</span><br><span class=\"line\">        dfs(des[i],cur);</span><br><span class=\"line\">        size[cur]+=size[des[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        connect(x,i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dfs(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    h[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> head=<span class=\"number\">0</span>,tail=<span class=\"number\">1</span>;head&lt;tail;)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> x=h[++head];</span><br><span class=\"line\">        p[head]=dfn[x];</span><br><span class=\"line\">        bfn[x]=head;</span><br><span class=\"line\">        dep[x]&gt;dep[h[head<span class=\"number\">-1</span>]]&amp;&amp;(lwr[dep[x]]=head);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[x];i;i=suc[i])</span><br><span class=\"line\">            h[++tail]=des[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lwr[dep[h[n]]+<span class=\"number\">1</span>]=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">char</span> c=cltstream::gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c&lt;<span class=\"string\">'a'</span>||c&gt;<span class=\"string\">'z'</span>;c=cltstream::gc());</span><br><span class=\"line\">        a[i]=<span class=\"number\">1</span>&lt;&lt;(c-<span class=\"string\">'a'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        val[i]=val[i<span class=\"number\">-1</span>]^a[h[i]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        cltstream::read(y);</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> L=<span class=\"built_in\">std</span>::lower_bound(p+lwr[y],p+lwr[y+<span class=\"number\">1</span>],dfn[x])-p;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> R=<span class=\"built_in\">std</span>::lower_bound(p+lwr[y],p+lwr[y+<span class=\"number\">1</span>],dfn[x]+size[x])-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=R)&#123;</span><br><span class=\"line\">            re <span class=\"keyword\">int</span> v=val[R]^val[L<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((v&amp;(v<span class=\"number\">-1</span>))==<span class=\"number\">0</span>)</span><br><span class=\"line\">                cltstream::pc(<span class=\"string\">'Y'</span>),cltstream::pc(<span class=\"string\">'e'</span>),cltstream::pc(<span class=\"string\">'s'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                cltstream::pc(<span class=\"string\">'N'</span>),cltstream::pc(<span class=\"string\">'o'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            cltstream::pc(<span class=\"string\">'Y'</span>),cltstream::pc(<span class=\"string\">'e'</span>),cltstream::pc(<span class=\"string\">'s'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://codeforces.com/problemset/problem/570/D\">传送门</a></p>","more":"<p>听说是道dsu on tree的题。然而我不会dsu（</p>\n<p>我们把题目给的字母$c$转化成$2^{c-\\mathrm{a}}$。这样如果一些节点的权值异或和是$2^{k}(k\\in\\mathbb{N}^{+})$或$0$，它们就能够排列成回文串。</p>\n<p>我们想到，如果我们能将这些节点重新编号，使得每个询问涉及到的所有节点的新编号都是一个连续的区间，我们就可以直接提取出前缀和。</p>\n<p>那么如何编号？BFS序。</p>\n<p>一个显然的性质是，如果我们在构建DFS序和BFS序时访问每条边的顺序一致，那么对于深度相同且BFS序递增的一段区间，它们的DFS序一定也是递增的。</p>\n<p>于是我们在构建BFS序时预处理每个深度的节点的对应区间，然后二分定位到$v_{i}$的子树内的部分。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 500000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,ec;</span><br><span class=\"line\"><span class=\"keyword\">int</span> des[maxn+<span class=\"number\">1</span>],suc[maxn+<span class=\"number\">1</span>],las[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dfn[maxn+<span class=\"number\">1</span>],dep[maxn+<span class=\"number\">1</span>],size[maxn+<span class=\"number\">1</span>],h[maxn+<span class=\"number\">1</span>],p[maxn+<span class=\"number\">1</span>],bfn[maxn+<span class=\"number\">1</span>],lwr[maxn+<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[maxn+<span class=\"number\">1</span>],val[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    des[++ec]=y;</span><br><span class=\"line\">    suc[ec]=las[x];</span><br><span class=\"line\">    las[x]=ec;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    dfn[cur]=++dfn[<span class=\"number\">0</span>];</span><br><span class=\"line\">    dep[cur]=dep[ftr]+<span class=\"number\">1</span>;</span><br><span class=\"line\">    size[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])&#123;</span><br><span class=\"line\">        dfs(des[i],cur);</span><br><span class=\"line\">        size[cur]+=size[des[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        connect(x,i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dfs(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    h[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> head=<span class=\"number\">0</span>,tail=<span class=\"number\">1</span>;head&lt;tail;)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> x=h[++head];</span><br><span class=\"line\">        p[head]=dfn[x];</span><br><span class=\"line\">        bfn[x]=head;</span><br><span class=\"line\">        dep[x]&gt;dep[h[head<span class=\"number\">-1</span>]]&amp;&amp;(lwr[dep[x]]=head);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[x];i;i=suc[i])</span><br><span class=\"line\">            h[++tail]=des[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lwr[dep[h[n]]+<span class=\"number\">1</span>]=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">char</span> c=cltstream::gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c&lt;<span class=\"string\">'a'</span>||c&gt;<span class=\"string\">'z'</span>;c=cltstream::gc());</span><br><span class=\"line\">        a[i]=<span class=\"number\">1</span>&lt;&lt;(c-<span class=\"string\">'a'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        val[i]=val[i<span class=\"number\">-1</span>]^a[h[i]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        cltstream::read(y);</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> L=<span class=\"built_in\">std</span>::lower_bound(p+lwr[y],p+lwr[y+<span class=\"number\">1</span>],dfn[x])-p;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> R=<span class=\"built_in\">std</span>::lower_bound(p+lwr[y],p+lwr[y+<span class=\"number\">1</span>],dfn[x]+size[x])-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=R)&#123;</span><br><span class=\"line\">            re <span class=\"keyword\">int</span> v=val[R]^val[L<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((v&amp;(v<span class=\"number\">-1</span>))==<span class=\"number\">0</span>)</span><br><span class=\"line\">                cltstream::pc(<span class=\"string\">'Y'</span>),cltstream::pc(<span class=\"string\">'e'</span>),cltstream::pc(<span class=\"string\">'s'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                cltstream::pc(<span class=\"string\">'N'</span>),cltstream::pc(<span class=\"string\">'o'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            cltstream::pc(<span class=\"string\">'Y'</span>),cltstream::pc(<span class=\"string\">'e'</span>),cltstream::pc(<span class=\"string\">'s'</span>),cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-08-02T08:19:20.000Z","title":"常系数齐次线性递推式第n项的计算","password":null,"_content":"没想到我竟然还有再次回到机房的一天。\n\n~~在家颓了两个月了（~~\n\n没想到我竟然还有再次开始写题的一天。\n\n~~luogu都掉蓝了（~~\n\n没想到我竟然还有再次更新blog的一天。\n\n~~上一次还是五月份的时候（~~\n\n我也不知道为什么我要学这么个东西（指标题），而且它好像还没什么用。\n\n反正我就是学了。\n\n~~谁能告诉我递推怎么翻译成英语。扔给google它拼命告诉我recursion（~~\n\n好像扯得有点多的样子。\n\n[传送门](https://www.luogu.org/problem/P4723)\n\n<!-- more -->\n\n首先我们分析一下我们需要干什么(?)。\n\n我们需要计算一个满足以下三个要求的递推数列：\n\n1. 「常系数」，指递推过程中用到的系数与下标$n$无关。\n2. 「齐次」，指递推式中不存在常数项。\n3. 「线性」，指递推式中仅存在一次项（算上系数是二次）。\n\n~~不过好像存在常数项也能做的样子。~~\n\n此类递推式一般具有以下形式\n\n$$a_{n}=\\sum_{i=1}^{k}f_{i}a_{n-i}$$\n\n其中$f_{1},f_{2},\\cdots,f_{k}$为系数数列。\n\n上式仅针对于$n\\geqslant k$的情况，$n\\lt k$时$a_{n}$会被给出。\n\n如下定义初始向量$S$\n\n$$\\begin{bmatrix}\n&a_{0}&\\\\\n&a_{1}\\\\\n&a_{2}\\\\\n&\\vdots\\\\\n&a_{k-3}\\\\\n&a_{k-2}\\\\\n&a_{k-1}\n\\end{bmatrix}$$\n\n如下构造矩阵$A$\n\n$$\\begin{bmatrix}\n&0&1&0&\\cdots&0&0&0&\\\\\n&0&0&1&\\cdots&0&0&0\\\\\n&0&0&0&\\cdots&0&0&0\\\\\n&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n&0&0&0&\\cdots&0&1&0\\\\\n&0&0&0&\\cdots&0&0&1\\\\\n&f_{k}&f_{k-1}&f_{k-2}&\\cdots&f_{3}&f_{2}&f_{1}\n\\end{bmatrix}$$\n\n我们有\n\n$$a_{n}=(A^{n}S)_{0}$$\n\n于是我们计算出$A^{n}$即可。但该过程需要的时间复杂度是$O(k^{3}\\log n)$的。\n\n假设，我们有了一个奇妙的序列$q_{0},q_{1},\\cdots,q_{k-1}$，它满足\n\n$$A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}$$\n\n这样一来，我们就可以在$O(k^{4})$的时间复杂度内……\n\n不，实际上我们并不需要知道整个$A^{n}$，我们仅需要知道$A^{n}S$，或者更进一步地，知道$(A^{n}S)_{0}$即可。\n\n我们把上式两边乘以$S$，然后整理\n\n$$\\begin{aligned}\nA^{n}S&=\\left(\\sum_{i=0}^{k-1}q_{i}A^{i}\\right)S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}A^{i}S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)\\\\\n(A^{n}S)_{0}&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)_{0}\\\\\na_{n}&=\\sum_{i=0}^{k-1}q_{i}a_{i}\n\\end{aligned}$$\n\n我们于是得到这样的式子。这使得我们能够在$O(k)$的时间复杂度内计算答案。\n\n然后我们考虑如何构造$q_{i}$。\n\n注意到$\\sum_{i=0}^{k-1}q_{i}A^{i}$的次数比$A^{n}$低，我们令\n\n$$A^{n}=P(A)G(A)+Q(A)$$\n\n其中$P,G,Q$是三个矩阵多项式，并且我们钦定$G$的次数是$k$，$PG$的次数是$n$。\n\n如果说，这个$G$还满足$G(A)=0$，我们就有\n\n$$A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}=Q(A)$$\n\n也就是说，我们要求的$q_{i}$，就是$Q$的系数，而$Q$是$A^{n}$对$G$取模的结果。\n\n这一过程可以通过快速幂实现，只是取模从整数取模变成了多项式取模。时间复杂度$O(k\\log k\\log n)$。\n\n于是我们考虑如何构造$G$的系数$g_{i}$。\n\n通过查阅题解(??)，我们得知\n\n$$g_{i}=\\begin{cases}\n&-f_{k-i}\\;\\;\\;\\;\\;\\;\\;\\;&(i\\lt k)\\\\\n&1&(i=k)\n\\end{cases}$$\n\n~~证明？不会，告辞。~~\n\n总结一下就是：\n\n1. 构造多项式$G$。\n2. 计算多项式$Q=A^{n}\\operatorname{mod} G$。\n3. 计算$a_{n}=\\sum_{i=0}^{k-1}q_{i}a_{i}$。\n\n> Updated on 2019-08-04\n>\n> ![](/images/TIM截图20190804192526.png)\n>\n> 告辞.jpg\n","source":"_posts/2019-08-02-linear-ditui-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-08-02 16:19:20\ntitle: 常系数齐次线性递推式第n项的计算\ntags:\n  - 向量\n  - 矩阵乘法\n  - NTT\ncategories:\n  - 瞎扯\npassword:\n---\n没想到我竟然还有再次回到机房的一天。\n\n~~在家颓了两个月了（~~\n\n没想到我竟然还有再次开始写题的一天。\n\n~~luogu都掉蓝了（~~\n\n没想到我竟然还有再次更新blog的一天。\n\n~~上一次还是五月份的时候（~~\n\n我也不知道为什么我要学这么个东西（指标题），而且它好像还没什么用。\n\n反正我就是学了。\n\n~~谁能告诉我递推怎么翻译成英语。扔给google它拼命告诉我recursion（~~\n\n好像扯得有点多的样子。\n\n[传送门](https://www.luogu.org/problem/P4723)\n\n<!-- more -->\n\n首先我们分析一下我们需要干什么(?)。\n\n我们需要计算一个满足以下三个要求的递推数列：\n\n1. 「常系数」，指递推过程中用到的系数与下标$n$无关。\n2. 「齐次」，指递推式中不存在常数项。\n3. 「线性」，指递推式中仅存在一次项（算上系数是二次）。\n\n~~不过好像存在常数项也能做的样子。~~\n\n此类递推式一般具有以下形式\n\n$$a_{n}=\\sum_{i=1}^{k}f_{i}a_{n-i}$$\n\n其中$f_{1},f_{2},\\cdots,f_{k}$为系数数列。\n\n上式仅针对于$n\\geqslant k$的情况，$n\\lt k$时$a_{n}$会被给出。\n\n如下定义初始向量$S$\n\n$$\\begin{bmatrix}\n&a_{0}&\\\\\n&a_{1}\\\\\n&a_{2}\\\\\n&\\vdots\\\\\n&a_{k-3}\\\\\n&a_{k-2}\\\\\n&a_{k-1}\n\\end{bmatrix}$$\n\n如下构造矩阵$A$\n\n$$\\begin{bmatrix}\n&0&1&0&\\cdots&0&0&0&\\\\\n&0&0&1&\\cdots&0&0&0\\\\\n&0&0&0&\\cdots&0&0&0\\\\\n&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n&0&0&0&\\cdots&0&1&0\\\\\n&0&0&0&\\cdots&0&0&1\\\\\n&f_{k}&f_{k-1}&f_{k-2}&\\cdots&f_{3}&f_{2}&f_{1}\n\\end{bmatrix}$$\n\n我们有\n\n$$a_{n}=(A^{n}S)_{0}$$\n\n于是我们计算出$A^{n}$即可。但该过程需要的时间复杂度是$O(k^{3}\\log n)$的。\n\n假设，我们有了一个奇妙的序列$q_{0},q_{1},\\cdots,q_{k-1}$，它满足\n\n$$A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}$$\n\n这样一来，我们就可以在$O(k^{4})$的时间复杂度内……\n\n不，实际上我们并不需要知道整个$A^{n}$，我们仅需要知道$A^{n}S$，或者更进一步地，知道$(A^{n}S)_{0}$即可。\n\n我们把上式两边乘以$S$，然后整理\n\n$$\\begin{aligned}\nA^{n}S&=\\left(\\sum_{i=0}^{k-1}q_{i}A^{i}\\right)S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}A^{i}S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)\\\\\n(A^{n}S)_{0}&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)_{0}\\\\\na_{n}&=\\sum_{i=0}^{k-1}q_{i}a_{i}\n\\end{aligned}$$\n\n我们于是得到这样的式子。这使得我们能够在$O(k)$的时间复杂度内计算答案。\n\n然后我们考虑如何构造$q_{i}$。\n\n注意到$\\sum_{i=0}^{k-1}q_{i}A^{i}$的次数比$A^{n}$低，我们令\n\n$$A^{n}=P(A)G(A)+Q(A)$$\n\n其中$P,G,Q$是三个矩阵多项式，并且我们钦定$G$的次数是$k$，$PG$的次数是$n$。\n\n如果说，这个$G$还满足$G(A)=0$，我们就有\n\n$$A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}=Q(A)$$\n\n也就是说，我们要求的$q_{i}$，就是$Q$的系数，而$Q$是$A^{n}$对$G$取模的结果。\n\n这一过程可以通过快速幂实现，只是取模从整数取模变成了多项式取模。时间复杂度$O(k\\log k\\log n)$。\n\n于是我们考虑如何构造$G$的系数$g_{i}$。\n\n通过查阅题解(??)，我们得知\n\n$$g_{i}=\\begin{cases}\n&-f_{k-i}\\;\\;\\;\\;\\;\\;\\;\\;&(i\\lt k)\\\\\n&1&(i=k)\n\\end{cases}$$\n\n~~证明？不会，告辞。~~\n\n总结一下就是：\n\n1. 构造多项式$G$。\n2. 计算多项式$Q=A^{n}\\operatorname{mod} G$。\n3. 计算$a_{n}=\\sum_{i=0}^{k-1}q_{i}a_{i}$。\n\n> Updated on 2019-08-04\n>\n> ![](/images/TIM截图20190804192526.png)\n>\n> 告辞.jpg\n","slug":"linear-ditui-learning-notes","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0q002lmku99cru1bmy","content":"<p>没想到我竟然还有再次回到机房的一天。</p>\n<p><del>在家颓了两个月了（</del></p>\n<p>没想到我竟然还有再次开始写题的一天。</p>\n<p><del>luogu都掉蓝了（</del></p>\n<p>没想到我竟然还有再次更新blog的一天。</p>\n<p><del>上一次还是五月份的时候（</del></p>\n<p>我也不知道为什么我要学这么个东西（指标题），而且它好像还没什么用。</p>\n<p>反正我就是学了。</p>\n<p><del>谁能告诉我递推怎么翻译成英语。扔给google它拼命告诉我recursion（</del></p>\n<p>好像扯得有点多的样子。</p>\n<p><a href=\"https://www.luogu.org/problem/P4723\">传送门</a></p>\n<a id=\"more\"></a>\n<p>首先我们分析一下我们需要干什么(?)。</p>\n<p>我们需要计算一个满足以下三个要求的递推数列：</p>\n<ol>\n<li>「常系数」，指递推过程中用到的系数与下标$n$无关。</li>\n<li>「齐次」，指递推式中不存在常数项。</li>\n<li>「线性」，指递推式中仅存在一次项（算上系数是二次）。</li>\n</ol>\n<p><del>不过好像存在常数项也能做的样子。</del></p>\n<p>此类递推式一般具有以下形式</p>\n<script type=\"math/tex; mode=display\">a_{n}=\\sum_{i=1}^{k}f_{i}a_{n-i}</script><p>其中$f_{1},f_{2},\\cdots,f_{k}$为系数数列。</p>\n<p>上式仅针对于$n\\geqslant k$的情况，$n\\lt k$时$a_{n}$会被给出。</p>\n<p>如下定义初始向量$S$</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&a_{0}&\\\\\n&a_{1}\\\\\n&a_{2}\\\\\n&\\vdots\\\\\n&a_{k-3}\\\\\n&a_{k-2}\\\\\n&a_{k-1}\n\\end{bmatrix}</script><p>如下构造矩阵$A$</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&0&1&0&\\cdots&0&0&0&\\\\\n&0&0&1&\\cdots&0&0&0\\\\\n&0&0&0&\\cdots&0&0&0\\\\\n&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n&0&0&0&\\cdots&0&1&0\\\\\n&0&0&0&\\cdots&0&0&1\\\\\n&f_{k}&f_{k-1}&f_{k-2}&\\cdots&f_{3}&f_{2}&f_{1}\n\\end{bmatrix}</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">a_{n}=(A^{n}S)_{0}</script><p>于是我们计算出$A^{n}$即可。但该过程需要的时间复杂度是$O(k^{3}\\log n)$的。</p>\n<p>假设，我们有了一个奇妙的序列$q_{0},q_{1},\\cdots,q_{k-1}$，它满足</p>\n<script type=\"math/tex; mode=display\">A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}</script><p>这样一来，我们就可以在$O(k^{4})$的时间复杂度内……</p>\n<p>不，实际上我们并不需要知道整个$A^{n}$，我们仅需要知道$A^{n}S$，或者更进一步地，知道$(A^{n}S)_{0}$即可。</p>\n<p>我们把上式两边乘以$S$，然后整理</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nA^{n}S&=\\left(\\sum_{i=0}^{k-1}q_{i}A^{i}\\right)S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}A^{i}S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)\\\\\n(A^{n}S)_{0}&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)_{0}\\\\\na_{n}&=\\sum_{i=0}^{k-1}q_{i}a_{i}\n\\end{aligned}</script><p>我们于是得到这样的式子。这使得我们能够在$O(k)$的时间复杂度内计算答案。</p>\n<p>然后我们考虑如何构造$q_{i}$。</p>\n<p>注意到$\\sum_{i=0}^{k-1}q_{i}A^{i}$的次数比$A^{n}$低，我们令</p>\n<script type=\"math/tex; mode=display\">A^{n}=P(A)G(A)+Q(A)</script><p>其中$P,G,Q$是三个矩阵多项式，并且我们钦定$G$的次数是$k$，$PG$的次数是$n$。</p>\n<p>如果说，这个$G$还满足$G(A)=0$，我们就有</p>\n<script type=\"math/tex; mode=display\">A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}=Q(A)</script><p>也就是说，我们要求的$q_{i}$，就是$Q$的系数，而$Q$是$A^{n}$对$G$取模的结果。</p>\n<p>这一过程可以通过快速幂实现，只是取模从整数取模变成了多项式取模。时间复杂度$O(k\\log k\\log n)$。</p>\n<p>于是我们考虑如何构造$G$的系数$g_{i}$。</p>\n<p>通过查阅题解(??)，我们得知</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\begin{cases}\n&-f_{k-i}\\;\\;\\;\\;\\;\\;\\;\\;&(i\\lt k)\\\\\n&1&(i=k)\n\\end{cases}</script><p><del>证明？不会，告辞。</del></p>\n<p>总结一下就是：</p>\n<ol>\n<li>构造多项式$G$。</li>\n<li>计算多项式$Q=A^{n}\\operatorname{mod} G$。</li>\n<li>计算$a_{n}=\\sum_{i=0}^{k-1}q_{i}a_{i}$。</li>\n</ol>\n<blockquote>\n<p>Updated on 2019-08-04</p>\n<p><img src=\"/images/TIM截图20190804192526.png\" alt=\"\"></p>\n<p>告辞.jpg</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>没想到我竟然还有再次回到机房的一天。</p>\n<p><del>在家颓了两个月了（</del></p>\n<p>没想到我竟然还有再次开始写题的一天。</p>\n<p><del>luogu都掉蓝了（</del></p>\n<p>没想到我竟然还有再次更新blog的一天。</p>\n<p><del>上一次还是五月份的时候（</del></p>\n<p>我也不知道为什么我要学这么个东西（指标题），而且它好像还没什么用。</p>\n<p>反正我就是学了。</p>\n<p><del>谁能告诉我递推怎么翻译成英语。扔给google它拼命告诉我recursion（</del></p>\n<p>好像扯得有点多的样子。</p>\n<p><a href=\"https://www.luogu.org/problem/P4723\">传送门</a></p>","more":"<p>首先我们分析一下我们需要干什么(?)。</p>\n<p>我们需要计算一个满足以下三个要求的递推数列：</p>\n<ol>\n<li>「常系数」，指递推过程中用到的系数与下标$n$无关。</li>\n<li>「齐次」，指递推式中不存在常数项。</li>\n<li>「线性」，指递推式中仅存在一次项（算上系数是二次）。</li>\n</ol>\n<p><del>不过好像存在常数项也能做的样子。</del></p>\n<p>此类递推式一般具有以下形式</p>\n<script type=\"math/tex; mode=display\">a_{n}=\\sum_{i=1}^{k}f_{i}a_{n-i}</script><p>其中$f_{1},f_{2},\\cdots,f_{k}$为系数数列。</p>\n<p>上式仅针对于$n\\geqslant k$的情况，$n\\lt k$时$a_{n}$会被给出。</p>\n<p>如下定义初始向量$S$</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&a_{0}&\\\\\n&a_{1}\\\\\n&a_{2}\\\\\n&\\vdots\\\\\n&a_{k-3}\\\\\n&a_{k-2}\\\\\n&a_{k-1}\n\\end{bmatrix}</script><p>如下构造矩阵$A$</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&0&1&0&\\cdots&0&0&0&\\\\\n&0&0&1&\\cdots&0&0&0\\\\\n&0&0&0&\\cdots&0&0&0\\\\\n&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n&0&0&0&\\cdots&0&1&0\\\\\n&0&0&0&\\cdots&0&0&1\\\\\n&f_{k}&f_{k-1}&f_{k-2}&\\cdots&f_{3}&f_{2}&f_{1}\n\\end{bmatrix}</script><p>我们有</p>\n<script type=\"math/tex; mode=display\">a_{n}=(A^{n}S)_{0}</script><p>于是我们计算出$A^{n}$即可。但该过程需要的时间复杂度是$O(k^{3}\\log n)$的。</p>\n<p>假设，我们有了一个奇妙的序列$q_{0},q_{1},\\cdots,q_{k-1}$，它满足</p>\n<script type=\"math/tex; mode=display\">A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}</script><p>这样一来，我们就可以在$O(k^{4})$的时间复杂度内……</p>\n<p>不，实际上我们并不需要知道整个$A^{n}$，我们仅需要知道$A^{n}S$，或者更进一步地，知道$(A^{n}S)_{0}$即可。</p>\n<p>我们把上式两边乘以$S$，然后整理</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nA^{n}S&=\\left(\\sum_{i=0}^{k-1}q_{i}A^{i}\\right)S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}A^{i}S\\\\\nA^{n}S&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)\\\\\n(A^{n}S)_{0}&=\\sum_{i=0}^{k-1}q_{i}(A^{i}S)_{0}\\\\\na_{n}&=\\sum_{i=0}^{k-1}q_{i}a_{i}\n\\end{aligned}</script><p>我们于是得到这样的式子。这使得我们能够在$O(k)$的时间复杂度内计算答案。</p>\n<p>然后我们考虑如何构造$q_{i}$。</p>\n<p>注意到$\\sum_{i=0}^{k-1}q_{i}A^{i}$的次数比$A^{n}$低，我们令</p>\n<script type=\"math/tex; mode=display\">A^{n}=P(A)G(A)+Q(A)</script><p>其中$P,G,Q$是三个矩阵多项式，并且我们钦定$G$的次数是$k$，$PG$的次数是$n$。</p>\n<p>如果说，这个$G$还满足$G(A)=0$，我们就有</p>\n<script type=\"math/tex; mode=display\">A^{n}=\\sum_{i=0}^{k-1}q_{i}A^{i}=Q(A)</script><p>也就是说，我们要求的$q_{i}$，就是$Q$的系数，而$Q$是$A^{n}$对$G$取模的结果。</p>\n<p>这一过程可以通过快速幂实现，只是取模从整数取模变成了多项式取模。时间复杂度$O(k\\log k\\log n)$。</p>\n<p>于是我们考虑如何构造$G$的系数$g_{i}$。</p>\n<p>通过查阅题解(??)，我们得知</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\begin{cases}\n&-f_{k-i}\\;\\;\\;\\;\\;\\;\\;\\;&(i\\lt k)\\\\\n&1&(i=k)\n\\end{cases}</script><p><del>证明？不会，告辞。</del></p>\n<p>总结一下就是：</p>\n<ol>\n<li>构造多项式$G$。</li>\n<li>计算多项式$Q=A^{n}\\operatorname{mod} G$。</li>\n<li>计算$a_{n}=\\sum_{i=0}^{k-1}q_{i}a_{i}$。</li>\n</ol>\n<blockquote>\n<p>Updated on 2019-08-04</p>\n<p><img src=\"/images/TIM截图20190804192526.png\" alt=\"\"></p>\n<p>告辞.jpg</p>\n</blockquote>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-08-05T01:01:54.000Z","title":"「Luogu-P5349」幂","password":null,"_content":"[传送门](https://www.luogu.org/problem/P5349)\n\n<!-- more -->\n\n~~其实挺休闲的一道题（~~\n\n$$\\sum_{i=0}f(i)r^{i}=\\sum_{i=0}\\sum_{j=0}^{m}f_{j}i^{j}r^{i}=\\sum_{j=0}^{m}f_{j}\\sum_{i=0}i^{j}r^{i}$$\n\n于是我们设\n\n$$g_{n}=\\sum_{i=0}i^{n}r^{i}$$\n\n$$\\begin{aligned}\ng_{n}&=\\sum_{i=0}i^{n}r^{i}\\\\\n&=\\sum_{i=0}(i-1+1)^{n}r^{i}\\\\\n&=\\sum_{i=0}\\sum_{j=0}^{n}\\binom{n}{j}(i-1)^{j}r^{i}\\\\\n&=\\sum_{j=0}^{n}\\binom{n}{j}\\sum_{i=0}(i-1)^{j}r^{i}\\\\\n&=n!\\sum_{j=0}^{n}\\cfrac{\\sum_{i=0}(i-1)^{j}r^{i-1}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\cfrac{g_{n}}{n!}&=\\sum_{j=0}^{n}\\cfrac{g_{j}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\end{aligned}$$\n\n我们不难发现卷积的形式。于是此题完。告辞。\n\n~~怎么这么短啊（~~\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint unit[2][24],rev[maxn];\nint n,r;\nint fac[maxn],fnv[maxn],F[maxn],G[maxn],H[maxn];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;x=1LL*x*x%mod,y>>=1)\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tint tmp[maxn];\n\tfor(re int i=0;i<maxn;++i)\n\t\tG[i]=tmp[i]=0;\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp[k]=F[k];\n\t\tNTT(G,j,0);\n\t\tNTT(tmp,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t}\n\tfor(re int i=n;i<maxn;++i)\n\t\tG[i]=0;\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tcltstream::read(n);\n\tcltstream::read(r);\n\tfac[0]=fac[1]=fnv[0]=fnv[1]=1;\n\tfor(re int i=2;i<=n;++i)\n\t\tfnv[i]=(mod-1LL*mod/i*fnv[mod%i]%mod)%mod;\n\tfor(re int i=2;i<=n;++i){\n\t\tfac[i]=1LL*fac[i-1]*i%mod;\n\t\tfnv[i]=1LL*fnv[i-1]*fnv[i]%mod;\n\t}\n\tfor(re int i=0;i<=n;++i){\n\t\tcltstream::read(F[i]);\n\t\tH[i]=(mod-1LL*r*fnv[i]%mod)%mod;\n\t}\n\t++H[0];\n\tInv(H,G,n+1);\n\tfor(re int i=0;i<=n;++i)\n\t\tG[i]=1LL*G[i]*fac[i]%mod;\n\tre int ans=0;\n\tfor(re int i=0;i<=n;++i)\n\t\tans=(ans+1LL*F[i]*G[i]%mod)%mod;\n\tcltstream::write(ans);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-08-05-luogu-p5349-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-08-05 09:01:54\ntitle: 「Luogu-P5349」幂\ntags:\n  - NTT\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problem/P5349)\n\n<!-- more -->\n\n~~其实挺休闲的一道题（~~\n\n$$\\sum_{i=0}f(i)r^{i}=\\sum_{i=0}\\sum_{j=0}^{m}f_{j}i^{j}r^{i}=\\sum_{j=0}^{m}f_{j}\\sum_{i=0}i^{j}r^{i}$$\n\n于是我们设\n\n$$g_{n}=\\sum_{i=0}i^{n}r^{i}$$\n\n$$\\begin{aligned}\ng_{n}&=\\sum_{i=0}i^{n}r^{i}\\\\\n&=\\sum_{i=0}(i-1+1)^{n}r^{i}\\\\\n&=\\sum_{i=0}\\sum_{j=0}^{n}\\binom{n}{j}(i-1)^{j}r^{i}\\\\\n&=\\sum_{j=0}^{n}\\binom{n}{j}\\sum_{i=0}(i-1)^{j}r^{i}\\\\\n&=n!\\sum_{j=0}^{n}\\cfrac{\\sum_{i=0}(i-1)^{j}r^{i-1}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\cfrac{g_{n}}{n!}&=\\sum_{j=0}^{n}\\cfrac{g_{j}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\end{aligned}$$\n\n我们不难发现卷积的形式。于是此题完。告辞。\n\n~~怎么这么短啊（~~\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint unit[2][24],rev[maxn];\nint n,r;\nint fac[maxn],fnv[maxn],F[maxn],G[maxn],H[maxn];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;x=1LL*x*x%mod,y>>=1)\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tint tmp[maxn];\n\tfor(re int i=0;i<maxn;++i)\n\t\tG[i]=tmp[i]=0;\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp[k]=F[k];\n\t\tNTT(G,j,0);\n\t\tNTT(tmp,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t}\n\tfor(re int i=n;i<maxn;++i)\n\t\tG[i]=0;\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tcltstream::read(n);\n\tcltstream::read(r);\n\tfac[0]=fac[1]=fnv[0]=fnv[1]=1;\n\tfor(re int i=2;i<=n;++i)\n\t\tfnv[i]=(mod-1LL*mod/i*fnv[mod%i]%mod)%mod;\n\tfor(re int i=2;i<=n;++i){\n\t\tfac[i]=1LL*fac[i-1]*i%mod;\n\t\tfnv[i]=1LL*fnv[i-1]*fnv[i]%mod;\n\t}\n\tfor(re int i=0;i<=n;++i){\n\t\tcltstream::read(F[i]);\n\t\tH[i]=(mod-1LL*r*fnv[i]%mod)%mod;\n\t}\n\t++H[0];\n\tInv(H,G,n+1);\n\tfor(re int i=0;i<=n;++i)\n\t\tG[i]=1LL*G[i]*fac[i]%mod;\n\tre int ans=0;\n\tfor(re int i=0;i<=n;++i)\n\t\tans=(ans+1LL*F[i]*G[i]%mod)%mod;\n\tcltstream::write(ans);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"luogu-p5349-solution","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0r002omku93fqic0w8","content":"<p><a href=\"https://www.luogu.org/problem/P5349\">传送门</a></p>\n<a id=\"more\"></a>\n<p><del>其实挺休闲的一道题（</del></p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}f(i)r^{i}=\\sum_{i=0}\\sum_{j=0}^{m}f_{j}i^{j}r^{i}=\\sum_{j=0}^{m}f_{j}\\sum_{i=0}i^{j}r^{i}</script><p>于是我们设</p>\n<script type=\"math/tex; mode=display\">g_{n}=\\sum_{i=0}i^{n}r^{i}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\ng_{n}&=\\sum_{i=0}i^{n}r^{i}\\\\\n&=\\sum_{i=0}(i-1+1)^{n}r^{i}\\\\\n&=\\sum_{i=0}\\sum_{j=0}^{n}\\binom{n}{j}(i-1)^{j}r^{i}\\\\\n&=\\sum_{j=0}^{n}\\binom{n}{j}\\sum_{i=0}(i-1)^{j}r^{i}\\\\\n&=n!\\sum_{j=0}^{n}\\cfrac{\\sum_{i=0}(i-1)^{j}r^{i-1}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\cfrac{g_{n}}{n!}&=\\sum_{j=0}^{n}\\cfrac{g_{j}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\end{aligned}</script><p>我们不难发现卷积的形式。于是此题完。告辞。</p>\n<p><del>怎么这么短啊（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,r;</span><br><span class=\"line\"><span class=\"keyword\">int</span> fac[maxn],fnv[maxn],F[maxn],G[maxn],H[maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;x=<span class=\"number\">1L</span>L*x*x%mod,y&gt;&gt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tmp[maxn];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;maxn;++i)</span><br><span class=\"line\">        G[i]=tmp[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp[k]=F[k];</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(tmp,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;maxn;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(r);</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>]=fac[<span class=\"number\">1</span>]=fnv[<span class=\"number\">0</span>]=fnv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">        fnv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*fnv[mod%i]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        fac[i]=<span class=\"number\">1L</span>L*fac[i<span class=\"number\">-1</span>]*i%mod;</span><br><span class=\"line\">        fnv[i]=<span class=\"number\">1L</span>L*fnv[i<span class=\"number\">-1</span>]*fnv[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">        H[i]=(mod<span class=\"number\">-1L</span>L*r*fnv[i]%mod)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ++H[<span class=\"number\">0</span>];</span><br><span class=\"line\">    Inv(H,G,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*fac[i]%mod;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        ans=(ans+<span class=\"number\">1L</span>L*F[i]*G[i]%mod)%mod;</span><br><span class=\"line\">    cltstream::write(ans);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problem/P5349\">传送门</a></p>","more":"<p><del>其实挺休闲的一道题（</del></p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}f(i)r^{i}=\\sum_{i=0}\\sum_{j=0}^{m}f_{j}i^{j}r^{i}=\\sum_{j=0}^{m}f_{j}\\sum_{i=0}i^{j}r^{i}</script><p>于是我们设</p>\n<script type=\"math/tex; mode=display\">g_{n}=\\sum_{i=0}i^{n}r^{i}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\ng_{n}&=\\sum_{i=0}i^{n}r^{i}\\\\\n&=\\sum_{i=0}(i-1+1)^{n}r^{i}\\\\\n&=\\sum_{i=0}\\sum_{j=0}^{n}\\binom{n}{j}(i-1)^{j}r^{i}\\\\\n&=\\sum_{j=0}^{n}\\binom{n}{j}\\sum_{i=0}(i-1)^{j}r^{i}\\\\\n&=n!\\sum_{j=0}^{n}\\cfrac{\\sum_{i=0}(i-1)^{j}r^{i-1}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\cfrac{g_{n}}{n!}&=\\sum_{j=0}^{n}\\cfrac{g_{j}}{j!}\\cfrac{r}{(n-j)!}\\\\\n\\end{aligned}</script><p>我们不难发现卷积的形式。于是此题完。告辞。</p>\n<p><del>怎么这么短啊（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,r;</span><br><span class=\"line\"><span class=\"keyword\">int</span> fac[maxn],fnv[maxn],F[maxn],G[maxn],H[maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;x=<span class=\"number\">1L</span>L*x*x%mod,y&gt;&gt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tmp[maxn];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;maxn;++i)</span><br><span class=\"line\">        G[i]=tmp[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp[k]=F[k];</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(tmp,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;maxn;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(r);</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>]=fac[<span class=\"number\">1</span>]=fnv[<span class=\"number\">0</span>]=fnv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">        fnv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*fnv[mod%i]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        fac[i]=<span class=\"number\">1L</span>L*fac[i<span class=\"number\">-1</span>]*i%mod;</span><br><span class=\"line\">        fnv[i]=<span class=\"number\">1L</span>L*fnv[i<span class=\"number\">-1</span>]*fnv[i]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">        H[i]=(mod<span class=\"number\">-1L</span>L*r*fnv[i]%mod)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ++H[<span class=\"number\">0</span>];</span><br><span class=\"line\">    Inv(H,G,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*fac[i]%mod;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        ans=(ans+<span class=\"number\">1L</span>L*F[i]*G[i]%mod)%mod;</span><br><span class=\"line\">    cltstream::write(ans);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-05-24T00:33:29.000Z","title":"大概算是个斯特林数总结？","password":null,"_content":"看到wzx写了个斯特林数总结，于是也想来写一个。\n\n<!-- more -->\n\n### 第二类斯特林数\n\n#### 定义\n\n将$n$个有标号的元素放入$m$个无标号的集合，且不允许空集的方案数。记为${n\\brace m}$。\n\n#### 递推式\n\n$${n\\brace m}={n-1\\brace m-1}+m{n-1\\brace m}$$\n\n考虑第$n$个元素单独构成一个集合还是加入之前的某个集合即可。\n\n$${n\\brace 0}=1\\qquad(n\\geqslant 0)$$\n\n$${n\\brace n}=0\\qquad(n\\gt 0)$$\n\n#### 通项公式\n\n$${n\\brace m}=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}{m\\choose i}(m-i)^{n}=\\sum_{i=0}^{m}\\cfrac{(-1)^{i}}{i!}\\cfrac{(m-i)^{n}}{(m-i)!}$$\n\n大力容斥即可。\n\n不难发现等式最右边形成了卷积的形式，这使得我们能够在$O(n\\log n)$的时间复杂度内计算出${n\\brace i}$。\n\n#### 自然数的次幂及幂和\n\n$$m^{n}=\\sum_{i=1}^{m}{m\\choose i}i!{n\\brace i}$$\n\n考虑将$n$个有标号的元素任意地放入$m$个有标号的集合。每个元素都有$m$种选择，因此总方案数为$m^{n}$。\n\n在这一过程中，可能只有部分集合非空。我们枚举这些非空集合的排列，然后将所有元素放入这些集合，并且这次不允许空集。\n\n显然上述两种方法是等价的。\n\n利用上面这个公式，我们还可以计算自然数的幂和。\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}i^{m}&=[m=0]+\\sum_{i=1}^{n-1}i^{m}\\\\\n&=[m=0]+\\sum_{i=1}^{n-1}\\sum_{j=1}^{i}{i\\choose j}j!{m\\brace j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}\\sum_{i=j}^{n-1}{i\\choose j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}{n\\choose j+1}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}{m\\brace j}\\cfrac{n^{\\underline{j+1}}}{j+1}\n\\end{aligned}$$\n\n关于$\\sum_{i=j}^{n-1}{i\\choose j}={n\\choose j+1}$，我们可以认为，等式左边枚举了一个最左侧的位置，然后再在这个位置右侧选择$j$个元素。\n\n#### 次幂转下降幂\n\n$$x^{n}=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}$$\n\n考虑数学归纳法。\n\n$$\\begin{aligned}\nx^{n+1}&=x\\cdot x^{n}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x\\cdot x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}(x-i+i)x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i+1}}+\\sum_{i=0}^{n}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n\\brace i-1}x^{\\underline{i}}+\\sum_{i=0}^{n+1}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n+1\\brace i}x^{\\underline{i}}\n\\end{aligned}$$\n\n### 第一类斯特林数\n\n这里我们讨论无符号第一类斯特林数。\n\n#### 定义\n\n$n$个有标号的元素构成$m$个圆排列的方案数。记为${n\\brack m}$。\n\n#### 递推式\n\n$${n\\brack m}={n-1\\brack m-1}+(n-1){n-1\\brack m}$$\n\n考虑第$n$个元素单独构成一个圆排列还是插入到之前的某个元素之前即可。\n\n$${n\\brack 0}=1\\qquad(n\\geqslant 0)$$\n\n$${n\\brack n}=0\\qquad(n\\gt 0)$$\n\n#### 通项公式\n\n大概……没有吧。\n\n#### 下降幂转次幂\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}$$\n\n考虑数学归纳法。\n\n$$\\begin{aligned}\nx^{\\underline{n+1}}&=(x-n)x^{\\underline{n}}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}(x-n)x^{i}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i+1}+\\sum_{i=0}^{n}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i-1}x^{i}+\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n+1\\brack i}x^{i}\n\\end{aligned}$$\n\n### 斯特林反演\n\n观察下面两个式子\n\n$$\\begin{aligned}\nx^{n}&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}\\\\\nx^{\\underline{n}}&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}\n\\end{aligned}$$\n\n将它们套在一起\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}\\sum_{j=0}^{i}{i\\brace j}x^{\\underline{j}}\\\\=\\sum_{j=0}^{n}\\sum_{i=j}^{n}(-1)^{n-i}{n\\brack i}{i\\brace j}x^{\\underline{j}}$$\n\n于是\n\n$$\\sum_{i=m}^{n}(-1)^{n-i}{n\\brack i}{i\\brace m}=[m=n]$$\n","source":"_posts/2019-05-24-strling-number-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-05-24 08:33:29\ntitle: 大概算是个斯特林数总结？\ntags:\n  - 斯特林数\ncategories:\n  - 瞎扯\npassword:\n---\n看到wzx写了个斯特林数总结，于是也想来写一个。\n\n<!-- more -->\n\n### 第二类斯特林数\n\n#### 定义\n\n将$n$个有标号的元素放入$m$个无标号的集合，且不允许空集的方案数。记为${n\\brace m}$。\n\n#### 递推式\n\n$${n\\brace m}={n-1\\brace m-1}+m{n-1\\brace m}$$\n\n考虑第$n$个元素单独构成一个集合还是加入之前的某个集合即可。\n\n$${n\\brace 0}=1\\qquad(n\\geqslant 0)$$\n\n$${n\\brace n}=0\\qquad(n\\gt 0)$$\n\n#### 通项公式\n\n$${n\\brace m}=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}{m\\choose i}(m-i)^{n}=\\sum_{i=0}^{m}\\cfrac{(-1)^{i}}{i!}\\cfrac{(m-i)^{n}}{(m-i)!}$$\n\n大力容斥即可。\n\n不难发现等式最右边形成了卷积的形式，这使得我们能够在$O(n\\log n)$的时间复杂度内计算出${n\\brace i}$。\n\n#### 自然数的次幂及幂和\n\n$$m^{n}=\\sum_{i=1}^{m}{m\\choose i}i!{n\\brace i}$$\n\n考虑将$n$个有标号的元素任意地放入$m$个有标号的集合。每个元素都有$m$种选择，因此总方案数为$m^{n}$。\n\n在这一过程中，可能只有部分集合非空。我们枚举这些非空集合的排列，然后将所有元素放入这些集合，并且这次不允许空集。\n\n显然上述两种方法是等价的。\n\n利用上面这个公式，我们还可以计算自然数的幂和。\n\n$$\\begin{aligned}\n\\sum_{i=0}^{n-1}i^{m}&=[m=0]+\\sum_{i=1}^{n-1}i^{m}\\\\\n&=[m=0]+\\sum_{i=1}^{n-1}\\sum_{j=1}^{i}{i\\choose j}j!{m\\brace j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}\\sum_{i=j}^{n-1}{i\\choose j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}{n\\choose j+1}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}{m\\brace j}\\cfrac{n^{\\underline{j+1}}}{j+1}\n\\end{aligned}$$\n\n关于$\\sum_{i=j}^{n-1}{i\\choose j}={n\\choose j+1}$，我们可以认为，等式左边枚举了一个最左侧的位置，然后再在这个位置右侧选择$j$个元素。\n\n#### 次幂转下降幂\n\n$$x^{n}=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}$$\n\n考虑数学归纳法。\n\n$$\\begin{aligned}\nx^{n+1}&=x\\cdot x^{n}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x\\cdot x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}(x-i+i)x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i+1}}+\\sum_{i=0}^{n}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n\\brace i-1}x^{\\underline{i}}+\\sum_{i=0}^{n+1}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n+1\\brace i}x^{\\underline{i}}\n\\end{aligned}$$\n\n### 第一类斯特林数\n\n这里我们讨论无符号第一类斯特林数。\n\n#### 定义\n\n$n$个有标号的元素构成$m$个圆排列的方案数。记为${n\\brack m}$。\n\n#### 递推式\n\n$${n\\brack m}={n-1\\brack m-1}+(n-1){n-1\\brack m}$$\n\n考虑第$n$个元素单独构成一个圆排列还是插入到之前的某个元素之前即可。\n\n$${n\\brack 0}=1\\qquad(n\\geqslant 0)$$\n\n$${n\\brack n}=0\\qquad(n\\gt 0)$$\n\n#### 通项公式\n\n大概……没有吧。\n\n#### 下降幂转次幂\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}$$\n\n考虑数学归纳法。\n\n$$\\begin{aligned}\nx^{\\underline{n+1}}&=(x-n)x^{\\underline{n}}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}(x-n)x^{i}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i+1}+\\sum_{i=0}^{n}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i-1}x^{i}+\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n+1\\brack i}x^{i}\n\\end{aligned}$$\n\n### 斯特林反演\n\n观察下面两个式子\n\n$$\\begin{aligned}\nx^{n}&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}\\\\\nx^{\\underline{n}}&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}\n\\end{aligned}$$\n\n将它们套在一起\n\n$$x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}\\sum_{j=0}^{i}{i\\brace j}x^{\\underline{j}}\\\\=\\sum_{j=0}^{n}\\sum_{i=j}^{n}(-1)^{n-i}{n\\brack i}{i\\brace j}x^{\\underline{j}}$$\n\n于是\n\n$$\\sum_{i=m}^{n}(-1)^{n-i}{n\\brack i}{i\\brace m}=[m=n]$$\n","slug":"strling-number-notes","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0s002smku91q7k15ro","content":"<p>看到wzx写了个斯特林数总结，于是也想来写一个。</p>\n<a id=\"more\"></a>\n<h3 id=\"第二类斯特林数\"><a href=\"#第二类斯特林数\" class=\"headerlink\" title=\"第二类斯特林数\"></a>第二类斯特林数</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>将$n$个有标号的元素放入$m$个无标号的集合，且不允许空集的方案数。记为${n\\brace m}$。</p>\n<h4 id=\"递推式\"><a href=\"#递推式\" class=\"headerlink\" title=\"递推式\"></a>递推式</h4><script type=\"math/tex; mode=display\">{n\\brace m}={n-1\\brace m-1}+m{n-1\\brace m}</script><p>考虑第$n$个元素单独构成一个集合还是加入之前的某个集合即可。</p>\n<script type=\"math/tex; mode=display\">{n\\brace 0}=1\\qquad(n\\geqslant 0)</script><script type=\"math/tex; mode=display\">{n\\brace n}=0\\qquad(n\\gt 0)</script><h4 id=\"通项公式\"><a href=\"#通项公式\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h4><script type=\"math/tex; mode=display\">{n\\brace m}=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}{m\\choose i}(m-i)^{n}=\\sum_{i=0}^{m}\\cfrac{(-1)^{i}}{i!}\\cfrac{(m-i)^{n}}{(m-i)!}</script><p>大力容斥即可。</p>\n<p>不难发现等式最右边形成了卷积的形式，这使得我们能够在$O(n\\log n)$的时间复杂度内计算出${n\\brace i}$。</p>\n<h4 id=\"自然数的次幂及幂和\"><a href=\"#自然数的次幂及幂和\" class=\"headerlink\" title=\"自然数的次幂及幂和\"></a>自然数的次幂及幂和</h4><script type=\"math/tex; mode=display\">m^{n}=\\sum_{i=1}^{m}{m\\choose i}i!{n\\brace i}</script><p>考虑将$n$个有标号的元素任意地放入$m$个有标号的集合。每个元素都有$m$种选择，因此总方案数为$m^{n}$。</p>\n<p>在这一过程中，可能只有部分集合非空。我们枚举这些非空集合的排列，然后将所有元素放入这些集合，并且这次不允许空集。</p>\n<p>显然上述两种方法是等价的。</p>\n<p>利用上面这个公式，我们还可以计算自然数的幂和。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}i^{m}&=[m=0]+\\sum_{i=1}^{n-1}i^{m}\\\\\n&=[m=0]+\\sum_{i=1}^{n-1}\\sum_{j=1}^{i}{i\\choose j}j!{m\\brace j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}\\sum_{i=j}^{n-1}{i\\choose j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}{n\\choose j+1}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}{m\\brace j}\\cfrac{n^{\\underline{j+1}}}{j+1}\n\\end{aligned}</script><p>关于$\\sum_{i=j}^{n-1}{i\\choose j}={n\\choose j+1}$，我们可以认为，等式左边枚举了一个最左侧的位置，然后再在这个位置右侧选择$j$个元素。</p>\n<h4 id=\"次幂转下降幂\"><a href=\"#次幂转下降幂\" class=\"headerlink\" title=\"次幂转下降幂\"></a>次幂转下降幂</h4><script type=\"math/tex; mode=display\">x^{n}=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}</script><p>考虑数学归纳法。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{n+1}&=x\\cdot x^{n}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x\\cdot x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}(x-i+i)x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i+1}}+\\sum_{i=0}^{n}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n\\brace i-1}x^{\\underline{i}}+\\sum_{i=0}^{n+1}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n+1\\brace i}x^{\\underline{i}}\n\\end{aligned}</script><h3 id=\"第一类斯特林数\"><a href=\"#第一类斯特林数\" class=\"headerlink\" title=\"第一类斯特林数\"></a>第一类斯特林数</h3><p>这里我们讨论无符号第一类斯特林数。</p>\n<h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>$n$个有标号的元素构成$m$个圆排列的方案数。记为${n\\brack m}$。</p>\n<h4 id=\"递推式-1\"><a href=\"#递推式-1\" class=\"headerlink\" title=\"递推式\"></a>递推式</h4><script type=\"math/tex; mode=display\">{n\\brack m}={n-1\\brack m-1}+(n-1){n-1\\brack m}</script><p>考虑第$n$个元素单独构成一个圆排列还是插入到之前的某个元素之前即可。</p>\n<script type=\"math/tex; mode=display\">{n\\brack 0}=1\\qquad(n\\geqslant 0)</script><script type=\"math/tex; mode=display\">{n\\brack n}=0\\qquad(n\\gt 0)</script><h4 id=\"通项公式-1\"><a href=\"#通项公式-1\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h4><p>大概……没有吧。</p>\n<h4 id=\"下降幂转次幂\"><a href=\"#下降幂转次幂\" class=\"headerlink\" title=\"下降幂转次幂\"></a>下降幂转次幂</h4><script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}</script><p>考虑数学归纳法。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{\\underline{n+1}}&=(x-n)x^{\\underline{n}}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}(x-n)x^{i}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i+1}+\\sum_{i=0}^{n}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i-1}x^{i}+\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n+1\\brack i}x^{i}\n\\end{aligned}</script><h3 id=\"斯特林反演\"><a href=\"#斯特林反演\" class=\"headerlink\" title=\"斯特林反演\"></a>斯特林反演</h3><p>观察下面两个式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{n}&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}\\\\\nx^{\\underline{n}}&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}\n\\end{aligned}</script><p>将它们套在一起</p>\n<script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}\\sum_{j=0}^{i}{i\\brace j}x^{\\underline{j}}\\\\=\\sum_{j=0}^{n}\\sum_{i=j}^{n}(-1)^{n-i}{n\\brack i}{i\\brace j}x^{\\underline{j}}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=m}^{n}(-1)^{n-i}{n\\brack i}{i\\brace m}=[m=n]</script>","site":{"data":{}},"excerpt":"<p>看到wzx写了个斯特林数总结，于是也想来写一个。</p>","more":"<h3 id=\"第二类斯特林数\"><a href=\"#第二类斯特林数\" class=\"headerlink\" title=\"第二类斯特林数\"></a>第二类斯特林数</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>将$n$个有标号的元素放入$m$个无标号的集合，且不允许空集的方案数。记为${n\\brace m}$。</p>\n<h4 id=\"递推式\"><a href=\"#递推式\" class=\"headerlink\" title=\"递推式\"></a>递推式</h4><script type=\"math/tex; mode=display\">{n\\brace m}={n-1\\brace m-1}+m{n-1\\brace m}</script><p>考虑第$n$个元素单独构成一个集合还是加入之前的某个集合即可。</p>\n<script type=\"math/tex; mode=display\">{n\\brace 0}=1\\qquad(n\\geqslant 0)</script><script type=\"math/tex; mode=display\">{n\\brace n}=0\\qquad(n\\gt 0)</script><h4 id=\"通项公式\"><a href=\"#通项公式\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h4><script type=\"math/tex; mode=display\">{n\\brace m}=\\cfrac{1}{m!}\\sum_{i=0}^{m}(-1)^{i}{m\\choose i}(m-i)^{n}=\\sum_{i=0}^{m}\\cfrac{(-1)^{i}}{i!}\\cfrac{(m-i)^{n}}{(m-i)!}</script><p>大力容斥即可。</p>\n<p>不难发现等式最右边形成了卷积的形式，这使得我们能够在$O(n\\log n)$的时间复杂度内计算出${n\\brace i}$。</p>\n<h4 id=\"自然数的次幂及幂和\"><a href=\"#自然数的次幂及幂和\" class=\"headerlink\" title=\"自然数的次幂及幂和\"></a>自然数的次幂及幂和</h4><script type=\"math/tex; mode=display\">m^{n}=\\sum_{i=1}^{m}{m\\choose i}i!{n\\brace i}</script><p>考虑将$n$个有标号的元素任意地放入$m$个有标号的集合。每个元素都有$m$种选择，因此总方案数为$m^{n}$。</p>\n<p>在这一过程中，可能只有部分集合非空。我们枚举这些非空集合的排列，然后将所有元素放入这些集合，并且这次不允许空集。</p>\n<p>显然上述两种方法是等价的。</p>\n<p>利用上面这个公式，我们还可以计算自然数的幂和。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=0}^{n-1}i^{m}&=[m=0]+\\sum_{i=1}^{n-1}i^{m}\\\\\n&=[m=0]+\\sum_{i=1}^{n-1}\\sum_{j=1}^{i}{i\\choose j}j!{m\\brace j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}\\sum_{i=j}^{n-1}{i\\choose j}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}j!{m\\brace j}{n\\choose j+1}\\\\\n&=[m=0]+\\sum_{j=1}^{n-1}{m\\brace j}\\cfrac{n^{\\underline{j+1}}}{j+1}\n\\end{aligned}</script><p>关于$\\sum_{i=j}^{n-1}{i\\choose j}={n\\choose j+1}$，我们可以认为，等式左边枚举了一个最左侧的位置，然后再在这个位置右侧选择$j$个元素。</p>\n<h4 id=\"次幂转下降幂\"><a href=\"#次幂转下降幂\" class=\"headerlink\" title=\"次幂转下降幂\"></a>次幂转下降幂</h4><script type=\"math/tex; mode=display\">x^{n}=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}</script><p>考虑数学归纳法。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{n+1}&=x\\cdot x^{n}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x\\cdot x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}(x-i+i)x^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i+1}}+\\sum_{i=0}^{n}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n\\brace i-1}x^{\\underline{i}}+\\sum_{i=0}^{n+1}{n\\brace i}ix^{\\underline{i}}\\\\\n&=\\sum_{i=0}^{n+1}{n+1\\brace i}x^{\\underline{i}}\n\\end{aligned}</script><h3 id=\"第一类斯特林数\"><a href=\"#第一类斯特林数\" class=\"headerlink\" title=\"第一类斯特林数\"></a>第一类斯特林数</h3><p>这里我们讨论无符号第一类斯特林数。</p>\n<h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p>$n$个有标号的元素构成$m$个圆排列的方案数。记为${n\\brack m}$。</p>\n<h4 id=\"递推式-1\"><a href=\"#递推式-1\" class=\"headerlink\" title=\"递推式\"></a>递推式</h4><script type=\"math/tex; mode=display\">{n\\brack m}={n-1\\brack m-1}+(n-1){n-1\\brack m}</script><p>考虑第$n$个元素单独构成一个圆排列还是插入到之前的某个元素之前即可。</p>\n<script type=\"math/tex; mode=display\">{n\\brack 0}=1\\qquad(n\\geqslant 0)</script><script type=\"math/tex; mode=display\">{n\\brack n}=0\\qquad(n\\gt 0)</script><h4 id=\"通项公式-1\"><a href=\"#通项公式-1\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h4><p>大概……没有吧。</p>\n<h4 id=\"下降幂转次幂\"><a href=\"#下降幂转次幂\" class=\"headerlink\" title=\"下降幂转次幂\"></a>下降幂转次幂</h4><script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}</script><p>考虑数学归纳法。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{\\underline{n+1}}&=(x-n)x^{\\underline{n}}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}(x-n)x^{i}\\\\\n&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i+1}+\\sum_{i=0}^{n}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i-1}x^{i}+\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n\\brack i}nx^{i}\\\\\n&=\\sum_{i=0}^{n+1}(-1)^{n-i+1}{n+1\\brack i}x^{i}\n\\end{aligned}</script><h3 id=\"斯特林反演\"><a href=\"#斯特林反演\" class=\"headerlink\" title=\"斯特林反演\"></a>斯特林反演</h3><p>观察下面两个式子</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nx^{n}&=\\sum_{i=0}^{n}{n\\brace i}x^{\\underline{i}}\\\\\nx^{\\underline{n}}&=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}x^{i}\n\\end{aligned}</script><p>将它们套在一起</p>\n<script type=\"math/tex; mode=display\">x^{\\underline{n}}=\\sum_{i=0}^{n}(-1)^{n-i}{n\\brack i}\\sum_{j=0}^{i}{i\\brace j}x^{\\underline{j}}\\\\=\\sum_{j=0}^{n}\\sum_{i=j}^{n}(-1)^{n-i}{n\\brack i}{i\\brace j}x^{\\underline{j}}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=m}^{n}(-1)^{n-i}{n\\brack i}{i\\brace m}=[m=n]</script>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-08-07T11:54:08.000Z","title":"「CF1114E」Arithmetic Progression","password":null,"_content":"[传送门](http://codeforces.com/contest/1114/problem/E)\n\n大概是写的第一道正常一点的交互题吧（\n\n<!-- more -->\n\n因为原序列是打乱的等差数列，任意两项的差一定形如$kd$，其中$k\\in\\mathbb{N}^{+}$。\n\n于是我们想到，如果我们提取出序列中的一些项，比如说前$m$项，差分，然后求出这些数的gcd，就有可能是原等差数列的公差。\n\n但这并不一定，因为这个gcd也有可能是$kd$的形式。\n\n那么把原序列随机打乱就行了。\n\n求出公差之后二分找原序列最大值即可。\n\n实测$m$最大可以取到$30$。\n\n这样就可以A了。\n\n[评测记录](http://codeforces.com/contest/1114/submission/58430411)。\n\n那么问题来了，这个算法的正确率到底有多大（\n\n我们将这个问题抽象为以下模型：\n\n> 给定一长度为$n$的随机排列$p$和一正整数$m$，$1\\leqslant m\\lt n$，令\n>\n> $$q_{i}=|p_{i+1}-p_{i}|\\quad(i\\in[1,m])$$\n>\n> 试求\n>\n> $$P\\left(\\gcd_{i=1}^{m}q_{i}=1\\right)$$\n\n不会。告辞.jpg\n","source":"_posts/2019-08-07-cf1114e-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-08-07 19:54:08\ntitle: 「CF1114E」Arithmetic Progression\ntags:\n  - 交互\n  - 随机算法\ncategories:\n  - 题解\npassword:\n---\n[传送门](http://codeforces.com/contest/1114/problem/E)\n\n大概是写的第一道正常一点的交互题吧（\n\n<!-- more -->\n\n因为原序列是打乱的等差数列，任意两项的差一定形如$kd$，其中$k\\in\\mathbb{N}^{+}$。\n\n于是我们想到，如果我们提取出序列中的一些项，比如说前$m$项，差分，然后求出这些数的gcd，就有可能是原等差数列的公差。\n\n但这并不一定，因为这个gcd也有可能是$kd$的形式。\n\n那么把原序列随机打乱就行了。\n\n求出公差之后二分找原序列最大值即可。\n\n实测$m$最大可以取到$30$。\n\n这样就可以A了。\n\n[评测记录](http://codeforces.com/contest/1114/submission/58430411)。\n\n那么问题来了，这个算法的正确率到底有多大（\n\n我们将这个问题抽象为以下模型：\n\n> 给定一长度为$n$的随机排列$p$和一正整数$m$，$1\\leqslant m\\lt n$，令\n>\n> $$q_{i}=|p_{i+1}-p_{i}|\\quad(i\\in[1,m])$$\n>\n> 试求\n>\n> $$P\\left(\\gcd_{i=1}^{m}q_{i}=1\\right)$$\n\n不会。告辞.jpg\n","slug":"cf1114e-solution","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0s002vmku9ey2v6xh9","content":"<p><a href=\"http://codeforces.com/contest/1114/problem/E\">传送门</a></p>\n<p>大概是写的第一道正常一点的交互题吧（</p>\n<a id=\"more\"></a>\n<p>因为原序列是打乱的等差数列，任意两项的差一定形如$kd$，其中$k\\in\\mathbb{N}^{+}$。</p>\n<p>于是我们想到，如果我们提取出序列中的一些项，比如说前$m$项，差分，然后求出这些数的gcd，就有可能是原等差数列的公差。</p>\n<p>但这并不一定，因为这个gcd也有可能是$kd$的形式。</p>\n<p>那么把原序列随机打乱就行了。</p>\n<p>求出公差之后二分找原序列最大值即可。</p>\n<p>实测$m$最大可以取到$30$。</p>\n<p>这样就可以A了。</p>\n<p><a href=\"http://codeforces.com/contest/1114/submission/58430411\">评测记录</a>。</p>\n<p>那么问题来了，这个算法的正确率到底有多大（</p>\n<p>我们将这个问题抽象为以下模型：</p>\n<blockquote>\n<p>给定一长度为$n$的随机排列$p$和一正整数$m$，$1\\leqslant m\\lt n$，令</p>\n<script type=\"math/tex; mode=display\">q_{i}=|p_{i+1}-p_{i}|\\quad(i\\in[1,m])</script><p>试求</p>\n<script type=\"math/tex; mode=display\">P\\left(\\gcd_{i=1}^{m}q_{i}=1\\right)</script></blockquote>\n<p>不会。告辞.jpg</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://codeforces.com/contest/1114/problem/E\">传送门</a></p>\n<p>大概是写的第一道正常一点的交互题吧（</p>","more":"<p>因为原序列是打乱的等差数列，任意两项的差一定形如$kd$，其中$k\\in\\mathbb{N}^{+}$。</p>\n<p>于是我们想到，如果我们提取出序列中的一些项，比如说前$m$项，差分，然后求出这些数的gcd，就有可能是原等差数列的公差。</p>\n<p>但这并不一定，因为这个gcd也有可能是$kd$的形式。</p>\n<p>那么把原序列随机打乱就行了。</p>\n<p>求出公差之后二分找原序列最大值即可。</p>\n<p>实测$m$最大可以取到$30$。</p>\n<p>这样就可以A了。</p>\n<p><a href=\"http://codeforces.com/contest/1114/submission/58430411\">评测记录</a>。</p>\n<p>那么问题来了，这个算法的正确率到底有多大（</p>\n<p>我们将这个问题抽象为以下模型：</p>\n<blockquote>\n<p>给定一长度为$n$的随机排列$p$和一正整数$m$，$1\\leqslant m\\lt n$，令</p>\n<script type=\"math/tex; mode=display\">q_{i}=|p_{i+1}-p_{i}|\\quad(i\\in[1,m])</script><p>试求</p>\n<script type=\"math/tex; mode=display\">P\\left(\\gcd_{i=1}^{m}q_{i}=1\\right)</script></blockquote>\n<p>不会。告辞.jpg</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-08-05T10:01:14.000Z","title":"「XRound2F」永恒（大概算得上是篇题解）","password":null,"_content":"[传送门](https://www.luogu.org/problem/P5439)\n\n<!-- more -->\n\n读完题面，我们很快就想到统计每对点对对答案的贡献，然后累加起来。\n\n于是问题转化成，对于每对点对，求出它们所对应的字符串的lcp长度与树上同时经过它们的路径数量之积并求和。\n\n考虑点分治。\n\n对于一个分治中心，我们可以将答案分成两部分，第一部分是分治中心与子树内其它点的贡献，第二部分是分治中心不同子树内的点对的贡献。\n\n对于第一部分，我们直接枚举子树内其它点，然后直接求其与分治中心在Trie上对应节点的lca的深度，然后乘上其自身的子树大小，与其所在的分治中心的对应子树大小。我们可以通过使用LCT维护Trie来解决。\n\n对于第二部分，我们在对于一个点计算完它第一部分的贡献之后，查询之前已经完全枚举过的其他子树内的所有点的子树大小与其与该节点在Trie上对应节点的lca的深度之积并求和。~~虽然我不是很懂怎么描述，但是反正这个东西LCT是可以搞的。~~\n\n计算完以上两部分并累加，我们就得到了答案。不难得出，上述算法的时间复杂度为$O(n\\log^{2}n)$。\n\nhttps://www.luogu.org/record/22194363\n\n~~然后评测结果就长这样（~~\n\n这时我们点开算法标签，发现里面有个虚树。于是我们来思考用虚树怎么做。\n\n关于上文的第一部分，这个没救，唯一的优化方法就是$O(1)$求lca。\n\n而关于第二部分，如果我们定义两个点之间的距离为它们的子树大小之积再乘以它们在Trie上对应节点的lca深度，我们要求的其实就是除去分治中心外所有点对的距离之和，再减去同一子树内所有点对的距离之和。很明显这可以用虚树实现。\n\n经过这样两个优化，我们成功地~~在想象中~~将时间复杂度降到了$O(n\\log n)$。\n\n然而我不会虚树:(\n\n虽然T了但还是贴一下代码吧。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 300000\n#define mod 998244353\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define max(a,b) ((a)>=(b)?(a):(b))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint m;\nstruct SplayNode{\n\tint size,val,sum,add;\n\tSplayNode *ftr,*lc,*rc;\n};\nSplayNode mempool[maxn+1];\n\ninline int isRoot(re SplayNode* p){\n\treturn p->ftr==NULL||(p->ftr->lc!=p&&p->ftr->rc!=p);\n}\n\ninline void pushDown(re SplayNode* p){\n\tif(p->lc!=NULL){\n\t\tp->lc->val=(p->lc->val+p->add)%mod;\n\t\tp->lc->sum=(p->lc->sum+1LL*p->lc->size*p->add%mod)%mod;\n\t\tp->lc->add=(p->lc->add+p->add)%mod;\n\t}\n\tif(p->rc!=NULL){\n\t\tp->rc->val=(p->rc->val+p->add)%mod;\n\t\tp->rc->sum=(p->rc->sum+1LL*p->rc->size*p->add%mod)%mod;\n\t\tp->rc->add=(p->rc->add+p->add)%mod;\n\t}\n\tp->add=0;\n}\n\ninline void pushUp(re SplayNode* p){\n\tp->size=1;\n\tp->sum=p->val;\n\tif(p->lc!=NULL){\n\t\tp->size+=p->lc->size;\n\t\tp->sum=(p->sum+p->lc->sum)%mod;\n\t}\n\tif(p->rc!=NULL){\n\t\tp->size+=p->rc->size;\n\t\tp->sum=(p->sum+p->rc->sum)%mod;\n\t}\n}\n\ninline void rotate(re SplayNode* p){\n\tre SplayNode* q=p->ftr;\n\tpushDown(q);\n\tpushDown(p);\n\tp->ftr=q->ftr;\n\tif(p->ftr!=NULL){\n\t\tif(p->ftr->lc==q)\n\t\t\tp->ftr->lc=p;\n\t\tif(p->ftr->rc==q)\n\t\t\tp->ftr->rc=p;\n\t}\n\tif(q->rc==p){\n\t\tq->rc=p->lc;\n\t\tif(q->rc!=NULL)\n\t\t\tq->rc->ftr=q;\n\t\tp->lc=q;\n\t}\n\telse{\n\t\tq->lc=p->rc;\n\t\tif(q->lc!=NULL)\n\t\t\tq->lc->ftr=q;\n\t\tp->rc=q;\n\t}\n\tq->ftr=p;\n\tpushUp(q);\n\tpushUp(p);\n}\n\ninline void splay(re SplayNode* p){\n\tfor(;!isRoot(p);rotate(p))\n\t\tif(!isRoot(p->ftr))\n\t\t\trotate((p->ftr->ftr->lc==p->ftr)==(p->ftr->lc==p)?p->ftr:p);\n}\n\ninline void access(re SplayNode* p){\n\tpushDown(p);\n\tsplay(p);\n\tp->rc=NULL;\n\tpushUp(p);\n\tfor(re SplayNode* q=p;q->ftr!=NULL;){\n\t\tpushDown(q->ftr);\n\t\tsplay(q->ftr);\n\t\tq->ftr->rc=q;\n\t\tpushUp(q->ftr);\n\t\tq=q->ftr;\n\t}\n\tsplay(p);\n}\n\ninline SplayNode* LCA(re SplayNode* p,re SplayNode* q){\n\tpushDown(p);\n\taccess(p);\n\tsplay(q);\n\tq->rc=NULL;\n\tpushUp(q);\n\tfor(p=q;p->ftr!=NULL;){\n\t\tpushDown(p->ftr);\n\t\tsplay(p->ftr);\n\t\tp->ftr->rc=p;\n\t\tpushUp(p->ftr);\n\t\tp=p->ftr;\n\t}\n\tsplay(q);\n\treturn p;\n}\n\ninline void update(re SplayNode* p,re int x){\n\taccess(p);\n\tp->val=(p->val+x)%mod;\n\tp->sum=(p->sum+1LL*p->size*x%mod)%mod;\n\tp->add=(p->add+x)%mod;\n}\n\ninline int query(re SplayNode* p){\n\taccess(p);\n\treturn p->sum;\n}\n\nint n,ec,rt,sz,cntsum,ans;\nint des[2*maxn+1],suc[2*maxn+1],las[maxn+1],id[maxn+1];\nint size[maxn+1],mxs[maxn+1],vis[maxn+1];\nint cnt[maxn+1],stk[maxn+1];\n\ninline void connect(re int x,re int y){\n\tdes[++ec]=y;\n\tsuc[ec]=las[x];\n\tlas[x]=ec;\n}\n\nvoid getRt(re int cur,re int ftr){\n\tsize[cur]=1;\n\tmxs[cur]=0;\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tgetRt(des[i],cur);\n\t\t\tsize[cur]+=size[des[i]];\n\t\t\tmxs[cur]=max(mxs[cur],size[des[i]]);\n\t\t}\n\tmxs[cur]=max(mxs[cur],sz-size[cur]);\n\tif(!rt||mxs[rt]>mxs[cur])\n\t\trt=cur;\n}\n\nint calc(re int cur,re int ftr,re int root){\n\tstk[++stk[0]]=cur;\n\tre int res=0;\n\tcnt[cur]=1;\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tres=(res+calc(des[i],cur,root))%mod;\n\t\t\tcnt[cur]+=cnt[des[i]];\n\t\t}\n\tans=(ans+1LL*cnt[cur]*(query(mempool+id[cur])-cntsum+mod)%mod+mod)%mod;\n\tre SplayNode* x=LCA(mempool+id[cur],mempool+id[root]);\n\taccess(x);\n\tre int dx=x->lc!=NULL?x->lc->size:0;\n\treturn (res+1LL*cnt[cur]*dx%mod)%mod;\n}\n\nvoid divide(re int cur,re int ftr){\n\tvis[cur]=1;\n\tcntsum=0;\n\tfor(re int i=las[cur],j=0;i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tre int tmp=calc(des[i],cur,cur);\n\t\t\tans=(ans+1LL*(n-cnt[des[i]])*tmp%mod)%mod;\n\t\t\tfor(;j<stk[0];++j,update(mempool+id[stk[j]],cnt[stk[j]]),cntsum=(cntsum+cnt[stk[j]])%mod);\n\t\t}\n\tfor(;stk[0];update(mempool+id[stk[stk[0]]],mod-cnt[stk[stk[0]]]),--stk[0]);\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\trt=des[i];\n\t\t\tsz=size[des[i]];\n\t\t\tgetRt(des[i],cur);\n\t\t\tdivide(rt,cur);\n\t\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=1;i<=n;++i){\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tif(x){\n\t\t\tconnect(x,i);\n\t\t\tconnect(i,x);\n\t\t}\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tpushUp(mempool+i);\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tif(x)\n\t\t\t(mempool+i)->ftr=mempool+x;\n\t}\n\tfor(re int i=0;i<=n;++i)\n\t\tcltstream::read(id[i]);\n\trt=0;\n\tsz=n;\n\tgetRt(1,0);\n\tdivide(rt,0);\n\tcltstream::write(ans);\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-08-05-luogu-p5439-solution-probably.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-08-05 18:01:14\ntitle: 「XRound2F」永恒（大概算得上是篇题解）\ntags:\n  - 点分治\n  - LCT\n  - 虚树\ncategories:\n  - 题解\npassword:\n---\n[传送门](https://www.luogu.org/problem/P5439)\n\n<!-- more -->\n\n读完题面，我们很快就想到统计每对点对对答案的贡献，然后累加起来。\n\n于是问题转化成，对于每对点对，求出它们所对应的字符串的lcp长度与树上同时经过它们的路径数量之积并求和。\n\n考虑点分治。\n\n对于一个分治中心，我们可以将答案分成两部分，第一部分是分治中心与子树内其它点的贡献，第二部分是分治中心不同子树内的点对的贡献。\n\n对于第一部分，我们直接枚举子树内其它点，然后直接求其与分治中心在Trie上对应节点的lca的深度，然后乘上其自身的子树大小，与其所在的分治中心的对应子树大小。我们可以通过使用LCT维护Trie来解决。\n\n对于第二部分，我们在对于一个点计算完它第一部分的贡献之后，查询之前已经完全枚举过的其他子树内的所有点的子树大小与其与该节点在Trie上对应节点的lca的深度之积并求和。~~虽然我不是很懂怎么描述，但是反正这个东西LCT是可以搞的。~~\n\n计算完以上两部分并累加，我们就得到了答案。不难得出，上述算法的时间复杂度为$O(n\\log^{2}n)$。\n\nhttps://www.luogu.org/record/22194363\n\n~~然后评测结果就长这样（~~\n\n这时我们点开算法标签，发现里面有个虚树。于是我们来思考用虚树怎么做。\n\n关于上文的第一部分，这个没救，唯一的优化方法就是$O(1)$求lca。\n\n而关于第二部分，如果我们定义两个点之间的距离为它们的子树大小之积再乘以它们在Trie上对应节点的lca深度，我们要求的其实就是除去分治中心外所有点对的距离之和，再减去同一子树内所有点对的距离之和。很明显这可以用虚树实现。\n\n经过这样两个优化，我们成功地~~在想象中~~将时间复杂度降到了$O(n\\log n)$。\n\n然而我不会虚树:(\n\n虽然T了但还是贴一下代码吧。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 300000\n#define mod 998244353\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define max(a,b) ((a)>=(b)?(a):(b))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint m;\nstruct SplayNode{\n\tint size,val,sum,add;\n\tSplayNode *ftr,*lc,*rc;\n};\nSplayNode mempool[maxn+1];\n\ninline int isRoot(re SplayNode* p){\n\treturn p->ftr==NULL||(p->ftr->lc!=p&&p->ftr->rc!=p);\n}\n\ninline void pushDown(re SplayNode* p){\n\tif(p->lc!=NULL){\n\t\tp->lc->val=(p->lc->val+p->add)%mod;\n\t\tp->lc->sum=(p->lc->sum+1LL*p->lc->size*p->add%mod)%mod;\n\t\tp->lc->add=(p->lc->add+p->add)%mod;\n\t}\n\tif(p->rc!=NULL){\n\t\tp->rc->val=(p->rc->val+p->add)%mod;\n\t\tp->rc->sum=(p->rc->sum+1LL*p->rc->size*p->add%mod)%mod;\n\t\tp->rc->add=(p->rc->add+p->add)%mod;\n\t}\n\tp->add=0;\n}\n\ninline void pushUp(re SplayNode* p){\n\tp->size=1;\n\tp->sum=p->val;\n\tif(p->lc!=NULL){\n\t\tp->size+=p->lc->size;\n\t\tp->sum=(p->sum+p->lc->sum)%mod;\n\t}\n\tif(p->rc!=NULL){\n\t\tp->size+=p->rc->size;\n\t\tp->sum=(p->sum+p->rc->sum)%mod;\n\t}\n}\n\ninline void rotate(re SplayNode* p){\n\tre SplayNode* q=p->ftr;\n\tpushDown(q);\n\tpushDown(p);\n\tp->ftr=q->ftr;\n\tif(p->ftr!=NULL){\n\t\tif(p->ftr->lc==q)\n\t\t\tp->ftr->lc=p;\n\t\tif(p->ftr->rc==q)\n\t\t\tp->ftr->rc=p;\n\t}\n\tif(q->rc==p){\n\t\tq->rc=p->lc;\n\t\tif(q->rc!=NULL)\n\t\t\tq->rc->ftr=q;\n\t\tp->lc=q;\n\t}\n\telse{\n\t\tq->lc=p->rc;\n\t\tif(q->lc!=NULL)\n\t\t\tq->lc->ftr=q;\n\t\tp->rc=q;\n\t}\n\tq->ftr=p;\n\tpushUp(q);\n\tpushUp(p);\n}\n\ninline void splay(re SplayNode* p){\n\tfor(;!isRoot(p);rotate(p))\n\t\tif(!isRoot(p->ftr))\n\t\t\trotate((p->ftr->ftr->lc==p->ftr)==(p->ftr->lc==p)?p->ftr:p);\n}\n\ninline void access(re SplayNode* p){\n\tpushDown(p);\n\tsplay(p);\n\tp->rc=NULL;\n\tpushUp(p);\n\tfor(re SplayNode* q=p;q->ftr!=NULL;){\n\t\tpushDown(q->ftr);\n\t\tsplay(q->ftr);\n\t\tq->ftr->rc=q;\n\t\tpushUp(q->ftr);\n\t\tq=q->ftr;\n\t}\n\tsplay(p);\n}\n\ninline SplayNode* LCA(re SplayNode* p,re SplayNode* q){\n\tpushDown(p);\n\taccess(p);\n\tsplay(q);\n\tq->rc=NULL;\n\tpushUp(q);\n\tfor(p=q;p->ftr!=NULL;){\n\t\tpushDown(p->ftr);\n\t\tsplay(p->ftr);\n\t\tp->ftr->rc=p;\n\t\tpushUp(p->ftr);\n\t\tp=p->ftr;\n\t}\n\tsplay(q);\n\treturn p;\n}\n\ninline void update(re SplayNode* p,re int x){\n\taccess(p);\n\tp->val=(p->val+x)%mod;\n\tp->sum=(p->sum+1LL*p->size*x%mod)%mod;\n\tp->add=(p->add+x)%mod;\n}\n\ninline int query(re SplayNode* p){\n\taccess(p);\n\treturn p->sum;\n}\n\nint n,ec,rt,sz,cntsum,ans;\nint des[2*maxn+1],suc[2*maxn+1],las[maxn+1],id[maxn+1];\nint size[maxn+1],mxs[maxn+1],vis[maxn+1];\nint cnt[maxn+1],stk[maxn+1];\n\ninline void connect(re int x,re int y){\n\tdes[++ec]=y;\n\tsuc[ec]=las[x];\n\tlas[x]=ec;\n}\n\nvoid getRt(re int cur,re int ftr){\n\tsize[cur]=1;\n\tmxs[cur]=0;\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tgetRt(des[i],cur);\n\t\t\tsize[cur]+=size[des[i]];\n\t\t\tmxs[cur]=max(mxs[cur],size[des[i]]);\n\t\t}\n\tmxs[cur]=max(mxs[cur],sz-size[cur]);\n\tif(!rt||mxs[rt]>mxs[cur])\n\t\trt=cur;\n}\n\nint calc(re int cur,re int ftr,re int root){\n\tstk[++stk[0]]=cur;\n\tre int res=0;\n\tcnt[cur]=1;\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tres=(res+calc(des[i],cur,root))%mod;\n\t\t\tcnt[cur]+=cnt[des[i]];\n\t\t}\n\tans=(ans+1LL*cnt[cur]*(query(mempool+id[cur])-cntsum+mod)%mod+mod)%mod;\n\tre SplayNode* x=LCA(mempool+id[cur],mempool+id[root]);\n\taccess(x);\n\tre int dx=x->lc!=NULL?x->lc->size:0;\n\treturn (res+1LL*cnt[cur]*dx%mod)%mod;\n}\n\nvoid divide(re int cur,re int ftr){\n\tvis[cur]=1;\n\tcntsum=0;\n\tfor(re int i=las[cur],j=0;i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\tre int tmp=calc(des[i],cur,cur);\n\t\t\tans=(ans+1LL*(n-cnt[des[i]])*tmp%mod)%mod;\n\t\t\tfor(;j<stk[0];++j,update(mempool+id[stk[j]],cnt[stk[j]]),cntsum=(cntsum+cnt[stk[j]])%mod);\n\t\t}\n\tfor(;stk[0];update(mempool+id[stk[stk[0]]],mod-cnt[stk[stk[0]]]),--stk[0]);\n\tfor(re int i=las[cur];i;i=suc[i])\n\t\tif(des[i]!=ftr&&!vis[des[i]]){\n\t\t\trt=des[i];\n\t\t\tsz=size[des[i]];\n\t\t\tgetRt(des[i],cur);\n\t\t\tdivide(rt,cur);\n\t\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(re int i=1;i<=n;++i){\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tif(x){\n\t\t\tconnect(x,i);\n\t\t\tconnect(i,x);\n\t\t}\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tpushUp(mempool+i);\n\t\tint x;\n\t\tcltstream::read(x);\n\t\tif(x)\n\t\t\t(mempool+i)->ftr=mempool+x;\n\t}\n\tfor(re int i=0;i<=n;++i)\n\t\tcltstream::read(id[i]);\n\trt=0;\n\tsz=n;\n\tgetRt(1,0);\n\tdivide(rt,0);\n\tcltstream::write(ans);\n\tclop();\n\treturn 0;\n}\n```\n","slug":"luogu-p5439-solution-probably","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0t002ymku9c0s69wdi","content":"<p><a href=\"https://www.luogu.org/problem/P5439\">传送门</a></p>\n<a id=\"more\"></a>\n<p>读完题面，我们很快就想到统计每对点对对答案的贡献，然后累加起来。</p>\n<p>于是问题转化成，对于每对点对，求出它们所对应的字符串的lcp长度与树上同时经过它们的路径数量之积并求和。</p>\n<p>考虑点分治。</p>\n<p>对于一个分治中心，我们可以将答案分成两部分，第一部分是分治中心与子树内其它点的贡献，第二部分是分治中心不同子树内的点对的贡献。</p>\n<p>对于第一部分，我们直接枚举子树内其它点，然后直接求其与分治中心在Trie上对应节点的lca的深度，然后乘上其自身的子树大小，与其所在的分治中心的对应子树大小。我们可以通过使用LCT维护Trie来解决。</p>\n<p>对于第二部分，我们在对于一个点计算完它第一部分的贡献之后，查询之前已经完全枚举过的其他子树内的所有点的子树大小与其与该节点在Trie上对应节点的lca的深度之积并求和。<del>虽然我不是很懂怎么描述，但是反正这个东西LCT是可以搞的。</del></p>\n<p>计算完以上两部分并累加，我们就得到了答案。不难得出，上述算法的时间复杂度为$O(n\\log^{2}n)$。</p>\n<p><a href=\"https://www.luogu.org/record/22194363\">https://www.luogu.org/record/22194363</a></p>\n<p><del>然后评测结果就长这样（</del></p>\n<p>这时我们点开算法标签，发现里面有个虚树。于是我们来思考用虚树怎么做。</p>\n<p>关于上文的第一部分，这个没救，唯一的优化方法就是$O(1)$求lca。</p>\n<p>而关于第二部分，如果我们定义两个点之间的距离为它们的子树大小之积再乘以它们在Trie上对应节点的lca深度，我们要求的其实就是除去分治中心外所有点对的距离之和，再减去同一子树内所有点对的距离之和。很明显这可以用虚树实现。</p>\n<p>经过这样两个优化，我们成功地<del>在想象中</del>将时间复杂度降到了$O(n\\log n)$。</p>\n<p>然而我不会虚树:(</p>\n<p>虽然T了但还是贴一下代码吧。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 300000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> m;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> size,val,sum,add;</span><br><span class=\"line\">    SplayNode *ftr,*lc,*rc;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p-&gt;ftr==<span class=\"literal\">NULL</span>||(p-&gt;ftr-&gt;lc!=p&amp;&amp;p-&gt;ftr-&gt;rc!=p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;lc-&gt;val=(p-&gt;lc-&gt;val+p-&gt;add)%mod;</span><br><span class=\"line\">        p-&gt;lc-&gt;sum=(p-&gt;lc-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;lc-&gt;size*p-&gt;add%mod)%mod;</span><br><span class=\"line\">        p-&gt;lc-&gt;add=(p-&gt;lc-&gt;add+p-&gt;add)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;rc-&gt;val=(p-&gt;rc-&gt;val+p-&gt;add)%mod;</span><br><span class=\"line\">        p-&gt;rc-&gt;sum=(p-&gt;rc-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;rc-&gt;size*p-&gt;add%mod)%mod;</span><br><span class=\"line\">        p-&gt;rc-&gt;add=(p-&gt;rc-&gt;add+p-&gt;add)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;add=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    p-&gt;size=<span class=\"number\">1</span>;</span><br><span class=\"line\">    p-&gt;sum=p-&gt;val;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;size+=p-&gt;lc-&gt;size;</span><br><span class=\"line\">        p-&gt;sum=(p-&gt;sum+p-&gt;lc-&gt;sum)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;size+=p-&gt;rc-&gt;size;</span><br><span class=\"line\">        p-&gt;sum=(p-&gt;sum+p-&gt;rc-&gt;sum)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">    pushDown(q);</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;lc==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;lc=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rc==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;rc=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(q-&gt;rc==p)&#123;</span><br><span class=\"line\">        q-&gt;rc=p-&gt;lc;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rc!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;rc-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;lc=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        q-&gt;lc=p-&gt;rc;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;lc!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;lc-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;rc=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;ftr=p;</span><br><span class=\"line\">    pushUp(q);</span><br><span class=\"line\">    pushUp(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;!isRoot(p);rotate(p))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!isRoot(p-&gt;ftr))</span><br><span class=\"line\">            rotate((p-&gt;ftr-&gt;ftr-&gt;lc==p-&gt;ftr)==(p-&gt;ftr-&gt;lc==p)?p-&gt;ftr:p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    p-&gt;rc=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    pushUp(p);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;)&#123;</span><br><span class=\"line\">        pushDown(q-&gt;ftr);</span><br><span class=\"line\">        splay(q-&gt;ftr);</span><br><span class=\"line\">        q-&gt;ftr-&gt;rc=q;</span><br><span class=\"line\">        pushUp(q-&gt;ftr);</span><br><span class=\"line\">        q=q-&gt;ftr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">LCA</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    splay(q);</span><br><span class=\"line\">    q-&gt;rc=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    pushUp(q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(p=q;p-&gt;ftr!=<span class=\"literal\">NULL</span>;)&#123;</span><br><span class=\"line\">        pushDown(p-&gt;ftr);</span><br><span class=\"line\">        splay(p-&gt;ftr);</span><br><span class=\"line\">        p-&gt;ftr-&gt;rc=p;</span><br><span class=\"line\">        pushUp(p-&gt;ftr);</span><br><span class=\"line\">        p=p-&gt;ftr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(q);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(re SplayNode* p,re <span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    p-&gt;val=(p-&gt;val+x)%mod;</span><br><span class=\"line\">    p-&gt;sum=(p-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;size*x%mod)%mod;</span><br><span class=\"line\">    p-&gt;add=(p-&gt;add+x)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">query</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p-&gt;sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,ec,rt,sz,cntsum,ans;</span><br><span class=\"line\"><span class=\"keyword\">int</span> des[<span class=\"number\">2</span>*maxn+<span class=\"number\">1</span>],suc[<span class=\"number\">2</span>*maxn+<span class=\"number\">1</span>],las[maxn+<span class=\"number\">1</span>],id[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> size[maxn+<span class=\"number\">1</span>],mxs[maxn+<span class=\"number\">1</span>],vis[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt[maxn+<span class=\"number\">1</span>],stk[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    des[++ec]=y;</span><br><span class=\"line\">    suc[ec]=las[x];</span><br><span class=\"line\">    las[x]=ec;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getRt</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    size[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    mxs[cur]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            getRt(des[i],cur);</span><br><span class=\"line\">            size[cur]+=size[des[i]];</span><br><span class=\"line\">            mxs[cur]=max(mxs[cur],size[des[i]]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    mxs[cur]=max(mxs[cur],sz-size[cur]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!rt||mxs[rt]&gt;mxs[cur])</span><br><span class=\"line\">        rt=cur;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr,re <span class=\"keyword\">int</span> root)</span></span>&#123;</span><br><span class=\"line\">    stk[++stk[<span class=\"number\">0</span>]]=cur;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    cnt[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            res=(res+calc(des[i],cur,root))%mod;</span><br><span class=\"line\">            cnt[cur]+=cnt[des[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ans=(ans+<span class=\"number\">1L</span>L*cnt[cur]*(query(mempool+id[cur])-cntsum+mod)%mod+mod)%mod;</span><br><span class=\"line\">    re SplayNode* x=LCA(mempool+id[cur],mempool+id[root]);</span><br><span class=\"line\">    access(x);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> dx=x-&gt;lc!=<span class=\"literal\">NULL</span>?x-&gt;lc-&gt;size:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (res+<span class=\"number\">1L</span>L*cnt[cur]*dx%mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">divide</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    vis[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    cntsum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur],j=<span class=\"number\">0</span>;i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            re <span class=\"keyword\">int</span> tmp=calc(des[i],cur,cur);</span><br><span class=\"line\">            ans=(ans+<span class=\"number\">1L</span>L*(n-cnt[des[i]])*tmp%mod)%mod;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;j&lt;stk[<span class=\"number\">0</span>];++j,update(mempool+id[stk[j]],cnt[stk[j]]),cntsum=(cntsum+cnt[stk[j]])%mod);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;stk[<span class=\"number\">0</span>];update(mempool+id[stk[stk[<span class=\"number\">0</span>]]],mod-cnt[stk[stk[<span class=\"number\">0</span>]]]),--stk[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            rt=des[i];</span><br><span class=\"line\">            sz=size[des[i]];</span><br><span class=\"line\">            getRt(des[i],cur);</span><br><span class=\"line\">            divide(rt,cur);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x)&#123;</span><br><span class=\"line\">            connect(x,i);</span><br><span class=\"line\">            connect(i,x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        pushUp(mempool+i);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x)</span><br><span class=\"line\">            (mempool+i)-&gt;ftr=mempool+x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::read(id[i]);</span><br><span class=\"line\">    rt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    sz=n;</span><br><span class=\"line\">    getRt(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    divide(rt,<span class=\"number\">0</span>);</span><br><span class=\"line\">    cltstream::write(ans);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problem/P5439\">传送门</a></p>","more":"<p>读完题面，我们很快就想到统计每对点对对答案的贡献，然后累加起来。</p>\n<p>于是问题转化成，对于每对点对，求出它们所对应的字符串的lcp长度与树上同时经过它们的路径数量之积并求和。</p>\n<p>考虑点分治。</p>\n<p>对于一个分治中心，我们可以将答案分成两部分，第一部分是分治中心与子树内其它点的贡献，第二部分是分治中心不同子树内的点对的贡献。</p>\n<p>对于第一部分，我们直接枚举子树内其它点，然后直接求其与分治中心在Trie上对应节点的lca的深度，然后乘上其自身的子树大小，与其所在的分治中心的对应子树大小。我们可以通过使用LCT维护Trie来解决。</p>\n<p>对于第二部分，我们在对于一个点计算完它第一部分的贡献之后，查询之前已经完全枚举过的其他子树内的所有点的子树大小与其与该节点在Trie上对应节点的lca的深度之积并求和。<del>虽然我不是很懂怎么描述，但是反正这个东西LCT是可以搞的。</del></p>\n<p>计算完以上两部分并累加，我们就得到了答案。不难得出，上述算法的时间复杂度为$O(n\\log^{2}n)$。</p>\n<p><a href=\"https://www.luogu.org/record/22194363\">https://www.luogu.org/record/22194363</a></p>\n<p><del>然后评测结果就长这样（</del></p>\n<p>这时我们点开算法标签，发现里面有个虚树。于是我们来思考用虚树怎么做。</p>\n<p>关于上文的第一部分，这个没救，唯一的优化方法就是$O(1)$求lca。</p>\n<p>而关于第二部分，如果我们定义两个点之间的距离为它们的子树大小之积再乘以它们在Trie上对应节点的lca深度，我们要求的其实就是除去分治中心外所有点对的距离之和，再减去同一子树内所有点对的距离之和。很明显这可以用虚树实现。</p>\n<p>经过这样两个优化，我们成功地<del>在想象中</del>将时间复杂度降到了$O(n\\log n)$。</p>\n<p>然而我不会虚树:(</p>\n<p>虽然T了但还是贴一下代码吧。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 300000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> m;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> size,val,sum,add;</span><br><span class=\"line\">    SplayNode *ftr,*lc,*rc;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p-&gt;ftr==<span class=\"literal\">NULL</span>||(p-&gt;ftr-&gt;lc!=p&amp;&amp;p-&gt;ftr-&gt;rc!=p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;lc-&gt;val=(p-&gt;lc-&gt;val+p-&gt;add)%mod;</span><br><span class=\"line\">        p-&gt;lc-&gt;sum=(p-&gt;lc-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;lc-&gt;size*p-&gt;add%mod)%mod;</span><br><span class=\"line\">        p-&gt;lc-&gt;add=(p-&gt;lc-&gt;add+p-&gt;add)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;rc-&gt;val=(p-&gt;rc-&gt;val+p-&gt;add)%mod;</span><br><span class=\"line\">        p-&gt;rc-&gt;sum=(p-&gt;rc-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;rc-&gt;size*p-&gt;add%mod)%mod;</span><br><span class=\"line\">        p-&gt;rc-&gt;add=(p-&gt;rc-&gt;add+p-&gt;add)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;add=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    p-&gt;size=<span class=\"number\">1</span>;</span><br><span class=\"line\">    p-&gt;sum=p-&gt;val;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;lc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;size+=p-&gt;lc-&gt;size;</span><br><span class=\"line\">        p-&gt;sum=(p-&gt;sum+p-&gt;lc-&gt;sum)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;rc!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        p-&gt;size+=p-&gt;rc-&gt;size;</span><br><span class=\"line\">        p-&gt;sum=(p-&gt;sum+p-&gt;rc-&gt;sum)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">    pushDown(q);</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;lc==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;lc=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rc==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;rc=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(q-&gt;rc==p)&#123;</span><br><span class=\"line\">        q-&gt;rc=p-&gt;lc;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rc!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;rc-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;lc=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        q-&gt;lc=p-&gt;rc;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;lc!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;lc-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;rc=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;ftr=p;</span><br><span class=\"line\">    pushUp(q);</span><br><span class=\"line\">    pushUp(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;!isRoot(p);rotate(p))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!isRoot(p-&gt;ftr))</span><br><span class=\"line\">            rotate((p-&gt;ftr-&gt;ftr-&gt;lc==p-&gt;ftr)==(p-&gt;ftr-&gt;lc==p)?p-&gt;ftr:p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    p-&gt;rc=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    pushUp(p);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;)&#123;</span><br><span class=\"line\">        pushDown(q-&gt;ftr);</span><br><span class=\"line\">        splay(q-&gt;ftr);</span><br><span class=\"line\">        q-&gt;ftr-&gt;rc=q;</span><br><span class=\"line\">        pushUp(q-&gt;ftr);</span><br><span class=\"line\">        q=q-&gt;ftr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">LCA</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    pushDown(p);</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    splay(q);</span><br><span class=\"line\">    q-&gt;rc=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    pushUp(q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(p=q;p-&gt;ftr!=<span class=\"literal\">NULL</span>;)&#123;</span><br><span class=\"line\">        pushDown(p-&gt;ftr);</span><br><span class=\"line\">        splay(p-&gt;ftr);</span><br><span class=\"line\">        p-&gt;ftr-&gt;rc=p;</span><br><span class=\"line\">        pushUp(p-&gt;ftr);</span><br><span class=\"line\">        p=p-&gt;ftr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(q);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(re SplayNode* p,re <span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    p-&gt;val=(p-&gt;val+x)%mod;</span><br><span class=\"line\">    p-&gt;sum=(p-&gt;sum+<span class=\"number\">1L</span>L*p-&gt;size*x%mod)%mod;</span><br><span class=\"line\">    p-&gt;add=(p-&gt;add+x)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">query</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p-&gt;sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,ec,rt,sz,cntsum,ans;</span><br><span class=\"line\"><span class=\"keyword\">int</span> des[<span class=\"number\">2</span>*maxn+<span class=\"number\">1</span>],suc[<span class=\"number\">2</span>*maxn+<span class=\"number\">1</span>],las[maxn+<span class=\"number\">1</span>],id[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> size[maxn+<span class=\"number\">1</span>],mxs[maxn+<span class=\"number\">1</span>],vis[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt[maxn+<span class=\"number\">1</span>],stk[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    des[++ec]=y;</span><br><span class=\"line\">    suc[ec]=las[x];</span><br><span class=\"line\">    las[x]=ec;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getRt</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    size[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    mxs[cur]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            getRt(des[i],cur);</span><br><span class=\"line\">            size[cur]+=size[des[i]];</span><br><span class=\"line\">            mxs[cur]=max(mxs[cur],size[des[i]]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    mxs[cur]=max(mxs[cur],sz-size[cur]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!rt||mxs[rt]&gt;mxs[cur])</span><br><span class=\"line\">        rt=cur;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr,re <span class=\"keyword\">int</span> root)</span></span>&#123;</span><br><span class=\"line\">    stk[++stk[<span class=\"number\">0</span>]]=cur;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    cnt[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            res=(res+calc(des[i],cur,root))%mod;</span><br><span class=\"line\">            cnt[cur]+=cnt[des[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ans=(ans+<span class=\"number\">1L</span>L*cnt[cur]*(query(mempool+id[cur])-cntsum+mod)%mod+mod)%mod;</span><br><span class=\"line\">    re SplayNode* x=LCA(mempool+id[cur],mempool+id[root]);</span><br><span class=\"line\">    access(x);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> dx=x-&gt;lc!=<span class=\"literal\">NULL</span>?x-&gt;lc-&gt;size:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (res+<span class=\"number\">1L</span>L*cnt[cur]*dx%mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">divide</span><span class=\"params\">(re <span class=\"keyword\">int</span> cur,re <span class=\"keyword\">int</span> ftr)</span></span>&#123;</span><br><span class=\"line\">    vis[cur]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    cntsum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur],j=<span class=\"number\">0</span>;i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            re <span class=\"keyword\">int</span> tmp=calc(des[i],cur,cur);</span><br><span class=\"line\">            ans=(ans+<span class=\"number\">1L</span>L*(n-cnt[des[i]])*tmp%mod)%mod;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;j&lt;stk[<span class=\"number\">0</span>];++j,update(mempool+id[stk[j]],cnt[stk[j]]),cntsum=(cntsum+cnt[stk[j]])%mod);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;stk[<span class=\"number\">0</span>];update(mempool+id[stk[stk[<span class=\"number\">0</span>]]],mod-cnt[stk[stk[<span class=\"number\">0</span>]]]),--stk[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=las[cur];i;i=suc[i])</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(des[i]!=ftr&amp;&amp;!vis[des[i]])&#123;</span><br><span class=\"line\">            rt=des[i];</span><br><span class=\"line\">            sz=size[des[i]];</span><br><span class=\"line\">            getRt(des[i],cur);</span><br><span class=\"line\">            divide(rt,cur);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x)&#123;</span><br><span class=\"line\">            connect(x,i);</span><br><span class=\"line\">            connect(i,x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        pushUp(mempool+i);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x)</span><br><span class=\"line\">            (mempool+i)-&gt;ftr=mempool+x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::read(id[i]);</span><br><span class=\"line\">    rt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    sz=n;</span><br><span class=\"line\">    getRt(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    divide(rt,<span class=\"number\">0</span>);</span><br><span class=\"line\">    cltstream::write(ans);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-08-15T05:54:54.000Z","title":"Challestend的脑内切题清单","password":null,"_content":"如标题所示。\n\n觉得比较简单或者懒得写代码的题。\n\n~~wzx「你怎么还懒得写代码啊。你把这些题都写了就有事干了。」~~\n\n可能有时候会闲着没事写几道。\n\n<!-- more -->\n\n### [「CF915F」Imbalance Value of a Tree](http://codeforces.com/problemset/problem/915/F)\n\n最大值和最小值分开求。\n\n大力并查集。\n\n以上。\n\n### [「CF455D」Serega and Fun](http://codeforces.com/problemset/problem/455/D)\n\n大力块链。\n\n记得loli以前考过这题。\n\n~~结果那次数据随机放跑了暴力。~~\n\n### [「CF1182E」Product Oriented Recurrence](http://codeforces.com/problemset/problem/1182/E)\n\n令\n\n$$g_{i}=\\ln f_{i}$$\n\n那么\n\n$$g_{n}=(2n-6)\\ln c+g_{n-1}+g_{n-2}+g_{n-3}$$\n\n一定存在这样的$k_{0},k_{1},k_{2},k_{3}$，使得\n\n$$g_{n}=k_{0}\\ln c+k_{1}g_{1}+k_{2}g_{2}+k_{3}g_{3}$$\n\n于是\n\n$$f_{n}=c^{k_{0}}\\cdot f_{1}^{k_{1}}\\cdot f_{2}^{k_{2}}\\cdot f_{3}^{k_{3}}$$\n\n### [「CF1093E」Product Oriented Recurrence](http://codeforces.com/problemset/problem/1093/E)\n\n定义$f_{i}$表示$a_{i}$在$b$中对应的下标，$g_{i}$表示$b_{i}$在$a$中对应的下标。\n\n操作一就是在询问\n\n$$\\sum_{i=l_{a}}^{r_{a}}[f_{i}\\in[l_{b},r_{b}]]$$\n\n操作二就交换一下$f_{g_{x}}$和$f_{g_{y}}$，$g_{x}$和$g_{y}$。\n\n大力分块。\n\n### [「CF446C」DZY Loves Fibonacci Numbers](http://codeforces.com/problemset/problem/446/C)\n\n~~通过查阅题解，~~我们知道斐波那契数拥有如下性质\n\n$$F_{n+m}=F_{n+1}F_{m}+F_{n}F_{m-1}$$\n\n考虑使用数学归纳法证明。首先\n\n$$F_{n+0}=F_{n+1}F_{0}+F_{n}F_{-1}$$\n\n……不从$1$开始。\n\n$$F_{n+1}=F_{n+1}F_{1}+F_{n}F_{0}=F_{n+1}$$\n\n$$F_{n+2}=F_{n+1}F_{2}+F_{n}F_{1}=F_{n+1}+F_{n}=F_{n+2}$$\n\n$$\\begin{aligned}\nF_{n+m}&=F_{n+m-1}+F_{n+m-2}\\\\\n&=F_{n+1}F_{m-1}+F_{n}F_{m-2}+F_{n+1}F_{m-2}+F_{n}F_{m-3}\\\\\n&=F_{n+1}F_{m}+F_{n}F_{m-1}\n\\end{aligned}$$\n\n于是\n\n$$\\sum_{i=1}^{x}F_{L+i}=F_{L+1}\\sum_{i=1}^{x}F_{i}+F_{L}\\sum_{i=0}^{x-1}F_{i}$$\n\n然后大力线段树（细节略）。\n\n[我甚至还写了](http://codeforces.com/contest/446/submission/58884107)。\n","source":"_posts/2019-08-15-solving-problems-in-brain.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-08-15 13:54:54\ntitle: Challestend的脑内切题清单\ntags:\n  - 杂题\ncategories:\n  - 瞎扯\npassword:\n---\n如标题所示。\n\n觉得比较简单或者懒得写代码的题。\n\n~~wzx「你怎么还懒得写代码啊。你把这些题都写了就有事干了。」~~\n\n可能有时候会闲着没事写几道。\n\n<!-- more -->\n\n### [「CF915F」Imbalance Value of a Tree](http://codeforces.com/problemset/problem/915/F)\n\n最大值和最小值分开求。\n\n大力并查集。\n\n以上。\n\n### [「CF455D」Serega and Fun](http://codeforces.com/problemset/problem/455/D)\n\n大力块链。\n\n记得loli以前考过这题。\n\n~~结果那次数据随机放跑了暴力。~~\n\n### [「CF1182E」Product Oriented Recurrence](http://codeforces.com/problemset/problem/1182/E)\n\n令\n\n$$g_{i}=\\ln f_{i}$$\n\n那么\n\n$$g_{n}=(2n-6)\\ln c+g_{n-1}+g_{n-2}+g_{n-3}$$\n\n一定存在这样的$k_{0},k_{1},k_{2},k_{3}$，使得\n\n$$g_{n}=k_{0}\\ln c+k_{1}g_{1}+k_{2}g_{2}+k_{3}g_{3}$$\n\n于是\n\n$$f_{n}=c^{k_{0}}\\cdot f_{1}^{k_{1}}\\cdot f_{2}^{k_{2}}\\cdot f_{3}^{k_{3}}$$\n\n### [「CF1093E」Product Oriented Recurrence](http://codeforces.com/problemset/problem/1093/E)\n\n定义$f_{i}$表示$a_{i}$在$b$中对应的下标，$g_{i}$表示$b_{i}$在$a$中对应的下标。\n\n操作一就是在询问\n\n$$\\sum_{i=l_{a}}^{r_{a}}[f_{i}\\in[l_{b},r_{b}]]$$\n\n操作二就交换一下$f_{g_{x}}$和$f_{g_{y}}$，$g_{x}$和$g_{y}$。\n\n大力分块。\n\n### [「CF446C」DZY Loves Fibonacci Numbers](http://codeforces.com/problemset/problem/446/C)\n\n~~通过查阅题解，~~我们知道斐波那契数拥有如下性质\n\n$$F_{n+m}=F_{n+1}F_{m}+F_{n}F_{m-1}$$\n\n考虑使用数学归纳法证明。首先\n\n$$F_{n+0}=F_{n+1}F_{0}+F_{n}F_{-1}$$\n\n……不从$1$开始。\n\n$$F_{n+1}=F_{n+1}F_{1}+F_{n}F_{0}=F_{n+1}$$\n\n$$F_{n+2}=F_{n+1}F_{2}+F_{n}F_{1}=F_{n+1}+F_{n}=F_{n+2}$$\n\n$$\\begin{aligned}\nF_{n+m}&=F_{n+m-1}+F_{n+m-2}\\\\\n&=F_{n+1}F_{m-1}+F_{n}F_{m-2}+F_{n+1}F_{m-2}+F_{n}F_{m-3}\\\\\n&=F_{n+1}F_{m}+F_{n}F_{m-1}\n\\end{aligned}$$\n\n于是\n\n$$\\sum_{i=1}^{x}F_{L+i}=F_{L+1}\\sum_{i=1}^{x}F_{i}+F_{L}\\sum_{i=0}^{x-1}F_{i}$$\n\n然后大力线段树（细节略）。\n\n[我甚至还写了](http://codeforces.com/contest/446/submission/58884107)。\n","slug":"solving-problems-in-brain","published":1,"updated":"2020-05-17T12:07:04.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0u0031mku9d8s3d6t2","content":"<p>如标题所示。</p>\n<p>觉得比较简单或者懒得写代码的题。</p>\n<p><del>wzx「你怎么还懒得写代码啊。你把这些题都写了就有事干了。」</del></p>\n<p>可能有时候会闲着没事写几道。</p>\n<a id=\"more\"></a>\n<h3 id=\"「CF915F」Imbalance-Value-of-a-Tree\"><a href=\"#「CF915F」Imbalance-Value-of-a-Tree\" class=\"headerlink\" title=\"「CF915F」Imbalance Value of a Tree\"></a><a href=\"http://codeforces.com/problemset/problem/915/F\">「CF915F」Imbalance Value of a Tree</a></h3><p>最大值和最小值分开求。</p>\n<p>大力并查集。</p>\n<p>以上。</p>\n<h3 id=\"「CF455D」Serega-and-Fun\"><a href=\"#「CF455D」Serega-and-Fun\" class=\"headerlink\" title=\"「CF455D」Serega and Fun\"></a><a href=\"http://codeforces.com/problemset/problem/455/D\">「CF455D」Serega and Fun</a></h3><p>大力块链。</p>\n<p>记得loli以前考过这题。</p>\n<p><del>结果那次数据随机放跑了暴力。</del></p>\n<h3 id=\"「CF1182E」Product-Oriented-Recurrence\"><a href=\"#「CF1182E」Product-Oriented-Recurrence\" class=\"headerlink\" title=\"「CF1182E」Product Oriented Recurrence\"></a><a href=\"http://codeforces.com/problemset/problem/1182/E\">「CF1182E」Product Oriented Recurrence</a></h3><p>令</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\ln f_{i}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">g_{n}=(2n-6)\\ln c+g_{n-1}+g_{n-2}+g_{n-3}</script><p>一定存在这样的$k_{0},k_{1},k_{2},k_{3}$，使得</p>\n<script type=\"math/tex; mode=display\">g_{n}=k_{0}\\ln c+k_{1}g_{1}+k_{2}g_{2}+k_{3}g_{3}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">f_{n}=c^{k_{0}}\\cdot f_{1}^{k_{1}}\\cdot f_{2}^{k_{2}}\\cdot f_{3}^{k_{3}}</script><h3 id=\"「CF1093E」Product-Oriented-Recurrence\"><a href=\"#「CF1093E」Product-Oriented-Recurrence\" class=\"headerlink\" title=\"「CF1093E」Product Oriented Recurrence\"></a><a href=\"http://codeforces.com/problemset/problem/1093/E\">「CF1093E」Product Oriented Recurrence</a></h3><p>定义$f_{i}$表示$a_{i}$在$b$中对应的下标，$g_{i}$表示$b_{i}$在$a$中对应的下标。</p>\n<p>操作一就是在询问</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=l_{a}}^{r_{a}}[f_{i}\\in[l_{b},r_{b}]]</script><p>操作二就交换一下$f_{g_{x}}$和$f_{g_{y}}$，$g_{x}$和$g_{y}$。</p>\n<p>大力分块。</p>\n<h3 id=\"「CF446C」DZY-Loves-Fibonacci-Numbers\"><a href=\"#「CF446C」DZY-Loves-Fibonacci-Numbers\" class=\"headerlink\" title=\"「CF446C」DZY Loves Fibonacci Numbers\"></a><a href=\"http://codeforces.com/problemset/problem/446/C\">「CF446C」DZY Loves Fibonacci Numbers</a></h3><p><del>通过查阅题解，</del>我们知道斐波那契数拥有如下性质</p>\n<script type=\"math/tex; mode=display\">F_{n+m}=F_{n+1}F_{m}+F_{n}F_{m-1}</script><p>考虑使用数学归纳法证明。首先</p>\n<script type=\"math/tex; mode=display\">F_{n+0}=F_{n+1}F_{0}+F_{n}F_{-1}</script><p>……不从$1$开始。</p>\n<script type=\"math/tex; mode=display\">F_{n+1}=F_{n+1}F_{1}+F_{n}F_{0}=F_{n+1}</script><script type=\"math/tex; mode=display\">F_{n+2}=F_{n+1}F_{2}+F_{n}F_{1}=F_{n+1}+F_{n}=F_{n+2}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{n+m}&=F_{n+m-1}+F_{n+m-2}\\\\\n&=F_{n+1}F_{m-1}+F_{n}F_{m-2}+F_{n+1}F_{m-2}+F_{n}F_{m-3}\\\\\n&=F_{n+1}F_{m}+F_{n}F_{m-1}\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{x}F_{L+i}=F_{L+1}\\sum_{i=1}^{x}F_{i}+F_{L}\\sum_{i=0}^{x-1}F_{i}</script><p>然后大力线段树（细节略）。</p>\n<p><a href=\"http://codeforces.com/contest/446/submission/58884107\">我甚至还写了</a>。</p>\n","site":{"data":{}},"excerpt":"<p>如标题所示。</p>\n<p>觉得比较简单或者懒得写代码的题。</p>\n<p><del>wzx「你怎么还懒得写代码啊。你把这些题都写了就有事干了。」</del></p>\n<p>可能有时候会闲着没事写几道。</p>","more":"<h3 id=\"「CF915F」Imbalance-Value-of-a-Tree\"><a href=\"#「CF915F」Imbalance-Value-of-a-Tree\" class=\"headerlink\" title=\"「CF915F」Imbalance Value of a Tree\"></a><a href=\"http://codeforces.com/problemset/problem/915/F\">「CF915F」Imbalance Value of a Tree</a></h3><p>最大值和最小值分开求。</p>\n<p>大力并查集。</p>\n<p>以上。</p>\n<h3 id=\"「CF455D」Serega-and-Fun\"><a href=\"#「CF455D」Serega-and-Fun\" class=\"headerlink\" title=\"「CF455D」Serega and Fun\"></a><a href=\"http://codeforces.com/problemset/problem/455/D\">「CF455D」Serega and Fun</a></h3><p>大力块链。</p>\n<p>记得loli以前考过这题。</p>\n<p><del>结果那次数据随机放跑了暴力。</del></p>\n<h3 id=\"「CF1182E」Product-Oriented-Recurrence\"><a href=\"#「CF1182E」Product-Oriented-Recurrence\" class=\"headerlink\" title=\"「CF1182E」Product Oriented Recurrence\"></a><a href=\"http://codeforces.com/problemset/problem/1182/E\">「CF1182E」Product Oriented Recurrence</a></h3><p>令</p>\n<script type=\"math/tex; mode=display\">g_{i}=\\ln f_{i}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">g_{n}=(2n-6)\\ln c+g_{n-1}+g_{n-2}+g_{n-3}</script><p>一定存在这样的$k_{0},k_{1},k_{2},k_{3}$，使得</p>\n<script type=\"math/tex; mode=display\">g_{n}=k_{0}\\ln c+k_{1}g_{1}+k_{2}g_{2}+k_{3}g_{3}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">f_{n}=c^{k_{0}}\\cdot f_{1}^{k_{1}}\\cdot f_{2}^{k_{2}}\\cdot f_{3}^{k_{3}}</script><h3 id=\"「CF1093E」Product-Oriented-Recurrence\"><a href=\"#「CF1093E」Product-Oriented-Recurrence\" class=\"headerlink\" title=\"「CF1093E」Product Oriented Recurrence\"></a><a href=\"http://codeforces.com/problemset/problem/1093/E\">「CF1093E」Product Oriented Recurrence</a></h3><p>定义$f_{i}$表示$a_{i}$在$b$中对应的下标，$g_{i}$表示$b_{i}$在$a$中对应的下标。</p>\n<p>操作一就是在询问</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=l_{a}}^{r_{a}}[f_{i}\\in[l_{b},r_{b}]]</script><p>操作二就交换一下$f_{g_{x}}$和$f_{g_{y}}$，$g_{x}$和$g_{y}$。</p>\n<p>大力分块。</p>\n<h3 id=\"「CF446C」DZY-Loves-Fibonacci-Numbers\"><a href=\"#「CF446C」DZY-Loves-Fibonacci-Numbers\" class=\"headerlink\" title=\"「CF446C」DZY Loves Fibonacci Numbers\"></a><a href=\"http://codeforces.com/problemset/problem/446/C\">「CF446C」DZY Loves Fibonacci Numbers</a></h3><p><del>通过查阅题解，</del>我们知道斐波那契数拥有如下性质</p>\n<script type=\"math/tex; mode=display\">F_{n+m}=F_{n+1}F_{m}+F_{n}F_{m-1}</script><p>考虑使用数学归纳法证明。首先</p>\n<script type=\"math/tex; mode=display\">F_{n+0}=F_{n+1}F_{0}+F_{n}F_{-1}</script><p>……不从$1$开始。</p>\n<script type=\"math/tex; mode=display\">F_{n+1}=F_{n+1}F_{1}+F_{n}F_{0}=F_{n+1}</script><script type=\"math/tex; mode=display\">F_{n+2}=F_{n+1}F_{2}+F_{n}F_{1}=F_{n+1}+F_{n}=F_{n+2}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{n+m}&=F_{n+m-1}+F_{n+m-2}\\\\\n&=F_{n+1}F_{m-1}+F_{n}F_{m-2}+F_{n+1}F_{m-2}+F_{n}F_{m-3}\\\\\n&=F_{n+1}F_{m}+F_{n}F_{m-1}\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{x}F_{L+i}=F_{L+1}\\sum_{i=1}^{x}F_{i}+F_{L}\\sum_{i=0}^{x-1}F_{i}</script><p>然后大力线段树（细节略）。</p>\n<p><a href=\"http://codeforces.com/contest/446/submission/58884107\">我甚至还写了</a>。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2020-05-21T04:10:31.000Z","title":"东方催狐谭（とうほうさいこたん） ~ Servants of Harvest Wish","password":null,"_content":"\n> この美しい景色も秋の贈り物……\n> \n> 滝のように落ちていく紅葉、通りすがる人達に微笑む山……\n> \n> この絶景を目の前にして、言葉が詰まらない方がおかしいと思わない？\n\n<!-- more -->\n\n以上文字选自魔理沙线六面 BOSS 开打前对话。\n\n如果您对东方圈有一定了解，您可能会知道有一款叫做 `東方落流星（とうほうらくりゅうせい） ~ The Shattered Sky` 的游戏。催狐谭是那个游戏作者的新作。\n\n关于前作落流星，我其实并没有玩过，主要原因就是它的立绘实在是……太抽象了。\n\n然而本作催狐谭的立绘还是可以的。\n\n摘自 THBWiki 的故事背景：\n\n> 由于不知名的原因，幻想乡中所有稻谷迅速凋零。\n>\n> 如此下去，人类不久便会陷入饥饿之中。\n>\n> 四位少女决定出发寻找异变的原因并解决异变。\n\n总体的剧情就是，EX BOSS 为了给自己创造一个新的肉身，从六面 BOSS 那里偷来了如意宝珠。如意宝珠的消失导致了异变。\n\n后来 EX BOSS 让自己的两个手下把宝珠还回去，结果她俩被自机揍了一顿溜回来了。\n\nEX BOSS 感到十分 excited，于是设计把自机引了过来想会会她们。\n\n本作一共有四个自机：灵梦，魔理沙，早苗和龙子（前作落流星五面 BOSS），每个自机都有 AB 两个配置。当然我是只用过魔 A，而且是两三发就通了的那种。\n\n本作的特殊系统比较简单。击破敌人可以获得特殊道具，收集一定数量可以进入一个特殊模式。在这个模式下按 X 可以扔出风神录一样的灵击然后结束该模式，在该模式中收集到的道具越多，灵击圈就越大。虽然可以决死，但是**被弹之后如果不扔决死是会掉残的**。我初通的时候就是因为这个在一面抱 B 撞了（\n\n每一面击破 BOSS 之前收集足够多的特殊道具可以开启 Last Word，不能扔雷，被弹会强制结束符卡而不会掉残。\n\n以及传统艺能，六面 BOSS 的 Last Word 被弹会掉残，以及自机全程处于特殊模式中，普通的雷被换成了原本可以结束该模式的灵击。\n\n我在看过视频剧透的情况下 Lunatic 三发通，而且还是在一面抱 B 撞，四面最后一只大蝴蝶耗俩雷，五道中完全没背板的情况下；Extra 一发通。机体都是魔 A。\n\n所以说这游戏其实也不难，当然我是指 Lunatic 和 Extra 。至于 URA（在 Lunatic 选项处连打 `Shift` 解锁）和 Lunatic Extra，不好意思我不敢碰。\n\n而且据说，这游戏每一个 BOSS 都有一张异常符卡，是满足一些乱七八糟的条件（比如 EX BOSS 的异常符卡需要在满足一些条件的情况下 NN EX 道中，然后 EX BOSS 的 BGM 甚至还会换曲风，甚至似乎这个才是原曲）之后会额外追加的一张符卡。如果能在实战（单关练习也行，但是 BOSS 练习或符卡练习不行）收掉这张符卡，就会解锁最后的 Overdrive 符卡。\n\n干败吓疯，干败吓疯。\n\n最后是一些链接：\n\n- [在 Bullet Forge 上下载该游戏](https://www.bulletforge.org/u/eredom/p/dong-fang-cui-hu-tan-servants-of-harvest-wish)\n- [在 THBWiki 上查阅相关资料](https://thwiki.cc/%E6%9D%B1%E6%96%B9%E5%82%AC%E7%8B%90%E8%AD%9A_%EF%BD%9E_Servants_of_Harvest_Wish.)\n- [观看相关视频](https://space.bilibili.com/1418000)\n\n以及，也许近期会做一个 Lunatic 和 Extra 初通 Replay 的解说。\n","source":"_posts/2020-05-21-touhou-saikotan-servants-of-harvest-wish.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2020-05-21 12:10:31\ntitle: 东方催狐谭（とうほうさいこたん） ~ Servants of Harvest Wish\ntags:\n  - 东方\ncategories:\n  - 颓废\npassword:\n---\n\n> この美しい景色も秋の贈り物……\n> \n> 滝のように落ちていく紅葉、通りすがる人達に微笑む山……\n> \n> この絶景を目の前にして、言葉が詰まらない方がおかしいと思わない？\n\n<!-- more -->\n\n以上文字选自魔理沙线六面 BOSS 开打前对话。\n\n如果您对东方圈有一定了解，您可能会知道有一款叫做 `東方落流星（とうほうらくりゅうせい） ~ The Shattered Sky` 的游戏。催狐谭是那个游戏作者的新作。\n\n关于前作落流星，我其实并没有玩过，主要原因就是它的立绘实在是……太抽象了。\n\n然而本作催狐谭的立绘还是可以的。\n\n摘自 THBWiki 的故事背景：\n\n> 由于不知名的原因，幻想乡中所有稻谷迅速凋零。\n>\n> 如此下去，人类不久便会陷入饥饿之中。\n>\n> 四位少女决定出发寻找异变的原因并解决异变。\n\n总体的剧情就是，EX BOSS 为了给自己创造一个新的肉身，从六面 BOSS 那里偷来了如意宝珠。如意宝珠的消失导致了异变。\n\n后来 EX BOSS 让自己的两个手下把宝珠还回去，结果她俩被自机揍了一顿溜回来了。\n\nEX BOSS 感到十分 excited，于是设计把自机引了过来想会会她们。\n\n本作一共有四个自机：灵梦，魔理沙，早苗和龙子（前作落流星五面 BOSS），每个自机都有 AB 两个配置。当然我是只用过魔 A，而且是两三发就通了的那种。\n\n本作的特殊系统比较简单。击破敌人可以获得特殊道具，收集一定数量可以进入一个特殊模式。在这个模式下按 X 可以扔出风神录一样的灵击然后结束该模式，在该模式中收集到的道具越多，灵击圈就越大。虽然可以决死，但是**被弹之后如果不扔决死是会掉残的**。我初通的时候就是因为这个在一面抱 B 撞了（\n\n每一面击破 BOSS 之前收集足够多的特殊道具可以开启 Last Word，不能扔雷，被弹会强制结束符卡而不会掉残。\n\n以及传统艺能，六面 BOSS 的 Last Word 被弹会掉残，以及自机全程处于特殊模式中，普通的雷被换成了原本可以结束该模式的灵击。\n\n我在看过视频剧透的情况下 Lunatic 三发通，而且还是在一面抱 B 撞，四面最后一只大蝴蝶耗俩雷，五道中完全没背板的情况下；Extra 一发通。机体都是魔 A。\n\n所以说这游戏其实也不难，当然我是指 Lunatic 和 Extra 。至于 URA（在 Lunatic 选项处连打 `Shift` 解锁）和 Lunatic Extra，不好意思我不敢碰。\n\n而且据说，这游戏每一个 BOSS 都有一张异常符卡，是满足一些乱七八糟的条件（比如 EX BOSS 的异常符卡需要在满足一些条件的情况下 NN EX 道中，然后 EX BOSS 的 BGM 甚至还会换曲风，甚至似乎这个才是原曲）之后会额外追加的一张符卡。如果能在实战（单关练习也行，但是 BOSS 练习或符卡练习不行）收掉这张符卡，就会解锁最后的 Overdrive 符卡。\n\n干败吓疯，干败吓疯。\n\n最后是一些链接：\n\n- [在 Bullet Forge 上下载该游戏](https://www.bulletforge.org/u/eredom/p/dong-fang-cui-hu-tan-servants-of-harvest-wish)\n- [在 THBWiki 上查阅相关资料](https://thwiki.cc/%E6%9D%B1%E6%96%B9%E5%82%AC%E7%8B%90%E8%AD%9A_%EF%BD%9E_Servants_of_Harvest_Wish.)\n- [观看相关视频](https://space.bilibili.com/1418000)\n\n以及，也许近期会做一个 Lunatic 和 Extra 初通 Replay 的解说。\n","slug":"touhou-saikotan-servants-of-harvest-wish","published":1,"updated":"2020-05-21T13:45:51.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0u0034mku922w1aclo","content":"<blockquote>\n<p>この美しい景色も秋の贈り物……</p>\n<p>滝のように落ちていく紅葉、通りすがる人達に微笑む山……</p>\n<p>この絶景を目の前にして、言葉が詰まらない方がおかしいと思わない？</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>以上文字选自魔理沙线六面 BOSS 开打前对话。</p>\n<p>如果您对东方圈有一定了解，您可能会知道有一款叫做 <code>東方落流星（とうほうらくりゅうせい） ~ The Shattered Sky</code> 的游戏。催狐谭是那个游戏作者的新作。</p>\n<p>关于前作落流星，我其实并没有玩过，主要原因就是它的立绘实在是……太抽象了。</p>\n<p>然而本作催狐谭的立绘还是可以的。</p>\n<p>摘自 THBWiki 的故事背景：</p>\n<blockquote>\n<p>由于不知名的原因，幻想乡中所有稻谷迅速凋零。</p>\n<p>如此下去，人类不久便会陷入饥饿之中。</p>\n<p>四位少女决定出发寻找异变的原因并解决异变。</p>\n</blockquote>\n<p>总体的剧情就是，EX BOSS 为了给自己创造一个新的肉身，从六面 BOSS 那里偷来了如意宝珠。如意宝珠的消失导致了异变。</p>\n<p>后来 EX BOSS 让自己的两个手下把宝珠还回去，结果她俩被自机揍了一顿溜回来了。</p>\n<p>EX BOSS 感到十分 excited，于是设计把自机引了过来想会会她们。</p>\n<p>本作一共有四个自机：灵梦，魔理沙，早苗和龙子（前作落流星五面 BOSS），每个自机都有 AB 两个配置。当然我是只用过魔 A，而且是两三发就通了的那种。</p>\n<p>本作的特殊系统比较简单。击破敌人可以获得特殊道具，收集一定数量可以进入一个特殊模式。在这个模式下按 X 可以扔出风神录一样的灵击然后结束该模式，在该模式中收集到的道具越多，灵击圈就越大。虽然可以决死，但是<strong>被弹之后如果不扔决死是会掉残的</strong>。我初通的时候就是因为这个在一面抱 B 撞了（</p>\n<p>每一面击破 BOSS 之前收集足够多的特殊道具可以开启 Last Word，不能扔雷，被弹会强制结束符卡而不会掉残。</p>\n<p>以及传统艺能，六面 BOSS 的 Last Word 被弹会掉残，以及自机全程处于特殊模式中，普通的雷被换成了原本可以结束该模式的灵击。</p>\n<p>我在看过视频剧透的情况下 Lunatic 三发通，而且还是在一面抱 B 撞，四面最后一只大蝴蝶耗俩雷，五道中完全没背板的情况下；Extra 一发通。机体都是魔 A。</p>\n<p>所以说这游戏其实也不难，当然我是指 Lunatic 和 Extra 。至于 URA（在 Lunatic 选项处连打 <code>Shift</code> 解锁）和 Lunatic Extra，不好意思我不敢碰。</p>\n<p>而且据说，这游戏每一个 BOSS 都有一张异常符卡，是满足一些乱七八糟的条件（比如 EX BOSS 的异常符卡需要在满足一些条件的情况下 NN EX 道中，然后 EX BOSS 的 BGM 甚至还会换曲风，甚至似乎这个才是原曲）之后会额外追加的一张符卡。如果能在实战（单关练习也行，但是 BOSS 练习或符卡练习不行）收掉这张符卡，就会解锁最后的 Overdrive 符卡。</p>\n<p>干败吓疯，干败吓疯。</p>\n<p>最后是一些链接：</p>\n<ul>\n<li><a href=\"https://www.bulletforge.org/u/eredom/p/dong-fang-cui-hu-tan-servants-of-harvest-wish\">在 Bullet Forge 上下载该游戏</a></li>\n<li><a href=\"https://thwiki.cc/%E6%9D%B1%E6%96%B9%E5%82%AC%E7%8B%90%E8%AD%9A_%EF%BD%9E_Servants_of_Harvest_Wish.\">在 THBWiki 上查阅相关资料</a></li>\n<li><a href=\"https://space.bilibili.com/1418000\">观看相关视频</a></li>\n</ul>\n<p>以及，也许近期会做一个 Lunatic 和 Extra 初通 Replay 的解说。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>この美しい景色も秋の贈り物……</p>\n<p>滝のように落ちていく紅葉、通りすがる人達に微笑む山……</p>\n<p>この絶景を目の前にして、言葉が詰まらない方がおかしいと思わない？</p>\n</blockquote>","more":"<p>以上文字选自魔理沙线六面 BOSS 开打前对话。</p>\n<p>如果您对东方圈有一定了解，您可能会知道有一款叫做 <code>東方落流星（とうほうらくりゅうせい） ~ The Shattered Sky</code> 的游戏。催狐谭是那个游戏作者的新作。</p>\n<p>关于前作落流星，我其实并没有玩过，主要原因就是它的立绘实在是……太抽象了。</p>\n<p>然而本作催狐谭的立绘还是可以的。</p>\n<p>摘自 THBWiki 的故事背景：</p>\n<blockquote>\n<p>由于不知名的原因，幻想乡中所有稻谷迅速凋零。</p>\n<p>如此下去，人类不久便会陷入饥饿之中。</p>\n<p>四位少女决定出发寻找异变的原因并解决异变。</p>\n</blockquote>\n<p>总体的剧情就是，EX BOSS 为了给自己创造一个新的肉身，从六面 BOSS 那里偷来了如意宝珠。如意宝珠的消失导致了异变。</p>\n<p>后来 EX BOSS 让自己的两个手下把宝珠还回去，结果她俩被自机揍了一顿溜回来了。</p>\n<p>EX BOSS 感到十分 excited，于是设计把自机引了过来想会会她们。</p>\n<p>本作一共有四个自机：灵梦，魔理沙，早苗和龙子（前作落流星五面 BOSS），每个自机都有 AB 两个配置。当然我是只用过魔 A，而且是两三发就通了的那种。</p>\n<p>本作的特殊系统比较简单。击破敌人可以获得特殊道具，收集一定数量可以进入一个特殊模式。在这个模式下按 X 可以扔出风神录一样的灵击然后结束该模式，在该模式中收集到的道具越多，灵击圈就越大。虽然可以决死，但是<strong>被弹之后如果不扔决死是会掉残的</strong>。我初通的时候就是因为这个在一面抱 B 撞了（</p>\n<p>每一面击破 BOSS 之前收集足够多的特殊道具可以开启 Last Word，不能扔雷，被弹会强制结束符卡而不会掉残。</p>\n<p>以及传统艺能，六面 BOSS 的 Last Word 被弹会掉残，以及自机全程处于特殊模式中，普通的雷被换成了原本可以结束该模式的灵击。</p>\n<p>我在看过视频剧透的情况下 Lunatic 三发通，而且还是在一面抱 B 撞，四面最后一只大蝴蝶耗俩雷，五道中完全没背板的情况下；Extra 一发通。机体都是魔 A。</p>\n<p>所以说这游戏其实也不难，当然我是指 Lunatic 和 Extra 。至于 URA（在 Lunatic 选项处连打 <code>Shift</code> 解锁）和 Lunatic Extra，不好意思我不敢碰。</p>\n<p>而且据说，这游戏每一个 BOSS 都有一张异常符卡，是满足一些乱七八糟的条件（比如 EX BOSS 的异常符卡需要在满足一些条件的情况下 NN EX 道中，然后 EX BOSS 的 BGM 甚至还会换曲风，甚至似乎这个才是原曲）之后会额外追加的一张符卡。如果能在实战（单关练习也行，但是 BOSS 练习或符卡练习不行）收掉这张符卡，就会解锁最后的 Overdrive 符卡。</p>\n<p>干败吓疯，干败吓疯。</p>\n<p>最后是一些链接：</p>\n<ul>\n<li><a href=\"https://www.bulletforge.org/u/eredom/p/dong-fang-cui-hu-tan-servants-of-harvest-wish\">在 Bullet Forge 上下载该游戏</a></li>\n<li><a href=\"https://thwiki.cc/%E6%9D%B1%E6%96%B9%E5%82%AC%E7%8B%90%E8%AD%9A_%EF%BD%9E_Servants_of_Harvest_Wish.\">在 THBWiki 上查阅相关资料</a></li>\n<li><a href=\"https://space.bilibili.com/1418000\">观看相关视频</a></li>\n</ul>\n<p>以及，也许近期会做一个 Lunatic 和 Extra 初通 Replay 的解说。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2020-09-09T15:41:05.000Z","title":"東方鬼葬剣（とうほうきそうけん） ~ Infinite Blade Pavilion","password":null,"_content":"> 「靠为什么刚开学才一个星期我已经感觉过了一辈子了。」\n\nSLYZ 2018 级 24 班朝代，皇帝及年号更替史：\n\n- YHN，立「精朝」，称「精太祖」，开元（忘了），后自谥「精虚帝」。\n- YHN，改「精朝」为「楠朝」，称「楠太宗」，开元「真虚」。\n- 时生物听写，太宗大挫，改元「太虚」。\n\n<!-- more -->\n\n总而言之就是介绍一个叫做鬼葬剑~~或者说鬼那啥剑~~的游戏。\n\n一年前发布的体验版，当时号称东方史上最难同人 STG，并且真的做到了。\n\n~~然后正式版难度大砍。~~\n\n~~不过有一说一体验版的确有一些无理了。~~\n\n~~而且可以续关，虽然是星莲船的续关。我是不会说体验版是连续关都不可以的。~~\n\n似乎ミルカ写的剧本（大概？）都会找一些神话故事作为蓝本。邪星章是旧约新约圣经，导命树是北欧神话，桃源宫是克苏鲁神话，真珠岛是埃及神话。\n\n这次轮到中华神话了。\n\n我是指，六面 Boss 是「<ruby>蚩<rt>し</rt>尤<rt>ゆう</rt></ruby>」，萝莉（确信）。\n\n~~「<ruby>八<rt>や</rt>蘇<rt>そ</rt>神<rt>がみ</rt></ruby> <ruby>秋<rt>しゅう</rt>雨<rt>う</rt></ruby>」（指正~~\n\n~~其实这游戏所有角色都是萝莉（光速逃~~\n\n~~但是我永远喜欢那谁谁まぐら（超光速逃~~\n\n~~去 THBWiki 翻了翻发现是「<ruby>饕<rt>と</rt>喰<rt>ぐ</rt>楽<rt>ら</rt></ruby> まぐら」（奇怪的名字~~\n\n灵梦线（其实是因为这游戏太难了而我又太菜了于是初见只能考虑梦 A）五面中 Boss（跑过来客串的四面 Boss）对话：\n\n> まぐら「これ以上踏み込むと御大将に殺されますわよ。」\n> \n> 霊夢「いい加減しつこいわよ！」\n> \n> *（スペルカード宣言・爪牙「ユーワンズァオヤー」）*\n> \n> *（スペルガード撃破）*\n> \n> まぐら「うごごご・・・だが・・・、  \n> 　　　　我が主の封印は、空高く解かれるのだ！」\n> \n> 霊夢「だまれ小悪党！」\n\n秋雨终符之前其实也有一些台词的。但是因为是图像，在游戏代码里面找不到文字。那么我就回忆一下视频里：\n\n> <center>我が名は蚩尤</center>\n> \n> <center><font color=##FF0000>鬼</font>として<font color=#FF0000>葬</font>られたものたちの<font color=#FF0000>剣</font>となり！</center>\n\n**结 尾 点 题**\n\n**文 题 呼 应**\n\n**升 华 主 题**\n\n好吧，其实我现在在游戏里（虽然说是最高难度 Lunatic）连秋雨终符都见不到（\n\n但是不得不说这游戏的弹幕都太野蛮了。比如说，我们有：\n\n- 一面吊打砂哥（？\n- 二面很酷很炫\n- 三面版底出缝\n- 四面劲爆砌墙\n- 五面斩了再说\n- 六面花样爆菊\n\n**黄 金 精 神**（等等好像哪里不对\n\n好。写完了。睡觉。\n\n链接：\n\n- [在 Bullet Forge 上下载该游戏](https://www.freem.ne.jp/win/game/20533)\n- [在 THBWiki 上查阅相关资料](https://thwiki.cc/%E6%9D%B1%E6%96%B9%E9%AC%BC%E8%91%AC%E5%89%A3_%EF%BD%9E_Infinite_Blade_Pavilion.)\n- [观看相关视频](https://www.bilibili.com/video/BV1ev411C7aN)（其实这个我也没看，我看的是另外一个 NBNC 的）\n\n---\n\n9-11 补充：\n\n不得不说，这游戏相比起体验版来说真的是削得超级多：\n\n- 梦 A 的面包片的发射频率快了 2 ~ 3 倍左右\n- 道中杂鱼敌人血量大幅度降低，弹幕强度大幅度削弱\n- Boss 血量大幅度降低\n- 资源变多\n\n我初通的时候道中几乎没背板，只是稍微记了一下一些比较麻烦的地方。\n\n结果到最后 7 残见秋雨 5 残通。\n\n~~什么嘛，我打得不是挺好的吗（自许~~\n\n然后试了一下剩下 5 个机体：\n\n- 梦 B 就一个直线机跑得还贼慢\n- 魔 A 说是贯通激光其实还是没法用\n- 魔 B 攻击太鶸\n- 妖 AB 吊毛机体用不来\n\n顺便还想补充一下。感觉这游戏 SpellPractice 有问题。很多在 SpellPractice 里面形状固定的弹幕到了 ScenePractice 里面就变成了随机的了。\n\n给人感觉最明显的应该是二面二符・死凶「窮奇のデスサイズ地獄変」。ScenePractice 里可以看到四个分身的初始角度是随机地，结果 SpellPractice 里直接给固定了。\n\n太懒了就不截图什么的了。\n","source":"_posts/2020-09-09-touhou-kisouken-infinite-blade-pavilion.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2020-09-09 23:41:05\ntitle: 東方鬼葬剣（とうほうきそうけん） ~ Infinite Blade Pavilion\ntags:\n  - 东方\ncategories:\n  - 颓废\npassword:\n---\n> 「靠为什么刚开学才一个星期我已经感觉过了一辈子了。」\n\nSLYZ 2018 级 24 班朝代，皇帝及年号更替史：\n\n- YHN，立「精朝」，称「精太祖」，开元（忘了），后自谥「精虚帝」。\n- YHN，改「精朝」为「楠朝」，称「楠太宗」，开元「真虚」。\n- 时生物听写，太宗大挫，改元「太虚」。\n\n<!-- more -->\n\n总而言之就是介绍一个叫做鬼葬剑~~或者说鬼那啥剑~~的游戏。\n\n一年前发布的体验版，当时号称东方史上最难同人 STG，并且真的做到了。\n\n~~然后正式版难度大砍。~~\n\n~~不过有一说一体验版的确有一些无理了。~~\n\n~~而且可以续关，虽然是星莲船的续关。我是不会说体验版是连续关都不可以的。~~\n\n似乎ミルカ写的剧本（大概？）都会找一些神话故事作为蓝本。邪星章是旧约新约圣经，导命树是北欧神话，桃源宫是克苏鲁神话，真珠岛是埃及神话。\n\n这次轮到中华神话了。\n\n我是指，六面 Boss 是「<ruby>蚩<rt>し</rt>尤<rt>ゆう</rt></ruby>」，萝莉（确信）。\n\n~~「<ruby>八<rt>や</rt>蘇<rt>そ</rt>神<rt>がみ</rt></ruby> <ruby>秋<rt>しゅう</rt>雨<rt>う</rt></ruby>」（指正~~\n\n~~其实这游戏所有角色都是萝莉（光速逃~~\n\n~~但是我永远喜欢那谁谁まぐら（超光速逃~~\n\n~~去 THBWiki 翻了翻发现是「<ruby>饕<rt>と</rt>喰<rt>ぐ</rt>楽<rt>ら</rt></ruby> まぐら」（奇怪的名字~~\n\n灵梦线（其实是因为这游戏太难了而我又太菜了于是初见只能考虑梦 A）五面中 Boss（跑过来客串的四面 Boss）对话：\n\n> まぐら「これ以上踏み込むと御大将に殺されますわよ。」\n> \n> 霊夢「いい加減しつこいわよ！」\n> \n> *（スペルカード宣言・爪牙「ユーワンズァオヤー」）*\n> \n> *（スペルガード撃破）*\n> \n> まぐら「うごごご・・・だが・・・、  \n> 　　　　我が主の封印は、空高く解かれるのだ！」\n> \n> 霊夢「だまれ小悪党！」\n\n秋雨终符之前其实也有一些台词的。但是因为是图像，在游戏代码里面找不到文字。那么我就回忆一下视频里：\n\n> <center>我が名は蚩尤</center>\n> \n> <center><font color=##FF0000>鬼</font>として<font color=#FF0000>葬</font>られたものたちの<font color=#FF0000>剣</font>となり！</center>\n\n**结 尾 点 题**\n\n**文 题 呼 应**\n\n**升 华 主 题**\n\n好吧，其实我现在在游戏里（虽然说是最高难度 Lunatic）连秋雨终符都见不到（\n\n但是不得不说这游戏的弹幕都太野蛮了。比如说，我们有：\n\n- 一面吊打砂哥（？\n- 二面很酷很炫\n- 三面版底出缝\n- 四面劲爆砌墙\n- 五面斩了再说\n- 六面花样爆菊\n\n**黄 金 精 神**（等等好像哪里不对\n\n好。写完了。睡觉。\n\n链接：\n\n- [在 Bullet Forge 上下载该游戏](https://www.freem.ne.jp/win/game/20533)\n- [在 THBWiki 上查阅相关资料](https://thwiki.cc/%E6%9D%B1%E6%96%B9%E9%AC%BC%E8%91%AC%E5%89%A3_%EF%BD%9E_Infinite_Blade_Pavilion.)\n- [观看相关视频](https://www.bilibili.com/video/BV1ev411C7aN)（其实这个我也没看，我看的是另外一个 NBNC 的）\n\n---\n\n9-11 补充：\n\n不得不说，这游戏相比起体验版来说真的是削得超级多：\n\n- 梦 A 的面包片的发射频率快了 2 ~ 3 倍左右\n- 道中杂鱼敌人血量大幅度降低，弹幕强度大幅度削弱\n- Boss 血量大幅度降低\n- 资源变多\n\n我初通的时候道中几乎没背板，只是稍微记了一下一些比较麻烦的地方。\n\n结果到最后 7 残见秋雨 5 残通。\n\n~~什么嘛，我打得不是挺好的吗（自许~~\n\n然后试了一下剩下 5 个机体：\n\n- 梦 B 就一个直线机跑得还贼慢\n- 魔 A 说是贯通激光其实还是没法用\n- 魔 B 攻击太鶸\n- 妖 AB 吊毛机体用不来\n\n顺便还想补充一下。感觉这游戏 SpellPractice 有问题。很多在 SpellPractice 里面形状固定的弹幕到了 ScenePractice 里面就变成了随机的了。\n\n给人感觉最明显的应该是二面二符・死凶「窮奇のデスサイズ地獄変」。ScenePractice 里可以看到四个分身的初始角度是随机地，结果 SpellPractice 里直接给固定了。\n\n太懒了就不截图什么的了。\n","slug":"touhou-kisouken-infinite-blade-pavilion","published":1,"updated":"2020-09-11T13:25:29.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0v0037mku9e4bigugd","content":"<blockquote>\n<p>「靠为什么刚开学才一个星期我已经感觉过了一辈子了。」</p>\n</blockquote>\n<p>SLYZ 2018 级 24 班朝代，皇帝及年号更替史：</p>\n<ul>\n<li>YHN，立「精朝」，称「精太祖」，开元（忘了），后自谥「精虚帝」。</li>\n<li>YHN，改「精朝」为「楠朝」，称「楠太宗」，开元「真虚」。</li>\n<li>时生物听写，太宗大挫，改元「太虚」。</li>\n</ul>\n<a id=\"more\"></a>\n<p>总而言之就是介绍一个叫做鬼葬剑<del>或者说鬼那啥剑</del>的游戏。</p>\n<p>一年前发布的体验版，当时号称东方史上最难同人 STG，并且真的做到了。</p>\n<p><del>然后正式版难度大砍。</del></p>\n<p><del>不过有一说一体验版的确有一些无理了。</del></p>\n<p><del>而且可以续关，虽然是星莲船的续关。我是不会说体验版是连续关都不可以的。</del></p>\n<p>似乎ミルカ写的剧本（大概？）都会找一些神话故事作为蓝本。邪星章是旧约新约圣经，导命树是北欧神话，桃源宫是克苏鲁神话，真珠岛是埃及神话。</p>\n<p>这次轮到中华神话了。</p>\n<p>我是指，六面 Boss 是「<ruby>蚩<rt>し</rt>尤<rt>ゆう</rt></ruby>」，萝莉（确信）。</p>\n<p><del>「<ruby>八<rt>や</rt>蘇<rt>そ</rt>神<rt>がみ</rt></ruby> <ruby>秋<rt>しゅう</rt>雨<rt>う</rt></ruby>」（指正</del></p>\n<p><del>其实这游戏所有角色都是萝莉（光速逃</del></p>\n<p><del>但是我永远喜欢那谁谁まぐら（超光速逃</del></p>\n<p><del>去 THBWiki 翻了翻发现是「<ruby>饕<rt>と</rt>喰<rt>ぐ</rt>楽<rt>ら</rt></ruby> まぐら」（奇怪的名字</del></p>\n<p>灵梦线（其实是因为这游戏太难了而我又太菜了于是初见只能考虑梦 A）五面中 Boss（跑过来客串的四面 Boss）对话：</p>\n<blockquote>\n<p>まぐら「これ以上踏み込むと御大将に殺されますわよ。」</p>\n<p>霊夢「いい加減しつこいわよ！」</p>\n<p><em>（スペルカード宣言・爪牙「ユーワンズァオヤー」）</em></p>\n<p><em>（スペルガード撃破）</em></p>\n<p>まぐら「うごごご・・・だが・・・、<br>　　　　我が主の封印は、空高く解かれるのだ！」</p>\n<p>霊夢「だまれ小悪党！」</p>\n</blockquote>\n<p>秋雨终符之前其实也有一些台词的。但是因为是图像，在游戏代码里面找不到文字。那么我就回忆一下视频里：</p>\n<blockquote>\n<center>我が名は蚩尤</center>\n\n<center><font color=##FF0000>鬼</font>として<font color=#FF0000>葬</font>られたものたちの<font color=#FF0000>剣</font>となり！</center>\n\n</blockquote>\n<p><strong>结 尾 点 题</strong></p>\n<p><strong>文 题 呼 应</strong></p>\n<p><strong>升 华 主 题</strong></p>\n<p>好吧，其实我现在在游戏里（虽然说是最高难度 Lunatic）连秋雨终符都见不到（</p>\n<p>但是不得不说这游戏的弹幕都太野蛮了。比如说，我们有：</p>\n<ul>\n<li>一面吊打砂哥（？</li>\n<li>二面很酷很炫</li>\n<li>三面版底出缝</li>\n<li>四面劲爆砌墙</li>\n<li>五面斩了再说</li>\n<li>六面花样爆菊</li>\n</ul>\n<p><strong>黄 金 精 神</strong>（等等好像哪里不对</p>\n<p>好。写完了。睡觉。</p>\n<p>链接：</p>\n<ul>\n<li><a href=\"https://www.freem.ne.jp/win/game/20533\">在 Bullet Forge 上下载该游戏</a></li>\n<li><a href=\"https://thwiki.cc/%E6%9D%B1%E6%96%B9%E9%AC%BC%E8%91%AC%E5%89%A3_%EF%BD%9E_Infinite_Blade_Pavilion.\">在 THBWiki 上查阅相关资料</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1ev411C7aN\">观看相关视频</a>（其实这个我也没看，我看的是另外一个 NBNC 的）</li>\n</ul>\n<hr>\n<p>9-11 补充：</p>\n<p>不得不说，这游戏相比起体验版来说真的是削得超级多：</p>\n<ul>\n<li>梦 A 的面包片的发射频率快了 2 ~ 3 倍左右</li>\n<li>道中杂鱼敌人血量大幅度降低，弹幕强度大幅度削弱</li>\n<li>Boss 血量大幅度降低</li>\n<li>资源变多</li>\n</ul>\n<p>我初通的时候道中几乎没背板，只是稍微记了一下一些比较麻烦的地方。</p>\n<p>结果到最后 7 残见秋雨 5 残通。</p>\n<p><del>什么嘛，我打得不是挺好的吗（自许</del></p>\n<p>然后试了一下剩下 5 个机体：</p>\n<ul>\n<li>梦 B 就一个直线机跑得还贼慢</li>\n<li>魔 A 说是贯通激光其实还是没法用</li>\n<li>魔 B 攻击太鶸</li>\n<li>妖 AB 吊毛机体用不来</li>\n</ul>\n<p>顺便还想补充一下。感觉这游戏 SpellPractice 有问题。很多在 SpellPractice 里面形状固定的弹幕到了 ScenePractice 里面就变成了随机的了。</p>\n<p>给人感觉最明显的应该是二面二符・死凶「窮奇のデスサイズ地獄変」。ScenePractice 里可以看到四个分身的初始角度是随机地，结果 SpellPractice 里直接给固定了。</p>\n<p>太懒了就不截图什么的了。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>「靠为什么刚开学才一个星期我已经感觉过了一辈子了。」</p>\n</blockquote>\n<p>SLYZ 2018 级 24 班朝代，皇帝及年号更替史：</p>\n<ul>\n<li>YHN，立「精朝」，称「精太祖」，开元（忘了），后自谥「精虚帝」。</li>\n<li>YHN，改「精朝」为「楠朝」，称「楠太宗」，开元「真虚」。</li>\n<li>时生物听写，太宗大挫，改元「太虚」。</li>\n</ul>","more":"<p>总而言之就是介绍一个叫做鬼葬剑<del>或者说鬼那啥剑</del>的游戏。</p>\n<p>一年前发布的体验版，当时号称东方史上最难同人 STG，并且真的做到了。</p>\n<p><del>然后正式版难度大砍。</del></p>\n<p><del>不过有一说一体验版的确有一些无理了。</del></p>\n<p><del>而且可以续关，虽然是星莲船的续关。我是不会说体验版是连续关都不可以的。</del></p>\n<p>似乎ミルカ写的剧本（大概？）都会找一些神话故事作为蓝本。邪星章是旧约新约圣经，导命树是北欧神话，桃源宫是克苏鲁神话，真珠岛是埃及神话。</p>\n<p>这次轮到中华神话了。</p>\n<p>我是指，六面 Boss 是「<ruby>蚩<rt>し</rt>尤<rt>ゆう</rt></ruby>」，萝莉（确信）。</p>\n<p><del>「<ruby>八<rt>や</rt>蘇<rt>そ</rt>神<rt>がみ</rt></ruby> <ruby>秋<rt>しゅう</rt>雨<rt>う</rt></ruby>」（指正</del></p>\n<p><del>其实这游戏所有角色都是萝莉（光速逃</del></p>\n<p><del>但是我永远喜欢那谁谁まぐら（超光速逃</del></p>\n<p><del>去 THBWiki 翻了翻发现是「<ruby>饕<rt>と</rt>喰<rt>ぐ</rt>楽<rt>ら</rt></ruby> まぐら」（奇怪的名字</del></p>\n<p>灵梦线（其实是因为这游戏太难了而我又太菜了于是初见只能考虑梦 A）五面中 Boss（跑过来客串的四面 Boss）对话：</p>\n<blockquote>\n<p>まぐら「これ以上踏み込むと御大将に殺されますわよ。」</p>\n<p>霊夢「いい加減しつこいわよ！」</p>\n<p><em>（スペルカード宣言・爪牙「ユーワンズァオヤー」）</em></p>\n<p><em>（スペルガード撃破）</em></p>\n<p>まぐら「うごごご・・・だが・・・、<br>　　　　我が主の封印は、空高く解かれるのだ！」</p>\n<p>霊夢「だまれ小悪党！」</p>\n</blockquote>\n<p>秋雨终符之前其实也有一些台词的。但是因为是图像，在游戏代码里面找不到文字。那么我就回忆一下视频里：</p>\n<blockquote>\n<center>我が名は蚩尤</center>\n\n<center><font color=##FF0000>鬼</font>として<font color=#FF0000>葬</font>られたものたちの<font color=#FF0000>剣</font>となり！</center>\n\n</blockquote>\n<p><strong>结 尾 点 题</strong></p>\n<p><strong>文 题 呼 应</strong></p>\n<p><strong>升 华 主 题</strong></p>\n<p>好吧，其实我现在在游戏里（虽然说是最高难度 Lunatic）连秋雨终符都见不到（</p>\n<p>但是不得不说这游戏的弹幕都太野蛮了。比如说，我们有：</p>\n<ul>\n<li>一面吊打砂哥（？</li>\n<li>二面很酷很炫</li>\n<li>三面版底出缝</li>\n<li>四面劲爆砌墙</li>\n<li>五面斩了再说</li>\n<li>六面花样爆菊</li>\n</ul>\n<p><strong>黄 金 精 神</strong>（等等好像哪里不对</p>\n<p>好。写完了。睡觉。</p>\n<p>链接：</p>\n<ul>\n<li><a href=\"https://www.freem.ne.jp/win/game/20533\">在 Bullet Forge 上下载该游戏</a></li>\n<li><a href=\"https://thwiki.cc/%E6%9D%B1%E6%96%B9%E9%AC%BC%E8%91%AC%E5%89%A3_%EF%BD%9E_Infinite_Blade_Pavilion.\">在 THBWiki 上查阅相关资料</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1ev411C7aN\">观看相关视频</a>（其实这个我也没看，我看的是另外一个 NBNC 的）</li>\n</ul>\n<hr>\n<p>9-11 补充：</p>\n<p>不得不说，这游戏相比起体验版来说真的是削得超级多：</p>\n<ul>\n<li>梦 A 的面包片的发射频率快了 2 ~ 3 倍左右</li>\n<li>道中杂鱼敌人血量大幅度降低，弹幕强度大幅度削弱</li>\n<li>Boss 血量大幅度降低</li>\n<li>资源变多</li>\n</ul>\n<p>我初通的时候道中几乎没背板，只是稍微记了一下一些比较麻烦的地方。</p>\n<p>结果到最后 7 残见秋雨 5 残通。</p>\n<p><del>什么嘛，我打得不是挺好的吗（自许</del></p>\n<p>然后试了一下剩下 5 个机体：</p>\n<ul>\n<li>梦 B 就一个直线机跑得还贼慢</li>\n<li>魔 A 说是贯通激光其实还是没法用</li>\n<li>魔 B 攻击太鶸</li>\n<li>妖 AB 吊毛机体用不来</li>\n</ul>\n<p>顺便还想补充一下。感觉这游戏 SpellPractice 有问题。很多在 SpellPractice 里面形状固定的弹幕到了 ScenePractice 里面就变成了随机的了。</p>\n<p>给人感觉最明显的应该是二面二符・死凶「窮奇のデスサイズ地獄変」。ScenePractice 里可以看到四个分身的初始角度是随机地，结果 SpellPractice 里直接给固定了。</p>\n<p>太懒了就不截图什么的了。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2020-06-21T09:08:37.000Z","title":"「2020 省选联考 A 卷 D1T2」组合数问题","password":null,"_content":"从现在开始我 blog 写题解要附上简要题意（\n\n<!-- more -->\n\n给定 $m$ 次多项式 $F(x)=\\sum_{i=0}^{m}f_{i}x^{i}$，试求\n\n$$\\sum_{k=0}^{n}{n\\choose k}F(k)x^{k}\\$$\n\n在 $\\operatorname{mod}p$ 意义下的值。\n\n其中 $1\\leqslant n,x,p\\leqslant 10^{9},0\\leqslant f_{i}\\leqslant 10^{9},1\\leqslant m\\leqslant\\min(n,1000)$。\n\n不过话说回来，D2 早上去机房听烜说这是道衡水的原题，而且还是比原题简单的那种。\n\n首先我们把 $F(k)$ 拆开，得到\n\n$$\\sum_{i=0}^{m}f_{i}\\sum_{k=0}^{n}{n\\choose k}k^{i}x^{k}$$\n\n考虑到 $m$ 比较小，我们可以对于外层 $\\sum$ 的每一项单独求值。定义\n\n$$\\begin{aligned}\nG_{n,t}(x)&=\\sum_{k=0}^{n}{n\\choose k}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}\\left({n-1\\choose k}+{n-1\\choose k-1}\\right)k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n}{n-1\\choose k-1}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n-1}{n-1\\choose k}(k+1)^{t}x^{k+1}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+x\\sum_{i=0}^{t}{t\\choose i}\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}\\\\\n&=G_{n-1,t}(x)+x\\sum_{i=0}^{t}{t\\choose i}G_{n-1,i}(x)\n\\end{aligned}$$\n\n于是我们构造矩阵\n\n$$A=\\begin{bmatrix}\n{0\\choose 0}x+1&0&0&\\cdots&0&0&1\\\\\n{1\\choose 0}x&{1\\choose 1}x+1&0&\\cdots&0&0&0\\\\\n{2\\choose 0}x&{2\\choose 1}x&{2\\choose 2}x+1&\\cdots&0&0&0\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n{m-1\\choose 0}x&{m-1\\choose 1}x+1&{m-1\\choose 2}x&\\cdots&{m-1\\choose m-1}x+1&0&0\\\\\n{m\\choose 0}x&{m\\choose 1}x&{m\\choose 2}x&\\cdots&{m\\choose m-1}x&{m\\choose m}x+1&0\\\\\n0&0&0&\\cdots&0&0&1\n\\end{bmatrix}$$\n\n和初始向量\n\n$$S=\\begin{bmatrix}\n1\\\\\n0\\\\\n0\\\\\n\\vdots\\\\\n0\\\\\n0\\\\\n1\n\\end{bmatrix}$$\n\n那么\n\n$$A^{n}S=\\begin{bmatrix}\nG_{n,0}(x)\\\\\nG_{n,1}(x)\\\\\nG_{n,2}(x)\\\\\n\\vdots\\\\\nG_{n,m-1}(x)\\\\\nG_{n,m}(x)\\\\\n1\n\\end{bmatrix}$$\n\n虽然我在我的另一个 blog 里写过了，不过由于某些原因那个 blog 倒了，于是我在这里再写一遍。\n\n如果直接使用矩阵快速幂来计算 $A^{n}$ 的话，复杂度是 $O(m^{3}\\log n)$ 的，但是这还不够。\n\n考虑我们能不能构造出一个奇妙的序列 $c_{0},c_{1},\\cdots,c_{m+1}$ 使得 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}=A^{n}$。\n\n如果我们构造出来了，令 $S_{k}$ 表示 $S$ 从上往下第 $k$ 维的值，从 $0$ 开始标号。那么\n\n$$(A^{n}S)_{k}=\\left(\\sum_{i=0}^{m+1}c_{i}A^{i}S\\right)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$$\n\n注意到 $(A^{i}S)_{k}$ 就是 $G_{i,k}(x)$，不过如果 $k=m+1$ 就是 $1$。这样我们就可以在 $O(m^{2})$ 的复杂度内计算出答案。\n\n我们设 $A^{n}=P(A)Q(A)+C(A)$，如果我们能够找到一个 $m+2$ 次多项式 $H$ 使得 $Q(A)=0$，就可以有 $C(A)=A^{n}\\operatorname{mod}Q(A)$。\n\n---\n\n一下是一些为了求出 $H$ 所必要的矩阵相关知识。\n\n对于矩阵 $A$，如果等式 $(\\lambda I-A)v=0$ 成立，我们称 $\\lambda$ 是 $A$ 的一个特征值，$v$ 是 $A$ 的一组特征向量。\n\n有两个~~连 shadowice dalao 都不会证的~~结论：\n\n1. 满足 $\\text{Det}(A)\\neq 0$，即满秩的 $n\\times n$ 的矩阵 $A$ 拥有 $n$ 组线性无关的特征向量。\n2. 当且仅当 $\\text{Det}(\\lambda I-A)=0$ 时存在这样的 $v$。\n\n显然我们刚才构造的矩阵 $A$ 是满秩的。于是根据 Cayley-Hamilton 定理，有 $\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)=0$，其中 $\\lambda_{0},\\lambda_{1},\\cdots,\\lambda_{m+1}$ 表示 $A$ 的 $m+2$ 组特征向量。\n\n于是 $Q(A)=\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)$。\n\n考虑另外一个多项式 $R(\\lambda)=\\text{Det}(\\lambda I-A)$，~~根据 shadowice dalao 的 blog，~~这两个多项式的系数对应相等。\n\n而显然 $\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，使用分治 NTT 可以在 $O(m\\log^{2}m)$ 的复杂度内计算出来。\n\n那么总结一下：\n\n1. 计算 $R(\\lambda)=\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，复杂度 $O(m\\log^{2}m)$。\n2. 设 $R(\\lambda)=\\sum_{i=0}^{m+2}q_{i}\\lambda^{i}$，有 $Q(A)=\\sum_{i=0}^{m+2}q_{i}A^{i}=0$。\n3. 计算 $C(A)=A^{n}\\operatorname{mod}Q(A)$，时间复杂度 $O(m\\log m\\log n)$。\n4. 设 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}$，有 $(A^{n}S)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$，也即 $G_{n,k}(x)=\\sum_{i=0}^{m+1}c_{i}G_{i,k}(x)$。\n5. 对于所有的 $0\\leqslant i\\leqslant m+1,0\\leqslant k\\leqslant m$ 计算 $G_{i,k}(x)$，我们发现 $G$ 的暴力递推式可以转化成 EGF，于是做 $m$ 遍卷积，复杂度 $O(m^{2}\\log m)$。\n\n那么总体的复杂度相当于 $O(m^{2}\\log m)$。\n\n然而我一点都不想写这个玩意（\n","source":"_posts/2020-06-21-sdoi2020-d1t2-solution.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2020-06-21 17:08:37\ntitle: 「2020 省选联考 A 卷 D1T2」组合数问题\ntags:\n  - 组合数学\n  - 矩阵\n  - 多项式\n  - NTT\ncategories:\n  - 口胡\npassword:\n---\n从现在开始我 blog 写题解要附上简要题意（\n\n<!-- more -->\n\n给定 $m$ 次多项式 $F(x)=\\sum_{i=0}^{m}f_{i}x^{i}$，试求\n\n$$\\sum_{k=0}^{n}{n\\choose k}F(k)x^{k}\\$$\n\n在 $\\operatorname{mod}p$ 意义下的值。\n\n其中 $1\\leqslant n,x,p\\leqslant 10^{9},0\\leqslant f_{i}\\leqslant 10^{9},1\\leqslant m\\leqslant\\min(n,1000)$。\n\n不过话说回来，D2 早上去机房听烜说这是道衡水的原题，而且还是比原题简单的那种。\n\n首先我们把 $F(k)$ 拆开，得到\n\n$$\\sum_{i=0}^{m}f_{i}\\sum_{k=0}^{n}{n\\choose k}k^{i}x^{k}$$\n\n考虑到 $m$ 比较小，我们可以对于外层 $\\sum$ 的每一项单独求值。定义\n\n$$\\begin{aligned}\nG_{n,t}(x)&=\\sum_{k=0}^{n}{n\\choose k}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}\\left({n-1\\choose k}+{n-1\\choose k-1}\\right)k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n}{n-1\\choose k-1}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n-1}{n-1\\choose k}(k+1)^{t}x^{k+1}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+x\\sum_{i=0}^{t}{t\\choose i}\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}\\\\\n&=G_{n-1,t}(x)+x\\sum_{i=0}^{t}{t\\choose i}G_{n-1,i}(x)\n\\end{aligned}$$\n\n于是我们构造矩阵\n\n$$A=\\begin{bmatrix}\n{0\\choose 0}x+1&0&0&\\cdots&0&0&1\\\\\n{1\\choose 0}x&{1\\choose 1}x+1&0&\\cdots&0&0&0\\\\\n{2\\choose 0}x&{2\\choose 1}x&{2\\choose 2}x+1&\\cdots&0&0&0\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n{m-1\\choose 0}x&{m-1\\choose 1}x+1&{m-1\\choose 2}x&\\cdots&{m-1\\choose m-1}x+1&0&0\\\\\n{m\\choose 0}x&{m\\choose 1}x&{m\\choose 2}x&\\cdots&{m\\choose m-1}x&{m\\choose m}x+1&0\\\\\n0&0&0&\\cdots&0&0&1\n\\end{bmatrix}$$\n\n和初始向量\n\n$$S=\\begin{bmatrix}\n1\\\\\n0\\\\\n0\\\\\n\\vdots\\\\\n0\\\\\n0\\\\\n1\n\\end{bmatrix}$$\n\n那么\n\n$$A^{n}S=\\begin{bmatrix}\nG_{n,0}(x)\\\\\nG_{n,1}(x)\\\\\nG_{n,2}(x)\\\\\n\\vdots\\\\\nG_{n,m-1}(x)\\\\\nG_{n,m}(x)\\\\\n1\n\\end{bmatrix}$$\n\n虽然我在我的另一个 blog 里写过了，不过由于某些原因那个 blog 倒了，于是我在这里再写一遍。\n\n如果直接使用矩阵快速幂来计算 $A^{n}$ 的话，复杂度是 $O(m^{3}\\log n)$ 的，但是这还不够。\n\n考虑我们能不能构造出一个奇妙的序列 $c_{0},c_{1},\\cdots,c_{m+1}$ 使得 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}=A^{n}$。\n\n如果我们构造出来了，令 $S_{k}$ 表示 $S$ 从上往下第 $k$ 维的值，从 $0$ 开始标号。那么\n\n$$(A^{n}S)_{k}=\\left(\\sum_{i=0}^{m+1}c_{i}A^{i}S\\right)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$$\n\n注意到 $(A^{i}S)_{k}$ 就是 $G_{i,k}(x)$，不过如果 $k=m+1$ 就是 $1$。这样我们就可以在 $O(m^{2})$ 的复杂度内计算出答案。\n\n我们设 $A^{n}=P(A)Q(A)+C(A)$，如果我们能够找到一个 $m+2$ 次多项式 $H$ 使得 $Q(A)=0$，就可以有 $C(A)=A^{n}\\operatorname{mod}Q(A)$。\n\n---\n\n一下是一些为了求出 $H$ 所必要的矩阵相关知识。\n\n对于矩阵 $A$，如果等式 $(\\lambda I-A)v=0$ 成立，我们称 $\\lambda$ 是 $A$ 的一个特征值，$v$ 是 $A$ 的一组特征向量。\n\n有两个~~连 shadowice dalao 都不会证的~~结论：\n\n1. 满足 $\\text{Det}(A)\\neq 0$，即满秩的 $n\\times n$ 的矩阵 $A$ 拥有 $n$ 组线性无关的特征向量。\n2. 当且仅当 $\\text{Det}(\\lambda I-A)=0$ 时存在这样的 $v$。\n\n显然我们刚才构造的矩阵 $A$ 是满秩的。于是根据 Cayley-Hamilton 定理，有 $\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)=0$，其中 $\\lambda_{0},\\lambda_{1},\\cdots,\\lambda_{m+1}$ 表示 $A$ 的 $m+2$ 组特征向量。\n\n于是 $Q(A)=\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)$。\n\n考虑另外一个多项式 $R(\\lambda)=\\text{Det}(\\lambda I-A)$，~~根据 shadowice dalao 的 blog，~~这两个多项式的系数对应相等。\n\n而显然 $\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，使用分治 NTT 可以在 $O(m\\log^{2}m)$ 的复杂度内计算出来。\n\n那么总结一下：\n\n1. 计算 $R(\\lambda)=\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，复杂度 $O(m\\log^{2}m)$。\n2. 设 $R(\\lambda)=\\sum_{i=0}^{m+2}q_{i}\\lambda^{i}$，有 $Q(A)=\\sum_{i=0}^{m+2}q_{i}A^{i}=0$。\n3. 计算 $C(A)=A^{n}\\operatorname{mod}Q(A)$，时间复杂度 $O(m\\log m\\log n)$。\n4. 设 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}$，有 $(A^{n}S)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$，也即 $G_{n,k}(x)=\\sum_{i=0}^{m+1}c_{i}G_{i,k}(x)$。\n5. 对于所有的 $0\\leqslant i\\leqslant m+1,0\\leqslant k\\leqslant m$ 计算 $G_{i,k}(x)$，我们发现 $G$ 的暴力递推式可以转化成 EGF，于是做 $m$ 遍卷积，复杂度 $O(m^{2}\\log m)$。\n\n那么总体的复杂度相当于 $O(m^{2}\\log m)$。\n\n然而我一点都不想写这个玩意（\n","slug":"sdoi2020-d1t2-solution","published":1,"updated":"2020-06-24T05:04:27.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0w003amku95o2zbmeg","content":"<p>从现在开始我 blog 写题解要附上简要题意（</p>\n<a id=\"more\"></a>\n<p>给定 $m$ 次多项式 $F(x)=\\sum_{i=0}^{m}f_{i}x^{i}$，试求</p>\n<script type=\"math/tex; mode=display\">\\sum_{k=0}^{n}{n\\choose k}F(k)x^{k}\\</script><p>在 $\\operatorname{mod}p$ 意义下的值。</p>\n<p>其中 $1\\leqslant n,x,p\\leqslant 10^{9},0\\leqslant f_{i}\\leqslant 10^{9},1\\leqslant m\\leqslant\\min(n,1000)$。</p>\n<p>不过话说回来，D2 早上去机房听烜说这是道衡水的原题，而且还是比原题简单的那种。</p>\n<p>首先我们把 $F(k)$ 拆开，得到</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{m}f_{i}\\sum_{k=0}^{n}{n\\choose k}k^{i}x^{k}</script><p>考虑到 $m$ 比较小，我们可以对于外层 $\\sum$ 的每一项单独求值。定义</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG_{n,t}(x)&=\\sum_{k=0}^{n}{n\\choose k}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}\\left({n-1\\choose k}+{n-1\\choose k-1}\\right)k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n}{n-1\\choose k-1}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n-1}{n-1\\choose k}(k+1)^{t}x^{k+1}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+x\\sum_{i=0}^{t}{t\\choose i}\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}\\\\\n&=G_{n-1,t}(x)+x\\sum_{i=0}^{t}{t\\choose i}G_{n-1,i}(x)\n\\end{aligned}</script><p>于是我们构造矩阵</p>\n<script type=\"math/tex; mode=display\">A=\\begin{bmatrix}\n{0\\choose 0}x+1&0&0&\\cdots&0&0&1\\\\\n{1\\choose 0}x&{1\\choose 1}x+1&0&\\cdots&0&0&0\\\\\n{2\\choose 0}x&{2\\choose 1}x&{2\\choose 2}x+1&\\cdots&0&0&0\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n{m-1\\choose 0}x&{m-1\\choose 1}x+1&{m-1\\choose 2}x&\\cdots&{m-1\\choose m-1}x+1&0&0\\\\\n{m\\choose 0}x&{m\\choose 1}x&{m\\choose 2}x&\\cdots&{m\\choose m-1}x&{m\\choose m}x+1&0\\\\\n0&0&0&\\cdots&0&0&1\n\\end{bmatrix}</script><p>和初始向量</p>\n<script type=\"math/tex; mode=display\">S=\\begin{bmatrix}\n1\\\\\n0\\\\\n0\\\\\n\\vdots\\\\\n0\\\\\n0\\\\\n1\n\\end{bmatrix}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">A^{n}S=\\begin{bmatrix}\nG_{n,0}(x)\\\\\nG_{n,1}(x)\\\\\nG_{n,2}(x)\\\\\n\\vdots\\\\\nG_{n,m-1}(x)\\\\\nG_{n,m}(x)\\\\\n1\n\\end{bmatrix}</script><p>虽然我在我的另一个 blog 里写过了，不过由于某些原因那个 blog 倒了，于是我在这里再写一遍。</p>\n<p>如果直接使用矩阵快速幂来计算 $A^{n}$ 的话，复杂度是 $O(m^{3}\\log n)$ 的，但是这还不够。</p>\n<p>考虑我们能不能构造出一个奇妙的序列 $c_{0},c_{1},\\cdots,c_{m+1}$ 使得 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}=A^{n}$。</p>\n<p>如果我们构造出来了，令 $S_{k}$ 表示 $S$ 从上往下第 $k$ 维的值，从 $0$ 开始标号。那么</p>\n<script type=\"math/tex; mode=display\">(A^{n}S)_{k}=\\left(\\sum_{i=0}^{m+1}c_{i}A^{i}S\\right)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}</script><p>注意到 $(A^{i}S)_{k}$ 就是 $G_{i,k}(x)$，不过如果 $k=m+1$ 就是 $1$。这样我们就可以在 $O(m^{2})$ 的复杂度内计算出答案。</p>\n<p>我们设 $A^{n}=P(A)Q(A)+C(A)$，如果我们能够找到一个 $m+2$ 次多项式 $H$ 使得 $Q(A)=0$，就可以有 $C(A)=A^{n}\\operatorname{mod}Q(A)$。</p>\n<hr>\n<p>一下是一些为了求出 $H$ 所必要的矩阵相关知识。</p>\n<p>对于矩阵 $A$，如果等式 $(\\lambda I-A)v=0$ 成立，我们称 $\\lambda$ 是 $A$ 的一个特征值，$v$ 是 $A$ 的一组特征向量。</p>\n<p>有两个<del>连 shadowice dalao 都不会证的</del>结论：</p>\n<ol>\n<li>满足 $\\text{Det}(A)\\neq 0$，即满秩的 $n\\times n$ 的矩阵 $A$ 拥有 $n$ 组线性无关的特征向量。</li>\n<li>当且仅当 $\\text{Det}(\\lambda I-A)=0$ 时存在这样的 $v$。</li>\n</ol>\n<p>显然我们刚才构造的矩阵 $A$ 是满秩的。于是根据 Cayley-Hamilton 定理，有 $\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)=0$，其中 $\\lambda_{0},\\lambda_{1},\\cdots,\\lambda_{m+1}$ 表示 $A$ 的 $m+2$ 组特征向量。</p>\n<p>于是 $Q(A)=\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)$。</p>\n<p>考虑另外一个多项式 $R(\\lambda)=\\text{Det}(\\lambda I-A)$，<del>根据 shadowice dalao 的 blog，</del>这两个多项式的系数对应相等。</p>\n<p>而显然 $\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，使用分治 NTT 可以在 $O(m\\log^{2}m)$ 的复杂度内计算出来。</p>\n<p>那么总结一下：</p>\n<ol>\n<li>计算 $R(\\lambda)=\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，复杂度 $O(m\\log^{2}m)$。</li>\n<li>设 $R(\\lambda)=\\sum_{i=0}^{m+2}q_{i}\\lambda^{i}$，有 $Q(A)=\\sum_{i=0}^{m+2}q_{i}A^{i}=0$。</li>\n<li>计算 $C(A)=A^{n}\\operatorname{mod}Q(A)$，时间复杂度 $O(m\\log m\\log n)$。</li>\n<li>设 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}$，有 $(A^{n}S)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$，也即 $G_{n,k}(x)=\\sum_{i=0}^{m+1}c_{i}G_{i,k}(x)$。</li>\n<li>对于所有的 $0\\leqslant i\\leqslant m+1,0\\leqslant k\\leqslant m$ 计算 $G_{i,k}(x)$，我们发现 $G$ 的暴力递推式可以转化成 EGF，于是做 $m$ 遍卷积，复杂度 $O(m^{2}\\log m)$。</li>\n</ol>\n<p>那么总体的复杂度相当于 $O(m^{2}\\log m)$。</p>\n<p>然而我一点都不想写这个玩意（</p>\n","site":{"data":{}},"excerpt":"<p>从现在开始我 blog 写题解要附上简要题意（</p>","more":"<p>给定 $m$ 次多项式 $F(x)=\\sum_{i=0}^{m}f_{i}x^{i}$，试求</p>\n<script type=\"math/tex; mode=display\">\\sum_{k=0}^{n}{n\\choose k}F(k)x^{k}\\</script><p>在 $\\operatorname{mod}p$ 意义下的值。</p>\n<p>其中 $1\\leqslant n,x,p\\leqslant 10^{9},0\\leqslant f_{i}\\leqslant 10^{9},1\\leqslant m\\leqslant\\min(n,1000)$。</p>\n<p>不过话说回来，D2 早上去机房听烜说这是道衡水的原题，而且还是比原题简单的那种。</p>\n<p>首先我们把 $F(k)$ 拆开，得到</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{m}f_{i}\\sum_{k=0}^{n}{n\\choose k}k^{i}x^{k}</script><p>考虑到 $m$ 比较小，我们可以对于外层 $\\sum$ 的每一项单独求值。定义</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG_{n,t}(x)&=\\sum_{k=0}^{n}{n\\choose k}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}\\left({n-1\\choose k}+{n-1\\choose k-1}\\right)k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n}{n-1\\choose k-1}k^{t}x^{k}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+\\sum_{k=0}^{n-1}{n-1\\choose k}(k+1)^{t}x^{k+1}\\\\\n&=\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}+x\\sum_{i=0}^{t}{t\\choose i}\\sum_{k=0}^{n-1}{n-1\\choose k}k^{t}x^{k}\\\\\n&=G_{n-1,t}(x)+x\\sum_{i=0}^{t}{t\\choose i}G_{n-1,i}(x)\n\\end{aligned}</script><p>于是我们构造矩阵</p>\n<script type=\"math/tex; mode=display\">A=\\begin{bmatrix}\n{0\\choose 0}x+1&0&0&\\cdots&0&0&1\\\\\n{1\\choose 0}x&{1\\choose 1}x+1&0&\\cdots&0&0&0\\\\\n{2\\choose 0}x&{2\\choose 1}x&{2\\choose 2}x+1&\\cdots&0&0&0\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\\n{m-1\\choose 0}x&{m-1\\choose 1}x+1&{m-1\\choose 2}x&\\cdots&{m-1\\choose m-1}x+1&0&0\\\\\n{m\\choose 0}x&{m\\choose 1}x&{m\\choose 2}x&\\cdots&{m\\choose m-1}x&{m\\choose m}x+1&0\\\\\n0&0&0&\\cdots&0&0&1\n\\end{bmatrix}</script><p>和初始向量</p>\n<script type=\"math/tex; mode=display\">S=\\begin{bmatrix}\n1\\\\\n0\\\\\n0\\\\\n\\vdots\\\\\n0\\\\\n0\\\\\n1\n\\end{bmatrix}</script><p>那么</p>\n<script type=\"math/tex; mode=display\">A^{n}S=\\begin{bmatrix}\nG_{n,0}(x)\\\\\nG_{n,1}(x)\\\\\nG_{n,2}(x)\\\\\n\\vdots\\\\\nG_{n,m-1}(x)\\\\\nG_{n,m}(x)\\\\\n1\n\\end{bmatrix}</script><p>虽然我在我的另一个 blog 里写过了，不过由于某些原因那个 blog 倒了，于是我在这里再写一遍。</p>\n<p>如果直接使用矩阵快速幂来计算 $A^{n}$ 的话，复杂度是 $O(m^{3}\\log n)$ 的，但是这还不够。</p>\n<p>考虑我们能不能构造出一个奇妙的序列 $c_{0},c_{1},\\cdots,c_{m+1}$ 使得 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}=A^{n}$。</p>\n<p>如果我们构造出来了，令 $S_{k}$ 表示 $S$ 从上往下第 $k$ 维的值，从 $0$ 开始标号。那么</p>\n<script type=\"math/tex; mode=display\">(A^{n}S)_{k}=\\left(\\sum_{i=0}^{m+1}c_{i}A^{i}S\\right)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}</script><p>注意到 $(A^{i}S)_{k}$ 就是 $G_{i,k}(x)$，不过如果 $k=m+1$ 就是 $1$。这样我们就可以在 $O(m^{2})$ 的复杂度内计算出答案。</p>\n<p>我们设 $A^{n}=P(A)Q(A)+C(A)$，如果我们能够找到一个 $m+2$ 次多项式 $H$ 使得 $Q(A)=0$，就可以有 $C(A)=A^{n}\\operatorname{mod}Q(A)$。</p>\n<hr>\n<p>一下是一些为了求出 $H$ 所必要的矩阵相关知识。</p>\n<p>对于矩阵 $A$，如果等式 $(\\lambda I-A)v=0$ 成立，我们称 $\\lambda$ 是 $A$ 的一个特征值，$v$ 是 $A$ 的一组特征向量。</p>\n<p>有两个<del>连 shadowice dalao 都不会证的</del>结论：</p>\n<ol>\n<li>满足 $\\text{Det}(A)\\neq 0$，即满秩的 $n\\times n$ 的矩阵 $A$ 拥有 $n$ 组线性无关的特征向量。</li>\n<li>当且仅当 $\\text{Det}(\\lambda I-A)=0$ 时存在这样的 $v$。</li>\n</ol>\n<p>显然我们刚才构造的矩阵 $A$ 是满秩的。于是根据 Cayley-Hamilton 定理，有 $\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)=0$，其中 $\\lambda_{0},\\lambda_{1},\\cdots,\\lambda_{m+1}$ 表示 $A$ 的 $m+2$ 组特征向量。</p>\n<p>于是 $Q(A)=\\prod_{k=0}^{m+1}(\\lambda_{k}I-A)$。</p>\n<p>考虑另外一个多项式 $R(\\lambda)=\\text{Det}(\\lambda I-A)$，<del>根据 shadowice dalao 的 blog，</del>这两个多项式的系数对应相等。</p>\n<p>而显然 $\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，使用分治 NTT 可以在 $O(m\\log^{2}m)$ 的复杂度内计算出来。</p>\n<p>那么总结一下：</p>\n<ol>\n<li>计算 $R(\\lambda)=\\text{Det}(\\lambda I-A)=(\\lambda-1)(\\lambda-x-1)^{m+1}$，复杂度 $O(m\\log^{2}m)$。</li>\n<li>设 $R(\\lambda)=\\sum_{i=0}^{m+2}q_{i}\\lambda^{i}$，有 $Q(A)=\\sum_{i=0}^{m+2}q_{i}A^{i}=0$。</li>\n<li>计算 $C(A)=A^{n}\\operatorname{mod}Q(A)$，时间复杂度 $O(m\\log m\\log n)$。</li>\n<li>设 $C(A)=\\sum_{i=0}^{m+1}c_{i}A^{i}$，有 $(A^{n}S)_{k}=\\sum_{i=0}^{m+1}c_{i}(A^{i}S)_{k}$，也即 $G_{n,k}(x)=\\sum_{i=0}^{m+1}c_{i}G_{i,k}(x)$。</li>\n<li>对于所有的 $0\\leqslant i\\leqslant m+1,0\\leqslant k\\leqslant m$ 计算 $G_{i,k}(x)$，我们发现 $G$ 的暴力递推式可以转化成 EGF，于是做 $m$ 遍卷积，复杂度 $O(m^{2}\\log m)$。</li>\n</ol>\n<p>那么总体的复杂度相当于 $O(m^{2}\\log m)$。</p>\n<p>然而我一点都不想写这个玩意（</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2021-04-04T03:05:10.000Z","title":"東方覚醒珠（※二次創作） ~ Fan-made Virtual Autography","password":null,"_content":"[Steam 页面](https://store.steampowered.com/app/1104610/__Fanmade_Virtual_Autography/)\n\n> <ruby>弾<rt>たま</rt>を<rt> </rt>撃<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びのプレイヤーよ<rt> </rt></ruby>、\n>\n> <ruby>玉<rt>たま</rt>を<rt> </rt>打<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びの<rt> </rt>前<rt>まえ</rt>に<rt> </rt>敗北<rt>はいぼく</rt>せよ<rt> </rt></ruby>！\n\n~~双关真好玩（~~\n\n<!-- more -->\n\n没错，就是这么一款 Steam 上刚出（指两周前）的东方同人……STG？某种意义上算是吧，因为这游戏主要强调的还是 RPG 的部分。\n\n弹幕方面——尤其是 5 Boss，基本不能躲，然后 124 Boss 莫名其妙地糟，其他的其实还好。\n\n尤其是 Ex Boss，说实话除了四符，八符，时符和终符以外并没有什么拿得出手的弹幕。\n\n~~但实际上从混关角度考虑，时符终符两张糟卡放在一起从 RPG 的角度来说十分麻烦，再加上这个时候这边的资源也已经被耗得差不多了。~~\n\n玩法：\n\n如上文所言，这游戏重点在 RPG。\n\n1. 本质上是单关练习。自机这边需要带上四个「单位」，按照游戏中的说法是「<ruby>地珠<rt>ちず</rt></ruby>」。单位分红白二色。\n2. 通过击破杂鱼敌人和 Boss 的非符或符卡来收集道具。\n3. 道具也分红白二色，可以给同色的单位充能。充满一次可以获得一次攻击的机会。\n4. 敌方也有单位。自机每 miss 一次也会给对方送过去一些道具，而且这些道具一定会使得对方所有单位获得一次攻击机会。\n5. 游戏进行到某些特定节点的时候，会出现 Party Battle 事件，就是敌我双方的单位互相攻击，自机一定先手。\n6. 自机方的单位会攻击敌方的单位，一旦某个单位的 HP 降到 0 了，它就不能攻击了。\n7. 另一方面，敌方一定会直接攻击自机本体，也就是说自机方的单位不会出现 HP 降到 0 无法攻击的情况。\n8. 当然自己本体的 HP 降到 0 了就真的满身疮痍了。\n9. 在 6 Boss 的 Final Spell 和 Ex 道中，会出现一些 **特殊的 Party Battle**。\n10. 单位有 spell turn 这个属性。大部分单位以 4 或 5 为主，当然也有几个 3 和一个 8。\n11. 单位每充满 spell turn 次，就可以扔雷。扔完一个雷就需要重新充满 spell turn 次才可以扔下一个。\n12. 虽然一次指扔一个雷，但是扔雷的时候处于能够扔雷的状态的单位越多，雷的威力也会越强。\n\n其实，因为我也没有认真读设定文档，还不知道这个游戏到底讲了一个什么故事。\n\n但是还是不可避免地被 5 Boss 这个叫「<ruby>仙覚寺<rt>せんがくじ</rt></ruby>　<ruby>鞠子<rt>まりこ</rt></ruby>」的角色留下了深刻的印象。\n\n首先一登场二话不说切 BGM（而且她的 BGM 的氛围和 5 道中一个天上一个地下），然后直接怼到自机脸上开始自顾自地说自话。\n\n——没错，直接怼到自机脸上。不管这个时候自机往哪跑她都会跟着。\n\n然后等到魔理沙一句「会わせてくれないか？」之后更加变本加厉地直接把自己的对话框盖住了魔理沙的对话框。\n\nBGM 叫「<ruby>偏執<rt>へんしゅう</rt>の<rt> </rt>朱筆<rt>しゅひつ</rt></ruby>」，好吧的确挺「偏执」的。\n\n而且，设定上她似乎是给「和歌」，或者说「弹幕」做注解的。也许是因为这个原因，弹幕强度高不说，她在 5 关底虽然只有一个单位，但是血非常厚（44444），攻击也很高，基本上两三下就可以直接送自机上路。\n\n——从某种意义上来说她才是这游戏的本体。\n\n~~因为这个 5 Boss 我还自闭了有一阵子。~~\n\n不过话说回来，这游戏竟然还有汉字注音（\n\n以及，以下是一些截图。\n\n![本篇难度选择](/img/20210404190325_1.jpg)\n\n![本篇关卡选择](/img/20210404190314_1.jpg)\n\n![仙覚寺鞠子叫你认汉字.jpg](/img/20210404190455_1.jpg)\n\n![1 Boss 当 Ex 道中](/img/20210404190640_1.jpg)\n\n那么就这些了。\n\n<big><big><center><ruby>このブログを<rt> </rt>読<rt>よ</rt>んで<rt> </rt>下<rt>くだ</rt>さった<rt> </rt>貴方<rt>あなた</rt>に、いや<rt> </rt>重<rt>し</rt>け<rt> </rt>吉事<rt>よごと</rt>！</ruby></center></big></big>\n","source":"_posts/2021-04-04-fan-made-virtual-autography.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2021-04-04 11:05:10\ntitle: 東方覚醒珠（※二次創作） ~ Fan-made Virtual Autography\ntags:\n  - 东方\n  - STG\n  - RPG\ncategories:\n  - 颓废\npassword:\n---\n[Steam 页面](https://store.steampowered.com/app/1104610/__Fanmade_Virtual_Autography/)\n\n> <ruby>弾<rt>たま</rt>を<rt> </rt>撃<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びのプレイヤーよ<rt> </rt></ruby>、\n>\n> <ruby>玉<rt>たま</rt>を<rt> </rt>打<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びの<rt> </rt>前<rt>まえ</rt>に<rt> </rt>敗北<rt>はいぼく</rt>せよ<rt> </rt></ruby>！\n\n~~双关真好玩（~~\n\n<!-- more -->\n\n没错，就是这么一款 Steam 上刚出（指两周前）的东方同人……STG？某种意义上算是吧，因为这游戏主要强调的还是 RPG 的部分。\n\n弹幕方面——尤其是 5 Boss，基本不能躲，然后 124 Boss 莫名其妙地糟，其他的其实还好。\n\n尤其是 Ex Boss，说实话除了四符，八符，时符和终符以外并没有什么拿得出手的弹幕。\n\n~~但实际上从混关角度考虑，时符终符两张糟卡放在一起从 RPG 的角度来说十分麻烦，再加上这个时候这边的资源也已经被耗得差不多了。~~\n\n玩法：\n\n如上文所言，这游戏重点在 RPG。\n\n1. 本质上是单关练习。自机这边需要带上四个「单位」，按照游戏中的说法是「<ruby>地珠<rt>ちず</rt></ruby>」。单位分红白二色。\n2. 通过击破杂鱼敌人和 Boss 的非符或符卡来收集道具。\n3. 道具也分红白二色，可以给同色的单位充能。充满一次可以获得一次攻击的机会。\n4. 敌方也有单位。自机每 miss 一次也会给对方送过去一些道具，而且这些道具一定会使得对方所有单位获得一次攻击机会。\n5. 游戏进行到某些特定节点的时候，会出现 Party Battle 事件，就是敌我双方的单位互相攻击，自机一定先手。\n6. 自机方的单位会攻击敌方的单位，一旦某个单位的 HP 降到 0 了，它就不能攻击了。\n7. 另一方面，敌方一定会直接攻击自机本体，也就是说自机方的单位不会出现 HP 降到 0 无法攻击的情况。\n8. 当然自己本体的 HP 降到 0 了就真的满身疮痍了。\n9. 在 6 Boss 的 Final Spell 和 Ex 道中，会出现一些 **特殊的 Party Battle**。\n10. 单位有 spell turn 这个属性。大部分单位以 4 或 5 为主，当然也有几个 3 和一个 8。\n11. 单位每充满 spell turn 次，就可以扔雷。扔完一个雷就需要重新充满 spell turn 次才可以扔下一个。\n12. 虽然一次指扔一个雷，但是扔雷的时候处于能够扔雷的状态的单位越多，雷的威力也会越强。\n\n其实，因为我也没有认真读设定文档，还不知道这个游戏到底讲了一个什么故事。\n\n但是还是不可避免地被 5 Boss 这个叫「<ruby>仙覚寺<rt>せんがくじ</rt></ruby>　<ruby>鞠子<rt>まりこ</rt></ruby>」的角色留下了深刻的印象。\n\n首先一登场二话不说切 BGM（而且她的 BGM 的氛围和 5 道中一个天上一个地下），然后直接怼到自机脸上开始自顾自地说自话。\n\n——没错，直接怼到自机脸上。不管这个时候自机往哪跑她都会跟着。\n\n然后等到魔理沙一句「会わせてくれないか？」之后更加变本加厉地直接把自己的对话框盖住了魔理沙的对话框。\n\nBGM 叫「<ruby>偏執<rt>へんしゅう</rt>の<rt> </rt>朱筆<rt>しゅひつ</rt></ruby>」，好吧的确挺「偏执」的。\n\n而且，设定上她似乎是给「和歌」，或者说「弹幕」做注解的。也许是因为这个原因，弹幕强度高不说，她在 5 关底虽然只有一个单位，但是血非常厚（44444），攻击也很高，基本上两三下就可以直接送自机上路。\n\n——从某种意义上来说她才是这游戏的本体。\n\n~~因为这个 5 Boss 我还自闭了有一阵子。~~\n\n不过话说回来，这游戏竟然还有汉字注音（\n\n以及，以下是一些截图。\n\n![本篇难度选择](/img/20210404190325_1.jpg)\n\n![本篇关卡选择](/img/20210404190314_1.jpg)\n\n![仙覚寺鞠子叫你认汉字.jpg](/img/20210404190455_1.jpg)\n\n![1 Boss 当 Ex 道中](/img/20210404190640_1.jpg)\n\n那么就这些了。\n\n<big><big><center><ruby>このブログを<rt> </rt>読<rt>よ</rt>んで<rt> </rt>下<rt>くだ</rt>さった<rt> </rt>貴方<rt>あなた</rt>に、いや<rt> </rt>重<rt>し</rt>け<rt> </rt>吉事<rt>よごと</rt>！</ruby></center></big></big>\n","slug":"fan-made-virtual-autography","published":1,"updated":"2021-04-04T11:15:25.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32ng0x003dmku9bv1g7lwe","content":"<p><a href=\"https://store.steampowered.com/app/1104610/__Fanmade_Virtual_Autography/\">Steam 页面</a></p>\n<blockquote>\n<p><ruby>弾<rt>たま</rt>を<rt> </rt>撃<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びのプレイヤーよ<rt> </rt></ruby>、</p>\n<p><ruby>玉<rt>たま</rt>を<rt> </rt>打<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びの<rt> </rt>前<rt>まえ</rt>に<rt> </rt>敗北<rt>はいぼく</rt>せよ<rt> </rt></ruby>！</p>\n</blockquote>\n<p><del>双关真好玩（</del></p>\n<a id=\"more\"></a>\n<p>没错，就是这么一款 Steam 上刚出（指两周前）的东方同人……STG？某种意义上算是吧，因为这游戏主要强调的还是 RPG 的部分。</p>\n<p>弹幕方面——尤其是 5 Boss，基本不能躲，然后 124 Boss 莫名其妙地糟，其他的其实还好。</p>\n<p>尤其是 Ex Boss，说实话除了四符，八符，时符和终符以外并没有什么拿得出手的弹幕。</p>\n<p><del>但实际上从混关角度考虑，时符终符两张糟卡放在一起从 RPG 的角度来说十分麻烦，再加上这个时候这边的资源也已经被耗得差不多了。</del></p>\n<p>玩法：</p>\n<p>如上文所言，这游戏重点在 RPG。</p>\n<ol>\n<li>本质上是单关练习。自机这边需要带上四个「单位」，按照游戏中的说法是「<ruby>地珠<rt>ちず</rt></ruby>」。单位分红白二色。</li>\n<li>通过击破杂鱼敌人和 Boss 的非符或符卡来收集道具。</li>\n<li>道具也分红白二色，可以给同色的单位充能。充满一次可以获得一次攻击的机会。</li>\n<li>敌方也有单位。自机每 miss 一次也会给对方送过去一些道具，而且这些道具一定会使得对方所有单位获得一次攻击机会。</li>\n<li>游戏进行到某些特定节点的时候，会出现 Party Battle 事件，就是敌我双方的单位互相攻击，自机一定先手。</li>\n<li>自机方的单位会攻击敌方的单位，一旦某个单位的 HP 降到 0 了，它就不能攻击了。</li>\n<li>另一方面，敌方一定会直接攻击自机本体，也就是说自机方的单位不会出现 HP 降到 0 无法攻击的情况。</li>\n<li>当然自己本体的 HP 降到 0 了就真的满身疮痍了。</li>\n<li>在 6 Boss 的 Final Spell 和 Ex 道中，会出现一些 <strong>特殊的 Party Battle</strong>。</li>\n<li>单位有 spell turn 这个属性。大部分单位以 4 或 5 为主，当然也有几个 3 和一个 8。</li>\n<li>单位每充满 spell turn 次，就可以扔雷。扔完一个雷就需要重新充满 spell turn 次才可以扔下一个。</li>\n<li>虽然一次指扔一个雷，但是扔雷的时候处于能够扔雷的状态的单位越多，雷的威力也会越强。</li>\n</ol>\n<p>其实，因为我也没有认真读设定文档，还不知道这个游戏到底讲了一个什么故事。</p>\n<p>但是还是不可避免地被 5 Boss 这个叫「<ruby>仙覚寺<rt>せんがくじ</rt></ruby>　<ruby>鞠子<rt>まりこ</rt></ruby>」的角色留下了深刻的印象。</p>\n<p>首先一登场二话不说切 BGM（而且她的 BGM 的氛围和 5 道中一个天上一个地下），然后直接怼到自机脸上开始自顾自地说自话。</p>\n<p>——没错，直接怼到自机脸上。不管这个时候自机往哪跑她都会跟着。</p>\n<p>然后等到魔理沙一句「会わせてくれないか？」之后更加变本加厉地直接把自己的对话框盖住了魔理沙的对话框。</p>\n<p>BGM 叫「<ruby>偏執<rt>へんしゅう</rt>の<rt> </rt>朱筆<rt>しゅひつ</rt></ruby>」，好吧的确挺「偏执」的。</p>\n<p>而且，设定上她似乎是给「和歌」，或者说「弹幕」做注解的。也许是因为这个原因，弹幕强度高不说，她在 5 关底虽然只有一个单位，但是血非常厚（44444），攻击也很高，基本上两三下就可以直接送自机上路。</p>\n<p>——从某种意义上来说她才是这游戏的本体。</p>\n<p><del>因为这个 5 Boss 我还自闭了有一阵子。</del></p>\n<p>不过话说回来，这游戏竟然还有汉字注音（</p>\n<p>以及，以下是一些截图。</p>\n<p><img src=\"/img/20210404190325_1.jpg\" alt=\"本篇难度选择\"></p>\n<p><img src=\"/img/20210404190314_1.jpg\" alt=\"本篇关卡选择\"></p>\n<p><img src=\"/img/20210404190455_1.jpg\" alt=\"仙覚寺鞠子叫你认汉字.jpg\"></p>\n<p><img src=\"/img/20210404190640_1.jpg\" alt=\"1 Boss 当 Ex 道中\"></p>\n<p>那么就这些了。</p>\n<big><big><center><ruby>このブログを<rt> </rt>読<rt>よ</rt>んで<rt> </rt>下<rt>くだ</rt>さった<rt> </rt>貴方<rt>あなた</rt>に、いや<rt> </rt>重<rt>し</rt>け<rt> </rt>吉事<rt>よごと</rt>！</ruby></center></big></big>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://store.steampowered.com/app/1104610/__Fanmade_Virtual_Autography/\">Steam 页面</a></p>\n<blockquote>\n<p><ruby>弾<rt>たま</rt>を<rt> </rt>撃<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びのプレイヤーよ<rt> </rt></ruby>、</p>\n<p><ruby>玉<rt>たま</rt>を<rt> </rt>打<rt>う</rt>つ<rt> </rt>遊<rt>あそ</rt>びの<rt> </rt>前<rt>まえ</rt>に<rt> </rt>敗北<rt>はいぼく</rt>せよ<rt> </rt></ruby>！</p>\n</blockquote>\n<p><del>双关真好玩（</del></p>","more":"<p>没错，就是这么一款 Steam 上刚出（指两周前）的东方同人……STG？某种意义上算是吧，因为这游戏主要强调的还是 RPG 的部分。</p>\n<p>弹幕方面——尤其是 5 Boss，基本不能躲，然后 124 Boss 莫名其妙地糟，其他的其实还好。</p>\n<p>尤其是 Ex Boss，说实话除了四符，八符，时符和终符以外并没有什么拿得出手的弹幕。</p>\n<p><del>但实际上从混关角度考虑，时符终符两张糟卡放在一起从 RPG 的角度来说十分麻烦，再加上这个时候这边的资源也已经被耗得差不多了。</del></p>\n<p>玩法：</p>\n<p>如上文所言，这游戏重点在 RPG。</p>\n<ol>\n<li>本质上是单关练习。自机这边需要带上四个「单位」，按照游戏中的说法是「<ruby>地珠<rt>ちず</rt></ruby>」。单位分红白二色。</li>\n<li>通过击破杂鱼敌人和 Boss 的非符或符卡来收集道具。</li>\n<li>道具也分红白二色，可以给同色的单位充能。充满一次可以获得一次攻击的机会。</li>\n<li>敌方也有单位。自机每 miss 一次也会给对方送过去一些道具，而且这些道具一定会使得对方所有单位获得一次攻击机会。</li>\n<li>游戏进行到某些特定节点的时候，会出现 Party Battle 事件，就是敌我双方的单位互相攻击，自机一定先手。</li>\n<li>自机方的单位会攻击敌方的单位，一旦某个单位的 HP 降到 0 了，它就不能攻击了。</li>\n<li>另一方面，敌方一定会直接攻击自机本体，也就是说自机方的单位不会出现 HP 降到 0 无法攻击的情况。</li>\n<li>当然自己本体的 HP 降到 0 了就真的满身疮痍了。</li>\n<li>在 6 Boss 的 Final Spell 和 Ex 道中，会出现一些 <strong>特殊的 Party Battle</strong>。</li>\n<li>单位有 spell turn 这个属性。大部分单位以 4 或 5 为主，当然也有几个 3 和一个 8。</li>\n<li>单位每充满 spell turn 次，就可以扔雷。扔完一个雷就需要重新充满 spell turn 次才可以扔下一个。</li>\n<li>虽然一次指扔一个雷，但是扔雷的时候处于能够扔雷的状态的单位越多，雷的威力也会越强。</li>\n</ol>\n<p>其实，因为我也没有认真读设定文档，还不知道这个游戏到底讲了一个什么故事。</p>\n<p>但是还是不可避免地被 5 Boss 这个叫「<ruby>仙覚寺<rt>せんがくじ</rt></ruby>　<ruby>鞠子<rt>まりこ</rt></ruby>」的角色留下了深刻的印象。</p>\n<p>首先一登场二话不说切 BGM（而且她的 BGM 的氛围和 5 道中一个天上一个地下），然后直接怼到自机脸上开始自顾自地说自话。</p>\n<p>——没错，直接怼到自机脸上。不管这个时候自机往哪跑她都会跟着。</p>\n<p>然后等到魔理沙一句「会わせてくれないか？」之后更加变本加厉地直接把自己的对话框盖住了魔理沙的对话框。</p>\n<p>BGM 叫「<ruby>偏執<rt>へんしゅう</rt>の<rt> </rt>朱筆<rt>しゅひつ</rt></ruby>」，好吧的确挺「偏执」的。</p>\n<p>而且，设定上她似乎是给「和歌」，或者说「弹幕」做注解的。也许是因为这个原因，弹幕强度高不说，她在 5 关底虽然只有一个单位，但是血非常厚（44444），攻击也很高，基本上两三下就可以直接送自机上路。</p>\n<p>——从某种意义上来说她才是这游戏的本体。</p>\n<p><del>因为这个 5 Boss 我还自闭了有一阵子。</del></p>\n<p>不过话说回来，这游戏竟然还有汉字注音（</p>\n<p>以及，以下是一些截图。</p>\n<p><img src=\"/img/20210404190325_1.jpg\" alt=\"本篇难度选择\"></p>\n<p><img src=\"/img/20210404190314_1.jpg\" alt=\"本篇关卡选择\"></p>\n<p><img src=\"/img/20210404190455_1.jpg\" alt=\"仙覚寺鞠子叫你认汉字.jpg\"></p>\n<p><img src=\"/img/20210404190640_1.jpg\" alt=\"1 Boss 当 Ex 道中\"></p>\n<p>那么就这些了。</p>\n<big><big><center><ruby>このブログを<rt> </rt>読<rt>よ</rt>んで<rt> </rt>下<rt>くだ</rt>さった<rt> </rt>貴方<rt>あなた</rt>に、いや<rt> </rt>重<rt>し</rt>け<rt> </rt>吉事<rt>よごと</rt>！</ruby></center></big></big>"},{"title":"珂朵莉树学习笔记","date":"2018-10-13T13:13:09.000Z","mathjax":true,"_content":"~~还有三周就是NOIp复赛了，我还在这学些乱七八糟的东西怕不是要凉。~~\n\n~~话说上面那个数字是3你们看的出来吗，反正我在我的编辑器内看不出来。~~\n\n总之就是，我们机房的一位珂学家突然沉迷数据结构并不知道从哪翻出来的毒瘤数据结构。\n\n<!--more -->\n\n我们先来看一道~~毒瘤~~例题，[「CF896C」Willem, Chtholly and Seniorious](http://codeforces.com/contest/896/problem/C)。\n\n如果只看前三个操作的话~~，虽然我不会写也没写过~~，我觉得分块大概是可以做的。然而操作四是个什么鬼？区间$10^{9}$次方和？认真的？\n\n这种时候我们就需要用到珂朵莉树了。珂朵莉树的英文名叫Old Driver Tree，简称ODT。当然您也可以叫它Chtholly Tree。从本质上来讲，珂朵莉树是一种基于`std::set`的暴力数据结构~~，虽然您也可以手写一颗平衡树~~，它的高效几乎全部建立在数据的完全随机上。如果您看过一些其他的珂朵莉树的学习笔记或者是题解的话，您应该总是会看到这样一句话：\n\n> 珂朵莉树的核心操作在于推平一段区间，使一整段区间内的东西变得一样。\n\n那么怎么推平呢？不急，我们慢慢讲。\n\n珂朵莉树存储的是区间，而且每个区间内的所有值都相同，也就是说，我们需要存储的是一个区间的左右端点和值。我们可以写一个结构体：\n\n```cpp\nstruct node{\n    int l,r;\n    mutable long long val;\n    //这里的mutable是为了让我们在之后的修改过程中可以修改val的值\n\n    node(int _l,int _r=-1,long long _val=-1){\n    //调用时_r或_val不填的话默认-1，为了后面split时方便\n        l=_l;\n        r=_r;\n        val=_val;\n    }\n};\nstd::set<node> s;\n\ninline bool operator<(node p,node q){\n    return p.l<q.l;\n}\n```\n\n然后我们就可以初始化了。对于这道题，我们可以像这样初始化：\n\n```cpp\nfor(re int i=1;i<=n;++i)\n    s.insert(node(i,i,rnd()%maxval+1));\n```\n\n初始化完了？\n\n初始化完了。\n\n然后就是珂朵莉树的核心操作~~之一~~，\n\n```cpp\nstd::<set>::iterator split(int pos)\n```\n\n作用是分离出一个左端点为`pos`的区间并返回它的迭代器。它的具体实现如下：\n\n```cpp\n#define _it std::set<node>::iterator\n//上面这句手打非常麻烦，建议宏定义\ninline _it split(int pos){\n    _it it=std::lower_bound(s.begin(),s.end(),node(pos));\n    //找第一个左端点大于等于pos的区间\n    if(it!=s.end()&&it->l==pos)\n        return it;\n    //如果找到了一个左端点恰好为pos的区间，我们就不用split了，直接返回它的迭代器\n    --it;\n    //否则当前区间的左端点一定大于pos，pos这个位置一定在前一个区间内\n    int l=it->l,r=it->r;\n    long long val=it->val;\n    s.erase(it);\n    s.insert(node(l,pos-1,val));\n    return s.insert(node(pos,r,val)).first;\n    //将区间[l,r]删除，并插入区间[l,pos)和[pos,r]\n}\n```\n\n虽然只是把一个区间砍成两半又放回去了，但我们并不是在做无用功，因为我们把原区间与操作无关的部分分离开了。\n\n`insert`函数的返回值类型是`std::pair<std::_Rb_tree_const_iterator<node>,bool>`~~，别问我啥意思我也不懂，我只是从它的错误报告里抄过来了~~，因此我们需要加个`.first`。\n\n`std::set`内部是用红黑树实现的，虽然我没写过，不过据说，它每次操作的时间复杂度都是近似$O(\\operatorname{log}n)$的。\n\n然后是一个同样很核心的操作，\n\n```cpp\nvoid assign(int l,int r,int x)\n```\n\n将区间$[l,r]$推平，全部赋成$x$。它的具体实现如下：\n\n```cpp\ninline void assign(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    //注意一定要先split(r+1)再split(l)，因为如果l与r+1一开始恰好在同一区间内\n    //后split(r+1)~~大概~~会修改树中左端点为l的区间的迭代器\n    s.erase(itl,itr);\n    //将[itl,itr)内所有区间删除\n    s.insert(node(l,r,x));\n    //用一个大区间取代它们\n}\n```\n\n这就完了？\n\n这就完了。\n\n`assign`操作保证了珂朵莉树的时间复杂度，在数据随机的情况下，会使得`set`的大小迅速减小，并最终趋于$\\operatorname{log}n$。本题的操作二就只需调用一次`assign(l,r,x)`即可。\n\n然后是剩下的三个操作~~，一个比一个暴力~~。\n\n操作一，一个一个区间地拿出来加。\n\n```cpp\ninline void IntervalAdd(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    for(re _it p=itl;p!=itr;++p)\n        p->val+=x;\n}\n```\n\n就这么几行？\n\n就这么几行。\n\n操作三，把所有区间取出来，然后直接调用`std::sort`。\n\n```cpp\ninline long long IntervalXth(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    vec.clear();\n    for(re _it p=itl;p!=itr;++p)\n        vec.push_back(std::make_pair(p->val,p->r-p->l+1));\n    std::sort(vec.begin(),vec.end());\n    for(re unsigned i=0;i<vec.size();++i){\n        x-=vec[i].second;\n        if(x<=0)\n            return vec[i].first;\n    }\n    return 0;\n}\n```\n\n操作四，暴力快速幂。\n\n```cpp\ninline int IntervalXpow(int l,int r,int x,int y){\n    _it itr=split(r+1),itl=split(l);\n    int res=0;\n    for(re _it p=itl;p!=itr;++p)\n        res=(1LL*res+1LL*(p->r-p->l+1)*cltpow(p->val%y,x,y)%y)%y;\n    return res;\n}\n```\n\n您可能会想，这么暴力的东西，时间复杂度确定不会动不动原地起爆？\n\n这是我在CodeForces上的提交记录：\n\n![](https://i.loli.net/2018/10/14/5bc28b1443ea5.png)\n\n这是我之前提到的那位~~不愿意透露姓名的~~珂学家的跑得最快的一次提交记录：\n\n![](https://i.loli.net/2018/10/14/5bc28c7ecfe96.png)\n\n![](https://i.loli.net/2018/10/14/5bc28bc4eed79.jpg)\n\n珂幻.jpg\n\n因为珂朵莉树的高效几乎全部建立在数据的完全随机上，能用珂朵莉树做的题并没有多少，大部分是在做正解是线段树之类的题想不出正解时骗分用。就比如说，我在学习珂朵莉树时参考的一篇题解提到了[「CF915E」Physical Education Lessons](http://codeforces.com/contest/915/problem/E)，然而……\n\n![](https://i.loli.net/2018/10/14/5bc297890bbc6.png)\n\n> Updated on 2018-11-01\n>\n> 后来我卡了卡常数过了……\n>\n> 以及，删掉了某些内容（\n\n于是，接下来是珂朵莉树的完整板子。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<set>\n#define re register\n#define maxn 100000\n#define _it std::set<node>::iterator\n\nnamespace cltstream{\n    #ifdef ONLINE_JUDGE\n        #define size 1048576\n        char str[size+1],*head=str,*tail=str;\n        inline char gc(){\n            if(head==tail){\n                tail=(head=str)+fread(str,1,size,stdin);\n                if(head==tail)\n                    return EOF;\n            }\n            return *head++;\n        }\n        #undef size\n    #else\n        #define gc getchar\n    #endif\n\n    template <typename _tp>\n    inline void read(_tp& x){\n        int sn=1;\n        char c=gc();\n        for(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n        if(c==45&&c!=EOF)\n            sn=-1,c=gc();\n        for(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n        x*=sn;\n    }\n\n    template <typename _tp>\n    inline void write(_tp x,char text=' '){\n        if(x<0)\n            putchar(45),x=-x;\n        if(!x)\n            putchar(48);\n        else{\n            int digit[20];\n            for(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n            for(;digit[0];putchar(digit[digit[0]--]^48));\n        }\n        putchar(text);\n    }\n}\n\nint n,m,seed,maxval;\nstruct node{\n    int l,r;\n    mutable long long val;\n\n    node(int _l,int _r=-1,long long _val=-1){\n        l=_l;\n        r=_r;\n        val=_val;\n    }\n};\nstd::set<node> s;\nstd::vector<std::pair<long long,int> > vec;\n\ninline int rnd(){\n    int res=seed;\n    seed=(7LL*seed+13)%1000000007;\n    return res;\n}\n\ninline void swap(int& l,int& r){\n    int tmp=l;\n    l=r;\n    r=tmp;\n}\n\nint cltpow(int x,int y,int mod){\n    if(y==1)\n        return x;\n    int res=cltpow(x,y>>1,mod);\n    res=1LL*res*res%mod;\n    if(y&1)\n        res=1LL*res*x%mod;\n    return res;\n}\n\ninline bool operator<(node p,node q){\n    return p.l<q.l;\n}\n\ninline _it split(int pos){\n    _it it=std::lower_bound(s.begin(),s.end(),node(pos));\n    if(it!=s.end()&&it->l==pos)\n        return it;\n    --it;\n    int l=it->l,r=it->r;\n    long long val=it->val;\n    s.erase(it);\n    s.insert(node(l,pos-1,val));\n    return s.insert(node(pos,r,val)).first;\n}\n\ninline void IntervalAdd(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    for(re _it p=itl;p!=itr;++p)\n        p->val+=x;\n}\n\ninline void IntervalAssign(int l,int r,int x){\n//就是之前提到的assign\n    _it itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,x));\n}\n\ninline long long IntervalXth(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    vec.clear();\n    for(re _it p=itl;p!=itr;++p)\n        vec.push_back(std::make_pair(p->val,p->r-p->l+1));\n    std::sort(vec.begin(),vec.end());\n    for(re unsigned i=0;i<vec.size();++i){\n        x-=vec[i].second;\n        if(x<=0)\n            return vec[i].first;\n    }\n    return 0;\n}\n\ninline int IntervalXpow(int l,int r,int x,int y){\n    _it itr=split(r+1),itl=split(l);\n    int res=0;\n    for(re _it p=itl;p!=itr;++p)\n        res=(1LL*res+1LL*(p->r-p->l+1)*cltpow(p->val%y,x,y)%y)%y;\n    return res;\n}\n\nint main(){\n    cltstream::read(n);\n    cltstream::read(m);\n    cltstream::read(seed);\n    cltstream::read(maxval);\n    for(re int i=1;i<=n;++i)\n        s.insert(node(i,i,rnd()%maxval+1));\n    for(re int i=1;i<=m;++i){\n        int opt=rnd()%4+1,l=rnd()%n+1,r=rnd()%n+1,x,y;\n        if(l>r)\n            swap(l,r);\n        switch(opt){\n            case 1:\n                x=rnd()%maxval+1;\n                IntervalAdd(l,r,x);\n                break;\n            case 2:\n                x=rnd()%maxval+1;\n                IntervalAssign(l,r,x);\n                break;\n            case 3:\n                x=rnd()%(r-l+1)+1;\n                cltstream::write(IntervalXth(l,r,x),'\\n');\n                break;\n            case 4:\n                x=rnd()%maxval+1;\n                y=rnd()%maxval+1;\n                cltstream::write(IntervalXpow(l,r,x,y),'\\n');\n                break;\n        }\n    }\n    return 0;\n}\n```\n\n以上。\n","source":"_posts/2018-10-13-chtholly-tree-learning-notes.md","raw":"---\ntitle: 珂朵莉树学习笔记\ndate: 2018-10-13 21:13:09\ntags:\n  - 珂朵莉树\ncategories:\n  - 学习笔记\nmathjax: true\n---\n~~还有三周就是NOIp复赛了，我还在这学些乱七八糟的东西怕不是要凉。~~\n\n~~话说上面那个数字是3你们看的出来吗，反正我在我的编辑器内看不出来。~~\n\n总之就是，我们机房的一位珂学家突然沉迷数据结构并不知道从哪翻出来的毒瘤数据结构。\n\n<!--more -->\n\n我们先来看一道~~毒瘤~~例题，[「CF896C」Willem, Chtholly and Seniorious](http://codeforces.com/contest/896/problem/C)。\n\n如果只看前三个操作的话~~，虽然我不会写也没写过~~，我觉得分块大概是可以做的。然而操作四是个什么鬼？区间$10^{9}$次方和？认真的？\n\n这种时候我们就需要用到珂朵莉树了。珂朵莉树的英文名叫Old Driver Tree，简称ODT。当然您也可以叫它Chtholly Tree。从本质上来讲，珂朵莉树是一种基于`std::set`的暴力数据结构~~，虽然您也可以手写一颗平衡树~~，它的高效几乎全部建立在数据的完全随机上。如果您看过一些其他的珂朵莉树的学习笔记或者是题解的话，您应该总是会看到这样一句话：\n\n> 珂朵莉树的核心操作在于推平一段区间，使一整段区间内的东西变得一样。\n\n那么怎么推平呢？不急，我们慢慢讲。\n\n珂朵莉树存储的是区间，而且每个区间内的所有值都相同，也就是说，我们需要存储的是一个区间的左右端点和值。我们可以写一个结构体：\n\n```cpp\nstruct node{\n    int l,r;\n    mutable long long val;\n    //这里的mutable是为了让我们在之后的修改过程中可以修改val的值\n\n    node(int _l,int _r=-1,long long _val=-1){\n    //调用时_r或_val不填的话默认-1，为了后面split时方便\n        l=_l;\n        r=_r;\n        val=_val;\n    }\n};\nstd::set<node> s;\n\ninline bool operator<(node p,node q){\n    return p.l<q.l;\n}\n```\n\n然后我们就可以初始化了。对于这道题，我们可以像这样初始化：\n\n```cpp\nfor(re int i=1;i<=n;++i)\n    s.insert(node(i,i,rnd()%maxval+1));\n```\n\n初始化完了？\n\n初始化完了。\n\n然后就是珂朵莉树的核心操作~~之一~~，\n\n```cpp\nstd::<set>::iterator split(int pos)\n```\n\n作用是分离出一个左端点为`pos`的区间并返回它的迭代器。它的具体实现如下：\n\n```cpp\n#define _it std::set<node>::iterator\n//上面这句手打非常麻烦，建议宏定义\ninline _it split(int pos){\n    _it it=std::lower_bound(s.begin(),s.end(),node(pos));\n    //找第一个左端点大于等于pos的区间\n    if(it!=s.end()&&it->l==pos)\n        return it;\n    //如果找到了一个左端点恰好为pos的区间，我们就不用split了，直接返回它的迭代器\n    --it;\n    //否则当前区间的左端点一定大于pos，pos这个位置一定在前一个区间内\n    int l=it->l,r=it->r;\n    long long val=it->val;\n    s.erase(it);\n    s.insert(node(l,pos-1,val));\n    return s.insert(node(pos,r,val)).first;\n    //将区间[l,r]删除，并插入区间[l,pos)和[pos,r]\n}\n```\n\n虽然只是把一个区间砍成两半又放回去了，但我们并不是在做无用功，因为我们把原区间与操作无关的部分分离开了。\n\n`insert`函数的返回值类型是`std::pair<std::_Rb_tree_const_iterator<node>,bool>`~~，别问我啥意思我也不懂，我只是从它的错误报告里抄过来了~~，因此我们需要加个`.first`。\n\n`std::set`内部是用红黑树实现的，虽然我没写过，不过据说，它每次操作的时间复杂度都是近似$O(\\operatorname{log}n)$的。\n\n然后是一个同样很核心的操作，\n\n```cpp\nvoid assign(int l,int r,int x)\n```\n\n将区间$[l,r]$推平，全部赋成$x$。它的具体实现如下：\n\n```cpp\ninline void assign(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    //注意一定要先split(r+1)再split(l)，因为如果l与r+1一开始恰好在同一区间内\n    //后split(r+1)~~大概~~会修改树中左端点为l的区间的迭代器\n    s.erase(itl,itr);\n    //将[itl,itr)内所有区间删除\n    s.insert(node(l,r,x));\n    //用一个大区间取代它们\n}\n```\n\n这就完了？\n\n这就完了。\n\n`assign`操作保证了珂朵莉树的时间复杂度，在数据随机的情况下，会使得`set`的大小迅速减小，并最终趋于$\\operatorname{log}n$。本题的操作二就只需调用一次`assign(l,r,x)`即可。\n\n然后是剩下的三个操作~~，一个比一个暴力~~。\n\n操作一，一个一个区间地拿出来加。\n\n```cpp\ninline void IntervalAdd(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    for(re _it p=itl;p!=itr;++p)\n        p->val+=x;\n}\n```\n\n就这么几行？\n\n就这么几行。\n\n操作三，把所有区间取出来，然后直接调用`std::sort`。\n\n```cpp\ninline long long IntervalXth(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    vec.clear();\n    for(re _it p=itl;p!=itr;++p)\n        vec.push_back(std::make_pair(p->val,p->r-p->l+1));\n    std::sort(vec.begin(),vec.end());\n    for(re unsigned i=0;i<vec.size();++i){\n        x-=vec[i].second;\n        if(x<=0)\n            return vec[i].first;\n    }\n    return 0;\n}\n```\n\n操作四，暴力快速幂。\n\n```cpp\ninline int IntervalXpow(int l,int r,int x,int y){\n    _it itr=split(r+1),itl=split(l);\n    int res=0;\n    for(re _it p=itl;p!=itr;++p)\n        res=(1LL*res+1LL*(p->r-p->l+1)*cltpow(p->val%y,x,y)%y)%y;\n    return res;\n}\n```\n\n您可能会想，这么暴力的东西，时间复杂度确定不会动不动原地起爆？\n\n这是我在CodeForces上的提交记录：\n\n![](https://i.loli.net/2018/10/14/5bc28b1443ea5.png)\n\n这是我之前提到的那位~~不愿意透露姓名的~~珂学家的跑得最快的一次提交记录：\n\n![](https://i.loli.net/2018/10/14/5bc28c7ecfe96.png)\n\n![](https://i.loli.net/2018/10/14/5bc28bc4eed79.jpg)\n\n珂幻.jpg\n\n因为珂朵莉树的高效几乎全部建立在数据的完全随机上，能用珂朵莉树做的题并没有多少，大部分是在做正解是线段树之类的题想不出正解时骗分用。就比如说，我在学习珂朵莉树时参考的一篇题解提到了[「CF915E」Physical Education Lessons](http://codeforces.com/contest/915/problem/E)，然而……\n\n![](https://i.loli.net/2018/10/14/5bc297890bbc6.png)\n\n> Updated on 2018-11-01\n>\n> 后来我卡了卡常数过了……\n>\n> 以及，删掉了某些内容（\n\n于是，接下来是珂朵莉树的完整板子。\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<set>\n#define re register\n#define maxn 100000\n#define _it std::set<node>::iterator\n\nnamespace cltstream{\n    #ifdef ONLINE_JUDGE\n        #define size 1048576\n        char str[size+1],*head=str,*tail=str;\n        inline char gc(){\n            if(head==tail){\n                tail=(head=str)+fread(str,1,size,stdin);\n                if(head==tail)\n                    return EOF;\n            }\n            return *head++;\n        }\n        #undef size\n    #else\n        #define gc getchar\n    #endif\n\n    template <typename _tp>\n    inline void read(_tp& x){\n        int sn=1;\n        char c=gc();\n        for(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n        if(c==45&&c!=EOF)\n            sn=-1,c=gc();\n        for(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n        x*=sn;\n    }\n\n    template <typename _tp>\n    inline void write(_tp x,char text=' '){\n        if(x<0)\n            putchar(45),x=-x;\n        if(!x)\n            putchar(48);\n        else{\n            int digit[20];\n            for(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n            for(;digit[0];putchar(digit[digit[0]--]^48));\n        }\n        putchar(text);\n    }\n}\n\nint n,m,seed,maxval;\nstruct node{\n    int l,r;\n    mutable long long val;\n\n    node(int _l,int _r=-1,long long _val=-1){\n        l=_l;\n        r=_r;\n        val=_val;\n    }\n};\nstd::set<node> s;\nstd::vector<std::pair<long long,int> > vec;\n\ninline int rnd(){\n    int res=seed;\n    seed=(7LL*seed+13)%1000000007;\n    return res;\n}\n\ninline void swap(int& l,int& r){\n    int tmp=l;\n    l=r;\n    r=tmp;\n}\n\nint cltpow(int x,int y,int mod){\n    if(y==1)\n        return x;\n    int res=cltpow(x,y>>1,mod);\n    res=1LL*res*res%mod;\n    if(y&1)\n        res=1LL*res*x%mod;\n    return res;\n}\n\ninline bool operator<(node p,node q){\n    return p.l<q.l;\n}\n\ninline _it split(int pos){\n    _it it=std::lower_bound(s.begin(),s.end(),node(pos));\n    if(it!=s.end()&&it->l==pos)\n        return it;\n    --it;\n    int l=it->l,r=it->r;\n    long long val=it->val;\n    s.erase(it);\n    s.insert(node(l,pos-1,val));\n    return s.insert(node(pos,r,val)).first;\n}\n\ninline void IntervalAdd(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    for(re _it p=itl;p!=itr;++p)\n        p->val+=x;\n}\n\ninline void IntervalAssign(int l,int r,int x){\n//就是之前提到的assign\n    _it itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,x));\n}\n\ninline long long IntervalXth(int l,int r,int x){\n    _it itr=split(r+1),itl=split(l);\n    vec.clear();\n    for(re _it p=itl;p!=itr;++p)\n        vec.push_back(std::make_pair(p->val,p->r-p->l+1));\n    std::sort(vec.begin(),vec.end());\n    for(re unsigned i=0;i<vec.size();++i){\n        x-=vec[i].second;\n        if(x<=0)\n            return vec[i].first;\n    }\n    return 0;\n}\n\ninline int IntervalXpow(int l,int r,int x,int y){\n    _it itr=split(r+1),itl=split(l);\n    int res=0;\n    for(re _it p=itl;p!=itr;++p)\n        res=(1LL*res+1LL*(p->r-p->l+1)*cltpow(p->val%y,x,y)%y)%y;\n    return res;\n}\n\nint main(){\n    cltstream::read(n);\n    cltstream::read(m);\n    cltstream::read(seed);\n    cltstream::read(maxval);\n    for(re int i=1;i<=n;++i)\n        s.insert(node(i,i,rnd()%maxval+1));\n    for(re int i=1;i<=m;++i){\n        int opt=rnd()%4+1,l=rnd()%n+1,r=rnd()%n+1,x,y;\n        if(l>r)\n            swap(l,r);\n        switch(opt){\n            case 1:\n                x=rnd()%maxval+1;\n                IntervalAdd(l,r,x);\n                break;\n            case 2:\n                x=rnd()%maxval+1;\n                IntervalAssign(l,r,x);\n                break;\n            case 3:\n                x=rnd()%(r-l+1)+1;\n                cltstream::write(IntervalXth(l,r,x),'\\n');\n                break;\n            case 4:\n                x=rnd()%maxval+1;\n                y=rnd()%maxval+1;\n                cltstream::write(IntervalXpow(l,r,x,y),'\\n');\n                break;\n        }\n    }\n    return 0;\n}\n```\n\n以上。\n","slug":"chtholly-tree-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmo007dmku9bcmidsxr","content":"<p><del>还有三周就是NOIp复赛了，我还在这学些乱七八糟的东西怕不是要凉。</del></p>\n<p><del>话说上面那个数字是3你们看的出来吗，反正我在我的编辑器内看不出来。</del></p>\n<p>总之就是，我们机房的一位珂学家突然沉迷数据结构并不知道从哪翻出来的毒瘤数据结构。</p>\n<a id=\"more\"></a>\n<p>我们先来看一道<del>毒瘤</del>例题，<a href=\"http://codeforces.com/contest/896/problem/C\">「CF896C」Willem, Chtholly and Seniorious</a>。</p>\n<p>如果只看前三个操作的话<del>，虽然我不会写也没写过</del>，我觉得分块大概是可以做的。然而操作四是个什么鬼？区间$10^{9}$次方和？认真的？</p>\n<p>这种时候我们就需要用到珂朵莉树了。珂朵莉树的英文名叫Old Driver Tree，简称ODT。当然您也可以叫它Chtholly Tree。从本质上来讲，珂朵莉树是一种基于<code>std::set</code>的暴力数据结构<del>，虽然您也可以手写一颗平衡树</del>，它的高效几乎全部建立在数据的完全随机上。如果您看过一些其他的珂朵莉树的学习笔记或者是题解的话，您应该总是会看到这样一句话：</p>\n<blockquote>\n<p>珂朵莉树的核心操作在于推平一段区间，使一整段区间内的东西变得一样。</p>\n</blockquote>\n<p>那么怎么推平呢？不急，我们慢慢讲。</p>\n<p>珂朵莉树存储的是区间，而且每个区间内的所有值都相同，也就是说，我们需要存储的是一个区间的左右端点和值。我们可以写一个结构体：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r;</span><br><span class=\"line\">    <span class=\"keyword\">mutable</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val;</span><br><span class=\"line\">    <span class=\"comment\">//这里的mutable是为了让我们在之后的修改过程中可以修改val的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    node(<span class=\"keyword\">int</span> _l,<span class=\"keyword\">int</span> _r=<span class=\"number\">-1</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> _val=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//调用时_r或_val不填的话默认-1，为了后面split时方便</span></span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        val=_val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(node p,node q)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p.l&lt;q.l;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们就可以初始化了。对于这道题，我们可以像这样初始化：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    s.insert(node(i,i,rnd()%maxval+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<p>初始化完了？</p>\n<p>初始化完了。</p>\n<p>然后就是珂朵莉树的核心操作<del>之一</del>，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">std</span>::&lt;<span class=\"built_in\">set</span>&gt;::<span class=\"function\">iterator <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span></span><br></pre></td></tr></table></figure>\n<p>作用是分离出一个左端点为<code>pos</code>的区间并返回它的迭代器。它的具体实现如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"><span class=\"comment\">//上面这句手打非常麻烦，建议宏定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    _it it=<span class=\"built_in\">std</span>::lower_bound(s.begin(),s.end(),node(pos));</span><br><span class=\"line\">    <span class=\"comment\">//找第一个左端点大于等于pos的区间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    <span class=\"comment\">//如果找到了一个左端点恰好为pos的区间，我们就不用split了，直接返回它的迭代器</span></span><br><span class=\"line\">    --it;</span><br><span class=\"line\">    <span class=\"comment\">//否则当前区间的左端点一定大于pos，pos这个位置一定在前一个区间内</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val=it-&gt;val;</span><br><span class=\"line\">    s.erase(it);</span><br><span class=\"line\">    s.insert(node(l,pos<span class=\"number\">-1</span>,val));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.insert(node(pos,r,val)).first;</span><br><span class=\"line\">    <span class=\"comment\">//将区间[l,r]删除，并插入区间[l,pos)和[pos,r]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然只是把一个区间砍成两半又放回去了，但我们并不是在做无用功，因为我们把原区间与操作无关的部分分离开了。</p>\n<p><code>insert</code>函数的返回值类型是<code>std::pair&lt;std::_Rb_tree_const_iterator&lt;node&gt;,bool&gt;</code><del>，别问我啥意思我也不懂，我只是从它的错误报告里抄过来了</del>，因此我们需要加个<code>.first</code>。</p>\n<p><code>std::set</code>内部是用红黑树实现的，虽然我没写过，不过据说，它每次操作的时间复杂度都是近似$O(\\operatorname{log}n)$的。</p>\n<p>然后是一个同样很核心的操作，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span></span><br></pre></td></tr></table></figure>\n<p>将区间$[l,r]$推平，全部赋成$x$。它的具体实现如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"comment\">//注意一定要先split(r+1)再split(l)，因为如果l与r+1一开始恰好在同一区间内</span></span><br><span class=\"line\">    <span class=\"comment\">//后split(r+1)~~大概~~会修改树中左端点为l的区间的迭代器</span></span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    <span class=\"comment\">//将[itl,itr)内所有区间删除</span></span><br><span class=\"line\">    s.insert(node(l,r,x));</span><br><span class=\"line\">    <span class=\"comment\">//用一个大区间取代它们</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这就完了？</p>\n<p>这就完了。</p>\n<p><code>assign</code>操作保证了珂朵莉树的时间复杂度，在数据随机的情况下，会使得<code>set</code>的大小迅速减小，并最终趋于$\\operatorname{log}n$。本题的操作二就只需调用一次<code>assign(l,r,x)</code>即可。</p>\n<p>然后是剩下的三个操作<del>，一个比一个暴力</del>。</p>\n<p>操作一，一个一个区间地拿出来加。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAdd</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        p-&gt;val+=x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>就这么几行？</p>\n<p>就这么几行。</p>\n<p>操作三，把所有区间取出来，然后直接调用<code>std::sort</code>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">IntervalXth</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    vec.clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        vec.push_back(<span class=\"built_in\">std</span>::make_pair(p-&gt;val,p-&gt;r-p-&gt;l+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(vec.begin(),vec.end());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">unsigned</span> i=<span class=\"number\">0</span>;i&lt;vec.size();++i)&#123;</span><br><span class=\"line\">        x-=vec[i].second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> vec[i].first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>操作四，暴力快速幂。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">IntervalXpow</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        res=(<span class=\"number\">1L</span>L*res+<span class=\"number\">1L</span>L*(p-&gt;r-p-&gt;l+<span class=\"number\">1</span>)*cltpow(p-&gt;val%y,x,y)%y)%y;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>您可能会想，这么暴力的东西，时间复杂度确定不会动不动原地起爆？</p>\n<p>这是我在CodeForces上的提交记录：</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28b1443ea5.png\" alt=\"\"></p>\n<p>这是我之前提到的那位<del>不愿意透露姓名的</del>珂学家的跑得最快的一次提交记录：</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28c7ecfe96.png\" alt=\"\"></p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28bc4eed79.jpg\" alt=\"\"></p>\n<p>珂幻.jpg</p>\n<p>因为珂朵莉树的高效几乎全部建立在数据的完全随机上，能用珂朵莉树做的题并没有多少，大部分是在做正解是线段树之类的题想不出正解时骗分用。就比如说，我在学习珂朵莉树时参考的一篇题解提到了<a href=\"http://codeforces.com/contest/915/problem/E\">「CF915E」Physical Education Lessons</a>，然而……</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc297890bbc6.png\" alt=\"\"></p>\n<blockquote>\n<p>Updated on 2018-11-01</p>\n<p>后来我卡了卡常数过了……</p>\n<p>以及，删掉了某些内容（</p>\n</blockquote>\n<p>于是，接下来是珂朵莉树的完整板子。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> str[size+<span class=\"number\">1</span>],*head=str,*tail=str;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(head==tail)&#123;</span><br><span class=\"line\">                tail=(head=str)+fread(str,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(head==tail)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *head++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">define</span> gc getchar</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"string\">' '</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">putchar</span>(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            <span class=\"built_in\">putchar</span>(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">20</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];<span class=\"built_in\">putchar</span>(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">putchar</span>(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,seed,maxval;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r;</span><br><span class=\"line\">    <span class=\"keyword\">mutable</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">    node(<span class=\"keyword\">int</span> _l,<span class=\"keyword\">int</span> _r=<span class=\"number\">-1</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> _val=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        val=_val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">std</span>::pair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; &gt; vec;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">rnd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=seed;</span><br><span class=\"line\">    seed=(<span class=\"number\">7L</span>L*seed+<span class=\"number\">13</span>)%<span class=\"number\">1000000007</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span>&amp; l,<span class=\"keyword\">int</span>&amp; r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tmp=l;</span><br><span class=\"line\">    l=r;</span><br><span class=\"line\">    r=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> mod)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y==<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=cltpow(x,y&gt;&gt;<span class=\"number\">1</span>,mod);</span><br><span class=\"line\">    res=<span class=\"number\">1L</span>L*res*res%mod;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">        res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(node p,node q)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p.l&lt;q.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    _it it=<span class=\"built_in\">std</span>::lower_bound(s.begin(),s.end(),node(pos));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    --it;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val=it-&gt;val;</span><br><span class=\"line\">    s.erase(it);</span><br><span class=\"line\">    s.insert(node(l,pos<span class=\"number\">-1</span>,val));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.insert(node(pos,r,val)).first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAdd</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        p-&gt;val+=x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAssign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//就是之前提到的assign</span></span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    s.insert(node(l,r,x));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">IntervalXth</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    vec.clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        vec.push_back(<span class=\"built_in\">std</span>::make_pair(p-&gt;val,p-&gt;r-p-&gt;l+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(vec.begin(),vec.end());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">unsigned</span> i=<span class=\"number\">0</span>;i&lt;vec.size();++i)&#123;</span><br><span class=\"line\">        x-=vec[i].second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> vec[i].first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">IntervalXpow</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        res=(<span class=\"number\">1L</span>L*res+<span class=\"number\">1L</span>L*(p-&gt;r-p-&gt;l+<span class=\"number\">1</span>)*cltpow(p-&gt;val%y,x,y)%y)%y;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    cltstream::read(seed);</span><br><span class=\"line\">    cltstream::read(maxval);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        s.insert(node(i,i,rnd()%maxval+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt=rnd()%<span class=\"number\">4</span>+<span class=\"number\">1</span>,l=rnd()%n+<span class=\"number\">1</span>,r=rnd()%n+<span class=\"number\">1</span>,x,y;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(l&gt;r)</span><br><span class=\"line\">            swap(l,r);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                IntervalAdd(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                IntervalAssign(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                x=rnd()%(r-l+<span class=\"number\">1</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">                cltstream::write(IntervalXth(l,r,x),<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                y=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                cltstream::write(IntervalXpow(l,r,x,y),<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上。</p>\n","site":{"data":{}},"excerpt":"<p><del>还有三周就是NOIp复赛了，我还在这学些乱七八糟的东西怕不是要凉。</del></p>\n<p><del>话说上面那个数字是3你们看的出来吗，反正我在我的编辑器内看不出来。</del></p>\n<p>总之就是，我们机房的一位珂学家突然沉迷数据结构并不知道从哪翻出来的毒瘤数据结构。</p>","more":"<p>我们先来看一道<del>毒瘤</del>例题，<a href=\"http://codeforces.com/contest/896/problem/C\">「CF896C」Willem, Chtholly and Seniorious</a>。</p>\n<p>如果只看前三个操作的话<del>，虽然我不会写也没写过</del>，我觉得分块大概是可以做的。然而操作四是个什么鬼？区间$10^{9}$次方和？认真的？</p>\n<p>这种时候我们就需要用到珂朵莉树了。珂朵莉树的英文名叫Old Driver Tree，简称ODT。当然您也可以叫它Chtholly Tree。从本质上来讲，珂朵莉树是一种基于<code>std::set</code>的暴力数据结构<del>，虽然您也可以手写一颗平衡树</del>，它的高效几乎全部建立在数据的完全随机上。如果您看过一些其他的珂朵莉树的学习笔记或者是题解的话，您应该总是会看到这样一句话：</p>\n<blockquote>\n<p>珂朵莉树的核心操作在于推平一段区间，使一整段区间内的东西变得一样。</p>\n</blockquote>\n<p>那么怎么推平呢？不急，我们慢慢讲。</p>\n<p>珂朵莉树存储的是区间，而且每个区间内的所有值都相同，也就是说，我们需要存储的是一个区间的左右端点和值。我们可以写一个结构体：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r;</span><br><span class=\"line\">    <span class=\"keyword\">mutable</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val;</span><br><span class=\"line\">    <span class=\"comment\">//这里的mutable是为了让我们在之后的修改过程中可以修改val的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    node(<span class=\"keyword\">int</span> _l,<span class=\"keyword\">int</span> _r=<span class=\"number\">-1</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> _val=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//调用时_r或_val不填的话默认-1，为了后面split时方便</span></span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        val=_val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(node p,node q)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p.l&lt;q.l;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们就可以初始化了。对于这道题，我们可以像这样初始化：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    s.insert(node(i,i,rnd()%maxval+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n<p>初始化完了？</p>\n<p>初始化完了。</p>\n<p>然后就是珂朵莉树的核心操作<del>之一</del>，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">std</span>::&lt;<span class=\"built_in\">set</span>&gt;::<span class=\"function\">iterator <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span></span><br></pre></td></tr></table></figure>\n<p>作用是分离出一个左端点为<code>pos</code>的区间并返回它的迭代器。它的具体实现如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"><span class=\"comment\">//上面这句手打非常麻烦，建议宏定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    _it it=<span class=\"built_in\">std</span>::lower_bound(s.begin(),s.end(),node(pos));</span><br><span class=\"line\">    <span class=\"comment\">//找第一个左端点大于等于pos的区间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    <span class=\"comment\">//如果找到了一个左端点恰好为pos的区间，我们就不用split了，直接返回它的迭代器</span></span><br><span class=\"line\">    --it;</span><br><span class=\"line\">    <span class=\"comment\">//否则当前区间的左端点一定大于pos，pos这个位置一定在前一个区间内</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val=it-&gt;val;</span><br><span class=\"line\">    s.erase(it);</span><br><span class=\"line\">    s.insert(node(l,pos<span class=\"number\">-1</span>,val));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.insert(node(pos,r,val)).first;</span><br><span class=\"line\">    <span class=\"comment\">//将区间[l,r]删除，并插入区间[l,pos)和[pos,r]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然只是把一个区间砍成两半又放回去了，但我们并不是在做无用功，因为我们把原区间与操作无关的部分分离开了。</p>\n<p><code>insert</code>函数的返回值类型是<code>std::pair&lt;std::_Rb_tree_const_iterator&lt;node&gt;,bool&gt;</code><del>，别问我啥意思我也不懂，我只是从它的错误报告里抄过来了</del>，因此我们需要加个<code>.first</code>。</p>\n<p><code>std::set</code>内部是用红黑树实现的，虽然我没写过，不过据说，它每次操作的时间复杂度都是近似$O(\\operatorname{log}n)$的。</p>\n<p>然后是一个同样很核心的操作，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span></span><br></pre></td></tr></table></figure>\n<p>将区间$[l,r]$推平，全部赋成$x$。它的具体实现如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"comment\">//注意一定要先split(r+1)再split(l)，因为如果l与r+1一开始恰好在同一区间内</span></span><br><span class=\"line\">    <span class=\"comment\">//后split(r+1)~~大概~~会修改树中左端点为l的区间的迭代器</span></span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    <span class=\"comment\">//将[itl,itr)内所有区间删除</span></span><br><span class=\"line\">    s.insert(node(l,r,x));</span><br><span class=\"line\">    <span class=\"comment\">//用一个大区间取代它们</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这就完了？</p>\n<p>这就完了。</p>\n<p><code>assign</code>操作保证了珂朵莉树的时间复杂度，在数据随机的情况下，会使得<code>set</code>的大小迅速减小，并最终趋于$\\operatorname{log}n$。本题的操作二就只需调用一次<code>assign(l,r,x)</code>即可。</p>\n<p>然后是剩下的三个操作<del>，一个比一个暴力</del>。</p>\n<p>操作一，一个一个区间地拿出来加。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAdd</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        p-&gt;val+=x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>就这么几行？</p>\n<p>就这么几行。</p>\n<p>操作三，把所有区间取出来，然后直接调用<code>std::sort</code>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">IntervalXth</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    vec.clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        vec.push_back(<span class=\"built_in\">std</span>::make_pair(p-&gt;val,p-&gt;r-p-&gt;l+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(vec.begin(),vec.end());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">unsigned</span> i=<span class=\"number\">0</span>;i&lt;vec.size();++i)&#123;</span><br><span class=\"line\">        x-=vec[i].second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> vec[i].first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>操作四，暴力快速幂。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">IntervalXpow</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        res=(<span class=\"number\">1L</span>L*res+<span class=\"number\">1L</span>L*(p-&gt;r-p-&gt;l+<span class=\"number\">1</span>)*cltpow(p-&gt;val%y,x,y)%y)%y;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>您可能会想，这么暴力的东西，时间复杂度确定不会动不动原地起爆？</p>\n<p>这是我在CodeForces上的提交记录：</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28b1443ea5.png\" alt=\"\"></p>\n<p>这是我之前提到的那位<del>不愿意透露姓名的</del>珂学家的跑得最快的一次提交记录：</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28c7ecfe96.png\" alt=\"\"></p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc28bc4eed79.jpg\" alt=\"\"></p>\n<p>珂幻.jpg</p>\n<p>因为珂朵莉树的高效几乎全部建立在数据的完全随机上，能用珂朵莉树做的题并没有多少，大部分是在做正解是线段树之类的题想不出正解时骗分用。就比如说，我在学习珂朵莉树时参考的一篇题解提到了<a href=\"http://codeforces.com/contest/915/problem/E\">「CF915E」Physical Education Lessons</a>，然而……</p>\n<p><img src=\"https://i.loli.net/2018/10/14/5bc297890bbc6.png\" alt=\"\"></p>\n<blockquote>\n<p>Updated on 2018-11-01</p>\n<p>后来我卡了卡常数过了……</p>\n<p>以及，删掉了某些内容（</p>\n</blockquote>\n<p>于是，接下来是珂朵莉树的完整板子。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> str[size+<span class=\"number\">1</span>],*head=str,*tail=str;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(head==tail)&#123;</span><br><span class=\"line\">                tail=(head=str)+fread(str,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(head==tail)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *head++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">define</span> gc getchar</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"string\">' '</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">putchar</span>(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            <span class=\"built_in\">putchar</span>(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">20</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];<span class=\"built_in\">putchar</span>(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">putchar</span>(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,seed,maxval;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r;</span><br><span class=\"line\">    <span class=\"keyword\">mutable</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">    node(<span class=\"keyword\">int</span> _l,<span class=\"keyword\">int</span> _r=<span class=\"number\">-1</span>,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> _val=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        val=_val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">std</span>::pair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; &gt; vec;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">rnd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=seed;</span><br><span class=\"line\">    seed=(<span class=\"number\">7L</span>L*seed+<span class=\"number\">13</span>)%<span class=\"number\">1000000007</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span>&amp; l,<span class=\"keyword\">int</span>&amp; r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tmp=l;</span><br><span class=\"line\">    l=r;</span><br><span class=\"line\">    r=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> mod)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y==<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=cltpow(x,y&gt;&gt;<span class=\"number\">1</span>,mod);</span><br><span class=\"line\">    res=<span class=\"number\">1L</span>L*res*res%mod;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">        res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(node p,node q)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p.l&lt;q.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    _it it=<span class=\"built_in\">std</span>::lower_bound(s.begin(),s.end(),node(pos));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    --it;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> val=it-&gt;val;</span><br><span class=\"line\">    s.erase(it);</span><br><span class=\"line\">    s.insert(node(l,pos<span class=\"number\">-1</span>,val));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.insert(node(pos,r,val)).first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAdd</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        p-&gt;val+=x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAssign</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//就是之前提到的assign</span></span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    s.insert(node(l,r,x));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">IntervalXth</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    vec.clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        vec.push_back(<span class=\"built_in\">std</span>::make_pair(p-&gt;val,p-&gt;r-p-&gt;l+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(vec.begin(),vec.end());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">unsigned</span> i=<span class=\"number\">0</span>;i&lt;vec.size();++i)&#123;</span><br><span class=\"line\">        x-=vec[i].second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> vec[i].first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">IntervalXpow</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re _it p=itl;p!=itr;++p)</span><br><span class=\"line\">        res=(<span class=\"number\">1L</span>L*res+<span class=\"number\">1L</span>L*(p-&gt;r-p-&gt;l+<span class=\"number\">1</span>)*cltpow(p-&gt;val%y,x,y)%y)%y;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    cltstream::read(seed);</span><br><span class=\"line\">    cltstream::read(maxval);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        s.insert(node(i,i,rnd()%maxval+<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt=rnd()%<span class=\"number\">4</span>+<span class=\"number\">1</span>,l=rnd()%n+<span class=\"number\">1</span>,r=rnd()%n+<span class=\"number\">1</span>,x,y;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(l&gt;r)</span><br><span class=\"line\">            swap(l,r);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                IntervalAdd(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                IntervalAssign(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                x=rnd()%(r-l+<span class=\"number\">1</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">                cltstream::write(IntervalXth(l,r,x),<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                x=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                y=rnd()%maxval+<span class=\"number\">1</span>;</span><br><span class=\"line\">                cltstream::write(IntervalXpow(l,r,x,y),<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上。</p>"},{"title":"「Luogu-P5009」毒瘤分块题","date":"2018-11-08T00:04:22.000Z","mathjax":true,"_content":"[传送门](https://www.luogu.org/problemnew/show/P5009)\n\n<!-- more -->\n\n从来没做过这么毒瘤的题qaq\n\n就算看了题解现在还是一脸懵逼qaq\n\n首先，题目带了分块，我们可以先考虑分块。但是我太菜了不知道分块怎么写，所以我写的线段树qaq\n\n对$v$的修改相对来说比较简单，我们来重点看对$a$和$b$的修改。假设在某个时刻$t_1$，我们将某个$a_i$加上了$x$，然后又在某个时刻$t_2(t_2>t_1)$，我们要查询之前那个位置上的值，很明显地，答案应该是$v_i+t_1a_ib_i+(t_2-t_1)(a_i+x)b_i$。但是如果真的像这样计算，每次修改就要在这个表达式后面加上一项，很难有效地维护大量的修改。考虑到对$v$的修改比较简单，我们可以通过修改$v$将表达式维持在一个较为简单的形式。形式化地，我们可以找到一个$v_i^\\prime$使得$v_i^\\prime+t_1(a_i+x)b_i=v+t_1a_ib_i$，并将$v_i$修改至$v_i^\\prime$，然后查询的时候我们就可以直接返回$v_i^\\prime+t_2(a_i+x)b_i$了。不难发现$v_i^\\prime=v_i-t_1xb_i$。\n\n需要注意的是，因为我们要使用线段树维护，必然会遇到同一个区间被连续修改多次的情况。假设有这样一个区间，区间内$a$的总修改值是$x$，$b$的总修改值是$y$，那么在某一时刻$t$，该区间内所有值的和应该是$\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$。现在我们考虑将$a$加上$z$，此时$\\Sigma v_i^\\prime+t\\Sigma (a_i+x+z)(b_i+y)=\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$，即$\\Sigma v_i^\\prime=\\Sigma v_i-tz\\Sigma (b_i+y)$。\n\n不过，上式中$tz\\Sigma (b_i+y)$的$(b_i+y)$指的是修改后的$b_i$的值，我们是肯定不能在下推标记时存储每一个历史版本的$b_i$的。我们考虑拆括号，将上式拆成$tz\\Sigma b_i+tzy$，其中$tzy$是一个常数，我们可以直接累加入标记。而至于$tz\\Sigma b_i$，考虑到每层节点的$\\Sigma b_i$都不同，我们可以维护一个$B$，意思是$\\Sigma v_i+=B\\Sigma b_i$，每次修改时$B+=tz$。当然，我们还需要一个标记来记录对$a$自身的修改。对$b$的修改也是类似的。\n\n然后是毒瘤的下推标记。\n\n```cpp\naddv[son]+=A[father]*suma[son]+B[father]*sumb[son]+addv[father];\n//就是上面这句qaq现在还是一脸懵逼qaq\nA[son]+=A[father];\nB[son]+=B[father];\nadda[son]+=adda[father];\naddb[son]+=addf[father];\n```\n\n其实我也不知道我上面在扯些啥，所以以下是代码~~，反正应该没人能看懂我的清奇写法（~~\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 200005\n#define maxm 200005\n#define mod 100000007\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\nint sumv[(maxn<<2)+1],suma[(maxn<<2)+1],sumb[(maxn<<2)+1],sump[(maxn<<2)+1];\nint A[(maxn<<2)+1],B[(maxn<<2)+1];\nint addv[(maxn<<2)+1],adda[(maxn<<2)+1],addb[(maxn<<2)+1];\n\ninline void pushDown(int cur,int ln,int rn){\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*A[cur]*suma[cur<<1]%mod)%mod;\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*B[cur]*sumb[cur<<1]%mod)%mod;\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*ln*addv[cur]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*adda[cur]*sumb[cur<<1]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*addb[cur]*suma[cur<<1]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*adda[cur]*addb[cur]%mod*ln%mod)%mod;\n\tsuma[cur<<1]=(suma[cur<<1]+1LL*ln*adda[cur]%mod)%mod;\n\tsumb[cur<<1]=(sumb[cur<<1]+1LL*ln*addb[cur]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+1LL*A[cur]*adda[cur<<1]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+1LL*B[cur]*addb[cur<<1]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+addv[cur])%mod;\n\tA[cur<<1]=(A[cur<<1]+A[cur])%mod;\n\tB[cur<<1]=(B[cur<<1]+B[cur])%mod;\n\tadda[cur<<1]=(adda[cur<<1]+adda[cur])%mod;\n\taddb[cur<<1]=(addb[cur<<1]+addb[cur])%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*A[cur]*suma[cur<<1|1]%mod)%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*B[cur]*sumb[cur<<1|1]%mod)%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*rn*addv[cur]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*adda[cur]*sumb[cur<<1|1]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*addb[cur]*suma[cur<<1|1]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*adda[cur]*addb[cur]%mod*rn%mod)%mod;\n\tsuma[cur<<1|1]=(suma[cur<<1|1]+1LL*rn*adda[cur]%mod)%mod;\n\tsumb[cur<<1|1]=(sumb[cur<<1|1]+1LL*rn*addb[cur]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+1LL*A[cur]*adda[cur<<1|1]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+1LL*B[cur]*addb[cur<<1|1]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+addv[cur])%mod;\n\tA[cur<<1|1]=(A[cur<<1|1]+A[cur])%mod;\n\tB[cur<<1|1]=(B[cur<<1|1]+B[cur])%mod;\n\tadda[cur<<1|1]=(adda[cur<<1|1]+adda[cur])%mod;\n\taddb[cur<<1|1]=(addb[cur<<1|1]+addb[cur])%mod;\n\tA[cur]=B[cur]=addv[cur]=adda[cur]=addb[cur]=0;\n}\n\ninline void pushUp(int cur){\n\tsumv[cur]=(sumv[cur<<1]+sumv[cur<<1|1])%mod;\n\tsuma[cur]=(suma[cur<<1]+suma[cur<<1|1])%mod;\n\tsumb[cur]=(sumb[cur<<1]+sumb[cur<<1|1])%mod;\n\tsump[cur]=(sump[cur<<1]+sump[cur<<1|1])%mod;\n}\n\nvoid build(int cur,int l,int r){\n\tif(l==r){\n\t\tcltstream::read(sumv[cur]);\n\t\tcltstream::read(suma[cur]);\n\t\tcltstream::read(sumb[cur]);\n\t\tsumv[cur]=(sumv[cur]%mod+mod)%mod;\n\t\tsuma[cur]=(suma[cur]%mod+mod)%mod;\n\t\tsumb[cur]=(sumb[cur]%mod+mod)%mod;\n\t\tsump[cur]=1LL*suma[cur]*sumb[cur]%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tbuild(cur<<1,l,mid);\n\t\tbuild(cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nint query(int L,int R,int t,int cur,int l,int r){\n\tif(l>=L&&r<=R)\n\t\treturn (sumv[cur]+1LL*t*sump[cur]%mod)%mod;\n\telse{\n\t\tint mid=(l+r)>>1,res=0;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tres=(res+query(L,R,t,cur<<1,l,mid))%mod;\n\t\tif(R>mid)\n\t\t\tres=(res+query(L,R,t,cur<<1|1,mid+1,r))%mod;\n\t\treturn res;\n\t}\n}\n\nvoid modifyV(int L,int R,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\taddv[cur]=(addv[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyV(L,R,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyV(L,R,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nvoid modifyA(int L,int R,int t,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+(-1LL*x*t%mod*sumb[cur]%mod+mod)%mod)%mod;\n\t\tsuma[cur]=(suma[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\tsump[cur]=(sump[cur]+1LL*sumb[cur]*x%mod)%mod;\n\t\tB[cur]=(B[cur]+(-1LL*x*t%mod+mod)%mod)%mod;\n\t\taddv[cur]=(addv[cur]+(-1LL*x*t%mod*addb[cur]%mod+mod)%mod)%mod;\n\t\tadda[cur]=(adda[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyA(L,R,t,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyA(L,R,t,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nvoid modifyB(int L,int R,int t,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+(-1LL*x*t%mod*suma[cur]%mod+mod)%mod)%mod;\n\t\tsumb[cur]=(sumb[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\tsump[cur]=(sump[cur]+1LL*suma[cur]*x%mod)%mod;\n\t\tA[cur]=(A[cur]+(-1LL*x*t%mod+mod)%mod)%mod;\n\t\taddv[cur]=(addv[cur]+(-1LL*x*t%mod*adda[cur]%mod+mod)%mod)%mod;\n\t\taddb[cur]=(addb[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyB(L,R,t,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyB(L,R,t,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tbuild(1,1,n);\n\tfor(re int i=1;i<=m;++i){\n\t\tint opt,t,l,r,x;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(t);\n\t\tcltstream::read(l);\n\t\tcltstream::read(r);\n\t\tswitch(opt){\n\t\t\tcase 1:\n\t\t\t\tcltstream::write(query(l,r,t,1,1,n),10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyA(l,r,t,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyB(l,r,t,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyV(l,r,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n大概是我太菜了不适合做这种毒瘤题吧qaq\n\n![](https://i.loli.net/2018/11/08/5be38edf529ca.jpg)\n\n距 __在NOIp2018爆零__ 还剩 __1 天__。\n","source":"_posts/2018-11-08-luogu-p5009-solution.md","raw":"---\ntitle: 「Luogu-P5009」毒瘤分块题\ndate: 2018-11-08 08:04:22\ntags:\n  - 洛谷\n  - 线段树\ncategories:\n  - 题解\nmathjax: true\n---\n[传送门](https://www.luogu.org/problemnew/show/P5009)\n\n<!-- more -->\n\n从来没做过这么毒瘤的题qaq\n\n就算看了题解现在还是一脸懵逼qaq\n\n首先，题目带了分块，我们可以先考虑分块。但是我太菜了不知道分块怎么写，所以我写的线段树qaq\n\n对$v$的修改相对来说比较简单，我们来重点看对$a$和$b$的修改。假设在某个时刻$t_1$，我们将某个$a_i$加上了$x$，然后又在某个时刻$t_2(t_2>t_1)$，我们要查询之前那个位置上的值，很明显地，答案应该是$v_i+t_1a_ib_i+(t_2-t_1)(a_i+x)b_i$。但是如果真的像这样计算，每次修改就要在这个表达式后面加上一项，很难有效地维护大量的修改。考虑到对$v$的修改比较简单，我们可以通过修改$v$将表达式维持在一个较为简单的形式。形式化地，我们可以找到一个$v_i^\\prime$使得$v_i^\\prime+t_1(a_i+x)b_i=v+t_1a_ib_i$，并将$v_i$修改至$v_i^\\prime$，然后查询的时候我们就可以直接返回$v_i^\\prime+t_2(a_i+x)b_i$了。不难发现$v_i^\\prime=v_i-t_1xb_i$。\n\n需要注意的是，因为我们要使用线段树维护，必然会遇到同一个区间被连续修改多次的情况。假设有这样一个区间，区间内$a$的总修改值是$x$，$b$的总修改值是$y$，那么在某一时刻$t$，该区间内所有值的和应该是$\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$。现在我们考虑将$a$加上$z$，此时$\\Sigma v_i^\\prime+t\\Sigma (a_i+x+z)(b_i+y)=\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$，即$\\Sigma v_i^\\prime=\\Sigma v_i-tz\\Sigma (b_i+y)$。\n\n不过，上式中$tz\\Sigma (b_i+y)$的$(b_i+y)$指的是修改后的$b_i$的值，我们是肯定不能在下推标记时存储每一个历史版本的$b_i$的。我们考虑拆括号，将上式拆成$tz\\Sigma b_i+tzy$，其中$tzy$是一个常数，我们可以直接累加入标记。而至于$tz\\Sigma b_i$，考虑到每层节点的$\\Sigma b_i$都不同，我们可以维护一个$B$，意思是$\\Sigma v_i+=B\\Sigma b_i$，每次修改时$B+=tz$。当然，我们还需要一个标记来记录对$a$自身的修改。对$b$的修改也是类似的。\n\n然后是毒瘤的下推标记。\n\n```cpp\naddv[son]+=A[father]*suma[son]+B[father]*sumb[son]+addv[father];\n//就是上面这句qaq现在还是一脸懵逼qaq\nA[son]+=A[father];\nB[son]+=B[father];\nadda[son]+=adda[father];\naddb[son]+=addf[father];\n```\n\n其实我也不知道我上面在扯些啥，所以以下是代码~~，反正应该没人能看懂我的清奇写法（~~\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 200005\n#define maxm 200005\n#define mod 100000007\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\nint sumv[(maxn<<2)+1],suma[(maxn<<2)+1],sumb[(maxn<<2)+1],sump[(maxn<<2)+1];\nint A[(maxn<<2)+1],B[(maxn<<2)+1];\nint addv[(maxn<<2)+1],adda[(maxn<<2)+1],addb[(maxn<<2)+1];\n\ninline void pushDown(int cur,int ln,int rn){\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*A[cur]*suma[cur<<1]%mod)%mod;\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*B[cur]*sumb[cur<<1]%mod)%mod;\n\tsumv[cur<<1]=(sumv[cur<<1]+1LL*ln*addv[cur]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*adda[cur]*sumb[cur<<1]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*addb[cur]*suma[cur<<1]%mod)%mod;\n\tsump[cur<<1]=(sump[cur<<1]+1LL*adda[cur]*addb[cur]%mod*ln%mod)%mod;\n\tsuma[cur<<1]=(suma[cur<<1]+1LL*ln*adda[cur]%mod)%mod;\n\tsumb[cur<<1]=(sumb[cur<<1]+1LL*ln*addb[cur]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+1LL*A[cur]*adda[cur<<1]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+1LL*B[cur]*addb[cur<<1]%mod)%mod;\n\taddv[cur<<1]=(addv[cur<<1]+addv[cur])%mod;\n\tA[cur<<1]=(A[cur<<1]+A[cur])%mod;\n\tB[cur<<1]=(B[cur<<1]+B[cur])%mod;\n\tadda[cur<<1]=(adda[cur<<1]+adda[cur])%mod;\n\taddb[cur<<1]=(addb[cur<<1]+addb[cur])%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*A[cur]*suma[cur<<1|1]%mod)%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*B[cur]*sumb[cur<<1|1]%mod)%mod;\n\tsumv[cur<<1|1]=(sumv[cur<<1|1]+1LL*rn*addv[cur]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*adda[cur]*sumb[cur<<1|1]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*addb[cur]*suma[cur<<1|1]%mod)%mod;\n\tsump[cur<<1|1]=(sump[cur<<1|1]+1LL*adda[cur]*addb[cur]%mod*rn%mod)%mod;\n\tsuma[cur<<1|1]=(suma[cur<<1|1]+1LL*rn*adda[cur]%mod)%mod;\n\tsumb[cur<<1|1]=(sumb[cur<<1|1]+1LL*rn*addb[cur]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+1LL*A[cur]*adda[cur<<1|1]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+1LL*B[cur]*addb[cur<<1|1]%mod)%mod;\n\taddv[cur<<1|1]=(addv[cur<<1|1]+addv[cur])%mod;\n\tA[cur<<1|1]=(A[cur<<1|1]+A[cur])%mod;\n\tB[cur<<1|1]=(B[cur<<1|1]+B[cur])%mod;\n\tadda[cur<<1|1]=(adda[cur<<1|1]+adda[cur])%mod;\n\taddb[cur<<1|1]=(addb[cur<<1|1]+addb[cur])%mod;\n\tA[cur]=B[cur]=addv[cur]=adda[cur]=addb[cur]=0;\n}\n\ninline void pushUp(int cur){\n\tsumv[cur]=(sumv[cur<<1]+sumv[cur<<1|1])%mod;\n\tsuma[cur]=(suma[cur<<1]+suma[cur<<1|1])%mod;\n\tsumb[cur]=(sumb[cur<<1]+sumb[cur<<1|1])%mod;\n\tsump[cur]=(sump[cur<<1]+sump[cur<<1|1])%mod;\n}\n\nvoid build(int cur,int l,int r){\n\tif(l==r){\n\t\tcltstream::read(sumv[cur]);\n\t\tcltstream::read(suma[cur]);\n\t\tcltstream::read(sumb[cur]);\n\t\tsumv[cur]=(sumv[cur]%mod+mod)%mod;\n\t\tsuma[cur]=(suma[cur]%mod+mod)%mod;\n\t\tsumb[cur]=(sumb[cur]%mod+mod)%mod;\n\t\tsump[cur]=1LL*suma[cur]*sumb[cur]%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tbuild(cur<<1,l,mid);\n\t\tbuild(cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nint query(int L,int R,int t,int cur,int l,int r){\n\tif(l>=L&&r<=R)\n\t\treturn (sumv[cur]+1LL*t*sump[cur]%mod)%mod;\n\telse{\n\t\tint mid=(l+r)>>1,res=0;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tres=(res+query(L,R,t,cur<<1,l,mid))%mod;\n\t\tif(R>mid)\n\t\t\tres=(res+query(L,R,t,cur<<1|1,mid+1,r))%mod;\n\t\treturn res;\n\t}\n}\n\nvoid modifyV(int L,int R,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\taddv[cur]=(addv[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyV(L,R,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyV(L,R,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nvoid modifyA(int L,int R,int t,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+(-1LL*x*t%mod*sumb[cur]%mod+mod)%mod)%mod;\n\t\tsuma[cur]=(suma[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\tsump[cur]=(sump[cur]+1LL*sumb[cur]*x%mod)%mod;\n\t\tB[cur]=(B[cur]+(-1LL*x*t%mod+mod)%mod)%mod;\n\t\taddv[cur]=(addv[cur]+(-1LL*x*t%mod*addb[cur]%mod+mod)%mod)%mod;\n\t\tadda[cur]=(adda[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyA(L,R,t,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyA(L,R,t,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nvoid modifyB(int L,int R,int t,int x,int cur,int l,int r){\n\tif(l>=L&&r<=R){\n\t\tsumv[cur]=(sumv[cur]+(-1LL*x*t%mod*suma[cur]%mod+mod)%mod)%mod;\n\t\tsumb[cur]=(sumb[cur]+1LL*(r-l+1)*x%mod)%mod;\n\t\tsump[cur]=(sump[cur]+1LL*suma[cur]*x%mod)%mod;\n\t\tA[cur]=(A[cur]+(-1LL*x*t%mod+mod)%mod)%mod;\n\t\taddv[cur]=(addv[cur]+(-1LL*x*t%mod*adda[cur]%mod+mod)%mod)%mod;\n\t\taddb[cur]=(addb[cur]+x)%mod;\n\t}\n\telse{\n\t\tint mid=(l+r)>>1;\n\t\tpushDown(cur,mid-l+1,r-mid);\n\t\tif(L<=mid)\n\t\t\tmodifyB(L,R,t,x,cur<<1,l,mid);\n\t\tif(R>mid)\n\t\t\tmodifyB(L,R,t,x,cur<<1|1,mid+1,r);\n\t\tpushUp(cur);\n\t}\n}\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tbuild(1,1,n);\n\tfor(re int i=1;i<=m;++i){\n\t\tint opt,t,l,r,x;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(t);\n\t\tcltstream::read(l);\n\t\tcltstream::read(r);\n\t\tswitch(opt){\n\t\t\tcase 1:\n\t\t\t\tcltstream::write(query(l,r,t,1,1,n),10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyA(l,r,t,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyB(l,r,t,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tcltstream::read(x);\n\t\t\t\tmodifyV(l,r,(x%mod+mod)%mod,1,1,n);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n大概是我太菜了不适合做这种毒瘤题吧qaq\n\n![](https://i.loli.net/2018/11/08/5be38edf529ca.jpg)\n\n距 __在NOIp2018爆零__ 还剩 __1 天__。\n","slug":"luogu-p5009-solution","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmp007fmku91x1e0tyd","content":"<p><a href=\"https://www.luogu.org/problemnew/show/P5009\">传送门</a></p>\n<a id=\"more\"></a>\n<p>从来没做过这么毒瘤的题qaq</p>\n<p>就算看了题解现在还是一脸懵逼qaq</p>\n<p>首先，题目带了分块，我们可以先考虑分块。但是我太菜了不知道分块怎么写，所以我写的线段树qaq</p>\n<p>对$v$的修改相对来说比较简单，我们来重点看对$a$和$b$的修改。假设在某个时刻$t_1$，我们将某个$a_i$加上了$x$，然后又在某个时刻$t_2(t_2&gt;t_1)$，我们要查询之前那个位置上的值，很明显地，答案应该是$v_i+t_1a_ib_i+(t_2-t_1)(a_i+x)b_i$。但是如果真的像这样计算，每次修改就要在这个表达式后面加上一项，很难有效地维护大量的修改。考虑到对$v$的修改比较简单，我们可以通过修改$v$将表达式维持在一个较为简单的形式。形式化地，我们可以找到一个$v_i^\\prime$使得$v_i^\\prime+t_1(a_i+x)b_i=v+t_1a_ib_i$，并将$v_i$修改至$v_i^\\prime$，然后查询的时候我们就可以直接返回$v_i^\\prime+t_2(a_i+x)b_i$了。不难发现$v_i^\\prime=v_i-t_1xb_i$。</p>\n<p>需要注意的是，因为我们要使用线段树维护，必然会遇到同一个区间被连续修改多次的情况。假设有这样一个区间，区间内$a$的总修改值是$x$，$b$的总修改值是$y$，那么在某一时刻$t$，该区间内所有值的和应该是$\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$。现在我们考虑将$a$加上$z$，此时$\\Sigma v_i^\\prime+t\\Sigma (a_i+x+z)(b_i+y)=\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$，即$\\Sigma v_i^\\prime=\\Sigma v_i-tz\\Sigma (b_i+y)$。</p>\n<p>不过，上式中$tz\\Sigma (b_i+y)$的$(b_i+y)$指的是修改后的$b_i$的值，我们是肯定不能在下推标记时存储每一个历史版本的$b_i$的。我们考虑拆括号，将上式拆成$tz\\Sigma b_i+tzy$，其中$tzy$是一个常数，我们可以直接累加入标记。而至于$tz\\Sigma b_i$，考虑到每层节点的$\\Sigma b_i$都不同，我们可以维护一个$B$，意思是$\\Sigma v_i+=B\\Sigma b_i$，每次修改时$B+=tz$。当然，我们还需要一个标记来记录对$a$自身的修改。对$b$的修改也是类似的。</p>\n<p>然后是毒瘤的下推标记。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addv[son]+=A[father]*suma[son]+B[father]*sumb[son]+addv[father];</span><br><span class=\"line\"><span class=\"comment\">//就是上面这句qaq现在还是一脸懵逼qaq</span></span><br><span class=\"line\">A[son]+=A[father];</span><br><span class=\"line\">B[son]+=B[father];</span><br><span class=\"line\">adda[son]+=adda[father];</span><br><span class=\"line\">addb[son]+=addf[father];</span><br></pre></td></tr></table></figure>\n<p>其实我也不知道我上面在扯些啥，所以以下是代码<del>，反正应该没人能看懂我的清奇写法（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxm 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 100000007</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sumv[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],suma[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],sumb[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],sump[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],B[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> addv[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],adda[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],addb[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">(<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> ln,<span class=\"keyword\">int</span> rn)</span></span>&#123;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*addv[cur]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*addb[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*addb[cur]%mod*ln%mod)%mod;</span><br><span class=\"line\">    suma[cur&lt;&lt;<span class=\"number\">1</span>]=(suma[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*adda[cur]%mod)%mod;</span><br><span class=\"line\">    sumb[cur&lt;&lt;<span class=\"number\">1</span>]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*addb[cur]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*adda[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*addb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+addv[cur])%mod;</span><br><span class=\"line\">    A[cur&lt;&lt;<span class=\"number\">1</span>]=(A[cur&lt;&lt;<span class=\"number\">1</span>]+A[cur])%mod;</span><br><span class=\"line\">    B[cur&lt;&lt;<span class=\"number\">1</span>]=(B[cur&lt;&lt;<span class=\"number\">1</span>]+B[cur])%mod;</span><br><span class=\"line\">    adda[cur&lt;&lt;<span class=\"number\">1</span>]=(adda[cur&lt;&lt;<span class=\"number\">1</span>]+adda[cur])%mod;</span><br><span class=\"line\">    addb[cur&lt;&lt;<span class=\"number\">1</span>]=(addb[cur&lt;&lt;<span class=\"number\">1</span>]+addb[cur])%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*addv[cur]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*addb[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*addb[cur]%mod*rn%mod)%mod;</span><br><span class=\"line\">    suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*adda[cur]%mod)%mod;</span><br><span class=\"line\">    sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*addb[cur]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+addv[cur])%mod;</span><br><span class=\"line\">    A[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(A[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+A[cur])%mod;</span><br><span class=\"line\">    B[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(B[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+B[cur])%mod;</span><br><span class=\"line\">    adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+adda[cur])%mod;</span><br><span class=\"line\">    addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+addb[cur])%mod;</span><br><span class=\"line\">    A[cur]=B[cur]=addv[cur]=adda[cur]=addb[cur]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">(<span class=\"keyword\">int</span> cur)</span></span>&#123;</span><br><span class=\"line\">    sumv[cur]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    suma[cur]=(suma[cur&lt;&lt;<span class=\"number\">1</span>]+suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    sumb[cur]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>]+sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    sump[cur]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l==r)&#123;</span><br><span class=\"line\">        cltstream::read(sumv[cur]);</span><br><span class=\"line\">        cltstream::read(suma[cur]);</span><br><span class=\"line\">        cltstream::read(sumb[cur]);</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]%mod+mod)%mod;</span><br><span class=\"line\">        suma[cur]=(suma[cur]%mod+mod)%mod;</span><br><span class=\"line\">        sumb[cur]=(sumb[cur]%mod+mod)%mod;</span><br><span class=\"line\">        sump[cur]=<span class=\"number\">1L</span>L*suma[cur]*sumb[cur]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        build(cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        build(cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (sumv[cur]+<span class=\"number\">1L</span>L*t*sump[cur]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>,res=<span class=\"number\">0</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            res=(res+query(L,R,t,cur&lt;&lt;<span class=\"number\">1</span>,l,mid))%mod;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            res=(res+query(L,R,t,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r))%mod;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyV</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyV(L,R,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyV(L,R,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyA</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*sumb[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        suma[cur]=(suma[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        sump[cur]=(sump[cur]+<span class=\"number\">1L</span>L*sumb[cur]*x%mod)%mod;</span><br><span class=\"line\">        B[cur]=(B[cur]+(<span class=\"number\">-1L</span>L*x*t%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*addb[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        adda[cur]=(adda[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyA(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyA(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyB</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*suma[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        sumb[cur]=(sumb[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        sump[cur]=(sump[cur]+<span class=\"number\">1L</span>L*suma[cur]*x%mod)%mod;</span><br><span class=\"line\">        A[cur]=(A[cur]+(<span class=\"number\">-1L</span>L*x*t%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*adda[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addb[cur]=(addb[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyB(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyB(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    build(<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt,t,l,r,x;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(t);</span><br><span class=\"line\">        cltstream::read(l);</span><br><span class=\"line\">        cltstream::read(r);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                cltstream::write(query(l,r,t,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n),<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyA(l,r,t,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyB(l,r,t,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyV(l,r,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>大概是我太菜了不适合做这种毒瘤题吧qaq</p>\n<p><img src=\"https://i.loli.net/2018/11/08/5be38edf529ca.jpg\" alt=\"\"></p>\n<p>距 <strong>在NOIp2018爆零</strong> 还剩 <strong>1 天</strong>。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.luogu.org/problemnew/show/P5009\">传送门</a></p>","more":"<p>从来没做过这么毒瘤的题qaq</p>\n<p>就算看了题解现在还是一脸懵逼qaq</p>\n<p>首先，题目带了分块，我们可以先考虑分块。但是我太菜了不知道分块怎么写，所以我写的线段树qaq</p>\n<p>对$v$的修改相对来说比较简单，我们来重点看对$a$和$b$的修改。假设在某个时刻$t_1$，我们将某个$a_i$加上了$x$，然后又在某个时刻$t_2(t_2&gt;t_1)$，我们要查询之前那个位置上的值，很明显地，答案应该是$v_i+t_1a_ib_i+(t_2-t_1)(a_i+x)b_i$。但是如果真的像这样计算，每次修改就要在这个表达式后面加上一项，很难有效地维护大量的修改。考虑到对$v$的修改比较简单，我们可以通过修改$v$将表达式维持在一个较为简单的形式。形式化地，我们可以找到一个$v_i^\\prime$使得$v_i^\\prime+t_1(a_i+x)b_i=v+t_1a_ib_i$，并将$v_i$修改至$v_i^\\prime$，然后查询的时候我们就可以直接返回$v_i^\\prime+t_2(a_i+x)b_i$了。不难发现$v_i^\\prime=v_i-t_1xb_i$。</p>\n<p>需要注意的是，因为我们要使用线段树维护，必然会遇到同一个区间被连续修改多次的情况。假设有这样一个区间，区间内$a$的总修改值是$x$，$b$的总修改值是$y$，那么在某一时刻$t$，该区间内所有值的和应该是$\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$。现在我们考虑将$a$加上$z$，此时$\\Sigma v_i^\\prime+t\\Sigma (a_i+x+z)(b_i+y)=\\Sigma v_i+t\\Sigma (a_i+x)(b_i+y)$，即$\\Sigma v_i^\\prime=\\Sigma v_i-tz\\Sigma (b_i+y)$。</p>\n<p>不过，上式中$tz\\Sigma (b_i+y)$的$(b_i+y)$指的是修改后的$b_i$的值，我们是肯定不能在下推标记时存储每一个历史版本的$b_i$的。我们考虑拆括号，将上式拆成$tz\\Sigma b_i+tzy$，其中$tzy$是一个常数，我们可以直接累加入标记。而至于$tz\\Sigma b_i$，考虑到每层节点的$\\Sigma b_i$都不同，我们可以维护一个$B$，意思是$\\Sigma v_i+=B\\Sigma b_i$，每次修改时$B+=tz$。当然，我们还需要一个标记来记录对$a$自身的修改。对$b$的修改也是类似的。</p>\n<p>然后是毒瘤的下推标记。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addv[son]+=A[father]*suma[son]+B[father]*sumb[son]+addv[father];</span><br><span class=\"line\"><span class=\"comment\">//就是上面这句qaq现在还是一脸懵逼qaq</span></span><br><span class=\"line\">A[son]+=A[father];</span><br><span class=\"line\">B[son]+=B[father];</span><br><span class=\"line\">adda[son]+=adda[father];</span><br><span class=\"line\">addb[son]+=addf[father];</span><br></pre></td></tr></table></figure>\n<p>其实我也不知道我上面在扯些啥，所以以下是代码<del>，反正应该没人能看懂我的清奇写法（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxm 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 100000007</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sumv[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],suma[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],sumb[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],sump[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],B[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> addv[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],adda[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>],addb[(maxn&lt;&lt;<span class=\"number\">2</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">(<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> ln,<span class=\"keyword\">int</span> rn)</span></span>&#123;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*addv[cur]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*addb[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*addb[cur]%mod*ln%mod)%mod;</span><br><span class=\"line\">    suma[cur&lt;&lt;<span class=\"number\">1</span>]=(suma[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*adda[cur]%mod)%mod;</span><br><span class=\"line\">    sumb[cur&lt;&lt;<span class=\"number\">1</span>]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*ln*addb[cur]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*adda[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*addb[cur&lt;&lt;<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>]+addv[cur])%mod;</span><br><span class=\"line\">    A[cur&lt;&lt;<span class=\"number\">1</span>]=(A[cur&lt;&lt;<span class=\"number\">1</span>]+A[cur])%mod;</span><br><span class=\"line\">    B[cur&lt;&lt;<span class=\"number\">1</span>]=(B[cur&lt;&lt;<span class=\"number\">1</span>]+B[cur])%mod;</span><br><span class=\"line\">    adda[cur&lt;&lt;<span class=\"number\">1</span>]=(adda[cur&lt;&lt;<span class=\"number\">1</span>]+adda[cur])%mod;</span><br><span class=\"line\">    addb[cur&lt;&lt;<span class=\"number\">1</span>]=(addb[cur&lt;&lt;<span class=\"number\">1</span>]+addb[cur])%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*addv[cur]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*addb[cur]*suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*adda[cur]*addb[cur]%mod*rn%mod)%mod;</span><br><span class=\"line\">    suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*adda[cur]%mod)%mod;</span><br><span class=\"line\">    sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*rn*addb[cur]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*A[cur]*adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+<span class=\"number\">1L</span>L*B[cur]*addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]%mod)%mod;</span><br><span class=\"line\">    addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+addv[cur])%mod;</span><br><span class=\"line\">    A[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(A[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+A[cur])%mod;</span><br><span class=\"line\">    B[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(B[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+B[cur])%mod;</span><br><span class=\"line\">    adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(adda[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+adda[cur])%mod;</span><br><span class=\"line\">    addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]=(addb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>]+addb[cur])%mod;</span><br><span class=\"line\">    A[cur]=B[cur]=addv[cur]=adda[cur]=addb[cur]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">(<span class=\"keyword\">int</span> cur)</span></span>&#123;</span><br><span class=\"line\">    sumv[cur]=(sumv[cur&lt;&lt;<span class=\"number\">1</span>]+sumv[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    suma[cur]=(suma[cur&lt;&lt;<span class=\"number\">1</span>]+suma[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    sumb[cur]=(sumb[cur&lt;&lt;<span class=\"number\">1</span>]+sumb[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">    sump[cur]=(sump[cur&lt;&lt;<span class=\"number\">1</span>]+sump[cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>])%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l==r)&#123;</span><br><span class=\"line\">        cltstream::read(sumv[cur]);</span><br><span class=\"line\">        cltstream::read(suma[cur]);</span><br><span class=\"line\">        cltstream::read(sumb[cur]);</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]%mod+mod)%mod;</span><br><span class=\"line\">        suma[cur]=(suma[cur]%mod+mod)%mod;</span><br><span class=\"line\">        sumb[cur]=(sumb[cur]%mod+mod)%mod;</span><br><span class=\"line\">        sump[cur]=<span class=\"number\">1L</span>L*suma[cur]*sumb[cur]%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        build(cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        build(cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (sumv[cur]+<span class=\"number\">1L</span>L*t*sump[cur]%mod)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>,res=<span class=\"number\">0</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            res=(res+query(L,R,t,cur&lt;&lt;<span class=\"number\">1</span>,l,mid))%mod;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            res=(res+query(L,R,t,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r))%mod;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyV</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyV(L,R,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyV(L,R,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyA</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*sumb[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        suma[cur]=(suma[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        sump[cur]=(sump[cur]+<span class=\"number\">1L</span>L*sumb[cur]*x%mod)%mod;</span><br><span class=\"line\">        B[cur]=(B[cur]+(<span class=\"number\">-1L</span>L*x*t%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*addb[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        adda[cur]=(adda[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyA(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyA(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">modifyB</span><span class=\"params\">(<span class=\"keyword\">int</span> L,<span class=\"keyword\">int</span> R,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class=\"line\">        sumv[cur]=(sumv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*suma[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        sumb[cur]=(sumb[cur]+<span class=\"number\">1L</span>L*(r-l+<span class=\"number\">1</span>)*x%mod)%mod;</span><br><span class=\"line\">        sump[cur]=(sump[cur]+<span class=\"number\">1L</span>L*suma[cur]*x%mod)%mod;</span><br><span class=\"line\">        A[cur]=(A[cur]+(<span class=\"number\">-1L</span>L*x*t%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addv[cur]=(addv[cur]+(<span class=\"number\">-1L</span>L*x*t%mod*adda[cur]%mod+mod)%mod)%mod;</span><br><span class=\"line\">        addb[cur]=(addb[cur]+x)%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        pushDown(cur,mid-l+<span class=\"number\">1</span>,r-mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L&lt;=mid)</span><br><span class=\"line\">            modifyB(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>,l,mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(R&gt;mid)</span><br><span class=\"line\">            modifyB(L,R,t,x,cur&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">        pushUp(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    build(<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt,t,l,r,x;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(t);</span><br><span class=\"line\">        cltstream::read(l);</span><br><span class=\"line\">        cltstream::read(r);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                cltstream::write(query(l,r,t,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n),<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyA(l,r,t,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyB(l,r,t,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                modifyV(l,r,(x%mod+mod)%mod,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>大概是我太菜了不适合做这种毒瘤题吧qaq</p>\n<p><img src=\"https://i.loli.net/2018/11/08/5be38edf529ca.jpg\" alt=\"\"></p>\n<p>距 <strong>在NOIp2018爆零</strong> 还剩 <strong>1 天</strong>。</p>"},{"title":"「未来算法Episode I」严格根号分块实现树套树","date":"2018-12-08T11:55:00.000Z","mathjax":true,"_content":"分块天下第一！！！！！！！！！\n\n<!-- more -->\n\n我也不知道我为什么要写这个玩意，大概是我真的被这个外挂一般的东西吓到了吧。\n\n[![](https://i.loli.net/2018/12/08/5c0bb272768cf.png)](https://www.luogu.org/record/show?rid=14518116)\n\n![](https://i.loli.net/2018/12/08/5c0bb2c767fda.jpg)\n\n我们从头说起。点开上面的那个评测记录，我们可以看到一道树套树的模板题。\n\n先退一步来说，假如说我们去掉操作$3$，剩下的操作都可以用主席树来完成。\n\n然而麻烦的是，我们在树上存的是前缀和。想要修改的话，暴力的复杂度是单次$O(n\\operatorname{log}n)$的。\n\n那我们就在外层套个树状数组，把修改$O(n\\operatorname{log}n)$查询$O(\\operatorname{log}n)$均摊成全部$O(\\operatorname{log}^{2}n)$。\n\n然而，很遗憾，我不会树套树，一点都不会，就连上面的这段文字也是我瞎扯出来的。\n\n考虑~~无敌的~~分块。\n\n一般我们想到的分块就是在块内维护`std::set`。这样操作$3$可以做到$O(\\operatorname{log}\\sqrt{n})$，操作$1$、$4$、$5$可以做到$O(\\sqrt{n}\\operatorname{log}\\sqrt{n})$。至于操作$2$，我们在外层套一个二分，然后检查二分到的数的排名是不是$k$，时间复杂度$O(\\operatorname{log}10^{9}\\sqrt{n}\\operatorname{log}\\sqrt{n})$。\n\n然而很明显的，这样做的效率十分低下，除了实现复杂度相对树套树小了一点以外没有任何优势。\n\n我们来看一下[__Shadowice1984__](https://www.luogu.org/space/show?uid=56384)dalao在他的[另一篇题解](https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p4119)中做出的评价：\n\n> 这其实是一个误区。主席树之所以采取了二分的思路来解决问题是因为我们要求回答单次询问做到$O(\\operatorname{log}n)$的复杂度，这时候唯一的可行思路就是二分否则我们无法将复杂度控制在一个$\\text{log}$之内。\n>\n> 但是我们现在是使用分块解决问题。分块是有自己复杂度的，就是$O(\\sqrt{n})$而不是$O(\\operatorname{log}n)$，这意味着分块其实和$\\text{log}$的数据结构以及二分法并不是很搭（因为分块的结构本质上就不支持二分）。如果我们需要强行嵌入$\\text{log}$的数据结构的话在绝大部分情况下都会使复杂度凭空多出个$\\text{log}$来，这在强调常数的根号算法中绝对是致命的。\n\n我也是从这位dalao的[blog](https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p3380)里看到了严格根号分块实现树套树这种未来算法。\n\n主要思想其实不难理解，既然分块和$\\text{log}$不适合放在一起，我们就再套个分块，或者说，把值域也分成块。\n\n定义`cnt1[i][j]`表示前$i$个块内有多少个元素的值在第$j$个块内，`cnt2[i][j]`表示前$i$个块内有多少个$j$（当然是离散化后的）。不难发现预处理出这两个数组的时间复杂度是$O((n+m)\\sqrt{n})$的。\n\n然后我们来分析每个操作该怎么实现：\n\n1. 首先考虑序列中的整块。从头开始扫一遍值域块，一直扫到给定数所在块的前一个块，然后再在给定数所在块内从头扫到给定数的前一个，查询扫过的值有多少落在这些整块内。剩下的边角块自然地暴力判断。\n2. 还是从头扫一遍值域块，看看每个值域块内有多少数落在给定区间内，大概判断出答案在哪个值域块内。然后在这个值域块内再扫一遍即可。需要注意的是我们需要再开两个数组`tmp1`和`tmp2`来保存边角块的信息。\n3. 直接$O(\\sqrt{n})$暴力重构两个`cnt`就好。\n4. 需要两个类似于操作$2$的临时数组，存储的信息也是类似的。首先在给定数所在值域块内__从后往前扫__，找到答案直接退出。否则还是__从后往前扫所有值域块__，找到第一个非空的块然后进去找。\n5. 操作$4$换个方向即可。\n\n综上所述，该算法的时间复杂度为$O((n+m)\\sqrt{n}+m\\sqrt{n+m})$。当$n$，$m$取到极限值时，差不多是$38172068$，相比之下$O(m\\operatorname{log}^{2}n)\\approx 12183043$。看起来好像比不过树套树，实际上开个$\\text{O}2$跑得比谁都快，正如一开始那张图所示。\n\n不过代码写出来有点长的：\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define re register\n#define maxn 50000\n#define maxm 50000\n#define maxs 230\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define lowbit(a) ((a)&(-(a)))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,sq1,sq2;\nint id1[maxn+1],id2[maxn+maxm+1],p[maxn+maxm+1];\nint a[maxn+1],opt[maxm+1][4];\nint cnt1[maxs+1][(maxs<<1)+1],cnt2[maxs+1][maxn+maxm+1],tmp1[(maxs<<1)+1],tmp2[maxn+maxm+1];\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(;(sq1+1)*(sq1+1)<=n;++sq1);\n\tfor(re int i=1;i<=n;++i){\n\t\tid1[i]=(i-1)/sq1+1;\n\t\tcltstream::read(a[i]);\n\t\tp[++p[0]]=a[i];\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tcltstream::read(opt[i][0]);\n\t\tcltstream::read(opt[i][1]);\n\t\tcltstream::read(opt[i][2]);\n\t\tif(opt[i][0]!=3)\n\t\t\tcltstream::read(opt[i][3]);\n\t\telse\n\t\t\tp[++p[0]]=opt[i][2];\n\t}\n\tstd::sort(p+1,p+p[0]+1);\n\tp[0]=std::unique(p+1,p+p[0]+1)-p-1;\n\tfor(;(sq2+1)*(sq2+1)<=p[0];++sq2);\n\tfor(re int i=1;i<=p[0];++i)\n\t\tid2[i]=(i-1)/sq2+1;\n\tfor(re int i=1;i<=n;++i){\n\t\ta[i]=std::lower_bound(p+1,p+p[0]+1,a[i])-p;\n\t\t++cnt1[id1[i]][id2[a[i]]];\n\t\t++cnt2[id1[i]][a[i]];\n\t}\n\tfor(re int i=1;i<=id1[n];++i){\n\t\tfor(re int j=1;j<=id2[p[0]];++j)\n\t\t\tcnt1[i][j]+=cnt1[i-1][j];\n\t\tfor(re int j=1;j<=p[0];++j)\n\t\t\tcnt2[i][j]+=cnt2[i-1][j];\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tre int l,r,x,ans=0;\n\t\tswitch(opt[i][0]){\n\t\t\tcase 1:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::lower_bound(p+1,p+p[0]+1,opt[i][3])-p;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\t\tfor(re int j=1;j<id2[x];++j)\n\t\t\t\t\t\tans+=cnt1[id1[r]-1][j]-cnt1[id1[l]][j];\n\t\t\t\t\tfor(re int j=(id2[x]-1)*sq2+1;j<x;++j)\n\t\t\t\t\t\tans+=cnt2[id1[r]-1][j]-cnt2[id1[l]][j];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfor(re int j=l;j<=r;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\tcltstream::write(ans+1,10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=opt[i][3];\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=1;;++j)\n\t\t\t\t\t\tif(x>cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tx-=cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j];\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2;++k)\n\t\t\t\t\t\t\t\tif(x>cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tx-=cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k];\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tcltstream::write(p[k],10);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=1;;++j)\n\t\t\t\t\t\tif(x>tmp1[j])\n\t\t\t\t\t\t\tx-=tmp1[j];\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2;++k)\n\t\t\t\t\t\t\t\tif(x>tmp2[k])\n\t\t\t\t\t\t\t\t\tx-=tmp2[k];\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tcltstream::write(p[k],10);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tl=opt[i][1],x=std::lower_bound(p+1,p+p[0]+1,opt[i][2])-p;\n\t\t\t\tfor(re int j=id1[l];j<=id1[n];++j){\n\t\t\t\t\t--cnt1[j][id2[a[l]]];\n\t\t\t\t\t++cnt1[j][id2[x]];\n\t\t\t\t\t--cnt2[j][a[l]];\n\t\t\t\t\t++cnt2[j][x];\n\t\t\t\t}\n\t\t\t\ta[l]=x;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::lower_bound(p+1,p+p[0]+1,opt[i][3])-p;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x-1;j>=(id2[x]-1)*sq2+1&&!ans;--j)\n\t\t\t\t\t\tif(cnt2[id1[r]-1][j]-cnt2[id1[l]][j]+tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]-1;j>=1&&!ans;--j)\n\t\t\t\t\t\tif(cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=j*sq2;k>=(j-1)*sq2+1&&!ans;--k)\n\t\t\t\t\t\t\t\tif(cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x-1;j>=(id2[x]-1)*sq2+1&&!ans;--j)\n\t\t\t\t\t\tif(tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]-1;j>=1&&!ans;--j)\n\t\t\t\t\t\tif(tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=j*sq2;k>=(j-1)*sq2+1&&!ans;--k)\n\t\t\t\t\t\t\t\tif(tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcltstream::write(ans?p[ans]:-2147483647,10);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::upper_bound(p+1,p+p[0]+1,opt[i][3])-p-1;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x+1;j<=id2[x]*sq2&&!ans;++j)\n\t\t\t\t\t\tif(cnt2[id1[r]-1][j]-cnt2[id1[l]][j]+tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]+1;j<=id2[p[0]]&&!ans;++j)\n\t\t\t\t\t\tif(cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2&&!ans;++k)\n\t\t\t\t\t\t\t\tif(cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x+1;j<=id2[x]*sq2&&!ans;++j)\n\t\t\t\t\t\tif(tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]+1;j<=id2[p[0]]&&!ans;++j)\n\t\t\t\t\t\tif(tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2&&!ans;++k)\n\t\t\t\t\t\t\t\tif(tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcltstream::write(ans?p[ans]:2147483647,10);\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n我还没写啥呢咋就$12\\text{KB}$了（\n\n这大概会成为一个系列，名字就叫做「未来算法」（Future Algorithm），不过也说不定，会不会以后哪天突然蹦出来个「未来算法Episode II」也说不定（\n","source":"_posts/2018-12-08-future-algorithm-ep1.md","raw":"---\ntitle: 「未来算法Episode I」严格根号分块实现树套树\ndate: 2018-12-08 19:55:00\ntags:\n  - 树套树\n  - 分块\ncategories:\n  - 未来算法\nmathjax: true\n---\n分块天下第一！！！！！！！！！\n\n<!-- more -->\n\n我也不知道我为什么要写这个玩意，大概是我真的被这个外挂一般的东西吓到了吧。\n\n[![](https://i.loli.net/2018/12/08/5c0bb272768cf.png)](https://www.luogu.org/record/show?rid=14518116)\n\n![](https://i.loli.net/2018/12/08/5c0bb2c767fda.jpg)\n\n我们从头说起。点开上面的那个评测记录，我们可以看到一道树套树的模板题。\n\n先退一步来说，假如说我们去掉操作$3$，剩下的操作都可以用主席树来完成。\n\n然而麻烦的是，我们在树上存的是前缀和。想要修改的话，暴力的复杂度是单次$O(n\\operatorname{log}n)$的。\n\n那我们就在外层套个树状数组，把修改$O(n\\operatorname{log}n)$查询$O(\\operatorname{log}n)$均摊成全部$O(\\operatorname{log}^{2}n)$。\n\n然而，很遗憾，我不会树套树，一点都不会，就连上面的这段文字也是我瞎扯出来的。\n\n考虑~~无敌的~~分块。\n\n一般我们想到的分块就是在块内维护`std::set`。这样操作$3$可以做到$O(\\operatorname{log}\\sqrt{n})$，操作$1$、$4$、$5$可以做到$O(\\sqrt{n}\\operatorname{log}\\sqrt{n})$。至于操作$2$，我们在外层套一个二分，然后检查二分到的数的排名是不是$k$，时间复杂度$O(\\operatorname{log}10^{9}\\sqrt{n}\\operatorname{log}\\sqrt{n})$。\n\n然而很明显的，这样做的效率十分低下，除了实现复杂度相对树套树小了一点以外没有任何优势。\n\n我们来看一下[__Shadowice1984__](https://www.luogu.org/space/show?uid=56384)dalao在他的[另一篇题解](https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p4119)中做出的评价：\n\n> 这其实是一个误区。主席树之所以采取了二分的思路来解决问题是因为我们要求回答单次询问做到$O(\\operatorname{log}n)$的复杂度，这时候唯一的可行思路就是二分否则我们无法将复杂度控制在一个$\\text{log}$之内。\n>\n> 但是我们现在是使用分块解决问题。分块是有自己复杂度的，就是$O(\\sqrt{n})$而不是$O(\\operatorname{log}n)$，这意味着分块其实和$\\text{log}$的数据结构以及二分法并不是很搭（因为分块的结构本质上就不支持二分）。如果我们需要强行嵌入$\\text{log}$的数据结构的话在绝大部分情况下都会使复杂度凭空多出个$\\text{log}$来，这在强调常数的根号算法中绝对是致命的。\n\n我也是从这位dalao的[blog](https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p3380)里看到了严格根号分块实现树套树这种未来算法。\n\n主要思想其实不难理解，既然分块和$\\text{log}$不适合放在一起，我们就再套个分块，或者说，把值域也分成块。\n\n定义`cnt1[i][j]`表示前$i$个块内有多少个元素的值在第$j$个块内，`cnt2[i][j]`表示前$i$个块内有多少个$j$（当然是离散化后的）。不难发现预处理出这两个数组的时间复杂度是$O((n+m)\\sqrt{n})$的。\n\n然后我们来分析每个操作该怎么实现：\n\n1. 首先考虑序列中的整块。从头开始扫一遍值域块，一直扫到给定数所在块的前一个块，然后再在给定数所在块内从头扫到给定数的前一个，查询扫过的值有多少落在这些整块内。剩下的边角块自然地暴力判断。\n2. 还是从头扫一遍值域块，看看每个值域块内有多少数落在给定区间内，大概判断出答案在哪个值域块内。然后在这个值域块内再扫一遍即可。需要注意的是我们需要再开两个数组`tmp1`和`tmp2`来保存边角块的信息。\n3. 直接$O(\\sqrt{n})$暴力重构两个`cnt`就好。\n4. 需要两个类似于操作$2$的临时数组，存储的信息也是类似的。首先在给定数所在值域块内__从后往前扫__，找到答案直接退出。否则还是__从后往前扫所有值域块__，找到第一个非空的块然后进去找。\n5. 操作$4$换个方向即可。\n\n综上所述，该算法的时间复杂度为$O((n+m)\\sqrt{n}+m\\sqrt{n+m})$。当$n$，$m$取到极限值时，差不多是$38172068$，相比之下$O(m\\operatorname{log}^{2}n)\\approx 12183043$。看起来好像比不过树套树，实际上开个$\\text{O}2$跑得比谁都快，正如一开始那张图所示。\n\n不过代码写出来有点长的：\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define re register\n#define maxn 50000\n#define maxm 50000\n#define maxs 230\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n#define lowbit(a) ((a)&(-(a)))\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m,sq1,sq2;\nint id1[maxn+1],id2[maxn+maxm+1],p[maxn+maxm+1];\nint a[maxn+1],opt[maxm+1][4];\nint cnt1[maxs+1][(maxs<<1)+1],cnt2[maxs+1][maxn+maxm+1],tmp1[(maxs<<1)+1],tmp2[maxn+maxm+1];\n\nint main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tfor(;(sq1+1)*(sq1+1)<=n;++sq1);\n\tfor(re int i=1;i<=n;++i){\n\t\tid1[i]=(i-1)/sq1+1;\n\t\tcltstream::read(a[i]);\n\t\tp[++p[0]]=a[i];\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tcltstream::read(opt[i][0]);\n\t\tcltstream::read(opt[i][1]);\n\t\tcltstream::read(opt[i][2]);\n\t\tif(opt[i][0]!=3)\n\t\t\tcltstream::read(opt[i][3]);\n\t\telse\n\t\t\tp[++p[0]]=opt[i][2];\n\t}\n\tstd::sort(p+1,p+p[0]+1);\n\tp[0]=std::unique(p+1,p+p[0]+1)-p-1;\n\tfor(;(sq2+1)*(sq2+1)<=p[0];++sq2);\n\tfor(re int i=1;i<=p[0];++i)\n\t\tid2[i]=(i-1)/sq2+1;\n\tfor(re int i=1;i<=n;++i){\n\t\ta[i]=std::lower_bound(p+1,p+p[0]+1,a[i])-p;\n\t\t++cnt1[id1[i]][id2[a[i]]];\n\t\t++cnt2[id1[i]][a[i]];\n\t}\n\tfor(re int i=1;i<=id1[n];++i){\n\t\tfor(re int j=1;j<=id2[p[0]];++j)\n\t\t\tcnt1[i][j]+=cnt1[i-1][j];\n\t\tfor(re int j=1;j<=p[0];++j)\n\t\t\tcnt2[i][j]+=cnt2[i-1][j];\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tre int l,r,x,ans=0;\n\t\tswitch(opt[i][0]){\n\t\t\tcase 1:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::lower_bound(p+1,p+p[0]+1,opt[i][3])-p;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\t\tfor(re int j=1;j<id2[x];++j)\n\t\t\t\t\t\tans+=cnt1[id1[r]-1][j]-cnt1[id1[l]][j];\n\t\t\t\t\tfor(re int j=(id2[x]-1)*sq2+1;j<x;++j)\n\t\t\t\t\t\tans+=cnt2[id1[r]-1][j]-cnt2[id1[l]][j];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfor(re int j=l;j<=r;++j)\n\t\t\t\t\t\tans+=(a[j]<x);\n\t\t\t\tcltstream::write(ans+1,10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=opt[i][3];\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=1;;++j)\n\t\t\t\t\t\tif(x>cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tx-=cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j];\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2;++k)\n\t\t\t\t\t\t\t\tif(x>cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tx-=cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k];\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tcltstream::write(p[k],10);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=1;;++j)\n\t\t\t\t\t\tif(x>tmp1[j])\n\t\t\t\t\t\t\tx-=tmp1[j];\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2;++k)\n\t\t\t\t\t\t\t\tif(x>tmp2[k])\n\t\t\t\t\t\t\t\t\tx-=tmp2[k];\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tcltstream::write(p[k],10);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tl=opt[i][1],x=std::lower_bound(p+1,p+p[0]+1,opt[i][2])-p;\n\t\t\t\tfor(re int j=id1[l];j<=id1[n];++j){\n\t\t\t\t\t--cnt1[j][id2[a[l]]];\n\t\t\t\t\t++cnt1[j][id2[x]];\n\t\t\t\t\t--cnt2[j][a[l]];\n\t\t\t\t\t++cnt2[j][x];\n\t\t\t\t}\n\t\t\t\ta[l]=x;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::lower_bound(p+1,p+p[0]+1,opt[i][3])-p;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x-1;j>=(id2[x]-1)*sq2+1&&!ans;--j)\n\t\t\t\t\t\tif(cnt2[id1[r]-1][j]-cnt2[id1[l]][j]+tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]-1;j>=1&&!ans;--j)\n\t\t\t\t\t\tif(cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=j*sq2;k>=(j-1)*sq2+1&&!ans;--k)\n\t\t\t\t\t\t\t\tif(cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x-1;j>=(id2[x]-1)*sq2+1&&!ans;--j)\n\t\t\t\t\t\tif(tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]-1;j>=1&&!ans;--j)\n\t\t\t\t\t\tif(tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=j*sq2;k>=(j-1)*sq2+1&&!ans;--k)\n\t\t\t\t\t\t\t\tif(tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcltstream::write(ans?p[ans]:-2147483647,10);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tl=opt[i][1],r=opt[i][2],x=std::upper_bound(p+1,p+p[0]+1,opt[i][3])-p-1;\n\t\t\t\tif(id1[l]<id1[r]){\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x+1;j<=id2[x]*sq2&&!ans;++j)\n\t\t\t\t\t\tif(cnt2[id1[r]-1][j]-cnt2[id1[l]][j]+tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]+1;j<=id2[p[0]]&&!ans;++j)\n\t\t\t\t\t\tif(cnt1[id1[r]-1][j]-cnt1[id1[l]][j]+tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2&&!ans;++k)\n\t\t\t\t\t\t\t\tif(cnt2[id1[r]-1][k]-cnt2[id1[l]][k]+tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=id1[l]*sq1;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=(id1[r]-1)*sq1+1;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t++tmp1[id2[a[j]]];\n\t\t\t\t\t\t++tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int j=x+1;j<=id2[x]*sq2&&!ans;++j)\n\t\t\t\t\t\tif(tmp2[j])\n\t\t\t\t\t\t\tans=j;\n\t\t\t\t\tfor(re int j=id2[x]+1;j<=id2[p[0]]&&!ans;++j)\n\t\t\t\t\t\tif(tmp1[j])\n\t\t\t\t\t\t\tfor(re int k=(j-1)*sq2+1;k<=j*sq2&&!ans;++k)\n\t\t\t\t\t\t\t\tif(tmp2[k])\n\t\t\t\t\t\t\t\t\tans=k;\n\t\t\t\t\tfor(re int j=l;j<=r;++j){\n\t\t\t\t\t\t--tmp1[id2[a[j]]];\n\t\t\t\t\t\t--tmp2[a[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcltstream::write(ans?p[ans]:2147483647,10);\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n我还没写啥呢咋就$12\\text{KB}$了（\n\n这大概会成为一个系列，名字就叫做「未来算法」（Future Algorithm），不过也说不定，会不会以后哪天突然蹦出来个「未来算法Episode II」也说不定（\n","slug":"future-algorithm-ep1","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmr007imku9bo1p2su3","content":"<p>分块天下第一！！！！！！！！！</p>\n<a id=\"more\"></a>\n<p>我也不知道我为什么要写这个玩意，大概是我真的被这个外挂一般的东西吓到了吧。</p>\n<p><a href=\"https://www.luogu.org/record/show?rid=14518116\"><img src=\"https://i.loli.net/2018/12/08/5c0bb272768cf.png\" alt=\"\"></a></p>\n<p><img src=\"https://i.loli.net/2018/12/08/5c0bb2c767fda.jpg\" alt=\"\"></p>\n<p>我们从头说起。点开上面的那个评测记录，我们可以看到一道树套树的模板题。</p>\n<p>先退一步来说，假如说我们去掉操作$3$，剩下的操作都可以用主席树来完成。</p>\n<p>然而麻烦的是，我们在树上存的是前缀和。想要修改的话，暴力的复杂度是单次$O(n\\operatorname{log}n)$的。</p>\n<p>那我们就在外层套个树状数组，把修改$O(n\\operatorname{log}n)$查询$O(\\operatorname{log}n)$均摊成全部$O(\\operatorname{log}^{2}n)$。</p>\n<p>然而，很遗憾，我不会树套树，一点都不会，就连上面的这段文字也是我瞎扯出来的。</p>\n<p>考虑<del>无敌的</del>分块。</p>\n<p>一般我们想到的分块就是在块内维护<code>std::set</code>。这样操作$3$可以做到$O(\\operatorname{log}\\sqrt{n})$，操作$1$、$4$、$5$可以做到$O(\\sqrt{n}\\operatorname{log}\\sqrt{n})$。至于操作$2$，我们在外层套一个二分，然后检查二分到的数的排名是不是$k$，时间复杂度$O(\\operatorname{log}10^{9}\\sqrt{n}\\operatorname{log}\\sqrt{n})$。</p>\n<p>然而很明显的，这样做的效率十分低下，除了实现复杂度相对树套树小了一点以外没有任何优势。</p>\n<p>我们来看一下<a href=\"https://www.luogu.org/space/show?uid=56384\"><strong>Shadowice1984</strong></a>dalao在他的<a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p4119\">另一篇题解</a>中做出的评价：</p>\n<blockquote>\n<p>这其实是一个误区。主席树之所以采取了二分的思路来解决问题是因为我们要求回答单次询问做到$O(\\operatorname{log}n)$的复杂度，这时候唯一的可行思路就是二分否则我们无法将复杂度控制在一个$\\text{log}$之内。</p>\n<p>但是我们现在是使用分块解决问题。分块是有自己复杂度的，就是$O(\\sqrt{n})$而不是$O(\\operatorname{log}n)$，这意味着分块其实和$\\text{log}$的数据结构以及二分法并不是很搭（因为分块的结构本质上就不支持二分）。如果我们需要强行嵌入$\\text{log}$的数据结构的话在绝大部分情况下都会使复杂度凭空多出个$\\text{log}$来，这在强调常数的根号算法中绝对是致命的。</p>\n</blockquote>\n<p>我也是从这位dalao的<a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p3380\">blog</a>里看到了严格根号分块实现树套树这种未来算法。</p>\n<p>主要思想其实不难理解，既然分块和$\\text{log}$不适合放在一起，我们就再套个分块，或者说，把值域也分成块。</p>\n<p>定义<code>cnt1[i][j]</code>表示前$i$个块内有多少个元素的值在第$j$个块内，<code>cnt2[i][j]</code>表示前$i$个块内有多少个$j$（当然是离散化后的）。不难发现预处理出这两个数组的时间复杂度是$O((n+m)\\sqrt{n})$的。</p>\n<p>然后我们来分析每个操作该怎么实现：</p>\n<ol>\n<li>首先考虑序列中的整块。从头开始扫一遍值域块，一直扫到给定数所在块的前一个块，然后再在给定数所在块内从头扫到给定数的前一个，查询扫过的值有多少落在这些整块内。剩下的边角块自然地暴力判断。</li>\n<li>还是从头扫一遍值域块，看看每个值域块内有多少数落在给定区间内，大概判断出答案在哪个值域块内。然后在这个值域块内再扫一遍即可。需要注意的是我们需要再开两个数组<code>tmp1</code>和<code>tmp2</code>来保存边角块的信息。</li>\n<li>直接$O(\\sqrt{n})$暴力重构两个<code>cnt</code>就好。</li>\n<li>需要两个类似于操作$2$的临时数组，存储的信息也是类似的。首先在给定数所在值域块内<strong>从后往前扫</strong>，找到答案直接退出。否则还是<strong>从后往前扫所有值域块</strong>，找到第一个非空的块然后进去找。</li>\n<li>操作$4$换个方向即可。</li>\n</ol>\n<p>综上所述，该算法的时间复杂度为$O((n+m)\\sqrt{n}+m\\sqrt{n+m})$。当$n$，$m$取到极限值时，差不多是$38172068$，相比之下$O(m\\operatorname{log}^{2}n)\\approx 12183043$。看起来好像比不过树套树，实际上开个$\\text{O}2$跑得比谁都快，正如一开始那张图所示。</p>\n<p>不过代码写出来有点长的：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 50000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxm 50000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxs 230</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lowbit(a) ((a)&amp;(-(a)))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,sq1,sq2;</span><br><span class=\"line\"><span class=\"keyword\">int</span> id1[maxn+<span class=\"number\">1</span>],id2[maxn+maxm+<span class=\"number\">1</span>],p[maxn+maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[maxn+<span class=\"number\">1</span>],opt[maxm+<span class=\"number\">1</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt1[maxs+<span class=\"number\">1</span>][(maxs&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],cnt2[maxs+<span class=\"number\">1</span>][maxn+maxm+<span class=\"number\">1</span>],tmp1[(maxs&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],tmp2[maxn+maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;(sq1+<span class=\"number\">1</span>)*(sq1+<span class=\"number\">1</span>)&lt;=n;++sq1);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        id1[i]=(i<span class=\"number\">-1</span>)/sq1+<span class=\"number\">1</span>;</span><br><span class=\"line\">        cltstream::read(a[i]);</span><br><span class=\"line\">        p[++p[<span class=\"number\">0</span>]]=a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[i][<span class=\"number\">0</span>]!=<span class=\"number\">3</span>)</span><br><span class=\"line\">            cltstream::read(opt[i][<span class=\"number\">3</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            p[++p[<span class=\"number\">0</span>]]=opt[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>);</span><br><span class=\"line\">    p[<span class=\"number\">0</span>]=<span class=\"built_in\">std</span>::unique(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>)-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;(sq2+<span class=\"number\">1</span>)*(sq2+<span class=\"number\">1</span>)&lt;=p[<span class=\"number\">0</span>];++sq2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=p[<span class=\"number\">0</span>];++i)</span><br><span class=\"line\">        id2[i]=(i<span class=\"number\">-1</span>)/sq2+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        a[i]=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,a[i])-p;</span><br><span class=\"line\">        ++cnt1[id1[i]][id2[a[i]]];</span><br><span class=\"line\">        ++cnt2[id1[i]][a[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=id1[n];++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]];++j)</span><br><span class=\"line\">            cnt1[i][j]+=cnt1[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=p[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">            cnt2[i][j]+=cnt2[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> l,r,x,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt[i][<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;id2[x];++j)</span><br><span class=\"line\">                        ans+=cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j];</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;j&lt;x;++j)</span><br><span class=\"line\">                        ans+=cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                cltstream::write(ans+<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=opt[i][<span class=\"number\">3</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(x&gt;cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            x-=cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j];</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(x&gt;cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    x-=cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k];</span><br><span class=\"line\">                                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                                    cltstream::write(p[k],<span class=\"number\">10</span>);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(x&gt;tmp1[j])</span><br><span class=\"line\">                            x-=tmp1[j];</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(x&gt;tmp2[k])</span><br><span class=\"line\">                                    x-=tmp2[k];</span><br><span class=\"line\">                                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                                    cltstream::write(p[k],<span class=\"number\">10</span>);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">2</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id1[l];j&lt;=id1[n];++j)&#123;</span><br><span class=\"line\">                    --cnt1[j][id2[a[l]]];</span><br><span class=\"line\">                    ++cnt1[j][id2[x]];</span><br><span class=\"line\">                    --cnt2[j][a[l]];</span><br><span class=\"line\">                    ++cnt2[j][x];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                a[l]=x;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x<span class=\"number\">-1</span>;j&gt;=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j]+tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=j*sq2;k&gt;=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x<span class=\"number\">-1</span>;j&gt;=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=j*sq2;k&gt;=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                cltstream::write(ans?p[ans]:<span class=\"number\">-2147483647</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::upper_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x+<span class=\"number\">1</span>;j&lt;=id2[x]*sq2&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j]+tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]+<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]]&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2&amp;&amp;!ans;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x+<span class=\"number\">1</span>;j&lt;=id2[x]*sq2&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]+<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]]&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2&amp;&amp;!ans;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                cltstream::write(ans?p[ans]:<span class=\"number\">2147483647</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我还没写啥呢咋就$12\\text{KB}$了（</p>\n<p>这大概会成为一个系列，名字就叫做「未来算法」（Future Algorithm），不过也说不定，会不会以后哪天突然蹦出来个「未来算法Episode II」也说不定（</p>\n","site":{"data":{}},"excerpt":"<p>分块天下第一！！！！！！！！！</p>","more":"<p>我也不知道我为什么要写这个玩意，大概是我真的被这个外挂一般的东西吓到了吧。</p>\n<p><a href=\"https://www.luogu.org/record/show?rid=14518116\"><img src=\"https://i.loli.net/2018/12/08/5c0bb272768cf.png\" alt=\"\"></a></p>\n<p><img src=\"https://i.loli.net/2018/12/08/5c0bb2c767fda.jpg\" alt=\"\"></p>\n<p>我们从头说起。点开上面的那个评测记录，我们可以看到一道树套树的模板题。</p>\n<p>先退一步来说，假如说我们去掉操作$3$，剩下的操作都可以用主席树来完成。</p>\n<p>然而麻烦的是，我们在树上存的是前缀和。想要修改的话，暴力的复杂度是单次$O(n\\operatorname{log}n)$的。</p>\n<p>那我们就在外层套个树状数组，把修改$O(n\\operatorname{log}n)$查询$O(\\operatorname{log}n)$均摊成全部$O(\\operatorname{log}^{2}n)$。</p>\n<p>然而，很遗憾，我不会树套树，一点都不会，就连上面的这段文字也是我瞎扯出来的。</p>\n<p>考虑<del>无敌的</del>分块。</p>\n<p>一般我们想到的分块就是在块内维护<code>std::set</code>。这样操作$3$可以做到$O(\\operatorname{log}\\sqrt{n})$，操作$1$、$4$、$5$可以做到$O(\\sqrt{n}\\operatorname{log}\\sqrt{n})$。至于操作$2$，我们在外层套一个二分，然后检查二分到的数的排名是不是$k$，时间复杂度$O(\\operatorname{log}10^{9}\\sqrt{n}\\operatorname{log}\\sqrt{n})$。</p>\n<p>然而很明显的，这样做的效率十分低下，除了实现复杂度相对树套树小了一点以外没有任何优势。</p>\n<p>我们来看一下<a href=\"https://www.luogu.org/space/show?uid=56384\"><strong>Shadowice1984</strong></a>dalao在他的<a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p4119\">另一篇题解</a>中做出的评价：</p>\n<blockquote>\n<p>这其实是一个误区。主席树之所以采取了二分的思路来解决问题是因为我们要求回答单次询问做到$O(\\operatorname{log}n)$的复杂度，这时候唯一的可行思路就是二分否则我们无法将复杂度控制在一个$\\text{log}$之内。</p>\n<p>但是我们现在是使用分块解决问题。分块是有自己复杂度的，就是$O(\\sqrt{n})$而不是$O(\\operatorname{log}n)$，这意味着分块其实和$\\text{log}$的数据结构以及二分法并不是很搭（因为分块的结构本质上就不支持二分）。如果我们需要强行嵌入$\\text{log}$的数据结构的话在绝大部分情况下都会使复杂度凭空多出个$\\text{log}$来，这在强调常数的根号算法中绝对是致命的。</p>\n</blockquote>\n<p>我也是从这位dalao的<a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-p3380\">blog</a>里看到了严格根号分块实现树套树这种未来算法。</p>\n<p>主要思想其实不难理解，既然分块和$\\text{log}$不适合放在一起，我们就再套个分块，或者说，把值域也分成块。</p>\n<p>定义<code>cnt1[i][j]</code>表示前$i$个块内有多少个元素的值在第$j$个块内，<code>cnt2[i][j]</code>表示前$i$个块内有多少个$j$（当然是离散化后的）。不难发现预处理出这两个数组的时间复杂度是$O((n+m)\\sqrt{n})$的。</p>\n<p>然后我们来分析每个操作该怎么实现：</p>\n<ol>\n<li>首先考虑序列中的整块。从头开始扫一遍值域块，一直扫到给定数所在块的前一个块，然后再在给定数所在块内从头扫到给定数的前一个，查询扫过的值有多少落在这些整块内。剩下的边角块自然地暴力判断。</li>\n<li>还是从头扫一遍值域块，看看每个值域块内有多少数落在给定区间内，大概判断出答案在哪个值域块内。然后在这个值域块内再扫一遍即可。需要注意的是我们需要再开两个数组<code>tmp1</code>和<code>tmp2</code>来保存边角块的信息。</li>\n<li>直接$O(\\sqrt{n})$暴力重构两个<code>cnt</code>就好。</li>\n<li>需要两个类似于操作$2$的临时数组，存储的信息也是类似的。首先在给定数所在值域块内<strong>从后往前扫</strong>，找到答案直接退出。否则还是<strong>从后往前扫所有值域块</strong>，找到第一个非空的块然后进去找。</li>\n<li>操作$4$换个方向即可。</li>\n</ol>\n<p>综上所述，该算法的时间复杂度为$O((n+m)\\sqrt{n}+m\\sqrt{n+m})$。当$n$，$m$取到极限值时，差不多是$38172068$，相比之下$O(m\\operatorname{log}^{2}n)\\approx 12183043$。看起来好像比不过树套树，实际上开个$\\text{O}2$跑得比谁都快，正如一开始那张图所示。</p>\n<p>不过代码写出来有点长的：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 50000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxm 50000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxs 230</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lowbit(a) ((a)&amp;(-(a)))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,sq1,sq2;</span><br><span class=\"line\"><span class=\"keyword\">int</span> id1[maxn+<span class=\"number\">1</span>],id2[maxn+maxm+<span class=\"number\">1</span>],p[maxn+maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[maxn+<span class=\"number\">1</span>],opt[maxm+<span class=\"number\">1</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt1[maxs+<span class=\"number\">1</span>][(maxs&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],cnt2[maxs+<span class=\"number\">1</span>][maxn+maxm+<span class=\"number\">1</span>],tmp1[(maxs&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],tmp2[maxn+maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;(sq1+<span class=\"number\">1</span>)*(sq1+<span class=\"number\">1</span>)&lt;=n;++sq1);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        id1[i]=(i<span class=\"number\">-1</span>)/sq1+<span class=\"number\">1</span>;</span><br><span class=\"line\">        cltstream::read(a[i]);</span><br><span class=\"line\">        p[++p[<span class=\"number\">0</span>]]=a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">        cltstream::read(opt[i][<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[i][<span class=\"number\">0</span>]!=<span class=\"number\">3</span>)</span><br><span class=\"line\">            cltstream::read(opt[i][<span class=\"number\">3</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            p[++p[<span class=\"number\">0</span>]]=opt[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>);</span><br><span class=\"line\">    p[<span class=\"number\">0</span>]=<span class=\"built_in\">std</span>::unique(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>)-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;(sq2+<span class=\"number\">1</span>)*(sq2+<span class=\"number\">1</span>)&lt;=p[<span class=\"number\">0</span>];++sq2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=p[<span class=\"number\">0</span>];++i)</span><br><span class=\"line\">        id2[i]=(i<span class=\"number\">-1</span>)/sq2+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        a[i]=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,a[i])-p;</span><br><span class=\"line\">        ++cnt1[id1[i]][id2[a[i]]];</span><br><span class=\"line\">        ++cnt2[id1[i]][a[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=id1[n];++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]];++j)</span><br><span class=\"line\">            cnt1[i][j]+=cnt1[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=p[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">            cnt2[i][j]+=cnt2[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> l,r,x,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt[i][<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;id2[x];++j)</span><br><span class=\"line\">                        ans+=cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j];</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;j&lt;x;++j)</span><br><span class=\"line\">                        ans+=cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)</span><br><span class=\"line\">                        ans+=(a[j]&lt;x);</span><br><span class=\"line\">                cltstream::write(ans+<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=opt[i][<span class=\"number\">3</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(x&gt;cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            x-=cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j];</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(x&gt;cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    x-=cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k];</span><br><span class=\"line\">                                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                                    cltstream::write(p[k],<span class=\"number\">10</span>);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(x&gt;tmp1[j])</span><br><span class=\"line\">                            x-=tmp1[j];</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(x&gt;tmp2[k])</span><br><span class=\"line\">                                    x-=tmp2[k];</span><br><span class=\"line\">                                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                                    cltstream::write(p[k],<span class=\"number\">10</span>);</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">2</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id1[l];j&lt;=id1[n];++j)&#123;</span><br><span class=\"line\">                    --cnt1[j][id2[a[l]]];</span><br><span class=\"line\">                    ++cnt1[j][id2[x]];</span><br><span class=\"line\">                    --cnt2[j][a[l]];</span><br><span class=\"line\">                    ++cnt2[j][x];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                a[l]=x;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::lower_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x<span class=\"number\">-1</span>;j&gt;=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j]+tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=j*sq2;k&gt;=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x<span class=\"number\">-1</span>;j&gt;=(id2[x]<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">1</span>&amp;&amp;!ans;--j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=j*sq2;k&gt;=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>&amp;&amp;!ans;--k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                cltstream::write(ans?p[ans]:<span class=\"number\">-2147483647</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                l=opt[i][<span class=\"number\">1</span>],r=opt[i][<span class=\"number\">2</span>],x=<span class=\"built_in\">std</span>::upper_bound(p+<span class=\"number\">1</span>,p+p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,opt[i][<span class=\"number\">3</span>])-p<span class=\"number\">-1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(id1[l]&lt;id1[r])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x+<span class=\"number\">1</span>;j&lt;=id2[x]*sq2&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][j]-cnt2[id1[l]][j]+tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]+<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]]&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(cnt1[id1[r]<span class=\"number\">-1</span>][j]-cnt1[id1[l]][j]+tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2&amp;&amp;!ans;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(cnt2[id1[r]<span class=\"number\">-1</span>][k]-cnt2[id1[l]][k]+tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=id1[l]*sq1;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(id1[r]<span class=\"number\">-1</span>)*sq1+<span class=\"number\">1</span>;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        ++tmp1[id2[a[j]]];</span><br><span class=\"line\">                        ++tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=x+<span class=\"number\">1</span>;j&lt;=id2[x]*sq2&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp2[j])</span><br><span class=\"line\">                            ans=j;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=id2[x]+<span class=\"number\">1</span>;j&lt;=id2[p[<span class=\"number\">0</span>]]&amp;&amp;!ans;++j)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(tmp1[j])</span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(j<span class=\"number\">-1</span>)*sq2+<span class=\"number\">1</span>;k&lt;=j*sq2&amp;&amp;!ans;++k)</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(tmp2[k])</span><br><span class=\"line\">                                    ans=k;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=l;j&lt;=r;++j)&#123;</span><br><span class=\"line\">                        --tmp1[id2[a[j]]];</span><br><span class=\"line\">                        --tmp2[a[j]];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                cltstream::write(ans?p[ans]:<span class=\"number\">2147483647</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我还没写啥呢咋就$12\\text{KB}$了（</p>\n<p>这大概会成为一个系列，名字就叫做「未来算法」（Future Algorithm），不过也说不定，会不会以后哪天突然蹦出来个「未来算法Episode II」也说不定（</p>"},{"mathjax":true,"date":"2018-12-20T08:58:39.000Z","title":"「多项式学习笔记Part II」多项式的进阶操作","_content":"以下，如果不特别声明，则所有运算在模$998244353$意义下进行。\n\n<!-- more -->\n\n### 接下来的前置知识\n\n#### 泰勒展开\n\n说实话，其实我也不是很能理解这个东西（\n\n我就凭感觉xjb扯了（\n\n现在我们有一个函数$f(x)$，我们想要用一个多项式$g(x)$来近似$x$在$x_{0}$附近时$f(x)$的取值。\n\n我们令\n\n$$g(x)=\\sum\\limits_{i=0}^{n}g[i](x-x_{0})^{i}$$\n\n我们想要让$x\\rightarrow x_{0}$时，$g$在$x$处的各阶导数与$f$在$x_{0}$处的各阶导数分别相等。\n\n我们先考虑$0$阶，也就是原函数。因为$x\\rightarrow x_{0}$，所有包含$x-x_{0}$的项都可以忽略，因此我们有\n\n$$g[0]=f(x_{0})$$\n\n然后是$1$阶\n\n$$g^{\\prime}(x)=\\sum\\limits_{i=1}^{n}ig[i](x-x_{0})^{i-1}=g[1]=f^{\\prime}(x_{0})$$\n\n再然后是$2$阶\n\n$$g^{\\prime\\prime}(x)=\\sum\\limits_{i=2}^{n}i(i-1)g[i](x-x_{0})^{i-2}=2g[2]=f^{\\prime\\prime}(x_{0})$$\n\n最后是$3$阶\n\n$$g^{\\prime\\prime\\prime}(x)=\\sum\\limits_{i=3}^{n}i(i-1)(i-2)g[i](x-x_{0})^{i-3}=6g[3]=f^{\\prime\\prime\\prime}(x_{0})$$\n\n我们发现$g[n]$有如下的规律\n\n$$g[n]=\\cfrac{f^{(n)}(x_{0})}{n!}$$\n\n综上所述\n\n$$g(x)=\\sum\\limits_{i=0}^{n}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i$$\n\n~~应该吧（~~\n\n#### 多项式牛顿迭代\n\n考虑一个$n-1$次多项式$F(x)$，我们希望求出一个多项式$G(x)$，使得\n\n$$F(G(x))\\equiv 0\\pmod{x^{n}}$$\n\n我们采用倍增的思想，假设我们已经求出了一个$G_{0}$使得\n\n$$F(G_{0})\\equiv 0\\pmod{x^{t}}$$\n\n我们希望求出一个$G$使得\n\n$$F(G)\\equiv 0\\pmod{x^{2t}}$$\n\n我们将$F$在$G_{0}$这里进行泰勒展开：\n\n$$\\begin{aligned}\nF(G)&=F(G_{0})\\\\\n&+F^{\\prime}(G_{0})(G-G_{0})\\\\\n&+\\cfrac{F^{\\prime\\prime}(G_{0})}{2}(G-G_{0})^{2}\\\\\n&+\\cdots\\end{aligned}$$\n\n注意到\n\n$$\\begin{aligned}\nF(G)-F(G_{0})&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\n\\end{aligned}$$\n\n也就是说$G-G_{0}$的最低非零系数的项数大于等于$t$，$(G-G_{0})^{k}$的最低非零系数的项数大于等于$kt$，从而我们有\n\n$$\\begin{aligned}\nF(G)&\\equiv F(G_{0})+F^{\\prime}(G_{0})(G-G_{0})\\pmod{x^{2t}}\\\\\nF^{\\prime}(G_{0})G&\\equiv F^{\\prime}(G_{0})G_{0}-F(G_{0})\\pmod{x^{2t}}\\\\\nG&\\equiv G_{0}-\\cfrac{F(G_{0})}{F^{\\prime}(G_{0})}\\pmod{x^{2t}}\n\\end{aligned}$$\n\n然后我们就一直倍增，倍增到$t\\geqslant n$为止，此时$G_{0}$即为所求多项式。\n\n### [多项式求逆](https://www.luogu.org/problemnew/show/P4238)\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$F(x)\\times G(x)\\equiv 1\\pmod{x^{n}}$$\n\n假设我们已经求出了$G_{0}$使得\n\n$$F\\times G_{0}\\equiv 1\\pmod{x^{t}}$$\n\n我们希望找到一个$G$使得\n\n$$F\\times G\\equiv 1\\pmod{x^{2t}}$$\n\n据说能用牛顿迭代推，然而我不会（\n\n考虑正常一点的方式~~，虽然说还是倍增~~。\n\n$$\\begin{aligned}\nF\\times G-F\\times G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\n(G-G_{0})^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG^{2}-2GG_{0}+G_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\n\\end{aligned}$$\n\n两边同时乘$F$\n\n$$\\begin{aligned}\nG-2G_{0}+FG_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG&\\equiv 2G_{0}-FG_{0}^{2}\\pmod{x^{2t}}\n\\end{aligned}$$\n\n边界条件也很明显，就是当$t=1$时，$G[0]\\equiv F[0]^{-1}$。\n\n说起来是很简单对吧……然而我真正开始写了才发现自己就是个傻子啥也不会（\n\n关于代码……现在还不是时候（\n\n后面有一道超级综合题在等着我们（\n\n### [多项式对数函数](https://www.luogu.org/problemnew/show/P4725)\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G(x)\\equiv\\ln F(x)\\pmod{x^{n}}$$\n\n对上式两边求导\n\n$$G^{\\prime}\\equiv F^{\\prime}\\ln^{\\prime}F\\pmod{x^{n}}$$\n\n又因为\n\n$$\\ln^{\\prime}x=\\frac{1}{x}$$\n\n我们就得到\n\n$$G^{\\prime}\\equiv\\cfrac{F^{\\prime}}{F}\\pmod{x^{n}}$$\n\n求导+求逆+不定积分即可。\n\n### [多项式指数函数](https://www.luogu.org/problemnew/show/P4726)\n\n超级综合题来了。\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G(x)\\equiv e^{F(x)}\\pmod{x^{n}}$$\n\n首先\n\n$$\\ln G-F\\equiv 0\\pmod{x^{n}}$$\n\n我们把$F$看成是常数项，定义函数\n\n$$A(G)=\\ln G-F$$\n\n$$A^{\\prime}(G)=\\ln^{\\prime}G=\\cfrac{1}{G}$$\n\n套牛顿迭代\n\n$$\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}(1-\\ln G_{0}+F)\\pmod{x^{2t}}\n\\end{aligned}$$\n\n然后把以上提到的所有板子全都复制过来就行了（\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n;\nint unit[2][24],rev[maxn+1],inv[maxn+1]={0,1},F[maxn+1],G[maxn+1],tmp1[maxn+1],tmp2[maxn+1],tmp3[maxn+1],tmp4[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp1[k]=F[k];\n\t\tNTT(tmp1,j,0);\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp1[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t\tfor(re int k=0;k<j;++k)\n\t\t\ttmp1[k]=0;\n\t}\n}\n\ninline void Ln(re int* F,re int* G,re int n){\n\tfor(re int i=1;i<n;++i)\n\t\tG[i-1]=1LL*F[i]*i%mod;\n\tInv(F,tmp2,n);\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tNTT(G,N,0);\n\tNTT(tmp2,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=1LL*G[i]*tmp2[i]%mod;\n\tNTT(G,N,1);\n\tfor(re int i=n-1;i>=1;--i)\n\t\tG[i]=1LL*G[i-1]*inv[i]%mod;\n\tG[0]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n\tfor(re int i=0;i<N;++i)\n\t\ttmp2[i]=0;\n}\n\ninline void Exp(re int* F,re int* G,re int n){\n\tG[0]=1;\n\tfor(re int i=1,j=2;i<(n<<1);i<<=1,j<<=1){\n\t\tLn(G,tmp3,i);\n\t\tfor(re int k=0;k<i;++k)\n\t\t\ttmp4[k]=F[k];\n\t\tNTT(tmp3,j,0);\n\t\tNTT(tmp4,j,0);\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=((1LL-tmp3[k]+tmp4[k])%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\ttmp3[k]=tmp4[k]=0;\n\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tcltstream::read(n);\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::read(F[i]);\n\tExp(F,G,n);\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::write(G[i],i<n-1?32:-1);\n\tclop();\n\treturn 0;\n}\n```\n\n### 多项式开平方根\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G^{2}(x)\\equiv F(x)\\pmod{x^{n}}$$\n\n牛顿迭代吼啊！\n\n$$A(G)=G^{2}-F$$\n\n$$A^{\\prime}(G)=2G$$\n\n$$\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}-\\cfrac{G_{0}^{2}-F}{2G_{0}}\\\\\n&\\equiv\\cfrac{G_{0}^{2}+F}{2G_{0}}\\\\\n&=\\cfrac{1}{2}(G_{0}+\\cfrac{F}{G_{0}})\\pmod{x^{2t}}\n\\end{aligned}$$\n\n~~复制粘贴吼啊！~~\n\n### 我刚才都学了些啥破玩意\n\n[一道例题](http://codeforces.com/contest/438/problem/E)。\n\n[Remote Judge](https://www.luogu.org/problemnew/show/CF438E)。\n\n这是读题前的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3e4d32b6f.gif)\n\n这是读题后的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3e4d34c6e.jpg)\n\n这是知道了这题正解是多项式开平方根后的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3f327ea74.jpg)\n\n我……我怕不是学了个假的多项式哦（\n\n厚颜无耻地抄题解（\n\n首先我们搞出生成函数（然而并不是很懂）\n\n$$G(x)=\\sum\\limits_{i=0}^{m}G[i]x^{i}$$\n\n其中\n\n$$G[i]=[i\\in\\{c_{1},c_{2},\\cdots,c_{n}\\}]$$\n\n定义$F[i]$表示权值为$i$的神犇二叉树的数量，我们有\n\n$$F[0]=1$$\n\n$$F[x]=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]$$\n\n就是先枚举根节点权值（$i$），再枚举左子树权值（$j$），然后算出右子树权值（$x-i-j$）。\n\n然后是一些神仙操作\n\n$$\\begin{aligned}\nF[x]&=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]\\\\\n&=\\sum\\limits_{i=0}^{x}G[i]F^{2}[x-i]\\\\\n&=(GF^{2})[x]\n\\end{aligned}$$\n\n令人窒息（\n\n然后我们就有\n\n$$GF^{2}+1=F$$\n\n但是为什么要$+1$？因为$F(0)=F[0]=1$而$G(0)=G[0]=0$。\n\n于是解上面这个一元二次方程，我们得到\n\n$$F=\\cfrac{1\\pm\\sqrt{1-4G}}{2G}$$\n\n但是这个形式还是不是很好搞，我们将分子分母同时乘$(1\\mp\\sqrt{1-4G})$，然后化简一波\n\n$$F=\\cfrac{2}{1\\mp\\sqrt{1-4G}}$$\n\n如果根号前取负，代入$x=0$，分母就减成$0$了；而如果取正，我们就得到很健康的$\\cfrac{2}{2}=1$。综上所述\n\n$$F=\\cfrac{2}{1+\\sqrt{1-4G}}$$\n\n本来接下来应该有代码实现的，但是~~我拒绝~~咕咕咕。\n\n~~其实是调不出来了（~~\n","source":"_posts/2018-12-20-polynomial-learning-notes-pt2.md","raw":"---\nmathjax: true\ndate: 2018-12-20 16:58:39\ntitle: 「多项式学习笔记Part II」多项式的进阶操作\ntags:\n  - FFT\n  - NTT\ncategories:\n  - 学习笔记\n---\n以下，如果不特别声明，则所有运算在模$998244353$意义下进行。\n\n<!-- more -->\n\n### 接下来的前置知识\n\n#### 泰勒展开\n\n说实话，其实我也不是很能理解这个东西（\n\n我就凭感觉xjb扯了（\n\n现在我们有一个函数$f(x)$，我们想要用一个多项式$g(x)$来近似$x$在$x_{0}$附近时$f(x)$的取值。\n\n我们令\n\n$$g(x)=\\sum\\limits_{i=0}^{n}g[i](x-x_{0})^{i}$$\n\n我们想要让$x\\rightarrow x_{0}$时，$g$在$x$处的各阶导数与$f$在$x_{0}$处的各阶导数分别相等。\n\n我们先考虑$0$阶，也就是原函数。因为$x\\rightarrow x_{0}$，所有包含$x-x_{0}$的项都可以忽略，因此我们有\n\n$$g[0]=f(x_{0})$$\n\n然后是$1$阶\n\n$$g^{\\prime}(x)=\\sum\\limits_{i=1}^{n}ig[i](x-x_{0})^{i-1}=g[1]=f^{\\prime}(x_{0})$$\n\n再然后是$2$阶\n\n$$g^{\\prime\\prime}(x)=\\sum\\limits_{i=2}^{n}i(i-1)g[i](x-x_{0})^{i-2}=2g[2]=f^{\\prime\\prime}(x_{0})$$\n\n最后是$3$阶\n\n$$g^{\\prime\\prime\\prime}(x)=\\sum\\limits_{i=3}^{n}i(i-1)(i-2)g[i](x-x_{0})^{i-3}=6g[3]=f^{\\prime\\prime\\prime}(x_{0})$$\n\n我们发现$g[n]$有如下的规律\n\n$$g[n]=\\cfrac{f^{(n)}(x_{0})}{n!}$$\n\n综上所述\n\n$$g(x)=\\sum\\limits_{i=0}^{n}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i$$\n\n~~应该吧（~~\n\n#### 多项式牛顿迭代\n\n考虑一个$n-1$次多项式$F(x)$，我们希望求出一个多项式$G(x)$，使得\n\n$$F(G(x))\\equiv 0\\pmod{x^{n}}$$\n\n我们采用倍增的思想，假设我们已经求出了一个$G_{0}$使得\n\n$$F(G_{0})\\equiv 0\\pmod{x^{t}}$$\n\n我们希望求出一个$G$使得\n\n$$F(G)\\equiv 0\\pmod{x^{2t}}$$\n\n我们将$F$在$G_{0}$这里进行泰勒展开：\n\n$$\\begin{aligned}\nF(G)&=F(G_{0})\\\\\n&+F^{\\prime}(G_{0})(G-G_{0})\\\\\n&+\\cfrac{F^{\\prime\\prime}(G_{0})}{2}(G-G_{0})^{2}\\\\\n&+\\cdots\\end{aligned}$$\n\n注意到\n\n$$\\begin{aligned}\nF(G)-F(G_{0})&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\n\\end{aligned}$$\n\n也就是说$G-G_{0}$的最低非零系数的项数大于等于$t$，$(G-G_{0})^{k}$的最低非零系数的项数大于等于$kt$，从而我们有\n\n$$\\begin{aligned}\nF(G)&\\equiv F(G_{0})+F^{\\prime}(G_{0})(G-G_{0})\\pmod{x^{2t}}\\\\\nF^{\\prime}(G_{0})G&\\equiv F^{\\prime}(G_{0})G_{0}-F(G_{0})\\pmod{x^{2t}}\\\\\nG&\\equiv G_{0}-\\cfrac{F(G_{0})}{F^{\\prime}(G_{0})}\\pmod{x^{2t}}\n\\end{aligned}$$\n\n然后我们就一直倍增，倍增到$t\\geqslant n$为止，此时$G_{0}$即为所求多项式。\n\n### [多项式求逆](https://www.luogu.org/problemnew/show/P4238)\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$F(x)\\times G(x)\\equiv 1\\pmod{x^{n}}$$\n\n假设我们已经求出了$G_{0}$使得\n\n$$F\\times G_{0}\\equiv 1\\pmod{x^{t}}$$\n\n我们希望找到一个$G$使得\n\n$$F\\times G\\equiv 1\\pmod{x^{2t}}$$\n\n据说能用牛顿迭代推，然而我不会（\n\n考虑正常一点的方式~~，虽然说还是倍增~~。\n\n$$\\begin{aligned}\nF\\times G-F\\times G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\n(G-G_{0})^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG^{2}-2GG_{0}+G_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\n\\end{aligned}$$\n\n两边同时乘$F$\n\n$$\\begin{aligned}\nG-2G_{0}+FG_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG&\\equiv 2G_{0}-FG_{0}^{2}\\pmod{x^{2t}}\n\\end{aligned}$$\n\n边界条件也很明显，就是当$t=1$时，$G[0]\\equiv F[0]^{-1}$。\n\n说起来是很简单对吧……然而我真正开始写了才发现自己就是个傻子啥也不会（\n\n关于代码……现在还不是时候（\n\n后面有一道超级综合题在等着我们（\n\n### [多项式对数函数](https://www.luogu.org/problemnew/show/P4725)\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G(x)\\equiv\\ln F(x)\\pmod{x^{n}}$$\n\n对上式两边求导\n\n$$G^{\\prime}\\equiv F^{\\prime}\\ln^{\\prime}F\\pmod{x^{n}}$$\n\n又因为\n\n$$\\ln^{\\prime}x=\\frac{1}{x}$$\n\n我们就得到\n\n$$G^{\\prime}\\equiv\\cfrac{F^{\\prime}}{F}\\pmod{x^{n}}$$\n\n求导+求逆+不定积分即可。\n\n### [多项式指数函数](https://www.luogu.org/problemnew/show/P4726)\n\n超级综合题来了。\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G(x)\\equiv e^{F(x)}\\pmod{x^{n}}$$\n\n首先\n\n$$\\ln G-F\\equiv 0\\pmod{x^{n}}$$\n\n我们把$F$看成是常数项，定义函数\n\n$$A(G)=\\ln G-F$$\n\n$$A^{\\prime}(G)=\\ln^{\\prime}G=\\cfrac{1}{G}$$\n\n套牛顿迭代\n\n$$\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}(1-\\ln G_{0}+F)\\pmod{x^{2t}}\n\\end{aligned}$$\n\n然后把以上提到的所有板子全都复制过来就行了（\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define re register\n#define maxn 524288\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n;\nint unit[2][24],rev[maxn+1],inv[maxn+1]={0,1},F[maxn+1],G[maxn+1],tmp1[maxn+1],tmp2[maxn+1],tmp3[maxn+1],tmp4[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(re int* F,re int n,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<(rev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0)))\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n\tre int v=cltpow(n,tp*(mod-2));\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*v%mod;\n}\n\ninline void Inv(re int* F,re int* G,re int n){\n\tG[0]=cltpow(F[0],mod-2);\n\tfor(re int i=1,j=4;i<n;i<<=1,j<<=1){\n\t\tfor(re int k=0;k<(i<<1);++k)\n\t\t\ttmp1[k]=F[k];\n\t\tNTT(tmp1,j,0);\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=(2-1LL*tmp1[k]*G[k]%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=(i<<1);k<j;++k)\n\t\t\tG[k]=0;\n\t\tfor(re int k=0;k<j;++k)\n\t\t\ttmp1[k]=0;\n\t}\n}\n\ninline void Ln(re int* F,re int* G,re int n){\n\tfor(re int i=1;i<n;++i)\n\t\tG[i-1]=1LL*F[i]*i%mod;\n\tInv(F,tmp2,n);\n\tre int N=1;\n\tfor(;N<n;N<<=1);\n\tN<<=1;\n\tNTT(G,N,0);\n\tNTT(tmp2,N,0);\n\tfor(re int i=0;i<N;++i)\n\t\tG[i]=1LL*G[i]*tmp2[i]%mod;\n\tNTT(G,N,1);\n\tfor(re int i=n-1;i>=1;--i)\n\t\tG[i]=1LL*G[i-1]*inv[i]%mod;\n\tG[0]=0;\n\tfor(re int i=n;i<N;++i)\n\t\tG[i]=0;\n\tfor(re int i=0;i<N;++i)\n\t\ttmp2[i]=0;\n}\n\ninline void Exp(re int* F,re int* G,re int n){\n\tG[0]=1;\n\tfor(re int i=1,j=2;i<(n<<1);i<<=1,j<<=1){\n\t\tLn(G,tmp3,i);\n\t\tfor(re int k=0;k<i;++k)\n\t\t\ttmp4[k]=F[k];\n\t\tNTT(tmp3,j,0);\n\t\tNTT(tmp4,j,0);\n\t\tNTT(G,j,0);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\tG[k]=((1LL-tmp3[k]+tmp4[k])%mod+mod)*G[k]%mod;\n\t\tNTT(G,j,1);\n\t\tfor(re int k=0;k<j;++k)\n\t\t\ttmp3[k]=tmp4[k]=0;\n\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tfor(re int i=2;i<=maxn;++i)\n\t\tinv[i]=(mod-1LL*mod/i*inv[mod%i]%mod)%mod;\n\tcltstream::read(n);\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::read(F[i]);\n\tExp(F,G,n);\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::write(G[i],i<n-1?32:-1);\n\tclop();\n\treturn 0;\n}\n```\n\n### 多项式开平方根\n\n给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得\n\n$$G^{2}(x)\\equiv F(x)\\pmod{x^{n}}$$\n\n牛顿迭代吼啊！\n\n$$A(G)=G^{2}-F$$\n\n$$A^{\\prime}(G)=2G$$\n\n$$\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}-\\cfrac{G_{0}^{2}-F}{2G_{0}}\\\\\n&\\equiv\\cfrac{G_{0}^{2}+F}{2G_{0}}\\\\\n&=\\cfrac{1}{2}(G_{0}+\\cfrac{F}{G_{0}})\\pmod{x^{2t}}\n\\end{aligned}$$\n\n~~复制粘贴吼啊！~~\n\n### 我刚才都学了些啥破玩意\n\n[一道例题](http://codeforces.com/contest/438/problem/E)。\n\n[Remote Judge](https://www.luogu.org/problemnew/show/CF438E)。\n\n这是读题前的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3e4d32b6f.gif)\n\n这是读题后的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3e4d34c6e.jpg)\n\n这是知道了这题正解是多项式开平方根后的我：\n\n![](https://i.loli.net/2018/12/21/5c1c3f327ea74.jpg)\n\n我……我怕不是学了个假的多项式哦（\n\n厚颜无耻地抄题解（\n\n首先我们搞出生成函数（然而并不是很懂）\n\n$$G(x)=\\sum\\limits_{i=0}^{m}G[i]x^{i}$$\n\n其中\n\n$$G[i]=[i\\in\\{c_{1},c_{2},\\cdots,c_{n}\\}]$$\n\n定义$F[i]$表示权值为$i$的神犇二叉树的数量，我们有\n\n$$F[0]=1$$\n\n$$F[x]=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]$$\n\n就是先枚举根节点权值（$i$），再枚举左子树权值（$j$），然后算出右子树权值（$x-i-j$）。\n\n然后是一些神仙操作\n\n$$\\begin{aligned}\nF[x]&=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]\\\\\n&=\\sum\\limits_{i=0}^{x}G[i]F^{2}[x-i]\\\\\n&=(GF^{2})[x]\n\\end{aligned}$$\n\n令人窒息（\n\n然后我们就有\n\n$$GF^{2}+1=F$$\n\n但是为什么要$+1$？因为$F(0)=F[0]=1$而$G(0)=G[0]=0$。\n\n于是解上面这个一元二次方程，我们得到\n\n$$F=\\cfrac{1\\pm\\sqrt{1-4G}}{2G}$$\n\n但是这个形式还是不是很好搞，我们将分子分母同时乘$(1\\mp\\sqrt{1-4G})$，然后化简一波\n\n$$F=\\cfrac{2}{1\\mp\\sqrt{1-4G}}$$\n\n如果根号前取负，代入$x=0$，分母就减成$0$了；而如果取正，我们就得到很健康的$\\cfrac{2}{2}=1$。综上所述\n\n$$F=\\cfrac{2}{1+\\sqrt{1-4G}}$$\n\n本来接下来应该有代码实现的，但是~~我拒绝~~咕咕咕。\n\n~~其实是调不出来了（~~\n","slug":"polynomial-learning-notes-pt2","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmt007lmku92vvm3iuy","content":"<p>以下，如果不特别声明，则所有运算在模$998244353$意义下进行。</p>\n<a id=\"more\"></a>\n<h3 id=\"接下来的前置知识\"><a href=\"#接下来的前置知识\" class=\"headerlink\" title=\"接下来的前置知识\"></a>接下来的前置知识</h3><h4 id=\"泰勒展开\"><a href=\"#泰勒展开\" class=\"headerlink\" title=\"泰勒展开\"></a>泰勒展开</h4><p>说实话，其实我也不是很能理解这个东西（</p>\n<p>我就凭感觉xjb扯了（</p>\n<p>现在我们有一个函数$f(x)$，我们想要用一个多项式$g(x)$来近似$x$在$x_{0}$附近时$f(x)$的取值。</p>\n<p>我们令</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=0}^{n}g[i](x-x_{0})^{i}</script><p>我们想要让$x\\rightarrow x_{0}$时，$g$在$x$处的各阶导数与$f$在$x_{0}$处的各阶导数分别相等。</p>\n<p>我们先考虑$0$阶，也就是原函数。因为$x\\rightarrow x_{0}$，所有包含$x-x_{0}$的项都可以忽略，因此我们有</p>\n<script type=\"math/tex; mode=display\">g[0]=f(x_{0})</script><p>然后是$1$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime}(x)=\\sum\\limits_{i=1}^{n}ig[i](x-x_{0})^{i-1}=g[1]=f^{\\prime}(x_{0})</script><p>再然后是$2$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime\\prime}(x)=\\sum\\limits_{i=2}^{n}i(i-1)g[i](x-x_{0})^{i-2}=2g[2]=f^{\\prime\\prime}(x_{0})</script><p>最后是$3$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime\\prime\\prime}(x)=\\sum\\limits_{i=3}^{n}i(i-1)(i-2)g[i](x-x_{0})^{i-3}=6g[3]=f^{\\prime\\prime\\prime}(x_{0})</script><p>我们发现$g[n]$有如下的规律</p>\n<script type=\"math/tex; mode=display\">g[n]=\\cfrac{f^{(n)}(x_{0})}{n!}</script><p>综上所述</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=0}^{n}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i</script><p><del>应该吧（</del></p>\n<h4 id=\"多项式牛顿迭代\"><a href=\"#多项式牛顿迭代\" class=\"headerlink\" title=\"多项式牛顿迭代\"></a>多项式牛顿迭代</h4><p>考虑一个$n-1$次多项式$F(x)$，我们希望求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">F(G(x))\\equiv 0\\pmod{x^{n}}</script><p>我们采用倍增的思想，假设我们已经求出了一个$G_{0}$使得</p>\n<script type=\"math/tex; mode=display\">F(G_{0})\\equiv 0\\pmod{x^{t}}</script><p>我们希望求出一个$G$使得</p>\n<script type=\"math/tex; mode=display\">F(G)\\equiv 0\\pmod{x^{2t}}</script><p>我们将$F$在$G_{0}$这里进行泰勒展开：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)&=F(G_{0})\\\\\n&+F^{\\prime}(G_{0})(G-G_{0})\\\\\n&+\\cfrac{F^{\\prime\\prime}(G_{0})}{2}(G-G_{0})^{2}\\\\\n&+\\cdots\\end{aligned}</script><p>注意到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)-F(G_{0})&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\n\\end{aligned}</script><p>也就是说$G-G_{0}$的最低非零系数的项数大于等于$t$，$(G-G_{0})^{k}$的最低非零系数的项数大于等于$kt$，从而我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)&\\equiv F(G_{0})+F^{\\prime}(G_{0})(G-G_{0})\\pmod{x^{2t}}\\\\\nF^{\\prime}(G_{0})G&\\equiv F^{\\prime}(G_{0})G_{0}-F(G_{0})\\pmod{x^{2t}}\\\\\nG&\\equiv G_{0}-\\cfrac{F(G_{0})}{F^{\\prime}(G_{0})}\\pmod{x^{2t}}\n\\end{aligned}</script><p>然后我们就一直倍增，倍增到$t\\geqslant n$为止，此时$G_{0}$即为所求多项式。</p>\n<h3 id=\"多项式求逆\"><a href=\"#多项式求逆\" class=\"headerlink\" title=\"多项式求逆\"></a><a href=\"https://www.luogu.org/problemnew/show/P4238\">多项式求逆</a></h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">F(x)\\times G(x)\\equiv 1\\pmod{x^{n}}</script><p>假设我们已经求出了$G_{0}$使得</p>\n<script type=\"math/tex; mode=display\">F\\times G_{0}\\equiv 1\\pmod{x^{t}}</script><p>我们希望找到一个$G$使得</p>\n<script type=\"math/tex; mode=display\">F\\times G\\equiv 1\\pmod{x^{2t}}</script><p>据说能用牛顿迭代推，然而我不会（</p>\n<p>考虑正常一点的方式<del>，虽然说还是倍增</del>。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF\\times G-F\\times G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\n(G-G_{0})^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG^{2}-2GG_{0}+G_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\n\\end{aligned}</script><p>两边同时乘$F$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG-2G_{0}+FG_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG&\\equiv 2G_{0}-FG_{0}^{2}\\pmod{x^{2t}}\n\\end{aligned}</script><p>边界条件也很明显，就是当$t=1$时，$G[0]\\equiv F[0]^{-1}$。</p>\n<p>说起来是很简单对吧……然而我真正开始写了才发现自己就是个傻子啥也不会（</p>\n<p>关于代码……现在还不是时候（</p>\n<p>后面有一道超级综合题在等着我们（</p>\n<h3 id=\"多项式对数函数\"><a href=\"#多项式对数函数\" class=\"headerlink\" title=\"多项式对数函数\"></a><a href=\"https://www.luogu.org/problemnew/show/P4725\">多项式对数函数</a></h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G(x)\\equiv\\ln F(x)\\pmod{x^{n}}</script><p>对上式两边求导</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}\\equiv F^{\\prime}\\ln^{\\prime}F\\pmod{x^{n}}</script><p>又因为</p>\n<script type=\"math/tex; mode=display\">\\ln^{\\prime}x=\\frac{1}{x}</script><p>我们就得到</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}\\equiv\\cfrac{F^{\\prime}}{F}\\pmod{x^{n}}</script><p>求导+求逆+不定积分即可。</p>\n<h3 id=\"多项式指数函数\"><a href=\"#多项式指数函数\" class=\"headerlink\" title=\"多项式指数函数\"></a><a href=\"https://www.luogu.org/problemnew/show/P4726\">多项式指数函数</a></h3><p>超级综合题来了。</p>\n<p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G(x)\\equiv e^{F(x)}\\pmod{x^{n}}</script><p>首先</p>\n<script type=\"math/tex; mode=display\">\\ln G-F\\equiv 0\\pmod{x^{n}}</script><p>我们把$F$看成是常数项，定义函数</p>\n<script type=\"math/tex; mode=display\">A(G)=\\ln G-F</script><script type=\"math/tex; mode=display\">A^{\\prime}(G)=\\ln^{\\prime}G=\\cfrac{1}{G}</script><p>套牛顿迭代</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}(1-\\ln G_{0}+F)\\pmod{x^{2t}}\n\\end{aligned}</script><p>然后把以上提到的所有板子全都复制过来就行了（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>],tmp1[maxn+<span class=\"number\">1</span>],tmp2[maxn+<span class=\"number\">1</span>],tmp3[maxn+<span class=\"number\">1</span>],tmp4[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp1[k]=F[k];</span><br><span class=\"line\">        NTT(tmp1,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp1[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            tmp1[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i<span class=\"number\">-1</span>]=<span class=\"number\">1L</span>L*F[i]*i%mod;</span><br><span class=\"line\">    Inv(F,tmp2,n);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(tmp2,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*tmp2[i]%mod;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        tmp2[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">2</span>;i&lt;(n&lt;&lt;<span class=\"number\">1</span>);i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        Ln(G,tmp3,i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;i;++k)</span><br><span class=\"line\">            tmp4[k]=F[k];</span><br><span class=\"line\">        NTT(tmp3,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(tmp4,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=((<span class=\"number\">1L</span>L-tmp3[k]+tmp4[k])%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            tmp3[k]=tmp4[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">    Exp(F,G,n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::write(G[i],i&lt;n<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">-1</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多项式开平方根\"><a href=\"#多项式开平方根\" class=\"headerlink\" title=\"多项式开平方根\"></a>多项式开平方根</h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G^{2}(x)\\equiv F(x)\\pmod{x^{n}}</script><p>牛顿迭代吼啊！</p>\n<script type=\"math/tex; mode=display\">A(G)=G^{2}-F</script><script type=\"math/tex; mode=display\">A^{\\prime}(G)=2G</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}-\\cfrac{G_{0}^{2}-F}{2G_{0}}\\\\\n&\\equiv\\cfrac{G_{0}^{2}+F}{2G_{0}}\\\\\n&=\\cfrac{1}{2}(G_{0}+\\cfrac{F}{G_{0}})\\pmod{x^{2t}}\n\\end{aligned}</script><p><del>复制粘贴吼啊！</del></p>\n<h3 id=\"我刚才都学了些啥破玩意\"><a href=\"#我刚才都学了些啥破玩意\" class=\"headerlink\" title=\"我刚才都学了些啥破玩意\"></a>我刚才都学了些啥破玩意</h3><p><a href=\"http://codeforces.com/contest/438/problem/E\">一道例题</a>。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/CF438E\">Remote Judge</a>。</p>\n<p>这是读题前的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3e4d32b6f.gif\" alt=\"\"></p>\n<p>这是读题后的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3e4d34c6e.jpg\" alt=\"\"></p>\n<p>这是知道了这题正解是多项式开平方根后的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3f327ea74.jpg\" alt=\"\"></p>\n<p>我……我怕不是学了个假的多项式哦（</p>\n<p>厚颜无耻地抄题解（</p>\n<p>首先我们搞出生成函数（然而并不是很懂）</p>\n<script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{m}G[i]x^{i}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">G[i]=[i\\in\\{c_{1},c_{2},\\cdots,c_{n}\\}]</script><p>定义$F[i]$表示权值为$i$的神犇二叉树的数量，我们有</p>\n<script type=\"math/tex; mode=display\">F[0]=1</script><script type=\"math/tex; mode=display\">F[x]=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]</script><p>就是先枚举根节点权值（$i$），再枚举左子树权值（$j$），然后算出右子树权值（$x-i-j$）。</p>\n<p>然后是一些神仙操作</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF[x]&=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]\\\\\n&=\\sum\\limits_{i=0}^{x}G[i]F^{2}[x-i]\\\\\n&=(GF^{2})[x]\n\\end{aligned}</script><p>令人窒息（</p>\n<p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">GF^{2}+1=F</script><p>但是为什么要$+1$？因为$F(0)=F[0]=1$而$G(0)=G[0]=0$。</p>\n<p>于是解上面这个一元二次方程，我们得到</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{1\\pm\\sqrt{1-4G}}{2G}</script><p>但是这个形式还是不是很好搞，我们将分子分母同时乘$(1\\mp\\sqrt{1-4G})$，然后化简一波</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{2}{1\\mp\\sqrt{1-4G}}</script><p>如果根号前取负，代入$x=0$，分母就减成$0$了；而如果取正，我们就得到很健康的$\\cfrac{2}{2}=1$。综上所述</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{2}{1+\\sqrt{1-4G}}</script><p>本来接下来应该有代码实现的，但是<del>我拒绝</del>咕咕咕。</p>\n<p><del>其实是调不出来了（</del></p>\n","site":{"data":{}},"excerpt":"<p>以下，如果不特别声明，则所有运算在模$998244353$意义下进行。</p>","more":"<h3 id=\"接下来的前置知识\"><a href=\"#接下来的前置知识\" class=\"headerlink\" title=\"接下来的前置知识\"></a>接下来的前置知识</h3><h4 id=\"泰勒展开\"><a href=\"#泰勒展开\" class=\"headerlink\" title=\"泰勒展开\"></a>泰勒展开</h4><p>说实话，其实我也不是很能理解这个东西（</p>\n<p>我就凭感觉xjb扯了（</p>\n<p>现在我们有一个函数$f(x)$，我们想要用一个多项式$g(x)$来近似$x$在$x_{0}$附近时$f(x)$的取值。</p>\n<p>我们令</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=0}^{n}g[i](x-x_{0})^{i}</script><p>我们想要让$x\\rightarrow x_{0}$时，$g$在$x$处的各阶导数与$f$在$x_{0}$处的各阶导数分别相等。</p>\n<p>我们先考虑$0$阶，也就是原函数。因为$x\\rightarrow x_{0}$，所有包含$x-x_{0}$的项都可以忽略，因此我们有</p>\n<script type=\"math/tex; mode=display\">g[0]=f(x_{0})</script><p>然后是$1$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime}(x)=\\sum\\limits_{i=1}^{n}ig[i](x-x_{0})^{i-1}=g[1]=f^{\\prime}(x_{0})</script><p>再然后是$2$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime\\prime}(x)=\\sum\\limits_{i=2}^{n}i(i-1)g[i](x-x_{0})^{i-2}=2g[2]=f^{\\prime\\prime}(x_{0})</script><p>最后是$3$阶</p>\n<script type=\"math/tex; mode=display\">g^{\\prime\\prime\\prime}(x)=\\sum\\limits_{i=3}^{n}i(i-1)(i-2)g[i](x-x_{0})^{i-3}=6g[3]=f^{\\prime\\prime\\prime}(x_{0})</script><p>我们发现$g[n]$有如下的规律</p>\n<script type=\"math/tex; mode=display\">g[n]=\\cfrac{f^{(n)}(x_{0})}{n!}</script><p>综上所述</p>\n<script type=\"math/tex; mode=display\">g(x)=\\sum\\limits_{i=0}^{n}\\cfrac{f^{(i)}(x_{0})}{i!}(x-x_{0})^i</script><p><del>应该吧（</del></p>\n<h4 id=\"多项式牛顿迭代\"><a href=\"#多项式牛顿迭代\" class=\"headerlink\" title=\"多项式牛顿迭代\"></a>多项式牛顿迭代</h4><p>考虑一个$n-1$次多项式$F(x)$，我们希望求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">F(G(x))\\equiv 0\\pmod{x^{n}}</script><p>我们采用倍增的思想，假设我们已经求出了一个$G_{0}$使得</p>\n<script type=\"math/tex; mode=display\">F(G_{0})\\equiv 0\\pmod{x^{t}}</script><p>我们希望求出一个$G$使得</p>\n<script type=\"math/tex; mode=display\">F(G)\\equiv 0\\pmod{x^{2t}}</script><p>我们将$F$在$G_{0}$这里进行泰勒展开：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)&=F(G_{0})\\\\\n&+F^{\\prime}(G_{0})(G-G_{0})\\\\\n&+\\cfrac{F^{\\prime\\prime}(G_{0})}{2}(G-G_{0})^{2}\\\\\n&+\\cdots\\end{aligned}</script><p>注意到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)-F(G_{0})&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\n\\end{aligned}</script><p>也就是说$G-G_{0}$的最低非零系数的项数大于等于$t$，$(G-G_{0})^{k}$的最低非零系数的项数大于等于$kt$，从而我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(G)&\\equiv F(G_{0})+F^{\\prime}(G_{0})(G-G_{0})\\pmod{x^{2t}}\\\\\nF^{\\prime}(G_{0})G&\\equiv F^{\\prime}(G_{0})G_{0}-F(G_{0})\\pmod{x^{2t}}\\\\\nG&\\equiv G_{0}-\\cfrac{F(G_{0})}{F^{\\prime}(G_{0})}\\pmod{x^{2t}}\n\\end{aligned}</script><p>然后我们就一直倍增，倍增到$t\\geqslant n$为止，此时$G_{0}$即为所求多项式。</p>\n<h3 id=\"多项式求逆\"><a href=\"#多项式求逆\" class=\"headerlink\" title=\"多项式求逆\"></a><a href=\"https://www.luogu.org/problemnew/show/P4238\">多项式求逆</a></h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">F(x)\\times G(x)\\equiv 1\\pmod{x^{n}}</script><p>假设我们已经求出了$G_{0}$使得</p>\n<script type=\"math/tex; mode=display\">F\\times G_{0}\\equiv 1\\pmod{x^{t}}</script><p>我们希望找到一个$G$使得</p>\n<script type=\"math/tex; mode=display\">F\\times G\\equiv 1\\pmod{x^{2t}}</script><p>据说能用牛顿迭代推，然而我不会（</p>\n<p>考虑正常一点的方式<del>，虽然说还是倍增</del>。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF\\times G-F\\times G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\nG-G_{0}&\\equiv 0\\pmod{x^{t}}\\\\\n(G-G_{0})^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG^{2}-2GG_{0}+G_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\n\\end{aligned}</script><p>两边同时乘$F$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG-2G_{0}+FG_{0}^{2}&\\equiv 0\\pmod{x^{2t}}\\\\\nG&\\equiv 2G_{0}-FG_{0}^{2}\\pmod{x^{2t}}\n\\end{aligned}</script><p>边界条件也很明显，就是当$t=1$时，$G[0]\\equiv F[0]^{-1}$。</p>\n<p>说起来是很简单对吧……然而我真正开始写了才发现自己就是个傻子啥也不会（</p>\n<p>关于代码……现在还不是时候（</p>\n<p>后面有一道超级综合题在等着我们（</p>\n<h3 id=\"多项式对数函数\"><a href=\"#多项式对数函数\" class=\"headerlink\" title=\"多项式对数函数\"></a><a href=\"https://www.luogu.org/problemnew/show/P4725\">多项式对数函数</a></h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G(x)\\equiv\\ln F(x)\\pmod{x^{n}}</script><p>对上式两边求导</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}\\equiv F^{\\prime}\\ln^{\\prime}F\\pmod{x^{n}}</script><p>又因为</p>\n<script type=\"math/tex; mode=display\">\\ln^{\\prime}x=\\frac{1}{x}</script><p>我们就得到</p>\n<script type=\"math/tex; mode=display\">G^{\\prime}\\equiv\\cfrac{F^{\\prime}}{F}\\pmod{x^{n}}</script><p>求导+求逆+不定积分即可。</p>\n<h3 id=\"多项式指数函数\"><a href=\"#多项式指数函数\" class=\"headerlink\" title=\"多项式指数函数\"></a><a href=\"https://www.luogu.org/problemnew/show/P4726\">多项式指数函数</a></h3><p>超级综合题来了。</p>\n<p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G(x)\\equiv e^{F(x)}\\pmod{x^{n}}</script><p>首先</p>\n<script type=\"math/tex; mode=display\">\\ln G-F\\equiv 0\\pmod{x^{n}}</script><p>我们把$F$看成是常数项，定义函数</p>\n<script type=\"math/tex; mode=display\">A(G)=\\ln G-F</script><script type=\"math/tex; mode=display\">A^{\\prime}(G)=\\ln^{\\prime}G=\\cfrac{1}{G}</script><p>套牛顿迭代</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}(1-\\ln G_{0}+F)\\pmod{x^{2t}}\n\\end{aligned}</script><p>然后把以上提到的所有板子全都复制过来就行了（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 524288</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],inv[maxn+<span class=\"number\">1</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>],tmp1[maxn+<span class=\"number\">1</span>],tmp2[maxn+<span class=\"number\">1</span>],tmp3[maxn+<span class=\"number\">1</span>],tmp4[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;(rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>)))</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> v=cltpow(n,tp*(mod<span class=\"number\">-2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*v%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">4</span>;i&lt;n;i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;(i&lt;&lt;<span class=\"number\">1</span>);++k)</span><br><span class=\"line\">            tmp1[k]=F[k];</span><br><span class=\"line\">        NTT(tmp1,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=(<span class=\"number\">2</span><span class=\"number\">-1L</span>L*tmp1[k]*G[k]%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=(i&lt;&lt;<span class=\"number\">1</span>);k&lt;j;++k)</span><br><span class=\"line\">            G[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            tmp1[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i<span class=\"number\">-1</span>]=<span class=\"number\">1L</span>L*F[i]*i%mod;</span><br><span class=\"line\">    Inv(F,tmp2,n);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> N=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;N&lt;n;N&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    N&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(tmp2,N,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i]*tmp2[i]%mod;</span><br><span class=\"line\">    NTT(G,N,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">1</span>;--i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1L</span>L*G[i<span class=\"number\">-1</span>]*inv[i]%mod;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=n;i&lt;N;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        tmp2[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    G[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">2</span>;i&lt;(n&lt;&lt;<span class=\"number\">1</span>);i&lt;&lt;=<span class=\"number\">1</span>,j&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        Ln(G,tmp3,i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;i;++k)</span><br><span class=\"line\">            tmp4[k]=F[k];</span><br><span class=\"line\">        NTT(tmp3,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(tmp4,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            G[k]=((<span class=\"number\">1L</span>L-tmp3[k]+tmp4[k])%mod+mod)*G[k]%mod;</span><br><span class=\"line\">        NTT(G,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;j;++k)</span><br><span class=\"line\">            tmp3[k]=tmp4[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)</span><br><span class=\"line\">        inv[i]=(mod<span class=\"number\">-1L</span>L*mod/i*inv[mod%i]%mod)%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">    Exp(F,G,n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::write(G[i],i&lt;n<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">-1</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多项式开平方根\"><a href=\"#多项式开平方根\" class=\"headerlink\" title=\"多项式开平方根\"></a>多项式开平方根</h3><p>给你一个$n-1$次多项式$F(x)$，让你求出一个多项式$G(x)$，使得</p>\n<script type=\"math/tex; mode=display\">G^{2}(x)\\equiv F(x)\\pmod{x^{n}}</script><p>牛顿迭代吼啊！</p>\n<script type=\"math/tex; mode=display\">A(G)=G^{2}-F</script><script type=\"math/tex; mode=display\">A^{\\prime}(G)=2G</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nG&\\equiv G_{0}-\\cfrac{A(G_{0})}{A{^\\prime}(G_{0})}\\\\\n&\\equiv G_{0}-\\cfrac{G_{0}^{2}-F}{2G_{0}}\\\\\n&\\equiv\\cfrac{G_{0}^{2}+F}{2G_{0}}\\\\\n&=\\cfrac{1}{2}(G_{0}+\\cfrac{F}{G_{0}})\\pmod{x^{2t}}\n\\end{aligned}</script><p><del>复制粘贴吼啊！</del></p>\n<h3 id=\"我刚才都学了些啥破玩意\"><a href=\"#我刚才都学了些啥破玩意\" class=\"headerlink\" title=\"我刚才都学了些啥破玩意\"></a>我刚才都学了些啥破玩意</h3><p><a href=\"http://codeforces.com/contest/438/problem/E\">一道例题</a>。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/CF438E\">Remote Judge</a>。</p>\n<p>这是读题前的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3e4d32b6f.gif\" alt=\"\"></p>\n<p>这是读题后的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3e4d34c6e.jpg\" alt=\"\"></p>\n<p>这是知道了这题正解是多项式开平方根后的我：</p>\n<p><img src=\"https://i.loli.net/2018/12/21/5c1c3f327ea74.jpg\" alt=\"\"></p>\n<p>我……我怕不是学了个假的多项式哦（</p>\n<p>厚颜无耻地抄题解（</p>\n<p>首先我们搞出生成函数（然而并不是很懂）</p>\n<script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{m}G[i]x^{i}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">G[i]=[i\\in\\{c_{1},c_{2},\\cdots,c_{n}\\}]</script><p>定义$F[i]$表示权值为$i$的神犇二叉树的数量，我们有</p>\n<script type=\"math/tex; mode=display\">F[0]=1</script><script type=\"math/tex; mode=display\">F[x]=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]</script><p>就是先枚举根节点权值（$i$），再枚举左子树权值（$j$），然后算出右子树权值（$x-i-j$）。</p>\n<p>然后是一些神仙操作</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF[x]&=\\sum\\limits_{i=0}^{x}G[i]\\sum\\limits_{j=0}^{x-i}F[j]F[x-i-j]\\\\\n&=\\sum\\limits_{i=0}^{x}G[i]F^{2}[x-i]\\\\\n&=(GF^{2})[x]\n\\end{aligned}</script><p>令人窒息（</p>\n<p>然后我们就有</p>\n<script type=\"math/tex; mode=display\">GF^{2}+1=F</script><p>但是为什么要$+1$？因为$F(0)=F[0]=1$而$G(0)=G[0]=0$。</p>\n<p>于是解上面这个一元二次方程，我们得到</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{1\\pm\\sqrt{1-4G}}{2G}</script><p>但是这个形式还是不是很好搞，我们将分子分母同时乘$(1\\mp\\sqrt{1-4G})$，然后化简一波</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{2}{1\\mp\\sqrt{1-4G}}</script><p>如果根号前取负，代入$x=0$，分母就减成$0$了；而如果取正，我们就得到很健康的$\\cfrac{2}{2}=1$。综上所述</p>\n<script type=\"math/tex; mode=display\">F=\\cfrac{2}{1+\\sqrt{1-4G}}</script><p>本来接下来应该有代码实现的，但是<del>我拒绝</del>咕咕咕。</p>\n<p><del>其实是调不出来了（</del></p>"},{"mathjax":true,"date":"2018-12-26T12:17:22.000Z","title":"题目组试题选讲","password":"FLS&&8]T:$f3[yrtt!osE+K&3\"`?IlA{","abstract":"该文章已被加密","message":"输入密码继续阅读","_content":"先宣传一波[团队](https://www.luogu.org/team/show?teamid=11367)。\n\n<!-- more -->\n\n### [「T47720」孤立元](https://www.luogu.org/problemnew/show/T47720)\n\n[已有题解](/luogu-t47720-solution/)。\n\n### [「T53537」营救元首](https://www.luogu.org/problemnew/show/T53537)\n\n能看出[五彩斑斓的世界](https://www.luogu.org/problemnew/show/P4117)来吗？\n\n没错就是JF切了这道题以后~~根号上脑~~搞了这么一个东西。\n\n不过这道题相对之下有点麻烦的，因为你需要维护两个tag，一个处理减，一个处理推平。而且求前驱的时候不能值域分块，然后就只能套`set`。\n\n详细点说的话，就是每个块维护最大值和最小值。操作$1$可以选择枚举所有大于$k$的数，然后减去$k$；也可以枚举所有小于等于$k$的数，加上$k$之后整个块打上一个减$k$的标记，标记这个块内的所有数都被减去了$k$。哪个运算量少就选哪个。\n\n操作$2$就先查询最小值~~（这个都会吧）~~，然后散块直接改，整块打个标记就好，标记这个块内的所有数都被改成了另一个数。\n\n操作$3$就不必多说了，散块暴力找，整块`lower_bound`。\n\n不过说实话，写起来挺麻烦的。也懒得看以前我写的代码了，直接贴出来吧。\n\n```cpp\n#include<cstdio>\n#include<set>\n#define re register\n#define maxn 100000\n#define maxm 100000\n#define maxblock 320\n#define maxval 200000\n#define mod 998244353\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n\nnamespace cltstream{\n    #define size 1048576\n    char cltin[size+1],*ih=cltin,*it=cltin;\n    inline char gc(){\n        #ifdef ONLINE_JUDGE\n            if(ih==it){\n                it=(ih=cltin)+fread(cltin,1,size,stdin);\n                if(ih==it)\n                    return EOF;\n            }\n            return *ih++;\n        #else\n            return getchar();\n        #endif\n    }\n\n    char cltout[size+1],*oh=cltout;\n    int outcnt=0;\n    inline void pc(char c){\n        if(c==-1)\n            fwrite(cltout,1,outcnt,stdout);\n        else{\n            if(outcnt==size){\n                fwrite(cltout,1,size,stdout);\n                oh=cltout;\n                outcnt=0;\n            }\n            *oh++=c;\n            ++outcnt;\n        }\n    }\n    #undef size\n\n    template <typename _tp>\n    inline void read(_tp& x){\n        int sn=1;\n        char c=gc();\n        for(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n        if(c==45&&c!=EOF)\n            sn=-1,c=gc();\n        for(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n        x*=sn;\n    }\n\n    template <typename _tp>\n    inline void write(_tp x,char text=' '){\n        if(x<0)\n            pc(45),x=-x;\n        if(!x)\n            pc(48);\n        else{\n            int digit[22];\n            for(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n            for(;digit[0];pc(digit[digit[0]--]^48));\n        }\n        pc(text);\n    }\n}\n\nint n,m,size;\nint a[maxn+1],id[maxn+1];\nint val[maxn+1],f[maxn+1];\nint pos[maxblock+1][maxval+1];\nint maxv[maxblock+1],minv[maxblock+1],tag[maxblock+1],sam[maxblock+1];\nstd::set<int> s[maxblock+1];\n\nint find(int x){\n    return f[x]==x?x:f[x]=find(f[x]);\n}\n\ninline void init(int x){\n    maxv[x]=-2e9;\n    minv[x]=2e9;\n    for(re int i=(x-1)*size+1;i<=x*size&&i<=n;++i)\n        if(!pos[x][a[i]]){\n            val[i]=a[i];\n            f[i]=i;\n            pos[x][a[i]]=i;\n            maxv[x]=max(maxv[x],a[i]);\n            minv[x]=min(minv[x],a[i]);\n            s[x].insert(a[i]);\n        }\n        else\n            f[i]=pos[x][a[i]];\n}\n\ninline void destory(int x){\n    for(re int i=(x-1)*size+1;i<=x*size&&i<=n;++i){\n        a[i]=sam[x]?sam[x]:val[find(i)]+tag[x];\n        pos[x][val[i]]=0;\n    }\n    tag[x]=sam[x]=0;\n    s[x].clear();\n}\n\ninline void solve(int x,int y){\n    if(sam[x]){\n        if(sam[x]>y)\n            sam[x]-=y;\n        return;\n    }\n    if(maxv[x]-(y-tag[x])<=(y-tag[x])-minv[x]+1){\n        for(re int i=(y-tag[x])+1;i<=maxv[x];++i)\n            if(pos[x][i]){\n                s[x].erase(i);\n                if(!pos[x][i-y]){\n                    val[pos[x][i]]-=y;\n                    pos[x][i-y]=pos[x][i];\n                    s[x].insert(i-y);\n                }\n                else\n                    if(pos[x][i]>pos[x][i-y])\n                        f[pos[x][i]]=pos[x][i-y];\n                    else{\n                        f[pos[x][i-y]]=pos[x][i];\n                        pos[x][i-y]=pos[x][i];\n                        val[pos[x][i-y]]-=y;\n                    }\n                pos[x][i]=0;\n            }\n    }\n    else{\n        for(re int i=(y-tag[x]);i>=minv[x];--i)\n            if(pos[x][i]){\n                s[x].erase(i);\n                if(!pos[x][i+y]){\n                    val[pos[x][i]]+=y;\n                    pos[x][i+y]=pos[x][i];\n                    s[x].insert(i+y);\n                }\n                else\n                    if(pos[x][i]>pos[x][i+y])\n                        f[pos[x][i]]=pos[x][i+y];\n                    else{\n                        f[pos[x][i+y]]=pos[x][i];\n                        pos[x][i+y]=pos[x][i];\n                        val[pos[x][i+y]]+=y;\n                    }\n                pos[x][i]=0;\n            }\n        tag[x]-=y;\n    }\n    minv[x]=*s[x].begin();\n    std::set<int>::iterator it=s[x].end();\n    --it;\n    maxv[x]=*it;\n}\n\ninline void IntervalCut(int l,int r,int x){\n    int L=id[l],R=id[r];\n    destory(L);\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        if(a[i]>x)\n            a[i]-=x;\n    init(L);\n    for(re int i=L+1;i<=R-1;++i)\n        solve(i,x);\n    if(L<R){\n        destory(R);\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            if(a[i]>x)\n                a[i]-=x;\n        init(R);\n    }\n}\n\ninline void IntervalAssignToMin(int l,int r){\n    int L=id[l],R=id[r],res=2e9;\n    destory(L);\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        res=min(res,a[i]);\n    for(re int i=L+1;i<=R-1;++i)\n        res=min(res,sam[i]?sam[i]:minv[i]+tag[i]);\n    if(L<R){\n        destory(R);\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            res=min(res,a[i]);\n    }\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        a[i]=res;\n    init(L);\n    for(re int i=L+1;i<=R-1;++i)\n        sam[i]=res;\n    if(L<R){\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            a[i]=res;\n        init(R);\n    }\n}\n\ninline void IntervalPre(int l,int r,int x){\n    int L=id[l],R=id[r],p=0,res=-2e9;\n    if(sam[L]){\n        if(sam[L]<x&&sam[L]>res){\n            p=l;\n            res=sam[L];\n        }\n    }\n    else\n        for(re int i=l;i<=L*size&&i<=r;++i)\n            if(val[find(i)]+tag[L]<x&&val[find(i)]+tag[L]>res){\n                p=i;\n                res=val[f[i]]+tag[L];\n            }\n    for(re int i=L+1;i<=R-1;++i)\n        if(sam[i]){\n            if(sam[i]<x&&sam[i]>res){\n                p=(i-1)*size+1;\n                res=sam[i];\n            }\n        }\n        else{\n            std::set<int>::iterator it=s[i].lower_bound(x-tag[i]);\n            if(it!=s[i].begin()){\n                --it;\n                if(*it+tag[i]<x&&*it+tag[i]>res){\n                    p=pos[i][*it];\n                    res=*it+tag[i];\n                }\n            }\n        }\n    if(L<R){\n        if(sam[R]){\n            if(sam[R]<x&&sam[R]>res){\n                p=(R-1)*size+1;\n                res=sam[R];\n            }\n        }\n        else\n            for(re int i=(R-1)*size+1;i<=r;++i)\n                if(val[find(i)]+tag[R]<x&&val[find(i)]+tag[R]>res){\n                    p=i;\n                    res=val[f[i]]+tag[R];\n                }\n    }\n    if(p)\n        cltstream::write(p,'\\n');\n    else{\n        cltstream::pc('G');\n        cltstream::pc('R');\n        cltstream::pc('E');\n        cltstream::pc('A');\n        cltstream::pc('T');\n        cltstream::pc(10);\n    }\n}\n\nint main(){\n    cltstream::read(n);\n    cltstream::read(m);\n    for(re int i=1;i<=n;++i)\n        cltstream::read(a[i]);\n    for(;(size+1)*(size+1)<=n;++size);\n    for(re int i=1;(i-1)*size+1<=n;++i){\n        init(i);\n        for(re int j=(i-1)*size+1;j<=i*size&&j<=n;++j)\n            id[j]=i;\n    }\n    for(re int i=1;i<=m;++i){\n        int opt,l,r,x;\n        cltstream::read(opt);\n        cltstream::read(l);\n        cltstream::read(r);\n        switch(opt){\n            case 1:\n                cltstream::read(x);\n                IntervalCut(l,r,x);\n                break;\n            case 2:\n                IntervalAssignToMin(l,r);\n                break;\n            case 3:\n                cltstream::read(x);\n                IntervalPre(l,r,x);\n                break;\n        }\n    }\n    for(re int i=1;i<=n;++i)\n        (a[0]+=sam[id[i]]?sam[id[i]]:val[find(i)]+tag[id[i]])%=mod;\n    cltstream::write(a[0],'\\n');\n    cltstream::pc(-1);\n    return 0;\n}\n```\n\n### [「T53987」ZJF日记](https://www.luogu.org/problemnew/show/T53987)\n\n最短路计数+次短路求解。\n\n其实这才应该是签到题啊，然而当初却被排到了T3。不是很懂（\n\n不过话说回来其实题面写的很好啊。\n\nsto __多弗桃__ orz\n\n#### 关于SPFA\n\n他死了。\n\n### [「T56269」选择性失忆](https://www.luogu.org/problemnew/show/T56269)\n\nsto __SnoWY__ orz\n\n才刚学了几个月就出这种神仙题，把我这种从初中就开始学OI的菜鸡吊起来打（\n\n首先我们看到要最小化第$k+1$大的边权。二分？那么问题就转化成了找一条路径，使得其中恰有$k$条边的边权小于某个给定数值。\n\nemmmmmm……这是什么鬼（\n\n总之二分大概不大可行。然后我觉得我扯不下去了，直接讲正解吧（\n\n构造一张$k+1$层的分层图。如果说我们在某一层有一条边从$u$到$v$，边权是$w$，我们就从这一层的$u$，向下一层的$v$连一条$0$权边。然后从最上层的$1$开始跑最短路，路径长度定义为边权最大值，跑到最下层的$n$。然后`dis[最下层的n]`就是答案。\n\n那么为什么这样做可行？假设说我们现在跑出了最上层的$n$的`dis`。现在我们将$n$下压一层，我们肯定会在之前边权最大的那一条边处跨越至下层。这样这条边的边权减为$0$，相当于是说被过滤掉了。不难想象出，如果我们下压$k$层到最底层，边权前$k$大的边就都被过滤掉了，这时路径上的边权最大值就是一开始的$k+1$大。\n\n相信各位应该都会了，我就不贴代码了。\n\n然后还是要%SnoWY。\n\n[](https://i.loli.net/2018/12/26/5c237e1c077b4.jpg)\n\n### [「T62117」复习](https://www.luogu.org/problemnew/show/T62117)\n\n这是一道被线段树踩爆了的分块题。\n\n每个块内维护总和、正数数量和绝对值最小的负数的绝对值。\n\n每次加的时候，散块还是暴力重构，整块就判断一下绝对值最小的负数加完会不会变号，会就重构。\n\n因为保证$k$非负，每个数最多变号一次，也就是说最多重构$n$次，时间复杂度$O(n\\sqrt{n})$。\n\n代码太丢人了不贴了。\n\n### [「T64137」「魔板」线段树 2](https://www.luogu.org/problemnew/show/T64137)\n\n这是一道~~丧心病狂的~~卡时空块状分块题。\n\n关于块状分块请看[这里](/block-decomposition/)。\n\n反正也没啥可说的，就是写起来麻烦，我就简单讲一下这题背后的故事吧。\n\n首先一开始我们定的时空限制是$1\\text{s}/4\\text{MB}$。然而还是放跑了空间复杂度足够优秀的线段树。然后一气之下删了`fread`，把空间限制改到$2\\text{MB}$，并把时间限制改到$850\\text{ms}$。然后有神仙通过将线段树的多个叶子结点合并起来的方法又水过去了。最后空间直接卡到了现在的$1.5\\text{MB}$。然后最后两个点询问加到$2\\times 10^{6}$，并塞入大量单点操作，才算把该卡的都卡掉了。\n\n顺便第一次写计分脚本祭。\n\n### [「T65749」斩整「土偶剪定」](https://www.luogu.org/problemnew/show/T65749)\n\n首先高维这种东西我们肯定不能硬想。\n\n首先假设$a_{i}\\gt 1$。如果说一个小土块恰有$k$面有颜色，这也就意味着，它恰有$k$个维度的坐标是$1$或$a_{i}$，剩下$n-k$个维度除了$1$和$a_{i}$以外随便选。那么我们的总方案数就是\n\n$$2^{k}\\sum_{\\mid S\\mid=n-k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)$$\n\n下文为了方便，我们定义$Q_{k}$为\n\n$$\\sum_{\\mid S\\mid=k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)$$\n\n也就是从所有的$a_{i}-2$中选$k$个相乘的所有方案的结果的总和。同时$Q_{0}=1$。\n\n没错就是[这道题](https://www.luogu.org/problemnew/show/P4247)。\n\n现在我们想要对于$[0,n]$内的每一个$i$求出$Q_{i}$。在上面那道题中我们采用的办法是分治。具体来说就是，如果说我们要在$[l,r]$内选$k$个数相乘，我们可以先在$[l,mid]$内选$x$个数相乘，再在$[mid+1,r]$内选$k-x$个数相乘，然后把结果相乘并累加。\n\n形式化地讲的话\n\n$$Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}$$\n\n然后我们直接$O(n^{2})$暴力算就好。但是我们发现如果说我们直接分治，我们会得到这么一个关于时间复杂度的递推式\n\n$$T(n)=2T(\\cfrac{n}{2})+O(n^{2})$$\n\n根据主定理，我们有$T(n)=O(n^{2})$。\n\n其实我一开始以为它是$O(n^{2}\\log n)$的，仔细一算才发现不对（\n\n不过我的标算并不是这么写的。我的做法是从头扫到尾，将前$k$个与第$k+1$个合并。这样的时间复杂度是\n\n$$T(n)=T(n-1)+O(n)$$\n\n很明显也是$O(n^{2})$的。不过好像常数相对较大？\n\n~~然而对比了一下发现常数小了不少（~~\n\n那么问题来了，如果说存在$a_{i}=1$怎么办？\n\n存在$a_{i}=1$就说明，这一维的坐标一定会同时碰到两个边界。那么我们就可以扔掉这个$1$，把它当成$n-1$维处理，然后在最左边添上两个$0$就行了。\n\n同理，如果存在$m$个$a_{i}=1$，我们就扔掉它们并当成$n-m$维处理，然后在最左边添上$2m$个$0$。\n\n其实这道题还可以优化。仔细观察这个式子\n\n$$Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}$$\n\n我们看到这其实就是一个卷积，我们套一波FFT/NTT就能把时间复杂度优化到\n\n$$T(n)=2T(\\cfrac{n}{2})+O(n\\log n)$$\n\n根据主定理，我们有$T(n)=O(n\\log^{2}n)$。一写发现跑得飞快。\n\n当然这是仅限于分治做法的，像我标算这种做法上了FFT/NTT也优化不了（\n\n![](/images/TIM截图20190116111347.png)\n\n上面这三个评测记录，最下面的是真正的标算，中间的是分治，上面的是NTT优化分治。\n\n#### 论如何用最简短的语言描述主定理\n\n$$T(n)=aT(\\cfrac{n}{b})+O(n^{c}\\log^{k}n)$$\n\n$$T(n)=\\begin{cases}\n&O(n^{c})\\;\\;&(c>\\log_{b}a\\wedge k=0)\\\\\n&O(n^{\\log_{b}a})&(c<\\log_{b}a\\wedge k=0)\\\\\n&O(n^{c}\\log^{k+1}n)&(c=\\log_{b}a)\n\\end{cases}$$\n","source":"_posts/2018-12-26-timuzu-solutions.md","raw":"---\nmathjax: true\ndate: 2018-12-26 20:17:22\ntitle: 题目组试题选讲\ntags:\n  - 洛谷\n  - 题目组\n  - 毒瘤\ncategories:\n  - 题解\npassword: FLS&&8]T:$f3[yrtt!osE+K&3\"`?IlA{\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\n---\n先宣传一波[团队](https://www.luogu.org/team/show?teamid=11367)。\n\n<!-- more -->\n\n### [「T47720」孤立元](https://www.luogu.org/problemnew/show/T47720)\n\n[已有题解](/luogu-t47720-solution/)。\n\n### [「T53537」营救元首](https://www.luogu.org/problemnew/show/T53537)\n\n能看出[五彩斑斓的世界](https://www.luogu.org/problemnew/show/P4117)来吗？\n\n没错就是JF切了这道题以后~~根号上脑~~搞了这么一个东西。\n\n不过这道题相对之下有点麻烦的，因为你需要维护两个tag，一个处理减，一个处理推平。而且求前驱的时候不能值域分块，然后就只能套`set`。\n\n详细点说的话，就是每个块维护最大值和最小值。操作$1$可以选择枚举所有大于$k$的数，然后减去$k$；也可以枚举所有小于等于$k$的数，加上$k$之后整个块打上一个减$k$的标记，标记这个块内的所有数都被减去了$k$。哪个运算量少就选哪个。\n\n操作$2$就先查询最小值~~（这个都会吧）~~，然后散块直接改，整块打个标记就好，标记这个块内的所有数都被改成了另一个数。\n\n操作$3$就不必多说了，散块暴力找，整块`lower_bound`。\n\n不过说实话，写起来挺麻烦的。也懒得看以前我写的代码了，直接贴出来吧。\n\n```cpp\n#include<cstdio>\n#include<set>\n#define re register\n#define maxn 100000\n#define maxm 100000\n#define maxblock 320\n#define maxval 200000\n#define mod 998244353\n#define max(a,b) ((a)>=(b)?(a):(b))\n#define min(a,b) ((a)<=(b)?(a):(b))\n\nnamespace cltstream{\n    #define size 1048576\n    char cltin[size+1],*ih=cltin,*it=cltin;\n    inline char gc(){\n        #ifdef ONLINE_JUDGE\n            if(ih==it){\n                it=(ih=cltin)+fread(cltin,1,size,stdin);\n                if(ih==it)\n                    return EOF;\n            }\n            return *ih++;\n        #else\n            return getchar();\n        #endif\n    }\n\n    char cltout[size+1],*oh=cltout;\n    int outcnt=0;\n    inline void pc(char c){\n        if(c==-1)\n            fwrite(cltout,1,outcnt,stdout);\n        else{\n            if(outcnt==size){\n                fwrite(cltout,1,size,stdout);\n                oh=cltout;\n                outcnt=0;\n            }\n            *oh++=c;\n            ++outcnt;\n        }\n    }\n    #undef size\n\n    template <typename _tp>\n    inline void read(_tp& x){\n        int sn=1;\n        char c=gc();\n        for(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n        if(c==45&&c!=EOF)\n            sn=-1,c=gc();\n        for(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n        x*=sn;\n    }\n\n    template <typename _tp>\n    inline void write(_tp x,char text=' '){\n        if(x<0)\n            pc(45),x=-x;\n        if(!x)\n            pc(48);\n        else{\n            int digit[22];\n            for(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n            for(;digit[0];pc(digit[digit[0]--]^48));\n        }\n        pc(text);\n    }\n}\n\nint n,m,size;\nint a[maxn+1],id[maxn+1];\nint val[maxn+1],f[maxn+1];\nint pos[maxblock+1][maxval+1];\nint maxv[maxblock+1],minv[maxblock+1],tag[maxblock+1],sam[maxblock+1];\nstd::set<int> s[maxblock+1];\n\nint find(int x){\n    return f[x]==x?x:f[x]=find(f[x]);\n}\n\ninline void init(int x){\n    maxv[x]=-2e9;\n    minv[x]=2e9;\n    for(re int i=(x-1)*size+1;i<=x*size&&i<=n;++i)\n        if(!pos[x][a[i]]){\n            val[i]=a[i];\n            f[i]=i;\n            pos[x][a[i]]=i;\n            maxv[x]=max(maxv[x],a[i]);\n            minv[x]=min(minv[x],a[i]);\n            s[x].insert(a[i]);\n        }\n        else\n            f[i]=pos[x][a[i]];\n}\n\ninline void destory(int x){\n    for(re int i=(x-1)*size+1;i<=x*size&&i<=n;++i){\n        a[i]=sam[x]?sam[x]:val[find(i)]+tag[x];\n        pos[x][val[i]]=0;\n    }\n    tag[x]=sam[x]=0;\n    s[x].clear();\n}\n\ninline void solve(int x,int y){\n    if(sam[x]){\n        if(sam[x]>y)\n            sam[x]-=y;\n        return;\n    }\n    if(maxv[x]-(y-tag[x])<=(y-tag[x])-minv[x]+1){\n        for(re int i=(y-tag[x])+1;i<=maxv[x];++i)\n            if(pos[x][i]){\n                s[x].erase(i);\n                if(!pos[x][i-y]){\n                    val[pos[x][i]]-=y;\n                    pos[x][i-y]=pos[x][i];\n                    s[x].insert(i-y);\n                }\n                else\n                    if(pos[x][i]>pos[x][i-y])\n                        f[pos[x][i]]=pos[x][i-y];\n                    else{\n                        f[pos[x][i-y]]=pos[x][i];\n                        pos[x][i-y]=pos[x][i];\n                        val[pos[x][i-y]]-=y;\n                    }\n                pos[x][i]=0;\n            }\n    }\n    else{\n        for(re int i=(y-tag[x]);i>=minv[x];--i)\n            if(pos[x][i]){\n                s[x].erase(i);\n                if(!pos[x][i+y]){\n                    val[pos[x][i]]+=y;\n                    pos[x][i+y]=pos[x][i];\n                    s[x].insert(i+y);\n                }\n                else\n                    if(pos[x][i]>pos[x][i+y])\n                        f[pos[x][i]]=pos[x][i+y];\n                    else{\n                        f[pos[x][i+y]]=pos[x][i];\n                        pos[x][i+y]=pos[x][i];\n                        val[pos[x][i+y]]+=y;\n                    }\n                pos[x][i]=0;\n            }\n        tag[x]-=y;\n    }\n    minv[x]=*s[x].begin();\n    std::set<int>::iterator it=s[x].end();\n    --it;\n    maxv[x]=*it;\n}\n\ninline void IntervalCut(int l,int r,int x){\n    int L=id[l],R=id[r];\n    destory(L);\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        if(a[i]>x)\n            a[i]-=x;\n    init(L);\n    for(re int i=L+1;i<=R-1;++i)\n        solve(i,x);\n    if(L<R){\n        destory(R);\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            if(a[i]>x)\n                a[i]-=x;\n        init(R);\n    }\n}\n\ninline void IntervalAssignToMin(int l,int r){\n    int L=id[l],R=id[r],res=2e9;\n    destory(L);\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        res=min(res,a[i]);\n    for(re int i=L+1;i<=R-1;++i)\n        res=min(res,sam[i]?sam[i]:minv[i]+tag[i]);\n    if(L<R){\n        destory(R);\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            res=min(res,a[i]);\n    }\n    for(re int i=l;i<=L*size&&i<=r;++i)\n        a[i]=res;\n    init(L);\n    for(re int i=L+1;i<=R-1;++i)\n        sam[i]=res;\n    if(L<R){\n        for(re int i=(R-1)*size+1;i<=r;++i)\n            a[i]=res;\n        init(R);\n    }\n}\n\ninline void IntervalPre(int l,int r,int x){\n    int L=id[l],R=id[r],p=0,res=-2e9;\n    if(sam[L]){\n        if(sam[L]<x&&sam[L]>res){\n            p=l;\n            res=sam[L];\n        }\n    }\n    else\n        for(re int i=l;i<=L*size&&i<=r;++i)\n            if(val[find(i)]+tag[L]<x&&val[find(i)]+tag[L]>res){\n                p=i;\n                res=val[f[i]]+tag[L];\n            }\n    for(re int i=L+1;i<=R-1;++i)\n        if(sam[i]){\n            if(sam[i]<x&&sam[i]>res){\n                p=(i-1)*size+1;\n                res=sam[i];\n            }\n        }\n        else{\n            std::set<int>::iterator it=s[i].lower_bound(x-tag[i]);\n            if(it!=s[i].begin()){\n                --it;\n                if(*it+tag[i]<x&&*it+tag[i]>res){\n                    p=pos[i][*it];\n                    res=*it+tag[i];\n                }\n            }\n        }\n    if(L<R){\n        if(sam[R]){\n            if(sam[R]<x&&sam[R]>res){\n                p=(R-1)*size+1;\n                res=sam[R];\n            }\n        }\n        else\n            for(re int i=(R-1)*size+1;i<=r;++i)\n                if(val[find(i)]+tag[R]<x&&val[find(i)]+tag[R]>res){\n                    p=i;\n                    res=val[f[i]]+tag[R];\n                }\n    }\n    if(p)\n        cltstream::write(p,'\\n');\n    else{\n        cltstream::pc('G');\n        cltstream::pc('R');\n        cltstream::pc('E');\n        cltstream::pc('A');\n        cltstream::pc('T');\n        cltstream::pc(10);\n    }\n}\n\nint main(){\n    cltstream::read(n);\n    cltstream::read(m);\n    for(re int i=1;i<=n;++i)\n        cltstream::read(a[i]);\n    for(;(size+1)*(size+1)<=n;++size);\n    for(re int i=1;(i-1)*size+1<=n;++i){\n        init(i);\n        for(re int j=(i-1)*size+1;j<=i*size&&j<=n;++j)\n            id[j]=i;\n    }\n    for(re int i=1;i<=m;++i){\n        int opt,l,r,x;\n        cltstream::read(opt);\n        cltstream::read(l);\n        cltstream::read(r);\n        switch(opt){\n            case 1:\n                cltstream::read(x);\n                IntervalCut(l,r,x);\n                break;\n            case 2:\n                IntervalAssignToMin(l,r);\n                break;\n            case 3:\n                cltstream::read(x);\n                IntervalPre(l,r,x);\n                break;\n        }\n    }\n    for(re int i=1;i<=n;++i)\n        (a[0]+=sam[id[i]]?sam[id[i]]:val[find(i)]+tag[id[i]])%=mod;\n    cltstream::write(a[0],'\\n');\n    cltstream::pc(-1);\n    return 0;\n}\n```\n\n### [「T53987」ZJF日记](https://www.luogu.org/problemnew/show/T53987)\n\n最短路计数+次短路求解。\n\n其实这才应该是签到题啊，然而当初却被排到了T3。不是很懂（\n\n不过话说回来其实题面写的很好啊。\n\nsto __多弗桃__ orz\n\n#### 关于SPFA\n\n他死了。\n\n### [「T56269」选择性失忆](https://www.luogu.org/problemnew/show/T56269)\n\nsto __SnoWY__ orz\n\n才刚学了几个月就出这种神仙题，把我这种从初中就开始学OI的菜鸡吊起来打（\n\n首先我们看到要最小化第$k+1$大的边权。二分？那么问题就转化成了找一条路径，使得其中恰有$k$条边的边权小于某个给定数值。\n\nemmmmmm……这是什么鬼（\n\n总之二分大概不大可行。然后我觉得我扯不下去了，直接讲正解吧（\n\n构造一张$k+1$层的分层图。如果说我们在某一层有一条边从$u$到$v$，边权是$w$，我们就从这一层的$u$，向下一层的$v$连一条$0$权边。然后从最上层的$1$开始跑最短路，路径长度定义为边权最大值，跑到最下层的$n$。然后`dis[最下层的n]`就是答案。\n\n那么为什么这样做可行？假设说我们现在跑出了最上层的$n$的`dis`。现在我们将$n$下压一层，我们肯定会在之前边权最大的那一条边处跨越至下层。这样这条边的边权减为$0$，相当于是说被过滤掉了。不难想象出，如果我们下压$k$层到最底层，边权前$k$大的边就都被过滤掉了，这时路径上的边权最大值就是一开始的$k+1$大。\n\n相信各位应该都会了，我就不贴代码了。\n\n然后还是要%SnoWY。\n\n[](https://i.loli.net/2018/12/26/5c237e1c077b4.jpg)\n\n### [「T62117」复习](https://www.luogu.org/problemnew/show/T62117)\n\n这是一道被线段树踩爆了的分块题。\n\n每个块内维护总和、正数数量和绝对值最小的负数的绝对值。\n\n每次加的时候，散块还是暴力重构，整块就判断一下绝对值最小的负数加完会不会变号，会就重构。\n\n因为保证$k$非负，每个数最多变号一次，也就是说最多重构$n$次，时间复杂度$O(n\\sqrt{n})$。\n\n代码太丢人了不贴了。\n\n### [「T64137」「魔板」线段树 2](https://www.luogu.org/problemnew/show/T64137)\n\n这是一道~~丧心病狂的~~卡时空块状分块题。\n\n关于块状分块请看[这里](/block-decomposition/)。\n\n反正也没啥可说的，就是写起来麻烦，我就简单讲一下这题背后的故事吧。\n\n首先一开始我们定的时空限制是$1\\text{s}/4\\text{MB}$。然而还是放跑了空间复杂度足够优秀的线段树。然后一气之下删了`fread`，把空间限制改到$2\\text{MB}$，并把时间限制改到$850\\text{ms}$。然后有神仙通过将线段树的多个叶子结点合并起来的方法又水过去了。最后空间直接卡到了现在的$1.5\\text{MB}$。然后最后两个点询问加到$2\\times 10^{6}$，并塞入大量单点操作，才算把该卡的都卡掉了。\n\n顺便第一次写计分脚本祭。\n\n### [「T65749」斩整「土偶剪定」](https://www.luogu.org/problemnew/show/T65749)\n\n首先高维这种东西我们肯定不能硬想。\n\n首先假设$a_{i}\\gt 1$。如果说一个小土块恰有$k$面有颜色，这也就意味着，它恰有$k$个维度的坐标是$1$或$a_{i}$，剩下$n-k$个维度除了$1$和$a_{i}$以外随便选。那么我们的总方案数就是\n\n$$2^{k}\\sum_{\\mid S\\mid=n-k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)$$\n\n下文为了方便，我们定义$Q_{k}$为\n\n$$\\sum_{\\mid S\\mid=k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)$$\n\n也就是从所有的$a_{i}-2$中选$k$个相乘的所有方案的结果的总和。同时$Q_{0}=1$。\n\n没错就是[这道题](https://www.luogu.org/problemnew/show/P4247)。\n\n现在我们想要对于$[0,n]$内的每一个$i$求出$Q_{i}$。在上面那道题中我们采用的办法是分治。具体来说就是，如果说我们要在$[l,r]$内选$k$个数相乘，我们可以先在$[l,mid]$内选$x$个数相乘，再在$[mid+1,r]$内选$k-x$个数相乘，然后把结果相乘并累加。\n\n形式化地讲的话\n\n$$Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}$$\n\n然后我们直接$O(n^{2})$暴力算就好。但是我们发现如果说我们直接分治，我们会得到这么一个关于时间复杂度的递推式\n\n$$T(n)=2T(\\cfrac{n}{2})+O(n^{2})$$\n\n根据主定理，我们有$T(n)=O(n^{2})$。\n\n其实我一开始以为它是$O(n^{2}\\log n)$的，仔细一算才发现不对（\n\n不过我的标算并不是这么写的。我的做法是从头扫到尾，将前$k$个与第$k+1$个合并。这样的时间复杂度是\n\n$$T(n)=T(n-1)+O(n)$$\n\n很明显也是$O(n^{2})$的。不过好像常数相对较大？\n\n~~然而对比了一下发现常数小了不少（~~\n\n那么问题来了，如果说存在$a_{i}=1$怎么办？\n\n存在$a_{i}=1$就说明，这一维的坐标一定会同时碰到两个边界。那么我们就可以扔掉这个$1$，把它当成$n-1$维处理，然后在最左边添上两个$0$就行了。\n\n同理，如果存在$m$个$a_{i}=1$，我们就扔掉它们并当成$n-m$维处理，然后在最左边添上$2m$个$0$。\n\n其实这道题还可以优化。仔细观察这个式子\n\n$$Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}$$\n\n我们看到这其实就是一个卷积，我们套一波FFT/NTT就能把时间复杂度优化到\n\n$$T(n)=2T(\\cfrac{n}{2})+O(n\\log n)$$\n\n根据主定理，我们有$T(n)=O(n\\log^{2}n)$。一写发现跑得飞快。\n\n当然这是仅限于分治做法的，像我标算这种做法上了FFT/NTT也优化不了（\n\n![](/images/TIM截图20190116111347.png)\n\n上面这三个评测记录，最下面的是真正的标算，中间的是分治，上面的是NTT优化分治。\n\n#### 论如何用最简短的语言描述主定理\n\n$$T(n)=aT(\\cfrac{n}{b})+O(n^{c}\\log^{k}n)$$\n\n$$T(n)=\\begin{cases}\n&O(n^{c})\\;\\;&(c>\\log_{b}a\\wedge k=0)\\\\\n&O(n^{\\log_{b}a})&(c<\\log_{b}a\\wedge k=0)\\\\\n&O(n^{c}\\log^{k+1}n)&(c=\\log_{b}a)\n\\end{cases}$$\n","slug":"timuzu-solutions","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmu007omku9f6ia9bfx","content":"<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"输入密码继续阅读\" />\n    <label for=\"pass\">输入密码继续阅读</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"该文章已被加密","more":"该文章已被加密","origin":"<p>先宣传一波<a href=\"https://www.luogu.org/team/show?teamid=11367\">团队</a>。</p>\n<a id=\"more\"></a>\n<h3 id=\"「T47720」孤立元\"><a href=\"#「T47720」孤立元\" class=\"headerlink\" title=\"「T47720」孤立元\"></a><a href=\"https://www.luogu.org/problemnew/show/T47720\">「T47720」孤立元</a></h3><p><a href=\"/luogu-t47720-solution/\">已有题解</a>。</p>\n<h3 id=\"「T53537」营救元首\"><a href=\"#「T53537」营救元首\" class=\"headerlink\" title=\"「T53537」营救元首\"></a><a href=\"https://www.luogu.org/problemnew/show/T53537\">「T53537」营救元首</a></h3><p>能看出<a href=\"https://www.luogu.org/problemnew/show/P4117\">五彩斑斓的世界</a>来吗？</p>\n<p>没错就是JF切了这道题以后<del>根号上脑</del>搞了这么一个东西。</p>\n<p>不过这道题相对之下有点麻烦的，因为你需要维护两个tag，一个处理减，一个处理推平。而且求前驱的时候不能值域分块，然后就只能套<code>set</code>。</p>\n<p>详细点说的话，就是每个块维护最大值和最小值。操作$1$可以选择枚举所有大于$k$的数，然后减去$k$；也可以枚举所有小于等于$k$的数，加上$k$之后整个块打上一个减$k$的标记，标记这个块内的所有数都被减去了$k$。哪个运算量少就选哪个。</p>\n<p>操作$2$就先查询最小值<del>（这个都会吧）</del>，然后散块直接改，整块打个标记就好，标记这个块内的所有数都被改成了另一个数。</p>\n<p>操作$3$就不必多说了，散块暴力找，整块<code>lower_bound</code>。</p>\n<p>不过说实话，写起来挺麻烦的。也懒得看以前我写的代码了，直接贴出来吧。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxm 100000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxblock 320</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxval 200000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) ((a)&gt;=(b)?(a):(b))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) ((a)&lt;=(b)?(a):(b))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> outcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">-1</span>)</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,outcnt,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(outcnt==size)&#123;</span><br><span class=\"line\">                fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">                oh=cltout;</span><br><span class=\"line\">                outcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            *oh++=c;</span><br><span class=\"line\">            ++outcnt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"string\">' '</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,size;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[maxn+<span class=\"number\">1</span>],id[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> val[maxn+<span class=\"number\">1</span>],f[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> pos[maxblock+<span class=\"number\">1</span>][maxval+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> maxv[maxblock+<span class=\"number\">1</span>],minv[maxblock+<span class=\"number\">1</span>],tag[maxblock+<span class=\"number\">1</span>],sam[maxblock+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; s[maxblock+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f[x]==x?x:f[x]=find(f[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    maxv[x]=<span class=\"number\">-2e9</span>;</span><br><span class=\"line\">    minv[x]=<span class=\"number\">2e9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(x<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=x*size&amp;&amp;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!pos[x][a[i]])&#123;</span><br><span class=\"line\">            val[i]=a[i];</span><br><span class=\"line\">            f[i]=i;</span><br><span class=\"line\">            pos[x][a[i]]=i;</span><br><span class=\"line\">            maxv[x]=max(maxv[x],a[i]);</span><br><span class=\"line\">            minv[x]=min(minv[x],a[i]);</span><br><span class=\"line\">            s[x].insert(a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            f[i]=pos[x][a[i]];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">destory</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(x<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=x*size&amp;&amp;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        a[i]=sam[x]?sam[x]:val[find(i)]+tag[x];</span><br><span class=\"line\">        pos[x][val[i]]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tag[x]=sam[x]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    s[x].clear();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sam[x])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[x]&gt;y)</span><br><span class=\"line\">            sam[x]-=y;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(maxv[x]-(y-tag[x])&lt;=(y-tag[x])-minv[x]+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(y-tag[x])+<span class=\"number\">1</span>;i&lt;=maxv[x];++i)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pos[x][i])&#123;</span><br><span class=\"line\">                s[x].erase(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!pos[x][i-y])&#123;</span><br><span class=\"line\">                    val[pos[x][i]]-=y;</span><br><span class=\"line\">                    pos[x][i-y]=pos[x][i];</span><br><span class=\"line\">                    s[x].insert(i-y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(pos[x][i]&gt;pos[x][i-y])</span><br><span class=\"line\">                        f[pos[x][i]]=pos[x][i-y];</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        f[pos[x][i-y]]=pos[x][i];</span><br><span class=\"line\">                        pos[x][i-y]=pos[x][i];</span><br><span class=\"line\">                        val[pos[x][i-y]]-=y;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                pos[x][i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(y-tag[x]);i&gt;=minv[x];--i)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pos[x][i])&#123;</span><br><span class=\"line\">                s[x].erase(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!pos[x][i+y])&#123;</span><br><span class=\"line\">                    val[pos[x][i]]+=y;</span><br><span class=\"line\">                    pos[x][i+y]=pos[x][i];</span><br><span class=\"line\">                    s[x].insert(i+y);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(pos[x][i]&gt;pos[x][i+y])</span><br><span class=\"line\">                        f[pos[x][i]]=pos[x][i+y];</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        f[pos[x][i+y]]=pos[x][i];</span><br><span class=\"line\">                        pos[x][i+y]=pos[x][i];</span><br><span class=\"line\">                        val[pos[x][i+y]]+=y;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                pos[x][i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        tag[x]-=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    minv[x]=*s[x].begin();</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator it=s[x].end();</span><br><span class=\"line\">    --it;</span><br><span class=\"line\">    maxv[x]=*it;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalCut</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> L=id[l],R=id[r];</span><br><span class=\"line\">    destory(L);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=l;i&lt;=L*size&amp;&amp;i&lt;=r;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i]&gt;x)</span><br><span class=\"line\">            a[i]-=x;</span><br><span class=\"line\">    init(L);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=L+<span class=\"number\">1</span>;i&lt;=R<span class=\"number\">-1</span>;++i)</span><br><span class=\"line\">        solve(i,x);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L&lt;R)&#123;</span><br><span class=\"line\">        destory(R);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(R<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=r;++i)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i]&gt;x)</span><br><span class=\"line\">                a[i]-=x;</span><br><span class=\"line\">        init(R);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalAssignToMin</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> L=id[l],R=id[r],res=<span class=\"number\">2e9</span>;</span><br><span class=\"line\">    destory(L);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=l;i&lt;=L*size&amp;&amp;i&lt;=r;++i)</span><br><span class=\"line\">        res=min(res,a[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=L+<span class=\"number\">1</span>;i&lt;=R<span class=\"number\">-1</span>;++i)</span><br><span class=\"line\">        res=min(res,sam[i]?sam[i]:minv[i]+tag[i]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L&lt;R)&#123;</span><br><span class=\"line\">        destory(R);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(R<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=r;++i)</span><br><span class=\"line\">            res=min(res,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=l;i&lt;=L*size&amp;&amp;i&lt;=r;++i)</span><br><span class=\"line\">        a[i]=res;</span><br><span class=\"line\">    init(L);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=L+<span class=\"number\">1</span>;i&lt;=R<span class=\"number\">-1</span>;++i)</span><br><span class=\"line\">        sam[i]=res;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L&lt;R)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(R<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=r;++i)</span><br><span class=\"line\">            a[i]=res;</span><br><span class=\"line\">        init(R);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">IntervalPre</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> L=id[l],R=id[r],p=<span class=\"number\">0</span>,res=<span class=\"number\">-2e9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sam[L])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[L]&lt;x&amp;&amp;sam[L]&gt;res)&#123;</span><br><span class=\"line\">            p=l;</span><br><span class=\"line\">            res=sam[L];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=l;i&lt;=L*size&amp;&amp;i&lt;=r;++i)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(val[find(i)]+tag[L]&lt;x&amp;&amp;val[find(i)]+tag[L]&gt;res)&#123;</span><br><span class=\"line\">                p=i;</span><br><span class=\"line\">                res=val[f[i]]+tag[L];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=L+<span class=\"number\">1</span>;i&lt;=R<span class=\"number\">-1</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[i])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sam[i]&lt;x&amp;&amp;sam[i]&gt;res)&#123;</span><br><span class=\"line\">                p=(i<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;</span><br><span class=\"line\">                res=sam[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator it=s[i].lower_bound(x-tag[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(it!=s[i].begin())&#123;</span><br><span class=\"line\">                --it;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(*it+tag[i]&lt;x&amp;&amp;*it+tag[i]&gt;res)&#123;</span><br><span class=\"line\">                    p=pos[i][*it];</span><br><span class=\"line\">                    res=*it+tag[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L&lt;R)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[R])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sam[R]&lt;x&amp;&amp;sam[R]&gt;res)&#123;</span><br><span class=\"line\">                p=(R<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;</span><br><span class=\"line\">                res=sam[R];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=(R<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;i&lt;=r;++i)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(val[find(i)]+tag[R]&lt;x&amp;&amp;val[find(i)]+tag[R]&gt;res)&#123;</span><br><span class=\"line\">                    p=i;</span><br><span class=\"line\">                    res=val[f[i]]+tag[R];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p)</span><br><span class=\"line\">        cltstream::write(p,<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        cltstream::pc(<span class=\"string\">'G'</span>);</span><br><span class=\"line\">        cltstream::pc(<span class=\"string\">'R'</span>);</span><br><span class=\"line\">        cltstream::pc(<span class=\"string\">'E'</span>);</span><br><span class=\"line\">        cltstream::pc(<span class=\"string\">'A'</span>);</span><br><span class=\"line\">        cltstream::pc(<span class=\"string\">'T'</span>);</span><br><span class=\"line\">        cltstream::pc(<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        cltstream::read(a[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;(size+<span class=\"number\">1</span>)*(size+<span class=\"number\">1</span>)&lt;=n;++size);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;(i<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>&lt;=n;++i)&#123;</span><br><span class=\"line\">        init(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=(i<span class=\"number\">-1</span>)*size+<span class=\"number\">1</span>;j&lt;=i*size&amp;&amp;j&lt;=n;++j)</span><br><span class=\"line\">            id[j]=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt,l,r,x;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(l);</span><br><span class=\"line\">        cltstream::read(r);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                IntervalCut(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                IntervalAssignToMin(l,r);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                cltstream::read(x);</span><br><span class=\"line\">                IntervalPre(l,r,x);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        (a[<span class=\"number\">0</span>]+=sam[id[i]]?sam[id[i]]:val[find(i)]+tag[id[i]])%=mod;</span><br><span class=\"line\">    cltstream::write(a[<span class=\"number\">0</span>],<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    cltstream::pc(<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"「T53987」ZJF日记\"><a href=\"#「T53987」ZJF日记\" class=\"headerlink\" title=\"「T53987」ZJF日记\"></a><a href=\"https://www.luogu.org/problemnew/show/T53987\">「T53987」ZJF日记</a></h3><p>最短路计数+次短路求解。</p>\n<p>其实这才应该是签到题啊，然而当初却被排到了T3。不是很懂（</p>\n<p>不过话说回来其实题面写的很好啊。</p>\n<p>sto <strong>多弗桃</strong> orz</p>\n<h4 id=\"关于SPFA\"><a href=\"#关于SPFA\" class=\"headerlink\" title=\"关于SPFA\"></a>关于SPFA</h4><p>他死了。</p>\n<h3 id=\"「T56269」选择性失忆\"><a href=\"#「T56269」选择性失忆\" class=\"headerlink\" title=\"「T56269」选择性失忆\"></a><a href=\"https://www.luogu.org/problemnew/show/T56269\">「T56269」选择性失忆</a></h3><p>sto <strong>SnoWY</strong> orz</p>\n<p>才刚学了几个月就出这种神仙题，把我这种从初中就开始学OI的菜鸡吊起来打（</p>\n<p>首先我们看到要最小化第$k+1$大的边权。二分？那么问题就转化成了找一条路径，使得其中恰有$k$条边的边权小于某个给定数值。</p>\n<p>emmmmmm……这是什么鬼（</p>\n<p>总之二分大概不大可行。然后我觉得我扯不下去了，直接讲正解吧（</p>\n<p>构造一张$k+1$层的分层图。如果说我们在某一层有一条边从$u$到$v$，边权是$w$，我们就从这一层的$u$，向下一层的$v$连一条$0$权边。然后从最上层的$1$开始跑最短路，路径长度定义为边权最大值，跑到最下层的$n$。然后<code>dis[最下层的n]</code>就是答案。</p>\n<p>那么为什么这样做可行？假设说我们现在跑出了最上层的$n$的<code>dis</code>。现在我们将$n$下压一层，我们肯定会在之前边权最大的那一条边处跨越至下层。这样这条边的边权减为$0$，相当于是说被过滤掉了。不难想象出，如果我们下压$k$层到最底层，边权前$k$大的边就都被过滤掉了，这时路径上的边权最大值就是一开始的$k+1$大。</p>\n<p>相信各位应该都会了，我就不贴代码了。</p>\n<p>然后还是要%SnoWY。</p>\n<p><a href=\"https://i.loli.net/2018/12/26/5c237e1c077b4.jpg\"></a></p>\n<h3 id=\"「T62117」复习\"><a href=\"#「T62117」复习\" class=\"headerlink\" title=\"「T62117」复习\"></a><a href=\"https://www.luogu.org/problemnew/show/T62117\">「T62117」复习</a></h3><p>这是一道被线段树踩爆了的分块题。</p>\n<p>每个块内维护总和、正数数量和绝对值最小的负数的绝对值。</p>\n<p>每次加的时候，散块还是暴力重构，整块就判断一下绝对值最小的负数加完会不会变号，会就重构。</p>\n<p>因为保证$k$非负，每个数最多变号一次，也就是说最多重构$n$次，时间复杂度$O(n\\sqrt{n})$。</p>\n<p>代码太丢人了不贴了。</p>\n<h3 id=\"「T64137」「魔板」线段树-2\"><a href=\"#「T64137」「魔板」线段树-2\" class=\"headerlink\" title=\"「T64137」「魔板」线段树 2\"></a><a href=\"https://www.luogu.org/problemnew/show/T64137\">「T64137」「魔板」线段树 2</a></h3><p>这是一道<del>丧心病狂的</del>卡时空块状分块题。</p>\n<p>关于块状分块请看<a href=\"/block-decomposition/\">这里</a>。</p>\n<p>反正也没啥可说的，就是写起来麻烦，我就简单讲一下这题背后的故事吧。</p>\n<p>首先一开始我们定的时空限制是$1\\text{s}/4\\text{MB}$。然而还是放跑了空间复杂度足够优秀的线段树。然后一气之下删了<code>fread</code>，把空间限制改到$2\\text{MB}$，并把时间限制改到$850\\text{ms}$。然后有神仙通过将线段树的多个叶子结点合并起来的方法又水过去了。最后空间直接卡到了现在的$1.5\\text{MB}$。然后最后两个点询问加到$2\\times 10^{6}$，并塞入大量单点操作，才算把该卡的都卡掉了。</p>\n<p>顺便第一次写计分脚本祭。</p>\n<h3 id=\"「T65749」斩整「土偶剪定」\"><a href=\"#「T65749」斩整「土偶剪定」\" class=\"headerlink\" title=\"「T65749」斩整「土偶剪定」\"></a><a href=\"https://www.luogu.org/problemnew/show/T65749\">「T65749」斩整「土偶剪定」</a></h3><p>首先高维这种东西我们肯定不能硬想。</p>\n<p>首先假设$a_{i}\\gt 1$。如果说一个小土块恰有$k$面有颜色，这也就意味着，它恰有$k$个维度的坐标是$1$或$a_{i}$，剩下$n-k$个维度除了$1$和$a_{i}$以外随便选。那么我们的总方案数就是</p>\n<script type=\"math/tex; mode=display\">2^{k}\\sum_{\\mid S\\mid=n-k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)</script><p>下文为了方便，我们定义$Q_{k}$为</p>\n<script type=\"math/tex; mode=display\">\\sum_{\\mid S\\mid=k\\wedge\\forall i\\in S,i\\in[1,n]\\cap\\mathbb{Z}}\\prod_{i\\in S}(a_{i}-2)</script><p>也就是从所有的$a_{i}-2$中选$k$个相乘的所有方案的结果的总和。同时$Q_{0}=1$。</p>\n<p>没错就是<a href=\"https://www.luogu.org/problemnew/show/P4247\">这道题</a>。</p>\n<p>现在我们想要对于$[0,n]$内的每一个$i$求出$Q_{i}$。在上面那道题中我们采用的办法是分治。具体来说就是，如果说我们要在$[l,r]$内选$k$个数相乘，我们可以先在$[l,mid]$内选$x$个数相乘，再在$[mid+1,r]$内选$k-x$个数相乘，然后把结果相乘并累加。</p>\n<p>形式化地讲的话</p>\n<script type=\"math/tex; mode=display\">Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}</script><p>然后我们直接$O(n^{2})$暴力算就好。但是我们发现如果说我们直接分治，我们会得到这么一个关于时间复杂度的递推式</p>\n<script type=\"math/tex; mode=display\">T(n)=2T(\\cfrac{n}{2})+O(n^{2})</script><p>根据主定理，我们有$T(n)=O(n^{2})$。</p>\n<p>其实我一开始以为它是$O(n^{2}\\log n)$的，仔细一算才发现不对（</p>\n<p>不过我的标算并不是这么写的。我的做法是从头扫到尾，将前$k$个与第$k+1$个合并。这样的时间复杂度是</p>\n<script type=\"math/tex; mode=display\">T(n)=T(n-1)+O(n)</script><p>很明显也是$O(n^{2})$的。不过好像常数相对较大？</p>\n<p><del>然而对比了一下发现常数小了不少（</del></p>\n<p>那么问题来了，如果说存在$a_{i}=1$怎么办？</p>\n<p>存在$a_{i}=1$就说明，这一维的坐标一定会同时碰到两个边界。那么我们就可以扔掉这个$1$，把它当成$n-1$维处理，然后在最左边添上两个$0$就行了。</p>\n<p>同理，如果存在$m$个$a_{i}=1$，我们就扔掉它们并当成$n-m$维处理，然后在最左边添上$2m$个$0$。</p>\n<p>其实这道题还可以优化。仔细观察这个式子</p>\n<script type=\"math/tex; mode=display\">Q_{k}=\\sum_{i=0}^{k}Q_{l,i}Q_{r,k-i}</script><p>我们看到这其实就是一个卷积，我们套一波FFT/NTT就能把时间复杂度优化到</p>\n<script type=\"math/tex; mode=display\">T(n)=2T(\\cfrac{n}{2})+O(n\\log n)</script><p>根据主定理，我们有$T(n)=O(n\\log^{2}n)$。一写发现跑得飞快。</p>\n<p>当然这是仅限于分治做法的，像我标算这种做法上了FFT/NTT也优化不了（</p>\n<p><img src=\"/images/TIM截图20190116111347.png\" alt=\"\"></p>\n<p>上面这三个评测记录，最下面的是真正的标算，中间的是分治，上面的是NTT优化分治。</p>\n<h4 id=\"论如何用最简短的语言描述主定理\"><a href=\"#论如何用最简短的语言描述主定理\" class=\"headerlink\" title=\"论如何用最简短的语言描述主定理\"></a>论如何用最简短的语言描述主定理</h4><script type=\"math/tex; mode=display\">T(n)=aT(\\cfrac{n}{b})+O(n^{c}\\log^{k}n)</script><script type=\"math/tex; mode=display\">T(n)=\\begin{cases}\n&O(n^{c})\\;\\;&(c>\\log_{b}a\\wedge k=0)\\\\\n&O(n^{\\log_{b}a})&(c<\\log_{b}a\\wedge k=0)\\\\\n&O(n^{c}\\log^{k+1}n)&(c=\\log_{b}a)\n\\end{cases}</script>","encrypt":true,"template":"<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"输入密码继续阅读\" />\n    <label for=\"pass\">输入密码继续阅读</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-02-13T13:41:39.000Z","title":"「年轻人，你渴望力量吗？」","password":null,"_content":"标题来自某学长安利min_25筛的方式（\n\n<!-- more -->\n\n### 概述\n\n我们知道，[杜教筛](/number-theory-learning-notes/)可以在$O(n^{\\tfrac{2}{3}})$的时间复杂度内计算某些给定的积性函数的前缀和。\n\n但是现在我们希望更快。于是我们有了min_25筛（\n\n以下，我们约定$p$是一个质数。$\\mathbb{P}_{i}$表示第$i$小的质数，$\\mathbb{P}_{0}=0$。$\\text{minp}(n)$表示$n$最小的质因数，$\\text{minp}(1)=0$。\n\n现在我们要求一个积性函数$f$的前缀和。我们需要它满足以下两条性质：\n\n1. $f(p)$是一个__可以快速求前缀和的完全积性函数__，或者能用多个这样的函数运算得到。\n2. $f(p^{k})$可以快速求，大概$O(k)$以内就可以。\n\n### 第一部分\n\n我们要对每一个$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，求出\n\n$$\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)$$\n\n定义\n\n$$F(x,y)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}\\vee\\text{minp}(i)\\gt\\mathbb{P}_{y}]f^{\\prime}(i)$$\n\n也就是把所有质数和最小质因数大于$\\mathbb{P}_y$的合数全部当成质数代入$f^{\\prime}$求值并求和。不难发现\n\n$$F(x,+\\infty)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)$$\n\n我们回忆一下埃式筛法的运行过程。\n\n筛完$k$次后，我们除去了最小质因数小于等于$\\mathbb{P}_{k}$的合数，剩下了质数和最小质因数大于$\\mathbb{P}_k$的合数。\n\n可以看到这和$F(x,y)$的定义十分吻合。$F(x,y)$就是埃式筛法筛完$y$次后，没有被筛掉的数的$f^{\\prime}$的值的和。\n\n首先，第$y$次筛掉的最小的数很明显是$\\mathbb{P}_{y}^{2}$，如果$\\mathbb{P}_{y}^{2}\\gt x$，我们什么也筛不掉，此时$F(x,y)=F(x,y-1)$。\n\n也因此，筛质数筛到$\\sqrt{n}$即可。\n\n否则，即$\\mathbb{P}_{y}^{2}\\leqslant x$，我们将所有数除以$\\mathbb{P}_{y}$，之前所有最小质因数等于$\\mathbb{P}_{y}$的合数一一对应到了现在所有大于等于$\\mathbb{P}_{y}$的数。\n\n又因为$f^{\\prime}$是完全积性的，假如我们有一个需要筛掉的数$z$，我们可以通过$f^{\\prime}(\\cfrac{z}{\\mathbb{P}_{y}})f^{\\prime}(\\mathbb{P}_{y})$计算$f^{\\prime}(z)$。\n\n那么看起来\n\n$$F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$$\n\n$F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$包含了三类数的$f^{\\prime}$的值：\n\n1. 大于等于$\\mathbb{P}_{y}$的质数。\n2. 最小质因数大于等于$\\mathbb{P}_{y}$（大于$\\mathbb{P}_{y-1}$）的合数。\n3. 小于$\\mathbb{P}_{y}$的质数。\n\n但是很明显第三类数不能被除去，因此实际上\n\n$$F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)$$\n\n综上所述\n\n$$F(x,y)=\\begin{cases}\n&F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum\\limits_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)\\;\\;&(\\mathbb{P}_{y}^{2}\\leqslant x)\\\\\n&F(x,y-1)&(\\mathbb{P}_{y}^{2}\\gt x)\n\\end{cases}$$\n\n初值为\n\n$$F(x,0)=\\sum_{i=2}^{x}f^{\\prime}(i)$$\n\n注意到第二维只与$y-1$有关，我们可以滚掉。\n\n还有一个问题。这类题目的$n$会很大，我们无法开一个长度为$n$的数组。\n\n因为$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，这样的$x$最多只有$2\\sqrt{n}$个，我们可以离散化存储。\n\n具体实现细节我说不清，看代码吧（\n\n```cpp\ncltstream::read(n);\nsq=sqrt(n);\nfor(re int i=2;i<=sq;++i){\n\tif(!f[i]){\n\t\tg[++g[0]]=i;\n\t\tfsum[g[0]]=fsum[g[0]-1]+/**/;\n\t\t//注释处应填f`(i)\n\t}\n\tfor(re int j=1;j<=g[0]&&i*g[j]<=sq;++j){\n\t\tf[i*g[j]]=1;\n\t\tif(!(i%g[j]))\n\t\t\tbreak;\n\t}\n}\nm=0;\nfor(re int l=1,r;l<=n;r=n/(n/l),l=r+1){\n\tw[++m]=n/l;\n\t//编号对应的离散化前的值\n\tF[m]=/**/;\n\t//注释处应填\\sum_{t=2}^{w[m]}f`(t)\n\tif(w[m]<=sq)\n\t\tid1[w[m]]=m;\n\telse\n\t\tid2[n/w[m]]=m;\n\t//分段存储值对应的编号，这样数组只需要开到sqrt{n}\n}\nfor(re int j=1;j<=g[0];++j)\n\tfor(re int i=1;i<=m&&w[i]>=g[j]*g[j];++i){\n\t//w[i]>=g[j]*g[j]，所以w[i]/g[j]>=g[j]\n\t\tre int id=w[i]/g[j]<=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];\n\t\tF[i]-=/**/*(F[id]-fsum[j-1]);\n\t\t//注释处应填f`(g[j])\n\t}\n```\n\n这一部分的时间复杂度已被证明是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。~~然而看上去很奇怪（~~\n\n### 第二部分\n\n在第一部分中我们求出了所有质数的贡献，现在我们要扩展到全体整数。\n\n定义\n\n$$S(x,y)=\\sum_{i=1}^{x}[\\text{minp}(i)\\geqslant\\mathbb{P}_{y}]f(i)$$\n\n也就是所有最小质因数大于等于$\\mathbb{P}_{y}$的数的$f$的值的和。我们最终要求的就是$S(n,1)+f(1)$。\n\n首先我们需要统计所有质数的贡献，也就是$F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})$。\n\n关于合数，我们枚举最小的质因数，然后把所有数除以这个数的若干次幂，得到的商的最小质因数应当大于这个数。\n\n$$\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$$\n\n但是还有一个问题是$S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$中不包括$f(1)$，因此$f(\\mathbb{P}_{i}^{j})$没有被统计，我们需要手动算进来\n\n$$\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)$$\n\n于是\n\n$$S(x,y)=F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})+\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)$$\n\n然后暴力搜，记忆化都不需要，时间复杂度还是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。~~就很神奇（~~\n\n```cpp\nint S(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre int res=F[id]-fsum[y-1];\n\t\tfor(re int i=y;i<=g[0]&&g[i]*g[i]<=x;++i)\n\t\t\tfor(re int p=g[i];p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=/*1*/*S(x/p,i+1)+/*2*/;\n\t\t\t\t//1处应填f(p)，2处应填f(p*g[i])\n\t\treturn res;\n\t}\n}\n```\n\n### [「Luogu-P4213」「模板」杜教筛（Sum）](https://www.luogu.org/problemnew/show/P4213)\n\n首先我们有\n\n$$\\varphi(p)=\\text{id}(p)-1$$\n\n$$\\mu(p)=-1$$\n\n然后$\\text{id}$和$1$都是能$O(1)$求前缀和完全积性函数，因此可以用min_25筛搞。\n\n说起来比较麻烦，min_25筛不结合代码大概也很难理解，所以说直接上代码（\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define re register\n#define maxn 50000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint t,n,sq,m;\nint f[maxn+1],g[maxn+1],w[(maxn<<1)+1],id1[maxn+1],id2[maxn+1];\nint prmcnt[maxn+1],prmCnt[(maxn<<1)+1];\nlong long prmsum[maxn+1],prmSum[(maxn<<1)+1];\n\nlong long getPhi(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre long long res=(prmSum[id]-prmCnt[id])-(prmsum[y-1]-prmcnt[y-1]);\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tfor(re int p=g[i];1LL*p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=1LL*p/g[i]*(g[i]-1)*getPhi(x/p,i+1)+1LL*p*(g[i]-1);\n\t\treturn res;\n\t}\n}\n\nint getMu(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre int res=prmcnt[y-1]-prmCnt[id];\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tres-=getMu(x/g[i],i+1);\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tfor(re int i=2;i<=maxn;++i){\n\t\tif(!f[i]){\n\t\t\tg[++g[0]]=i;\n\t\t\tprmcnt[g[0]]=prmcnt[g[0]-1]+1;\n\t\t\tprmsum[g[0]]=prmsum[g[0]-1]+i;\n\t\t}\n\t\tfor(re int j=1;j<=g[0]&&1LL*i*g[j]<=maxn;++j){\n\t\t\tf[i*g[j]]=1;\n\t\t\tif(!(i%g[j]))\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tcltstream::read(t);\n\tfor(;t;--t){\n\t\tcltstream::read(n);\n\t\tsq=sqrt(n);\n\t\tm=0;\n\t\tfor(re int l=1,r;l<=n;r=n/(n/l),l=r+1){\n\t\t\tw[++m]=n/l;\n\t\t\tprmCnt[m]=w[m]-1;\n\t\t\tprmSum[m]=1LL*(w[m]-1)*(w[m]+2)/2;\n\t\t\tif(w[m]<=sq)\n\t\t\t\tid1[w[m]]=m;\n\t\t\telse\n\t\t\t\tid2[n/w[m]]=m;\n\t\t}\n\t\tfor(re int j=1;j<=g[0];++j)\n\t\t\tfor(re int i=1;i<=m&&w[i]>=1LL*g[j]*g[j];++i){\n\t\t\t\tre int id=w[i]/g[j]<=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];\n\t\t\t\tprmCnt[i]-=prmCnt[id]-prmcnt[j-1];\n\t\t\t\tprmSum[i]-=1LL*g[j]*(prmSum[id]-prmsum[j-1]);\n\t\t\t}\n\t\tcltstream::write(getPhi(n,1)+1,32);\n\t\tcltstream::write(getMu(n,1)+1,10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n![](/images/TIM截图20190214152934.png)\n\n上为min_25筛，下为杜教筛。\n\nmin_25筛的优势不仅在于时间复杂度，它还可以筛一些乱七八糟的东西。就比如说\n\n### [「LOJ6053」简单的函数](https://loj.ac/problem/6053)\n\n总结一下这个函数：\n\n$$f(1)=1$$\n\n$$f\\left(\\prod_{i=1}^{N}p_{i}^{r_{i}}\\right)=\\prod_{i=1}^{N}(p_{i}\\otimes r_{i})$$\n\n其中$\\otimes$表示按位异或。\n\n![](/images/TIM图片20190103092627.png)\n\n按位异或从十进制的角度来看无异于玄学，因此杜教筛就没法做了（\n\n注意到\n\n$$f(p)=p\\otimes 1=\\begin{cases}\n&p+1\\;\\;&(p=2)\\\\\n&p-1\\;\\;&(p\\gt 2)\n\\end{cases}$$\n\n我们可以在算前缀和时将$f(2)$当成$2-1$，然后特判一下加回来。\n\n然后还是要用min_25筛的前半部分筛出$\\text{id}$和$1$，其实和上面的$\\varphi$没多大区别就是加了点细节（\n\n[好像这种能随便看代码的OJ可以直接扔个提交记录](https://loj.ac/submission/336101)。\n\n### [「UOJ188」Sanrd](http://uoj.ac/problem/188)\n\n次大质因数和。\n\n其实这个题面有点考阅读的。\n\n但是我们发现次大质因数这个函数和质数并没有什么关系，而且不积性。~~说好的只能筛积性函数呢（~~\n\n我们来分析一下min_25筛的运行过程。\n\n调用到$S(x,y)$时，剩下的最小质因数大于等于$\\mathbb{P}_{y}$的数中，只有质数与$\\mathbb{P}_{y-1}$相乘之后能够得到次大质因数为$\\mathbb{P}_{y-1}$的数。这部分可以直接算。\n\n关于次大质因数大于$\\mathbb{P}_{y-1}$的，还是枚举递归暴力搜。然后还是没有算$f(\\mathbb{P}_{i}^{j})$，手动加。\n\n```cpp\nlong long S(re long long n,re long long x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int k=id[x<=sq?x:n/x+sq];\n\t\tre long long res=(y>1?g[y-1]:0)*(prmCnt[k]-y+1);\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tfor(re long long p=g[i];p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=S(n,x/p,i+1)+g[i];\n\t\treturn res;\n\t}\n}\n```\n\n[提交记录](http://uoj.ac/submission/324057)。\n\n~~一道比一道神仙，像我这种菜鸡只能抄题解了（~~\n\n### 课后习题\n\n- [「LOJ572」「LibreOJ Round #11」Misaka Network与求和](https://loj.ac/problem/572)\n- [「SP34096」DIVCNTK - Counting Divisors (general)](https://www.spoj.com/problems/DIVCNTK/)\n- [「SP19985」GCDEX2 - GCD Extreme (hard)](https://www.spoj.com/problems/GCDEX2/)\n- [「SP19975」APS2 - Amazing Prime Sequence (hard)](https://www.spoj.com/problems/APS2/)\n\n### 其它文献\n\n- https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096\n- https://www.cnblogs.com/zhoushuyu/p/9187319.html\n- https://www.cnblogs.com/cjyyb/p/10169190.html\n","source":"_posts/2019-02-13-min-25-sieve-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-02-13 21:41:39\ntitle: 「年轻人，你渴望力量吗？」\ntags:\n  - min_25筛\ncategories:\n  - 学习笔记\npassword:\n---\n标题来自某学长安利min_25筛的方式（\n\n<!-- more -->\n\n### 概述\n\n我们知道，[杜教筛](/number-theory-learning-notes/)可以在$O(n^{\\tfrac{2}{3}})$的时间复杂度内计算某些给定的积性函数的前缀和。\n\n但是现在我们希望更快。于是我们有了min_25筛（\n\n以下，我们约定$p$是一个质数。$\\mathbb{P}_{i}$表示第$i$小的质数，$\\mathbb{P}_{0}=0$。$\\text{minp}(n)$表示$n$最小的质因数，$\\text{minp}(1)=0$。\n\n现在我们要求一个积性函数$f$的前缀和。我们需要它满足以下两条性质：\n\n1. $f(p)$是一个__可以快速求前缀和的完全积性函数__，或者能用多个这样的函数运算得到。\n2. $f(p^{k})$可以快速求，大概$O(k)$以内就可以。\n\n### 第一部分\n\n我们要对每一个$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，求出\n\n$$\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)$$\n\n定义\n\n$$F(x,y)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}\\vee\\text{minp}(i)\\gt\\mathbb{P}_{y}]f^{\\prime}(i)$$\n\n也就是把所有质数和最小质因数大于$\\mathbb{P}_y$的合数全部当成质数代入$f^{\\prime}$求值并求和。不难发现\n\n$$F(x,+\\infty)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)$$\n\n我们回忆一下埃式筛法的运行过程。\n\n筛完$k$次后，我们除去了最小质因数小于等于$\\mathbb{P}_{k}$的合数，剩下了质数和最小质因数大于$\\mathbb{P}_k$的合数。\n\n可以看到这和$F(x,y)$的定义十分吻合。$F(x,y)$就是埃式筛法筛完$y$次后，没有被筛掉的数的$f^{\\prime}$的值的和。\n\n首先，第$y$次筛掉的最小的数很明显是$\\mathbb{P}_{y}^{2}$，如果$\\mathbb{P}_{y}^{2}\\gt x$，我们什么也筛不掉，此时$F(x,y)=F(x,y-1)$。\n\n也因此，筛质数筛到$\\sqrt{n}$即可。\n\n否则，即$\\mathbb{P}_{y}^{2}\\leqslant x$，我们将所有数除以$\\mathbb{P}_{y}$，之前所有最小质因数等于$\\mathbb{P}_{y}$的合数一一对应到了现在所有大于等于$\\mathbb{P}_{y}$的数。\n\n又因为$f^{\\prime}$是完全积性的，假如我们有一个需要筛掉的数$z$，我们可以通过$f^{\\prime}(\\cfrac{z}{\\mathbb{P}_{y}})f^{\\prime}(\\mathbb{P}_{y})$计算$f^{\\prime}(z)$。\n\n那么看起来\n\n$$F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$$\n\n$F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$包含了三类数的$f^{\\prime}$的值：\n\n1. 大于等于$\\mathbb{P}_{y}$的质数。\n2. 最小质因数大于等于$\\mathbb{P}_{y}$（大于$\\mathbb{P}_{y-1}$）的合数。\n3. 小于$\\mathbb{P}_{y}$的质数。\n\n但是很明显第三类数不能被除去，因此实际上\n\n$$F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)$$\n\n综上所述\n\n$$F(x,y)=\\begin{cases}\n&F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum\\limits_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)\\;\\;&(\\mathbb{P}_{y}^{2}\\leqslant x)\\\\\n&F(x,y-1)&(\\mathbb{P}_{y}^{2}\\gt x)\n\\end{cases}$$\n\n初值为\n\n$$F(x,0)=\\sum_{i=2}^{x}f^{\\prime}(i)$$\n\n注意到第二维只与$y-1$有关，我们可以滚掉。\n\n还有一个问题。这类题目的$n$会很大，我们无法开一个长度为$n$的数组。\n\n因为$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，这样的$x$最多只有$2\\sqrt{n}$个，我们可以离散化存储。\n\n具体实现细节我说不清，看代码吧（\n\n```cpp\ncltstream::read(n);\nsq=sqrt(n);\nfor(re int i=2;i<=sq;++i){\n\tif(!f[i]){\n\t\tg[++g[0]]=i;\n\t\tfsum[g[0]]=fsum[g[0]-1]+/**/;\n\t\t//注释处应填f`(i)\n\t}\n\tfor(re int j=1;j<=g[0]&&i*g[j]<=sq;++j){\n\t\tf[i*g[j]]=1;\n\t\tif(!(i%g[j]))\n\t\t\tbreak;\n\t}\n}\nm=0;\nfor(re int l=1,r;l<=n;r=n/(n/l),l=r+1){\n\tw[++m]=n/l;\n\t//编号对应的离散化前的值\n\tF[m]=/**/;\n\t//注释处应填\\sum_{t=2}^{w[m]}f`(t)\n\tif(w[m]<=sq)\n\t\tid1[w[m]]=m;\n\telse\n\t\tid2[n/w[m]]=m;\n\t//分段存储值对应的编号，这样数组只需要开到sqrt{n}\n}\nfor(re int j=1;j<=g[0];++j)\n\tfor(re int i=1;i<=m&&w[i]>=g[j]*g[j];++i){\n\t//w[i]>=g[j]*g[j]，所以w[i]/g[j]>=g[j]\n\t\tre int id=w[i]/g[j]<=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];\n\t\tF[i]-=/**/*(F[id]-fsum[j-1]);\n\t\t//注释处应填f`(g[j])\n\t}\n```\n\n这一部分的时间复杂度已被证明是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。~~然而看上去很奇怪（~~\n\n### 第二部分\n\n在第一部分中我们求出了所有质数的贡献，现在我们要扩展到全体整数。\n\n定义\n\n$$S(x,y)=\\sum_{i=1}^{x}[\\text{minp}(i)\\geqslant\\mathbb{P}_{y}]f(i)$$\n\n也就是所有最小质因数大于等于$\\mathbb{P}_{y}$的数的$f$的值的和。我们最终要求的就是$S(n,1)+f(1)$。\n\n首先我们需要统计所有质数的贡献，也就是$F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})$。\n\n关于合数，我们枚举最小的质因数，然后把所有数除以这个数的若干次幂，得到的商的最小质因数应当大于这个数。\n\n$$\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$$\n\n但是还有一个问题是$S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$中不包括$f(1)$，因此$f(\\mathbb{P}_{i}^{j})$没有被统计，我们需要手动算进来\n\n$$\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)$$\n\n于是\n\n$$S(x,y)=F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})+\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)$$\n\n然后暴力搜，记忆化都不需要，时间复杂度还是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。~~就很神奇（~~\n\n```cpp\nint S(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre int res=F[id]-fsum[y-1];\n\t\tfor(re int i=y;i<=g[0]&&g[i]*g[i]<=x;++i)\n\t\t\tfor(re int p=g[i];p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=/*1*/*S(x/p,i+1)+/*2*/;\n\t\t\t\t//1处应填f(p)，2处应填f(p*g[i])\n\t\treturn res;\n\t}\n}\n```\n\n### [「Luogu-P4213」「模板」杜教筛（Sum）](https://www.luogu.org/problemnew/show/P4213)\n\n首先我们有\n\n$$\\varphi(p)=\\text{id}(p)-1$$\n\n$$\\mu(p)=-1$$\n\n然后$\\text{id}$和$1$都是能$O(1)$求前缀和完全积性函数，因此可以用min_25筛搞。\n\n说起来比较麻烦，min_25筛不结合代码大概也很难理解，所以说直接上代码（\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define re register\n#define maxn 50000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint t,n,sq,m;\nint f[maxn+1],g[maxn+1],w[(maxn<<1)+1],id1[maxn+1],id2[maxn+1];\nint prmcnt[maxn+1],prmCnt[(maxn<<1)+1];\nlong long prmsum[maxn+1],prmSum[(maxn<<1)+1];\n\nlong long getPhi(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre long long res=(prmSum[id]-prmCnt[id])-(prmsum[y-1]-prmcnt[y-1]);\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tfor(re int p=g[i];1LL*p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=1LL*p/g[i]*(g[i]-1)*getPhi(x/p,i+1)+1LL*p*(g[i]-1);\n\t\treturn res;\n\t}\n}\n\nint getMu(re int x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int id=x<=sq?id1[x]:id2[n/x];\n\t\tre int res=prmcnt[y-1]-prmCnt[id];\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tres-=getMu(x/g[i],i+1);\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tfor(re int i=2;i<=maxn;++i){\n\t\tif(!f[i]){\n\t\t\tg[++g[0]]=i;\n\t\t\tprmcnt[g[0]]=prmcnt[g[0]-1]+1;\n\t\t\tprmsum[g[0]]=prmsum[g[0]-1]+i;\n\t\t}\n\t\tfor(re int j=1;j<=g[0]&&1LL*i*g[j]<=maxn;++j){\n\t\t\tf[i*g[j]]=1;\n\t\t\tif(!(i%g[j]))\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tcltstream::read(t);\n\tfor(;t;--t){\n\t\tcltstream::read(n);\n\t\tsq=sqrt(n);\n\t\tm=0;\n\t\tfor(re int l=1,r;l<=n;r=n/(n/l),l=r+1){\n\t\t\tw[++m]=n/l;\n\t\t\tprmCnt[m]=w[m]-1;\n\t\t\tprmSum[m]=1LL*(w[m]-1)*(w[m]+2)/2;\n\t\t\tif(w[m]<=sq)\n\t\t\t\tid1[w[m]]=m;\n\t\t\telse\n\t\t\t\tid2[n/w[m]]=m;\n\t\t}\n\t\tfor(re int j=1;j<=g[0];++j)\n\t\t\tfor(re int i=1;i<=m&&w[i]>=1LL*g[j]*g[j];++i){\n\t\t\t\tre int id=w[i]/g[j]<=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];\n\t\t\t\tprmCnt[i]-=prmCnt[id]-prmcnt[j-1];\n\t\t\t\tprmSum[i]-=1LL*g[j]*(prmSum[id]-prmsum[j-1]);\n\t\t\t}\n\t\tcltstream::write(getPhi(n,1)+1,32);\n\t\tcltstream::write(getMu(n,1)+1,10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n![](/images/TIM截图20190214152934.png)\n\n上为min_25筛，下为杜教筛。\n\nmin_25筛的优势不仅在于时间复杂度，它还可以筛一些乱七八糟的东西。就比如说\n\n### [「LOJ6053」简单的函数](https://loj.ac/problem/6053)\n\n总结一下这个函数：\n\n$$f(1)=1$$\n\n$$f\\left(\\prod_{i=1}^{N}p_{i}^{r_{i}}\\right)=\\prod_{i=1}^{N}(p_{i}\\otimes r_{i})$$\n\n其中$\\otimes$表示按位异或。\n\n![](/images/TIM图片20190103092627.png)\n\n按位异或从十进制的角度来看无异于玄学，因此杜教筛就没法做了（\n\n注意到\n\n$$f(p)=p\\otimes 1=\\begin{cases}\n&p+1\\;\\;&(p=2)\\\\\n&p-1\\;\\;&(p\\gt 2)\n\\end{cases}$$\n\n我们可以在算前缀和时将$f(2)$当成$2-1$，然后特判一下加回来。\n\n然后还是要用min_25筛的前半部分筛出$\\text{id}$和$1$，其实和上面的$\\varphi$没多大区别就是加了点细节（\n\n[好像这种能随便看代码的OJ可以直接扔个提交记录](https://loj.ac/submission/336101)。\n\n### [「UOJ188」Sanrd](http://uoj.ac/problem/188)\n\n次大质因数和。\n\n其实这个题面有点考阅读的。\n\n但是我们发现次大质因数这个函数和质数并没有什么关系，而且不积性。~~说好的只能筛积性函数呢（~~\n\n我们来分析一下min_25筛的运行过程。\n\n调用到$S(x,y)$时，剩下的最小质因数大于等于$\\mathbb{P}_{y}$的数中，只有质数与$\\mathbb{P}_{y-1}$相乘之后能够得到次大质因数为$\\mathbb{P}_{y-1}$的数。这部分可以直接算。\n\n关于次大质因数大于$\\mathbb{P}_{y-1}$的，还是枚举递归暴力搜。然后还是没有算$f(\\mathbb{P}_{i}^{j})$，手动加。\n\n```cpp\nlong long S(re long long n,re long long x,re int y){\n\tif(x<=1||g[y]>x)\n\t\treturn 0;\n\telse{\n\t\tre int k=id[x<=sq?x:n/x+sq];\n\t\tre long long res=(y>1?g[y-1]:0)*(prmCnt[k]-y+1);\n\t\tfor(re int i=y;i<=g[0]&&1LL*g[i]*g[i]<=x;++i)\n\t\t\tfor(re long long p=g[i];p*g[i]<=x;p*=g[i])\n\t\t\t\tres+=S(n,x/p,i+1)+g[i];\n\t\treturn res;\n\t}\n}\n```\n\n[提交记录](http://uoj.ac/submission/324057)。\n\n~~一道比一道神仙，像我这种菜鸡只能抄题解了（~~\n\n### 课后习题\n\n- [「LOJ572」「LibreOJ Round #11」Misaka Network与求和](https://loj.ac/problem/572)\n- [「SP34096」DIVCNTK - Counting Divisors (general)](https://www.spoj.com/problems/DIVCNTK/)\n- [「SP19985」GCDEX2 - GCD Extreme (hard)](https://www.spoj.com/problems/GCDEX2/)\n- [「SP19975」APS2 - Amazing Prime Sequence (hard)](https://www.spoj.com/problems/APS2/)\n\n### 其它文献\n\n- https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096\n- https://www.cnblogs.com/zhoushuyu/p/9187319.html\n- https://www.cnblogs.com/cjyyb/p/10169190.html\n","slug":"min-25-sieve-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmv007qmku90kci1mh6","content":"<p>标题来自某学长安利min_25筛的方式（</p>\n<a id=\"more\"></a>\n<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>我们知道，<a href=\"/number-theory-learning-notes/\">杜教筛</a>可以在$O(n^{\\tfrac{2}{3}})$的时间复杂度内计算某些给定的积性函数的前缀和。</p>\n<p>但是现在我们希望更快。于是我们有了min_25筛（</p>\n<p>以下，我们约定$p$是一个质数。$\\mathbb{P}_{i}$表示第$i$小的质数，$\\mathbb{P}_{0}=0$。$\\text{minp}(n)$表示$n$最小的质因数，$\\text{minp}(1)=0$。</p>\n<p>现在我们要求一个积性函数$f$的前缀和。我们需要它满足以下两条性质：</p>\n<ol>\n<li>$f(p)$是一个<strong>可以快速求前缀和的完全积性函数</strong>，或者能用多个这样的函数运算得到。</li>\n<li>$f(p^{k})$可以快速求，大概$O(k)$以内就可以。</li>\n</ol>\n<h3 id=\"第一部分\"><a href=\"#第一部分\" class=\"headerlink\" title=\"第一部分\"></a>第一部分</h3><p>我们要对每一个$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，求出</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F(x,y)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}\\vee\\text{minp}(i)\\gt\\mathbb{P}_{y}]f^{\\prime}(i)</script><p>也就是把所有质数和最小质因数大于$\\mathbb{P}_y$的合数全部当成质数代入$f^{\\prime}$求值并求和。不难发现</p>\n<script type=\"math/tex; mode=display\">F(x,+\\infty)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)</script><p>我们回忆一下埃式筛法的运行过程。</p>\n<p>筛完$k$次后，我们除去了最小质因数小于等于$\\mathbb{P}_{k}$的合数，剩下了质数和最小质因数大于$\\mathbb{P}_k$的合数。</p>\n<p>可以看到这和$F(x,y)$的定义十分吻合。$F(x,y)$就是埃式筛法筛完$y$次后，没有被筛掉的数的$f^{\\prime}$的值的和。</p>\n<p>首先，第$y$次筛掉的最小的数很明显是$\\mathbb{P}_{y}^{2}$，如果$\\mathbb{P}_{y}^{2}\\gt x$，我们什么也筛不掉，此时$F(x,y)=F(x,y-1)$。</p>\n<p>也因此，筛质数筛到$\\sqrt{n}$即可。</p>\n<p>否则，即$\\mathbb{P}_{y}^{2}\\leqslant x$，我们将所有数除以$\\mathbb{P}_{y}$，之前所有最小质因数等于$\\mathbb{P}_{y}$的合数一一对应到了现在所有大于等于$\\mathbb{P}_{y}$的数。</p>\n<p>又因为$f^{\\prime}$是完全积性的，假如我们有一个需要筛掉的数$z$，我们可以通过$f^{\\prime}(\\cfrac{z}{\\mathbb{P}_{y}})f^{\\prime}(\\mathbb{P}_{y})$计算$f^{\\prime}(z)$。</p>\n<p>那么看起来</p>\n<script type=\"math/tex; mode=display\">F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)</script><p>$F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$包含了三类数的$f^{\\prime}$的值：</p>\n<ol>\n<li>大于等于$\\mathbb{P}_{y}$的质数。</li>\n<li>最小质因数大于等于$\\mathbb{P}_{y}$（大于$\\mathbb{P}_{y-1}$）的合数。</li>\n<li>小于$\\mathbb{P}_{y}$的质数。</li>\n</ol>\n<p>但是很明显第三类数不能被除去，因此实际上</p>\n<script type=\"math/tex; mode=display\">F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)</script><p>综上所述</p>\n<script type=\"math/tex; mode=display\">F(x,y)=\\begin{cases}\n&F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum\\limits_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)\\;\\;&(\\mathbb{P}_{y}^{2}\\leqslant x)\\\\\n&F(x,y-1)&(\\mathbb{P}_{y}^{2}\\gt x)\n\\end{cases}</script><p>初值为</p>\n<script type=\"math/tex; mode=display\">F(x,0)=\\sum_{i=2}^{x}f^{\\prime}(i)</script><p>注意到第二维只与$y-1$有关，我们可以滚掉。</p>\n<p>还有一个问题。这类题目的$n$会很大，我们无法开一个长度为$n$的数组。</p>\n<p>因为$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，这样的$x$最多只有$2\\sqrt{n}$个，我们可以离散化存储。</p>\n<p>具体实现细节我说不清，看代码吧（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cltstream::read(n);</span><br><span class=\"line\">sq=<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=sq;++i)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">        g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">        fsum[g[<span class=\"number\">0</span>]]=fsum[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+<span class=\"comment\">/**/</span>;</span><br><span class=\"line\">        <span class=\"comment\">//注释处应填f`(i)</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;i*g[j]&lt;=sq;++j)&#123;</span><br><span class=\"line\">        f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(i%g[j]))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">m=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;r=n/(n/l),l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    w[++m]=n/l;</span><br><span class=\"line\">    <span class=\"comment\">//编号对应的离散化前的值</span></span><br><span class=\"line\">    F[m]=<span class=\"comment\">/**/</span>;</span><br><span class=\"line\">    <span class=\"comment\">//注释处应填\\sum_&#123;t=2&#125;^&#123;w[m]&#125;f`(t)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w[m]&lt;=sq)</span><br><span class=\"line\">        id1[w[m]]=m;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        id2[n/w[m]]=m;</span><br><span class=\"line\">    <span class=\"comment\">//分段存储值对应的编号，这样数组只需要开到sqrt&#123;n&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m&amp;&amp;w[i]&gt;=g[j]*g[j];++i)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//w[i]&gt;=g[j]*g[j]，所以w[i]/g[j]&gt;=g[j]</span></span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=w[i]/g[j]&lt;=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];</span><br><span class=\"line\">        F[i]-=<span class=\"comment\">/**/</span>*(F[id]-fsum[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        <span class=\"comment\">//注释处应填f`(g[j])</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这一部分的时间复杂度已被证明是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。<del>然而看上去很奇怪（</del></p>\n<h3 id=\"第二部分\"><a href=\"#第二部分\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h3><p>在第一部分中我们求出了所有质数的贡献，现在我们要扩展到全体整数。</p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">S(x,y)=\\sum_{i=1}^{x}[\\text{minp}(i)\\geqslant\\mathbb{P}_{y}]f(i)</script><p>也就是所有最小质因数大于等于$\\mathbb{P}_{y}$的数的$f$的值的和。我们最终要求的就是$S(n,1)+f(1)$。</p>\n<p>首先我们需要统计所有质数的贡献，也就是$F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})$。</p>\n<p>关于合数，我们枚举最小的质因数，然后把所有数除以这个数的若干次幂，得到的商的最小质因数应当大于这个数。</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)</script><p>但是还有一个问题是$S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$中不包括$f(1)$，因此$f(\\mathbb{P}_{i}^{j})$没有被统计，我们需要手动算进来</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)</script><p>于是</p>\n<script type=\"math/tex; mode=display\">S(x,y)=F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})+\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)</script><p>然后暴力搜，记忆化都不需要，时间复杂度还是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。<del>就很神奇（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=F[id]-fsum[y<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=g[i];p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=<span class=\"comment\">/*1*/</span>*S(x/p,i+<span class=\"number\">1</span>)+<span class=\"comment\">/*2*/</span>;</span><br><span class=\"line\">                <span class=\"comment\">//1处应填f(p)，2处应填f(p*g[i])</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"「Luogu-P4213」「模板」杜教筛（Sum）\"><a href=\"#「Luogu-P4213」「模板」杜教筛（Sum）\" class=\"headerlink\" title=\"「Luogu-P4213」「模板」杜教筛（Sum）\"></a><a href=\"https://www.luogu.org/problemnew/show/P4213\">「Luogu-P4213」「模板」杜教筛（Sum）</a></h3><p>首先我们有</p>\n<script type=\"math/tex; mode=display\">\\varphi(p)=\\text{id}(p)-1</script><script type=\"math/tex; mode=display\">\\mu(p)=-1</script><p>然后$\\text{id}$和$1$都是能$O(1)$求前缀和完全积性函数，因此可以用min_25筛搞。</p>\n<p>说起来比较麻烦，min_25筛不结合代码大概也很难理解，所以说直接上代码（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 50000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> t,n,sq,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[maxn+<span class=\"number\">1</span>],g[maxn+<span class=\"number\">1</span>],w[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],id1[maxn+<span class=\"number\">1</span>],id2[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> prmcnt[maxn+<span class=\"number\">1</span>],prmCnt[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> prmsum[maxn+<span class=\"number\">1</span>],prmSum[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">getPhi</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=(prmSum[id]-prmCnt[id])-(prmsum[y<span class=\"number\">-1</span>]-prmcnt[y<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=g[i];<span class=\"number\">1L</span>L*p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=<span class=\"number\">1L</span>L*p/g[i]*(g[i]<span class=\"number\">-1</span>)*getPhi(x/p,i+<span class=\"number\">1</span>)+<span class=\"number\">1L</span>L*p*(g[i]<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getMu</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=prmcnt[y<span class=\"number\">-1</span>]-prmCnt[id];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            res-=getMu(x/g[i],i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">            g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">            prmcnt[g[<span class=\"number\">0</span>]]=prmcnt[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            prmsum[g[<span class=\"number\">0</span>]]=prmsum[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*i*g[j]&lt;=maxn;++j)&#123;</span><br><span class=\"line\">            f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!(i%g[j]))</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;t;--t)&#123;</span><br><span class=\"line\">        cltstream::read(n);</span><br><span class=\"line\">        sq=<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\">        m=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;r=n/(n/l),l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            w[++m]=n/l;</span><br><span class=\"line\">            prmCnt[m]=w[m]<span class=\"number\">-1</span>;</span><br><span class=\"line\">            prmSum[m]=<span class=\"number\">1L</span>L*(w[m]<span class=\"number\">-1</span>)*(w[m]+<span class=\"number\">2</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(w[m]&lt;=sq)</span><br><span class=\"line\">                id1[w[m]]=m;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                id2[n/w[m]]=m;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m&amp;&amp;w[i]&gt;=<span class=\"number\">1L</span>L*g[j]*g[j];++i)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> id=w[i]/g[j]&lt;=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];</span><br><span class=\"line\">                prmCnt[i]-=prmCnt[id]-prmcnt[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">                prmSum[i]-=<span class=\"number\">1L</span>L*g[j]*(prmSum[id]-prmsum[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        cltstream::write(getPhi(n,<span class=\"number\">1</span>)+<span class=\"number\">1</span>,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(getMu(n,<span class=\"number\">1</span>)+<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/TIM截图20190214152934.png\" alt=\"\"></p>\n<p>上为min_25筛，下为杜教筛。</p>\n<p>min_25筛的优势不仅在于时间复杂度，它还可以筛一些乱七八糟的东西。就比如说</p>\n<h3 id=\"「LOJ6053」简单的函数\"><a href=\"#「LOJ6053」简单的函数\" class=\"headerlink\" title=\"「LOJ6053」简单的函数\"></a><a href=\"https://loj.ac/problem/6053\">「LOJ6053」简单的函数</a></h3><p>总结一下这个函数：</p>\n<script type=\"math/tex; mode=display\">f(1)=1</script><script type=\"math/tex; mode=display\">f\\left(\\prod_{i=1}^{N}p_{i}^{r_{i}}\\right)=\\prod_{i=1}^{N}(p_{i}\\otimes r_{i})</script><p>其中$\\otimes$表示按位异或。</p>\n<p><img src=\"/images/TIM图片20190103092627.png\" alt=\"\"></p>\n<p>按位异或从十进制的角度来看无异于玄学，因此杜教筛就没法做了（</p>\n<p>注意到</p>\n<script type=\"math/tex; mode=display\">f(p)=p\\otimes 1=\\begin{cases}\n&p+1\\;\\;&(p=2)\\\\\n&p-1\\;\\;&(p\\gt 2)\n\\end{cases}</script><p>我们可以在算前缀和时将$f(2)$当成$2-1$，然后特判一下加回来。</p>\n<p>然后还是要用min_25筛的前半部分筛出$\\text{id}$和$1$，其实和上面的$\\varphi$没多大区别就是加了点细节（</p>\n<p><a href=\"https://loj.ac/submission/336101\">好像这种能随便看代码的OJ可以直接扔个提交记录</a>。</p>\n<h3 id=\"「UOJ188」Sanrd\"><a href=\"#「UOJ188」Sanrd\" class=\"headerlink\" title=\"「UOJ188」Sanrd\"></a><a href=\"http://uoj.ac/problem/188\">「UOJ188」Sanrd</a></h3><p>次大质因数和。</p>\n<p>其实这个题面有点考阅读的。</p>\n<p>但是我们发现次大质因数这个函数和质数并没有什么关系，而且不积性。<del>说好的只能筛积性函数呢（</del></p>\n<p>我们来分析一下min_25筛的运行过程。</p>\n<p>调用到$S(x,y)$时，剩下的最小质因数大于等于$\\mathbb{P}_{y}$的数中，只有质数与$\\mathbb{P}_{y-1}$相乘之后能够得到次大质因数为$\\mathbb{P}_{y-1}$的数。这部分可以直接算。</p>\n<p>关于次大质因数大于$\\mathbb{P}_{y-1}$的，还是枚举递归暴力搜。然后还是没有算$f(\\mathbb{P}_{i}^{j})$，手动加。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> k=id[x&lt;=sq?x:n/x+sq];</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=(y&gt;<span class=\"number\">1</span>?g[y<span class=\"number\">-1</span>]:<span class=\"number\">0</span>)*(prmCnt[k]-y+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> p=g[i];p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=S(n,x/p,i+<span class=\"number\">1</span>)+g[i];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://uoj.ac/submission/324057\">提交记录</a>。</p>\n<p><del>一道比一道神仙，像我这种菜鸡只能抄题解了（</del></p>\n<h3 id=\"课后习题\"><a href=\"#课后习题\" class=\"headerlink\" title=\"课后习题\"></a>课后习题</h3><ul>\n<li><a href=\"https://loj.ac/problem/572\">「LOJ572」「LibreOJ Round #11」Misaka Network与求和</a></li>\n<li><a href=\"https://www.spoj.com/problems/DIVCNTK/\">「SP34096」DIVCNTK - Counting Divisors (general)</a></li>\n<li><a href=\"https://www.spoj.com/problems/GCDEX2/\">「SP19985」GCDEX2 - GCD Extreme (hard)</a></li>\n<li><a href=\"https://www.spoj.com/problems/APS2/\">「SP19975」APS2 - Amazing Prime Sequence (hard)</a></li>\n</ul>\n<h3 id=\"其它文献\"><a href=\"#其它文献\" class=\"headerlink\" title=\"其它文献\"></a>其它文献</h3><ul>\n<li><a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096\">https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096</a></li>\n<li><a href=\"https://www.cnblogs.com/zhoushuyu/p/9187319.html\">https://www.cnblogs.com/zhoushuyu/p/9187319.html</a></li>\n<li><a href=\"https://www.cnblogs.com/cjyyb/p/10169190.html\">https://www.cnblogs.com/cjyyb/p/10169190.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>标题来自某学长安利min_25筛的方式（</p>","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>我们知道，<a href=\"/number-theory-learning-notes/\">杜教筛</a>可以在$O(n^{\\tfrac{2}{3}})$的时间复杂度内计算某些给定的积性函数的前缀和。</p>\n<p>但是现在我们希望更快。于是我们有了min_25筛（</p>\n<p>以下，我们约定$p$是一个质数。$\\mathbb{P}_{i}$表示第$i$小的质数，$\\mathbb{P}_{0}=0$。$\\text{minp}(n)$表示$n$最小的质因数，$\\text{minp}(1)=0$。</p>\n<p>现在我们要求一个积性函数$f$的前缀和。我们需要它满足以下两条性质：</p>\n<ol>\n<li>$f(p)$是一个<strong>可以快速求前缀和的完全积性函数</strong>，或者能用多个这样的函数运算得到。</li>\n<li>$f(p^{k})$可以快速求，大概$O(k)$以内就可以。</li>\n</ol>\n<h3 id=\"第一部分\"><a href=\"#第一部分\" class=\"headerlink\" title=\"第一部分\"></a>第一部分</h3><p>我们要对每一个$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，求出</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)</script><p>定义</p>\n<script type=\"math/tex; mode=display\">F(x,y)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}\\vee\\text{minp}(i)\\gt\\mathbb{P}_{y}]f^{\\prime}(i)</script><p>也就是把所有质数和最小质因数大于$\\mathbb{P}_y$的合数全部当成质数代入$f^{\\prime}$求值并求和。不难发现</p>\n<script type=\"math/tex; mode=display\">F(x,+\\infty)=\\sum_{i=1}^{x}[i\\in\\mathbb{P}]f(i)</script><p>我们回忆一下埃式筛法的运行过程。</p>\n<p>筛完$k$次后，我们除去了最小质因数小于等于$\\mathbb{P}_{k}$的合数，剩下了质数和最小质因数大于$\\mathbb{P}_k$的合数。</p>\n<p>可以看到这和$F(x,y)$的定义十分吻合。$F(x,y)$就是埃式筛法筛完$y$次后，没有被筛掉的数的$f^{\\prime}$的值的和。</p>\n<p>首先，第$y$次筛掉的最小的数很明显是$\\mathbb{P}_{y}^{2}$，如果$\\mathbb{P}_{y}^{2}\\gt x$，我们什么也筛不掉，此时$F(x,y)=F(x,y-1)$。</p>\n<p>也因此，筛质数筛到$\\sqrt{n}$即可。</p>\n<p>否则，即$\\mathbb{P}_{y}^{2}\\leqslant x$，我们将所有数除以$\\mathbb{P}_{y}$，之前所有最小质因数等于$\\mathbb{P}_{y}$的合数一一对应到了现在所有大于等于$\\mathbb{P}_{y}$的数。</p>\n<p>又因为$f^{\\prime}$是完全积性的，假如我们有一个需要筛掉的数$z$，我们可以通过$f^{\\prime}(\\cfrac{z}{\\mathbb{P}_{y}})f^{\\prime}(\\mathbb{P}_{y})$计算$f^{\\prime}(z)$。</p>\n<p>那么看起来</p>\n<script type=\"math/tex; mode=display\">F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)</script><p>$F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)$包含了三类数的$f^{\\prime}$的值：</p>\n<ol>\n<li>大于等于$\\mathbb{P}_{y}$的质数。</li>\n<li>最小质因数大于等于$\\mathbb{P}_{y}$（大于$\\mathbb{P}_{y-1}$）的合数。</li>\n<li>小于$\\mathbb{P}_{y}$的质数。</li>\n</ol>\n<p>但是很明显第三类数不能被除去，因此实际上</p>\n<script type=\"math/tex; mode=display\">F(x,y)=F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)</script><p>综上所述</p>\n<script type=\"math/tex; mode=display\">F(x,y)=\\begin{cases}\n&F(x,y-1)-f^{\\prime}(\\mathbb{P}_{y})\\left(F(\\lfloor\\cfrac{n}{\\mathbb{P}_{y}}\\rfloor,y-1)-\\sum\\limits_{i=1}^{y-1}f^{\\prime}(\\mathbb{P}_{i})\\right)\\;\\;&(\\mathbb{P}_{y}^{2}\\leqslant x)\\\\\n&F(x,y-1)&(\\mathbb{P}_{y}^{2}\\gt x)\n\\end{cases}</script><p>初值为</p>\n<script type=\"math/tex; mode=display\">F(x,0)=\\sum_{i=2}^{x}f^{\\prime}(i)</script><p>注意到第二维只与$y-1$有关，我们可以滚掉。</p>\n<p>还有一个问题。这类题目的$n$会很大，我们无法开一个长度为$n$的数组。</p>\n<p>因为$x=\\lfloor\\cfrac{n}{i}\\rfloor(i\\in\\mathbb{N}\\cap[1,n])$，这样的$x$最多只有$2\\sqrt{n}$个，我们可以离散化存储。</p>\n<p>具体实现细节我说不清，看代码吧（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cltstream::read(n);</span><br><span class=\"line\">sq=<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=sq;++i)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">        g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">        fsum[g[<span class=\"number\">0</span>]]=fsum[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+<span class=\"comment\">/**/</span>;</span><br><span class=\"line\">        <span class=\"comment\">//注释处应填f`(i)</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;i*g[j]&lt;=sq;++j)&#123;</span><br><span class=\"line\">        f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(i%g[j]))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">m=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;r=n/(n/l),l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    w[++m]=n/l;</span><br><span class=\"line\">    <span class=\"comment\">//编号对应的离散化前的值</span></span><br><span class=\"line\">    F[m]=<span class=\"comment\">/**/</span>;</span><br><span class=\"line\">    <span class=\"comment\">//注释处应填\\sum_&#123;t=2&#125;^&#123;w[m]&#125;f`(t)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w[m]&lt;=sq)</span><br><span class=\"line\">        id1[w[m]]=m;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        id2[n/w[m]]=m;</span><br><span class=\"line\">    <span class=\"comment\">//分段存储值对应的编号，这样数组只需要开到sqrt&#123;n&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m&amp;&amp;w[i]&gt;=g[j]*g[j];++i)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//w[i]&gt;=g[j]*g[j]，所以w[i]/g[j]&gt;=g[j]</span></span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=w[i]/g[j]&lt;=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];</span><br><span class=\"line\">        F[i]-=<span class=\"comment\">/**/</span>*(F[id]-fsum[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        <span class=\"comment\">//注释处应填f`(g[j])</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这一部分的时间复杂度已被证明是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。<del>然而看上去很奇怪（</del></p>\n<h3 id=\"第二部分\"><a href=\"#第二部分\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h3><p>在第一部分中我们求出了所有质数的贡献，现在我们要扩展到全体整数。</p>\n<p>定义</p>\n<script type=\"math/tex; mode=display\">S(x,y)=\\sum_{i=1}^{x}[\\text{minp}(i)\\geqslant\\mathbb{P}_{y}]f(i)</script><p>也就是所有最小质因数大于等于$\\mathbb{P}_{y}$的数的$f$的值的和。我们最终要求的就是$S(n,1)+f(1)$。</p>\n<p>首先我们需要统计所有质数的贡献，也就是$F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})$。</p>\n<p>关于合数，我们枚举最小的质因数，然后把所有数除以这个数的若干次幂，得到的商的最小质因数应当大于这个数。</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)</script><p>但是还有一个问题是$S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)$中不包括$f(1)$，因此$f(\\mathbb{P}_{i}^{j})$没有被统计，我们需要手动算进来</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)</script><p>于是</p>\n<script type=\"math/tex; mode=display\">S(x,y)=F(x,+\\infty)-\\sum\\limits_{i=1}^{y-1}f(\\mathbb{P}_{i})+\\sum_{i=y}^{\\mathbb{P}_{i}^{2}\\leqslant n}\\sum_{j=1}^{\\mathbb{P}_{i}^{j+1}\\leqslant n}\\left(f(\\mathbb{P}_{i}^{j})S(\\lfloor\\cfrac{x}{\\mathbb{P}_{i}^{j}}\\rfloor,i+1)+f(\\mathbb{P}_{i}^{j+1})\\right)</script><p>然后暴力搜，记忆化都不需要，时间复杂度还是$O(\\cfrac{n^{\\tfrac{3}{4}}}{\\log n})$。<del>就很神奇（</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=F[id]-fsum[y<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=g[i];p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=<span class=\"comment\">/*1*/</span>*S(x/p,i+<span class=\"number\">1</span>)+<span class=\"comment\">/*2*/</span>;</span><br><span class=\"line\">                <span class=\"comment\">//1处应填f(p)，2处应填f(p*g[i])</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"「Luogu-P4213」「模板」杜教筛（Sum）\"><a href=\"#「Luogu-P4213」「模板」杜教筛（Sum）\" class=\"headerlink\" title=\"「Luogu-P4213」「模板」杜教筛（Sum）\"></a><a href=\"https://www.luogu.org/problemnew/show/P4213\">「Luogu-P4213」「模板」杜教筛（Sum）</a></h3><p>首先我们有</p>\n<script type=\"math/tex; mode=display\">\\varphi(p)=\\text{id}(p)-1</script><script type=\"math/tex; mode=display\">\\mu(p)=-1</script><p>然后$\\text{id}$和$1$都是能$O(1)$求前缀和完全积性函数，因此可以用min_25筛搞。</p>\n<p>说起来比较麻烦，min_25筛不结合代码大概也很难理解，所以说直接上代码（</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 50000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> t,n,sq,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[maxn+<span class=\"number\">1</span>],g[maxn+<span class=\"number\">1</span>],w[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>],id1[maxn+<span class=\"number\">1</span>],id2[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> prmcnt[maxn+<span class=\"number\">1</span>],prmCnt[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> prmsum[maxn+<span class=\"number\">1</span>],prmSum[(maxn&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">getPhi</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=(prmSum[id]-prmCnt[id])-(prmsum[y<span class=\"number\">-1</span>]-prmcnt[y<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=g[i];<span class=\"number\">1L</span>L*p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=<span class=\"number\">1L</span>L*p/g[i]*(g[i]<span class=\"number\">-1</span>)*getPhi(x/p,i+<span class=\"number\">1</span>)+<span class=\"number\">1L</span>L*p*(g[i]<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getMu</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> id=x&lt;=sq?id1[x]:id2[n/x];</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=prmcnt[y<span class=\"number\">-1</span>]-prmCnt[id];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            res-=getMu(x/g[i],i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=maxn;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!f[i])&#123;</span><br><span class=\"line\">            g[++g[<span class=\"number\">0</span>]]=i;</span><br><span class=\"line\">            prmcnt[g[<span class=\"number\">0</span>]]=prmcnt[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            prmsum[g[<span class=\"number\">0</span>]]=prmsum[g[<span class=\"number\">0</span>]<span class=\"number\">-1</span>]+i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*i*g[j]&lt;=maxn;++j)&#123;</span><br><span class=\"line\">            f[i*g[j]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!(i%g[j]))</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;t;--t)&#123;</span><br><span class=\"line\">        cltstream::read(n);</span><br><span class=\"line\">        sq=<span class=\"built_in\">sqrt</span>(n);</span><br><span class=\"line\">        m=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;r=n/(n/l),l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            w[++m]=n/l;</span><br><span class=\"line\">            prmCnt[m]=w[m]<span class=\"number\">-1</span>;</span><br><span class=\"line\">            prmSum[m]=<span class=\"number\">1L</span>L*(w[m]<span class=\"number\">-1</span>)*(w[m]+<span class=\"number\">2</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(w[m]&lt;=sq)</span><br><span class=\"line\">                id1[w[m]]=m;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                id2[n/w[m]]=m;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];++j)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m&amp;&amp;w[i]&gt;=<span class=\"number\">1L</span>L*g[j]*g[j];++i)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> id=w[i]/g[j]&lt;=sq?id1[w[i]/g[j]]:id2[n/(w[i]/g[j])];</span><br><span class=\"line\">                prmCnt[i]-=prmCnt[id]-prmcnt[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">                prmSum[i]-=<span class=\"number\">1L</span>L*g[j]*(prmSum[id]-prmsum[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        cltstream::write(getPhi(n,<span class=\"number\">1</span>)+<span class=\"number\">1</span>,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(getMu(n,<span class=\"number\">1</span>)+<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/TIM截图20190214152934.png\" alt=\"\"></p>\n<p>上为min_25筛，下为杜教筛。</p>\n<p>min_25筛的优势不仅在于时间复杂度，它还可以筛一些乱七八糟的东西。就比如说</p>\n<h3 id=\"「LOJ6053」简单的函数\"><a href=\"#「LOJ6053」简单的函数\" class=\"headerlink\" title=\"「LOJ6053」简单的函数\"></a><a href=\"https://loj.ac/problem/6053\">「LOJ6053」简单的函数</a></h3><p>总结一下这个函数：</p>\n<script type=\"math/tex; mode=display\">f(1)=1</script><script type=\"math/tex; mode=display\">f\\left(\\prod_{i=1}^{N}p_{i}^{r_{i}}\\right)=\\prod_{i=1}^{N}(p_{i}\\otimes r_{i})</script><p>其中$\\otimes$表示按位异或。</p>\n<p><img src=\"/images/TIM图片20190103092627.png\" alt=\"\"></p>\n<p>按位异或从十进制的角度来看无异于玄学，因此杜教筛就没法做了（</p>\n<p>注意到</p>\n<script type=\"math/tex; mode=display\">f(p)=p\\otimes 1=\\begin{cases}\n&p+1\\;\\;&(p=2)\\\\\n&p-1\\;\\;&(p\\gt 2)\n\\end{cases}</script><p>我们可以在算前缀和时将$f(2)$当成$2-1$，然后特判一下加回来。</p>\n<p>然后还是要用min_25筛的前半部分筛出$\\text{id}$和$1$，其实和上面的$\\varphi$没多大区别就是加了点细节（</p>\n<p><a href=\"https://loj.ac/submission/336101\">好像这种能随便看代码的OJ可以直接扔个提交记录</a>。</p>\n<h3 id=\"「UOJ188」Sanrd\"><a href=\"#「UOJ188」Sanrd\" class=\"headerlink\" title=\"「UOJ188」Sanrd\"></a><a href=\"http://uoj.ac/problem/188\">「UOJ188」Sanrd</a></h3><p>次大质因数和。</p>\n<p>其实这个题面有点考阅读的。</p>\n<p>但是我们发现次大质因数这个函数和质数并没有什么关系，而且不积性。<del>说好的只能筛积性函数呢（</del></p>\n<p>我们来分析一下min_25筛的运行过程。</p>\n<p>调用到$S(x,y)$时，剩下的最小质因数大于等于$\\mathbb{P}_{y}$的数中，只有质数与$\\mathbb{P}_{y-1}$相乘之后能够得到次大质因数为$\\mathbb{P}_{y-1}$的数。这部分可以直接算。</p>\n<p>关于次大质因数大于$\\mathbb{P}_{y-1}$的，还是枚举递归暴力搜。然后还是没有算$f(\\mathbb{P}_{i}^{j})$，手动加。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;=<span class=\"number\">1</span>||g[y]&gt;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> k=id[x&lt;=sq?x:n/x+sq];</span><br><span class=\"line\">        re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=(y&gt;<span class=\"number\">1</span>?g[y<span class=\"number\">-1</span>]:<span class=\"number\">0</span>)*(prmCnt[k]-y+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=y;i&lt;=g[<span class=\"number\">0</span>]&amp;&amp;<span class=\"number\">1L</span>L*g[i]*g[i]&lt;=x;++i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> p=g[i];p*g[i]&lt;=x;p*=g[i])</span><br><span class=\"line\">                res+=S(n,x/p,i+<span class=\"number\">1</span>)+g[i];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://uoj.ac/submission/324057\">提交记录</a>。</p>\n<p><del>一道比一道神仙，像我这种菜鸡只能抄题解了（</del></p>\n<h3 id=\"课后习题\"><a href=\"#课后习题\" class=\"headerlink\" title=\"课后习题\"></a>课后习题</h3><ul>\n<li><a href=\"https://loj.ac/problem/572\">「LOJ572」「LibreOJ Round #11」Misaka Network与求和</a></li>\n<li><a href=\"https://www.spoj.com/problems/DIVCNTK/\">「SP34096」DIVCNTK - Counting Divisors (general)</a></li>\n<li><a href=\"https://www.spoj.com/problems/GCDEX2/\">「SP19985」GCDEX2 - GCD Extreme (hard)</a></li>\n<li><a href=\"https://www.spoj.com/problems/APS2/\">「SP19975」APS2 - Amazing Prime Sequence (hard)</a></li>\n</ul>\n<h3 id=\"其它文献\"><a href=\"#其它文献\" class=\"headerlink\" title=\"其它文献\"></a>其它文献</h3><ul>\n<li><a href=\"https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096\">https://www.luogu.org/blog/ShadowassIIXVIIIIV/solution-sp34096</a></li>\n<li><a href=\"https://www.cnblogs.com/zhoushuyu/p/9187319.html\">https://www.cnblogs.com/zhoushuyu/p/9187319.html</a></li>\n<li><a href=\"https://www.cnblogs.com/cjyyb/p/10169190.html\">https://www.cnblogs.com/cjyyb/p/10169190.html</a></li>\n</ul>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-21T02:57:11.000Z","title":"动态树学习笔记","password":null,"_content":"24号要出去学习，趁现在先自己xjb学点啥。\n\n<!-- more -->\n\n### 基本概念\n\n首先我们有一道[模板题](https://www.luogu.org/problemnew/show/P3690)。\n\n我们所熟悉的树链剖分指的是重链剖分。也就是定义一个节点的子树大小最大的儿子为它的重儿子，连接重儿子的边叫做重边，若干条重边连在一起形成重链。除了重儿子以外的儿子被称为轻儿子，连接轻儿子的边叫做轻边。\n\n这样一来，我们给原树的节点重新标号，使得一条重链上的所有节点的新标号是连续的，然后通过线段树或者树状数组等能够处理区间的数据结构进行维护，通过轻边合并两条重链上的信息。时间复杂度一般是$O(n\\log^{2}n)$。\n\n但是这样有一个问题，因为线段树，又或者是树状数组，都是静态的数据结构，它们不能支持我们在上面xjb捣鼓。反映到原树上，这就意味着我们边的轻重只能也是静态的。这会带来很多不便。就比如说，我们现在要维护一片森林，要求支持动态连边、删边，同时需要查询某条链上的信息。\n\n很明显这是重链剖分无法胜任的。为了解决这个问题，我们需要一种能够动态修改边的轻重的算法，也就是实链剖分。\n\n实链剖分一般被称为LCT，全称~~Link-Cat Tree~~ ~~Linear Challestend Transformation~~ Link-Cut Tree，也就是动态树。\n\n与重链剖分类似地，我们根据实际情况，随便钦定一个节点的某个儿子为它的实儿子，连接实儿子的边叫做实边，若干条实边连在一起形成实链。除了实儿子以外的儿子被称为虚儿子，连接虚儿子的边叫做虚边。\n\n为了实现它，我们需要通过更加灵活的Splay来维护每一条实链。它具有如下性质：\n\n1. 每棵Splay维护的是一条原森林中深度严格递增的路径，也就是一条实链。\n2. 每个节点属于且仅属于一棵Splay。\n3. 如果一个节点在原森林中有多个儿子，只有一个与它在同一颗Splay中，也就是实儿子。其他儿子所在的Splay的根节点有一根父指针指向这个节点，但是从这个节点访问不到它们。\n4. 不同于重链剖分，就算一个节点有至少一个儿子，也可以没有实儿子。\n\n以下图片来自https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。\n\n我们来看这样一棵树\n\n![](/images/1309909-20180123095924037-1618037447.png)\n\n其中粗线表示实边，虚线表示虚边。\n\n它所对应的Splay森林可能长下面这样，每一个绿框内都是一棵Splay。\n\n![](/images/1309909-20180123095955350-1680422636.png)\n\n当然这并不是唯一的。\n\n为了方便，我先放出我Splay的代码实现\n\n```cpp\nstruct SplayNode{\n\tSplayNode *ftr,*ls,*rs;\n\tint val,sum,rev;\n\n\tinline int isRoot(){\n\t\treturn ftr==NULL||(ftr->ls!=this&&ftr->rs!=this);\n\t\t//判断一个节点是否是原森林中的一棵树的树根\n\t}\n\n\tinline void reverse(){\n\t\tstd::swap(ls,rs);\n\t\trev^=1;\n\t}\n\n\tinline void pushDown(){\n\t\tif(rev){\n\t\t\tif(ls!=NULL)\n\t\t\t\tls->reverse();\n\t\t\tif(rs!=NULL)\n\t\t\t\trs->reverse();\n\t\t\trev=0;\n\t\t}\n\t}\n\n\tinline void pushUp(){\n\t\tsum=val;\n\t\tif(ls!=NULL)\n\t\t\tsum^=ls->sum;\n\t\tif(rs!=NULL)\n\t\t\tsum^=rs->sum;\n\t}\n};\n\nSplayNode mempool[maxn+1];\n\ninline void rotate(re SplayNode* p){\n\tre SplayNode* q=p->ftr;\n\tq->pushDown();\n\tp->pushDown();\n\tp->ftr=q->ftr;\n\tif(p->ftr!=NULL){\n\t\tif(p->ftr->ls==q)\n\t\t\tp->ftr->ls=p;\n\t\tif(p->ftr->rs==q)\n\t\t\tp->ftr->rs=p;\n\t}\n\tif(q->rs==p){\n\t\tq->rs=p->ls;\n\t\tif(q->rs!=NULL)\n\t\t\tq->rs->ftr=q;\n\t\tp->ls=q;\n\t\tq->ftr=p;\n\t}\n\telse{\n\t\tq->ls=p->rs;\n\t\tif(q->ls!=NULL)\n\t\t\tq->ls->ftr=q;\n\t\tp->rs=q;\n\t\tq->ftr=p;\n\t}\n\tq->pushUp();\n\tp->pushUp();\n}\n\ninline void splay(re SplayNode* p){\n//不同于我们以前写的Splay，现在我们只需要将一个节点旋转到根即可\n\tfor(;!p->isRoot();rotate(p))\n\t\tif(!p->ftr->isRoot())\n\t\t\trotate((p->ftr->ftr->ls==p->ftr)==(p->ftr->ls==p)?p->ftr:p);\n}\n```\n\n### access\n\n首先我们有一个基本操作\n\n```cpp\nvoid access(SplayNode*)\n```\n\n首先有一个问题是，这个单词怎么读？\n\n`/ək'ses/`？不不不应该是`/'ækses/`。\n\n如果您有兴趣，可以在[这里](https://github.com/shimohq/chinese-programmer-wrong-pronunciation)看看自己以前都读错了多少单词（\n\n这个函数的作用是打通指定节点到根节点的路径，将这条路径修改成实链，并抛弃指定节点自身的实儿子。\n\n我们来看看这个函数的具体过程。还是上面的例子，现在我们调用`access(N)`，整棵树会变成这样\n\n![](/images/1309909-20180123101901740-2118178734.png)\n\n~~虽然说好像图上用的还是轻重……不过这些细节就不要在意啦（~~\n\n首先我们调用`splay(N)`，令$\\text{N}$成为它所在的Splay的根节点，然后它所在的实链中再往下的部分就到了它的右子树中，我们直接回收它的右儿子指针即可。需要注意的是，我们并没有切断这条边，只是让它变虚，因此它的右儿子的父指针不应该被修改。\n\n![](/images/1309909-20180123110136115-1112016464.png)\n\n向上找到$\\text{N}$的父亲$\\text{I}$，调用`splay(I)`，回收$\\text{I}$的右儿子指针。不过这一次，我们需要再令其指向$\\text{N}$，然后$\\text{N}$就成了$\\text{I}$的实儿子了。\n\n![](/images/1309909-20180123110156272-1242463729.png)\n\n然后继续向上，找到$\\text{I}$的父亲$\\text{H}$，调用`splay(H)`，并令$\\text{H}$的右儿子指针指向$\\text{I}$。\n\n![](/images/1309909-20180123110209772-2057141058.png)\n\n最后一步，找到$\\text{H}$的父亲$\\text{A}$，调用`splay(A)`，并令$\\text{A}$的右儿子指针指向$\\text{H}$。\n\n![](/images/1309909-20180123110213709-49169640.png)\n\n然后我们看到，$\\text{N}$和$\\text{A}$到了同一颗Splay中，完成任务，返回。\n\n代码实现：\n\n```cpp\ninline void access(re SplayNode* p){\n\tsplay(p);\n\tp->pushDown();\n\tp->rs=NULL;\n\tp->pushUp();\n\tfor(re SplayNode* q=p;q->ftr!=NULL;q=q->ftr){\n\t\tsplay(q->ftr);\n\t\tq->ftr->pushDown();\n\t\tq->ftr->rs=q;\n\t\tq->ftr->pushUp();\n\t}\n\tsplay(p);\n\t//据说闲着没事瞎转转有利于摊开时间复杂度（\n}\n```\n\n### findRoot\n\n有了`access`，我们就可以随心所欲的瞎搞了。比如说\n\n```cpp\nSplayNode* findRoot(SplayNode*)\n```\n\n返回给定节点所在的树的树根，也就是调用完`access`后它所在的实链上深度最小的节点。\n\n因为`access`的最后自带了一个`splay`，这个时候给定节点已经是Splay的根节点了，我们直接循环跳左儿子指针即可。\n\n```cpp\ninline SplayNode* findRoot(re SplayNode* p){\n\taccess(p);\n\tfor(;p->ls!=NULL;p=p->ls);\n\tsplay(p);\n\treturn p;\n}\n```\n\n### makeRoot && split\n\n现在我们要提取出树上两个给定节点之间的路径。但是我们知道，这样的路径不一定满足深度严格递增，也就是说，它可能不能够出现在一棵Splay中。\n\n不过办法总是有的。比如说我们指定了两个节点$x$和$y$，我们先调用`access(x)`，然后考虑翻转$x$的子树之后会发生什么。\n\n`access`结束后，$x$没有右子树，翻转之后就没有了左子树，也就是说，现在没有比$x$的深度更小的节点了。换句话说就是，$x$现在成为了树根。\n\n那么这样一来，$x$到$y$的路径就一定满足深度严格递增了，我们只需调用一次`access(y)`就可以把它抽出来。\n\n我们实现下面两个函数\n\n```cpp\nvoid makeRoot(SplayNode*)\n```\n\n令给定节点成为树根。\n\n```cpp\nvoid split(SplayNode*,SplayNode*)\n```\n\n抽出给定的两个节点之间的路径。不过虽然说模板题保证联通，还是有必要稍微考虑一下不连通的情况的。\n\n```cpp\ninline void makeRoot(re SplayNode* p){\n\taccess(p);\n\tp->reverse();\n}\n\ninline void split(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\taccess(q);\n}\n```\n\n### link\n\n我们需要实现函数\n\n```cpp\nvoid link(SplayNode*,SplayNode*)\n```\n\n在给定的两个节点间连一条边。特殊地，如果说给定的两个节点已经联通，什么都不做直接返回。不过这是模板题的要求，有些题可能会让你输出操作失败，这种情况下改一下返回值就行。\n\n思路很简单。假设我们指定$x$和$y$两个节点，首先调用`makeRoot(x)`，然后检查`findRoot(y)`的返回值。如果不是$x$，说明两个节点不连通，将$x$的父指针指向$y$；否则，即`findRoot(y)==x`，说明两个节点联通，直接返回。\n\n```cpp\ninline void link(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\tif(findRoot(q)!=p)\n\t\tp->ftr=q;\n}\n```\n\n### cut\n\n我们需要实现函数\n\n```cpp\nvoid cut(SplayNode*,SplayNode*)\n```\n\n切断给定的两个节点之间的边。不存在就什么也不做。\n\n需要注意的是，两个节点$x$和$y$之间直接有边相连，不仅要求$x$与$y$联通，还要求它们在Splay中是相邻的两个节点。为了避免讨论深度的大小关系，我们先调用`makeRoot(x)`，此时$y$应该是$x$的右儿子，并且它不能有左儿子。\n\n```cpp\ninline void cut(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\tif(findRoot(q)==p&&q->ftr==p&&q->ls==NULL){\n\t\tq->ftr=p->rs=NULL;\n\t\tp->pushUp();\n\t}\n}\n```\n\n把上面这么一些东西写好之后，再根据题目要求搞一搞，您就可以切掉模板题了。\n\n完整板子：\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 300000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n\n\ttemplate <typename _tp>\n\tinline void swap(_tp& x,_tp& y){\n\t\t_tp z=x;\n\t\tx=y;\n\t\ty=z;\n\t}\n}\n\nstruct LinkCutTree{\n\tstruct SplayNode{\n\t\tSplayNode *ftr,*ls,*rs;\n\t\tint val,sum,rev;\n\n\t\tinline int isRoot(){\n\t\t\treturn ftr==NULL||(ftr->ls!=this&&ftr->rs!=this);\n\t\t}\n\n\t\tinline void reverse(){\n\t\t\tstd::swap(ls,rs);\n\t\t\trev^=1;\n\t\t}\n\n\t\tinline void pushDown(){\n\t\t\tif(rev){\n\t\t\t\tif(ls!=NULL)\n\t\t\t\t\tls->reverse();\n\t\t\t\tif(rs!=NULL)\n\t\t\t\t\trs->reverse();\n\t\t\t\trev=0;\n\t\t\t}\n\t\t}\n\n\t\tinline void pushUp(){\n\t\t\tsum=val;\n\t\t\tif(ls!=NULL)\n\t\t\t\tsum^=ls->sum;\n\t\t\tif(rs!=NULL)\n\t\t\t\tsum^=rs->sum;\n\t\t}\n\t};\n\n\tSplayNode mempool[maxn+1];\n\n\tinline void rotate(re SplayNode* p){\n\t\tre SplayNode* q=p->ftr;\n\t\tq->pushDown();\n\t\tp->pushDown();\n\t\tp->ftr=q->ftr;\n\t\tif(p->ftr!=NULL){\n\t\t\tif(p->ftr->ls==q)\n\t\t\t\tp->ftr->ls=p;\n\t\t\tif(p->ftr->rs==q)\n\t\t\t\tp->ftr->rs=p;\n\t\t}\n\t\tif(q->rs==p){\n\t\t\tq->rs=p->ls;\n\t\t\tif(q->rs!=NULL)\n\t\t\t\tq->rs->ftr=q;\n\t\t\tp->ls=q;\n\t\t\tq->ftr=p;\n\t\t}\n\t\telse{\n\t\t\tq->ls=p->rs;\n\t\t\tif(q->ls!=NULL)\n\t\t\t\tq->ls->ftr=q;\n\t\t\tp->rs=q;\n\t\t\tq->ftr=p;\n\t\t}\n\t\tq->pushUp();\n\t\tp->pushUp();\n\t}\n\n\tinline void splay(re SplayNode* p){\n\t\tfor(;!p->isRoot();rotate(p))\n\t\t\tif(!p->ftr->isRoot())\n\t\t\t\trotate((p->ftr->ftr->ls==p->ftr)==(p->ftr->ls==p)?p->ftr:p);\n\t}\n\n\tinline void build(re int n){\n\t\tfor(re int i=1;i<=n;++i){\n\t\t\tre SplayNode* p=mempool+i;\n\t\t\tp->ftr=p->ls=p->rs=NULL;\n\t\t\tcltstream::read(p->val);\n\t\t\tp->sum=p->val;\n\t\t\tp->rev=0;\n\t\t}\n\t}\n\n\tinline void access(re SplayNode* p){\n\t\tsplay(p);\n\t\tp->pushDown();\n\t\tp->rs=NULL;\n\t\tp->pushUp();\n\t\tfor(re SplayNode* q=p;q->ftr!=NULL;q=q->ftr){\n\t\t\tsplay(q->ftr);\n\t\t\tq->ftr->pushDown();\n\t\t\tq->ftr->rs=q;\n\t\t\tq->ftr->pushUp();\n\t\t}\n\t\tsplay(p);\n\t}\n\n\tinline SplayNode* findRoot(re SplayNode* p){\n\t\taccess(p);\n\t\tfor(;p->ls!=NULL;p=p->ls);\n\t\tsplay(p);\n\t\treturn p;\n\t}\n\n\tinline void makeRoot(re SplayNode* p){\n\t\taccess(p);\n\t\tp->reverse();\n\t}\n\n\tinline void split(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\taccess(q);\n\t}\n\n\tinline void link(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\tif(findRoot(q)!=p)\n\t\t\tp->ftr=q;\n\t}\n\n\tinline void cut(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\tif(findRoot(q)==p&&q->ftr==p&&q->ls==NULL){\n\t\t\tq->ftr=p->rs=NULL;\n\t\t\tp->pushUp();\n\t\t}\n\t}\n\n\tinline int queryPathXorSum(re int x,re int y){\n\t\tsplit(mempool+x,mempool+y);\n\t\treturn (mempool+y)->sum;\n\t}\n\n\tinline void createEdge(re int x,re int y){\n\t\tlink(mempool+x,mempool+y);\n\t}\n\n\tinline void destoryEdge(re int x,re int y){\n\t\tcut(mempool+x,mempool+y);\n\t}\n\n\tinline void modifyVertice(re int x,re int y){\n\t\tsplay(mempool+x);\n\t\t(mempool+x)->val=y;\n\t\t(mempool+x)->pushUp();\n\t}\n\n\tvoid printTree(re SplayNode* p){\n\t\tif(p!=NULL){\n\t\t\tp->pushDown();\n\t\t\tprintTree(p->ls);\n\t\t\tprintf(\n\t\t\t\t\"%d(%d,%d,%d)\\n\",\n\t\t\t\tp-mempool,\n\t\t\t\tp->ftr!=NULL?p->ftr-mempool:-1,\n\t\t\t\tp->ls!=NULL?p->ls-mempool:-1,\n\t\t\t\tp->rs!=NULL?p->rs-mempool:-1\n\t\t\t);\n\t\t\tprintTree(p->rs);\n\t\t}\n\t}\n};\n\nint n,m;\nLinkCutTree QAQ;\n\nint main(){\\\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tQAQ.build(n);\n\tfor(re int i=1;i<=m;++i){\n\t\tint opt,x,y;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(x);\n\t\tcltstream::read(y);\n\t\tswitch(opt){\n\t\t\tcase 0:\n\t\t\t\tcltstream::write(QAQ.queryPathXorSum(x,y),10);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tQAQ.createEdge(x,y);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tQAQ.destoryEdge(x,y);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tQAQ.modifyVertice(x,y);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n~~是不是感觉很好写呢（~~\n\n### 用LCT维护子树信息\n\n咕咕咕。\n","source":"_posts/2019-01-21-link-cut-tree-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-21 10:57:11\ntitle: 动态树学习笔记\ntags:\n  - Splay\n  - LCT\ncategories:\n  - 学习笔记\npassword:\n---\n24号要出去学习，趁现在先自己xjb学点啥。\n\n<!-- more -->\n\n### 基本概念\n\n首先我们有一道[模板题](https://www.luogu.org/problemnew/show/P3690)。\n\n我们所熟悉的树链剖分指的是重链剖分。也就是定义一个节点的子树大小最大的儿子为它的重儿子，连接重儿子的边叫做重边，若干条重边连在一起形成重链。除了重儿子以外的儿子被称为轻儿子，连接轻儿子的边叫做轻边。\n\n这样一来，我们给原树的节点重新标号，使得一条重链上的所有节点的新标号是连续的，然后通过线段树或者树状数组等能够处理区间的数据结构进行维护，通过轻边合并两条重链上的信息。时间复杂度一般是$O(n\\log^{2}n)$。\n\n但是这样有一个问题，因为线段树，又或者是树状数组，都是静态的数据结构，它们不能支持我们在上面xjb捣鼓。反映到原树上，这就意味着我们边的轻重只能也是静态的。这会带来很多不便。就比如说，我们现在要维护一片森林，要求支持动态连边、删边，同时需要查询某条链上的信息。\n\n很明显这是重链剖分无法胜任的。为了解决这个问题，我们需要一种能够动态修改边的轻重的算法，也就是实链剖分。\n\n实链剖分一般被称为LCT，全称~~Link-Cat Tree~~ ~~Linear Challestend Transformation~~ Link-Cut Tree，也就是动态树。\n\n与重链剖分类似地，我们根据实际情况，随便钦定一个节点的某个儿子为它的实儿子，连接实儿子的边叫做实边，若干条实边连在一起形成实链。除了实儿子以外的儿子被称为虚儿子，连接虚儿子的边叫做虚边。\n\n为了实现它，我们需要通过更加灵活的Splay来维护每一条实链。它具有如下性质：\n\n1. 每棵Splay维护的是一条原森林中深度严格递增的路径，也就是一条实链。\n2. 每个节点属于且仅属于一棵Splay。\n3. 如果一个节点在原森林中有多个儿子，只有一个与它在同一颗Splay中，也就是实儿子。其他儿子所在的Splay的根节点有一根父指针指向这个节点，但是从这个节点访问不到它们。\n4. 不同于重链剖分，就算一个节点有至少一个儿子，也可以没有实儿子。\n\n以下图片来自https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。\n\n我们来看这样一棵树\n\n![](/images/1309909-20180123095924037-1618037447.png)\n\n其中粗线表示实边，虚线表示虚边。\n\n它所对应的Splay森林可能长下面这样，每一个绿框内都是一棵Splay。\n\n![](/images/1309909-20180123095955350-1680422636.png)\n\n当然这并不是唯一的。\n\n为了方便，我先放出我Splay的代码实现\n\n```cpp\nstruct SplayNode{\n\tSplayNode *ftr,*ls,*rs;\n\tint val,sum,rev;\n\n\tinline int isRoot(){\n\t\treturn ftr==NULL||(ftr->ls!=this&&ftr->rs!=this);\n\t\t//判断一个节点是否是原森林中的一棵树的树根\n\t}\n\n\tinline void reverse(){\n\t\tstd::swap(ls,rs);\n\t\trev^=1;\n\t}\n\n\tinline void pushDown(){\n\t\tif(rev){\n\t\t\tif(ls!=NULL)\n\t\t\t\tls->reverse();\n\t\t\tif(rs!=NULL)\n\t\t\t\trs->reverse();\n\t\t\trev=0;\n\t\t}\n\t}\n\n\tinline void pushUp(){\n\t\tsum=val;\n\t\tif(ls!=NULL)\n\t\t\tsum^=ls->sum;\n\t\tif(rs!=NULL)\n\t\t\tsum^=rs->sum;\n\t}\n};\n\nSplayNode mempool[maxn+1];\n\ninline void rotate(re SplayNode* p){\n\tre SplayNode* q=p->ftr;\n\tq->pushDown();\n\tp->pushDown();\n\tp->ftr=q->ftr;\n\tif(p->ftr!=NULL){\n\t\tif(p->ftr->ls==q)\n\t\t\tp->ftr->ls=p;\n\t\tif(p->ftr->rs==q)\n\t\t\tp->ftr->rs=p;\n\t}\n\tif(q->rs==p){\n\t\tq->rs=p->ls;\n\t\tif(q->rs!=NULL)\n\t\t\tq->rs->ftr=q;\n\t\tp->ls=q;\n\t\tq->ftr=p;\n\t}\n\telse{\n\t\tq->ls=p->rs;\n\t\tif(q->ls!=NULL)\n\t\t\tq->ls->ftr=q;\n\t\tp->rs=q;\n\t\tq->ftr=p;\n\t}\n\tq->pushUp();\n\tp->pushUp();\n}\n\ninline void splay(re SplayNode* p){\n//不同于我们以前写的Splay，现在我们只需要将一个节点旋转到根即可\n\tfor(;!p->isRoot();rotate(p))\n\t\tif(!p->ftr->isRoot())\n\t\t\trotate((p->ftr->ftr->ls==p->ftr)==(p->ftr->ls==p)?p->ftr:p);\n}\n```\n\n### access\n\n首先我们有一个基本操作\n\n```cpp\nvoid access(SplayNode*)\n```\n\n首先有一个问题是，这个单词怎么读？\n\n`/ək'ses/`？不不不应该是`/'ækses/`。\n\n如果您有兴趣，可以在[这里](https://github.com/shimohq/chinese-programmer-wrong-pronunciation)看看自己以前都读错了多少单词（\n\n这个函数的作用是打通指定节点到根节点的路径，将这条路径修改成实链，并抛弃指定节点自身的实儿子。\n\n我们来看看这个函数的具体过程。还是上面的例子，现在我们调用`access(N)`，整棵树会变成这样\n\n![](/images/1309909-20180123101901740-2118178734.png)\n\n~~虽然说好像图上用的还是轻重……不过这些细节就不要在意啦（~~\n\n首先我们调用`splay(N)`，令$\\text{N}$成为它所在的Splay的根节点，然后它所在的实链中再往下的部分就到了它的右子树中，我们直接回收它的右儿子指针即可。需要注意的是，我们并没有切断这条边，只是让它变虚，因此它的右儿子的父指针不应该被修改。\n\n![](/images/1309909-20180123110136115-1112016464.png)\n\n向上找到$\\text{N}$的父亲$\\text{I}$，调用`splay(I)`，回收$\\text{I}$的右儿子指针。不过这一次，我们需要再令其指向$\\text{N}$，然后$\\text{N}$就成了$\\text{I}$的实儿子了。\n\n![](/images/1309909-20180123110156272-1242463729.png)\n\n然后继续向上，找到$\\text{I}$的父亲$\\text{H}$，调用`splay(H)`，并令$\\text{H}$的右儿子指针指向$\\text{I}$。\n\n![](/images/1309909-20180123110209772-2057141058.png)\n\n最后一步，找到$\\text{H}$的父亲$\\text{A}$，调用`splay(A)`，并令$\\text{A}$的右儿子指针指向$\\text{H}$。\n\n![](/images/1309909-20180123110213709-49169640.png)\n\n然后我们看到，$\\text{N}$和$\\text{A}$到了同一颗Splay中，完成任务，返回。\n\n代码实现：\n\n```cpp\ninline void access(re SplayNode* p){\n\tsplay(p);\n\tp->pushDown();\n\tp->rs=NULL;\n\tp->pushUp();\n\tfor(re SplayNode* q=p;q->ftr!=NULL;q=q->ftr){\n\t\tsplay(q->ftr);\n\t\tq->ftr->pushDown();\n\t\tq->ftr->rs=q;\n\t\tq->ftr->pushUp();\n\t}\n\tsplay(p);\n\t//据说闲着没事瞎转转有利于摊开时间复杂度（\n}\n```\n\n### findRoot\n\n有了`access`，我们就可以随心所欲的瞎搞了。比如说\n\n```cpp\nSplayNode* findRoot(SplayNode*)\n```\n\n返回给定节点所在的树的树根，也就是调用完`access`后它所在的实链上深度最小的节点。\n\n因为`access`的最后自带了一个`splay`，这个时候给定节点已经是Splay的根节点了，我们直接循环跳左儿子指针即可。\n\n```cpp\ninline SplayNode* findRoot(re SplayNode* p){\n\taccess(p);\n\tfor(;p->ls!=NULL;p=p->ls);\n\tsplay(p);\n\treturn p;\n}\n```\n\n### makeRoot && split\n\n现在我们要提取出树上两个给定节点之间的路径。但是我们知道，这样的路径不一定满足深度严格递增，也就是说，它可能不能够出现在一棵Splay中。\n\n不过办法总是有的。比如说我们指定了两个节点$x$和$y$，我们先调用`access(x)`，然后考虑翻转$x$的子树之后会发生什么。\n\n`access`结束后，$x$没有右子树，翻转之后就没有了左子树，也就是说，现在没有比$x$的深度更小的节点了。换句话说就是，$x$现在成为了树根。\n\n那么这样一来，$x$到$y$的路径就一定满足深度严格递增了，我们只需调用一次`access(y)`就可以把它抽出来。\n\n我们实现下面两个函数\n\n```cpp\nvoid makeRoot(SplayNode*)\n```\n\n令给定节点成为树根。\n\n```cpp\nvoid split(SplayNode*,SplayNode*)\n```\n\n抽出给定的两个节点之间的路径。不过虽然说模板题保证联通，还是有必要稍微考虑一下不连通的情况的。\n\n```cpp\ninline void makeRoot(re SplayNode* p){\n\taccess(p);\n\tp->reverse();\n}\n\ninline void split(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\taccess(q);\n}\n```\n\n### link\n\n我们需要实现函数\n\n```cpp\nvoid link(SplayNode*,SplayNode*)\n```\n\n在给定的两个节点间连一条边。特殊地，如果说给定的两个节点已经联通，什么都不做直接返回。不过这是模板题的要求，有些题可能会让你输出操作失败，这种情况下改一下返回值就行。\n\n思路很简单。假设我们指定$x$和$y$两个节点，首先调用`makeRoot(x)`，然后检查`findRoot(y)`的返回值。如果不是$x$，说明两个节点不连通，将$x$的父指针指向$y$；否则，即`findRoot(y)==x`，说明两个节点联通，直接返回。\n\n```cpp\ninline void link(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\tif(findRoot(q)!=p)\n\t\tp->ftr=q;\n}\n```\n\n### cut\n\n我们需要实现函数\n\n```cpp\nvoid cut(SplayNode*,SplayNode*)\n```\n\n切断给定的两个节点之间的边。不存在就什么也不做。\n\n需要注意的是，两个节点$x$和$y$之间直接有边相连，不仅要求$x$与$y$联通，还要求它们在Splay中是相邻的两个节点。为了避免讨论深度的大小关系，我们先调用`makeRoot(x)`，此时$y$应该是$x$的右儿子，并且它不能有左儿子。\n\n```cpp\ninline void cut(re SplayNode* p,re SplayNode* q){\n\tmakeRoot(p);\n\tif(findRoot(q)==p&&q->ftr==p&&q->ls==NULL){\n\t\tq->ftr=p->rs=NULL;\n\t\tp->pushUp();\n\t}\n}\n```\n\n把上面这么一些东西写好之后，再根据题目要求搞一搞，您就可以切掉模板题了。\n\n完整板子：\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 300000\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n\n\ttemplate <typename _tp>\n\tinline void swap(_tp& x,_tp& y){\n\t\t_tp z=x;\n\t\tx=y;\n\t\ty=z;\n\t}\n}\n\nstruct LinkCutTree{\n\tstruct SplayNode{\n\t\tSplayNode *ftr,*ls,*rs;\n\t\tint val,sum,rev;\n\n\t\tinline int isRoot(){\n\t\t\treturn ftr==NULL||(ftr->ls!=this&&ftr->rs!=this);\n\t\t}\n\n\t\tinline void reverse(){\n\t\t\tstd::swap(ls,rs);\n\t\t\trev^=1;\n\t\t}\n\n\t\tinline void pushDown(){\n\t\t\tif(rev){\n\t\t\t\tif(ls!=NULL)\n\t\t\t\t\tls->reverse();\n\t\t\t\tif(rs!=NULL)\n\t\t\t\t\trs->reverse();\n\t\t\t\trev=0;\n\t\t\t}\n\t\t}\n\n\t\tinline void pushUp(){\n\t\t\tsum=val;\n\t\t\tif(ls!=NULL)\n\t\t\t\tsum^=ls->sum;\n\t\t\tif(rs!=NULL)\n\t\t\t\tsum^=rs->sum;\n\t\t}\n\t};\n\n\tSplayNode mempool[maxn+1];\n\n\tinline void rotate(re SplayNode* p){\n\t\tre SplayNode* q=p->ftr;\n\t\tq->pushDown();\n\t\tp->pushDown();\n\t\tp->ftr=q->ftr;\n\t\tif(p->ftr!=NULL){\n\t\t\tif(p->ftr->ls==q)\n\t\t\t\tp->ftr->ls=p;\n\t\t\tif(p->ftr->rs==q)\n\t\t\t\tp->ftr->rs=p;\n\t\t}\n\t\tif(q->rs==p){\n\t\t\tq->rs=p->ls;\n\t\t\tif(q->rs!=NULL)\n\t\t\t\tq->rs->ftr=q;\n\t\t\tp->ls=q;\n\t\t\tq->ftr=p;\n\t\t}\n\t\telse{\n\t\t\tq->ls=p->rs;\n\t\t\tif(q->ls!=NULL)\n\t\t\t\tq->ls->ftr=q;\n\t\t\tp->rs=q;\n\t\t\tq->ftr=p;\n\t\t}\n\t\tq->pushUp();\n\t\tp->pushUp();\n\t}\n\n\tinline void splay(re SplayNode* p){\n\t\tfor(;!p->isRoot();rotate(p))\n\t\t\tif(!p->ftr->isRoot())\n\t\t\t\trotate((p->ftr->ftr->ls==p->ftr)==(p->ftr->ls==p)?p->ftr:p);\n\t}\n\n\tinline void build(re int n){\n\t\tfor(re int i=1;i<=n;++i){\n\t\t\tre SplayNode* p=mempool+i;\n\t\t\tp->ftr=p->ls=p->rs=NULL;\n\t\t\tcltstream::read(p->val);\n\t\t\tp->sum=p->val;\n\t\t\tp->rev=0;\n\t\t}\n\t}\n\n\tinline void access(re SplayNode* p){\n\t\tsplay(p);\n\t\tp->pushDown();\n\t\tp->rs=NULL;\n\t\tp->pushUp();\n\t\tfor(re SplayNode* q=p;q->ftr!=NULL;q=q->ftr){\n\t\t\tsplay(q->ftr);\n\t\t\tq->ftr->pushDown();\n\t\t\tq->ftr->rs=q;\n\t\t\tq->ftr->pushUp();\n\t\t}\n\t\tsplay(p);\n\t}\n\n\tinline SplayNode* findRoot(re SplayNode* p){\n\t\taccess(p);\n\t\tfor(;p->ls!=NULL;p=p->ls);\n\t\tsplay(p);\n\t\treturn p;\n\t}\n\n\tinline void makeRoot(re SplayNode* p){\n\t\taccess(p);\n\t\tp->reverse();\n\t}\n\n\tinline void split(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\taccess(q);\n\t}\n\n\tinline void link(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\tif(findRoot(q)!=p)\n\t\t\tp->ftr=q;\n\t}\n\n\tinline void cut(re SplayNode* p,re SplayNode* q){\n\t\tmakeRoot(p);\n\t\tif(findRoot(q)==p&&q->ftr==p&&q->ls==NULL){\n\t\t\tq->ftr=p->rs=NULL;\n\t\t\tp->pushUp();\n\t\t}\n\t}\n\n\tinline int queryPathXorSum(re int x,re int y){\n\t\tsplit(mempool+x,mempool+y);\n\t\treturn (mempool+y)->sum;\n\t}\n\n\tinline void createEdge(re int x,re int y){\n\t\tlink(mempool+x,mempool+y);\n\t}\n\n\tinline void destoryEdge(re int x,re int y){\n\t\tcut(mempool+x,mempool+y);\n\t}\n\n\tinline void modifyVertice(re int x,re int y){\n\t\tsplay(mempool+x);\n\t\t(mempool+x)->val=y;\n\t\t(mempool+x)->pushUp();\n\t}\n\n\tvoid printTree(re SplayNode* p){\n\t\tif(p!=NULL){\n\t\t\tp->pushDown();\n\t\t\tprintTree(p->ls);\n\t\t\tprintf(\n\t\t\t\t\"%d(%d,%d,%d)\\n\",\n\t\t\t\tp-mempool,\n\t\t\t\tp->ftr!=NULL?p->ftr-mempool:-1,\n\t\t\t\tp->ls!=NULL?p->ls-mempool:-1,\n\t\t\t\tp->rs!=NULL?p->rs-mempool:-1\n\t\t\t);\n\t\t\tprintTree(p->rs);\n\t\t}\n\t}\n};\n\nint n,m;\nLinkCutTree QAQ;\n\nint main(){\\\n\tcltstream::read(n);\n\tcltstream::read(m);\n\tQAQ.build(n);\n\tfor(re int i=1;i<=m;++i){\n\t\tint opt,x,y;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(x);\n\t\tcltstream::read(y);\n\t\tswitch(opt){\n\t\t\tcase 0:\n\t\t\t\tcltstream::write(QAQ.queryPathXorSum(x,y),10);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tQAQ.createEdge(x,y);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tQAQ.destoryEdge(x,y);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tQAQ.modifyVertice(x,y);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n~~是不是感觉很好写呢（~~\n\n### 用LCT维护子树信息\n\n咕咕咕。\n","slug":"link-cut-tree-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmw007tmku9fulnajkq","content":"<p>24号要出去学习，趁现在先自己xjb学点啥。</p>\n<a id=\"more\"></a>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><p>首先我们有一道<a href=\"https://www.luogu.org/problemnew/show/P3690\">模板题</a>。</p>\n<p>我们所熟悉的树链剖分指的是重链剖分。也就是定义一个节点的子树大小最大的儿子为它的重儿子，连接重儿子的边叫做重边，若干条重边连在一起形成重链。除了重儿子以外的儿子被称为轻儿子，连接轻儿子的边叫做轻边。</p>\n<p>这样一来，我们给原树的节点重新标号，使得一条重链上的所有节点的新标号是连续的，然后通过线段树或者树状数组等能够处理区间的数据结构进行维护，通过轻边合并两条重链上的信息。时间复杂度一般是$O(n\\log^{2}n)$。</p>\n<p>但是这样有一个问题，因为线段树，又或者是树状数组，都是静态的数据结构，它们不能支持我们在上面xjb捣鼓。反映到原树上，这就意味着我们边的轻重只能也是静态的。这会带来很多不便。就比如说，我们现在要维护一片森林，要求支持动态连边、删边，同时需要查询某条链上的信息。</p>\n<p>很明显这是重链剖分无法胜任的。为了解决这个问题，我们需要一种能够动态修改边的轻重的算法，也就是实链剖分。</p>\n<p>实链剖分一般被称为LCT，全称<del>Link-Cat Tree</del> <del>Linear Challestend Transformation</del> Link-Cut Tree，也就是动态树。</p>\n<p>与重链剖分类似地，我们根据实际情况，随便钦定一个节点的某个儿子为它的实儿子，连接实儿子的边叫做实边，若干条实边连在一起形成实链。除了实儿子以外的儿子被称为虚儿子，连接虚儿子的边叫做虚边。</p>\n<p>为了实现它，我们需要通过更加灵活的Splay来维护每一条实链。它具有如下性质：</p>\n<ol>\n<li>每棵Splay维护的是一条原森林中深度严格递增的路径，也就是一条实链。</li>\n<li>每个节点属于且仅属于一棵Splay。</li>\n<li>如果一个节点在原森林中有多个儿子，只有一个与它在同一颗Splay中，也就是实儿子。其他儿子所在的Splay的根节点有一根父指针指向这个节点，但是从这个节点访问不到它们。</li>\n<li>不同于重链剖分，就算一个节点有至少一个儿子，也可以没有实儿子。</li>\n</ol>\n<p>以下图片来自<a href=\"https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。\">https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。</a></p>\n<p>我们来看这样一棵树</p>\n<p><img src=\"/images/1309909-20180123095924037-1618037447.png\" alt=\"\"></p>\n<p>其中粗线表示实边，虚线表示虚边。</p>\n<p>它所对应的Splay森林可能长下面这样，每一个绿框内都是一棵Splay。</p>\n<p><img src=\"/images/1309909-20180123095955350-1680422636.png\" alt=\"\"></p>\n<p>当然这并不是唯一的。</p>\n<p>为了方便，我先放出我Splay的代码实现</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    SplayNode *ftr,*ls,*rs;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val,sum,rev;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ftr==<span class=\"literal\">NULL</span>||(ftr-&gt;ls!=<span class=\"keyword\">this</span>&amp;&amp;ftr-&gt;rs!=<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//判断一个节点是否是原森林中的一棵树的树根</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::swap(ls,rs);</span><br><span class=\"line\">        rev^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rev)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                ls-&gt;reverse();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                rs-&gt;reverse();</span><br><span class=\"line\">            rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        sum=val;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            sum^=ls-&gt;sum;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            sum^=rs-&gt;sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">    q-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;ls==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;ls=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rs==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;rs=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(q-&gt;rs==p)&#123;</span><br><span class=\"line\">        q-&gt;rs=p-&gt;ls;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;rs-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;ls=q;</span><br><span class=\"line\">        q-&gt;ftr=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        q-&gt;ls=p-&gt;rs;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;ls-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;rs=q;</span><br><span class=\"line\">        q-&gt;ftr=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;pushUp();</span><br><span class=\"line\">    p-&gt;pushUp();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//不同于我们以前写的Splay，现在我们只需要将一个节点旋转到根即可</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;!p-&gt;isRoot();rotate(p))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!p-&gt;ftr-&gt;isRoot())</span><br><span class=\"line\">            rotate((p-&gt;ftr-&gt;ftr-&gt;ls==p-&gt;ftr)==(p-&gt;ftr-&gt;ls==p)?p-&gt;ftr:p);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"access\"><a href=\"#access\" class=\"headerlink\" title=\"access\"></a>access</h3><p>首先我们有一个基本操作</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>首先有一个问题是，这个单词怎么读？</p>\n<p><code>/ək&#39;ses/</code>？不不不应该是<code>/&#39;ækses/</code>。</p>\n<p>如果您有兴趣，可以在<a href=\"https://github.com/shimohq/chinese-programmer-wrong-pronunciation\">这里</a>看看自己以前都读错了多少单词（</p>\n<p>这个函数的作用是打通指定节点到根节点的路径，将这条路径修改成实链，并抛弃指定节点自身的实儿子。</p>\n<p>我们来看看这个函数的具体过程。还是上面的例子，现在我们调用<code>access(N)</code>，整棵树会变成这样</p>\n<p><img src=\"/images/1309909-20180123101901740-2118178734.png\" alt=\"\"></p>\n<p><del>虽然说好像图上用的还是轻重……不过这些细节就不要在意啦（</del></p>\n<p>首先我们调用<code>splay(N)</code>，令$\\text{N}$成为它所在的Splay的根节点，然后它所在的实链中再往下的部分就到了它的右子树中，我们直接回收它的右儿子指针即可。需要注意的是，我们并没有切断这条边，只是让它变虚，因此它的右儿子的父指针不应该被修改。</p>\n<p><img src=\"/images/1309909-20180123110136115-1112016464.png\" alt=\"\"></p>\n<p>向上找到$\\text{N}$的父亲$\\text{I}$，调用<code>splay(I)</code>，回收$\\text{I}$的右儿子指针。不过这一次，我们需要再令其指向$\\text{N}$，然后$\\text{N}$就成了$\\text{I}$的实儿子了。</p>\n<p><img src=\"/images/1309909-20180123110156272-1242463729.png\" alt=\"\"></p>\n<p>然后继续向上，找到$\\text{I}$的父亲$\\text{H}$，调用<code>splay(H)</code>，并令$\\text{H}$的右儿子指针指向$\\text{I}$。</p>\n<p><img src=\"/images/1309909-20180123110209772-2057141058.png\" alt=\"\"></p>\n<p>最后一步，找到$\\text{H}$的父亲$\\text{A}$，调用<code>splay(A)</code>，并令$\\text{A}$的右儿子指针指向$\\text{H}$。</p>\n<p><img src=\"/images/1309909-20180123110213709-49169640.png\" alt=\"\"></p>\n<p>然后我们看到，$\\text{N}$和$\\text{A}$到了同一颗Splay中，完成任务，返回。</p>\n<p>代码实现：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    p-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    p-&gt;pushUp();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;q=q-&gt;ftr)&#123;</span><br><span class=\"line\">        splay(q-&gt;ftr);</span><br><span class=\"line\">        q-&gt;ftr-&gt;pushDown();</span><br><span class=\"line\">        q-&gt;ftr-&gt;rs=q;</span><br><span class=\"line\">        q-&gt;ftr-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    <span class=\"comment\">//据说闲着没事瞎转转有利于摊开时间复杂度（</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"findRoot\"><a href=\"#findRoot\" class=\"headerlink\" title=\"findRoot\"></a>findRoot</h3><p>有了<code>access</code>，我们就可以随心所欲的瞎搞了。比如说</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>返回给定节点所在的树的树根，也就是调用完<code>access</code>后它所在的实链上深度最小的节点。</p>\n<p>因为<code>access</code>的最后自带了一个<code>splay</code>，这个时候给定节点已经是Splay的根节点了，我们直接循环跳左儿子指针即可。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;p-&gt;ls!=<span class=\"literal\">NULL</span>;p=p-&gt;ls);</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"makeRoot-amp-amp-split\"><a href=\"#makeRoot-amp-amp-split\" class=\"headerlink\" title=\"makeRoot &amp;&amp; split\"></a>makeRoot &amp;&amp; split</h3><p>现在我们要提取出树上两个给定节点之间的路径。但是我们知道，这样的路径不一定满足深度严格递增，也就是说，它可能不能够出现在一棵Splay中。</p>\n<p>不过办法总是有的。比如说我们指定了两个节点$x$和$y$，我们先调用<code>access(x)</code>，然后考虑翻转$x$的子树之后会发生什么。</p>\n<p><code>access</code>结束后，$x$没有右子树，翻转之后就没有了左子树，也就是说，现在没有比$x$的深度更小的节点了。换句话说就是，$x$现在成为了树根。</p>\n<p>那么这样一来，$x$到$y$的路径就一定满足深度严格递增了，我们只需调用一次<code>access(y)</code>就可以把它抽出来。</p>\n<p>我们实现下面两个函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>令给定节点成为树根。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>抽出给定的两个节点之间的路径。不过虽然说模板题保证联通，还是有必要稍微考虑一下不连通的情况的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    p-&gt;reverse();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    access(q);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"link\"><a href=\"#link\" class=\"headerlink\" title=\"link\"></a>link</h3><p>我们需要实现函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>在给定的两个节点间连一条边。特殊地，如果说给定的两个节点已经联通，什么都不做直接返回。不过这是模板题的要求，有些题可能会让你输出操作失败，这种情况下改一下返回值就行。</p>\n<p>思路很简单。假设我们指定$x$和$y$两个节点，首先调用<code>makeRoot(x)</code>，然后检查<code>findRoot(y)</code>的返回值。如果不是$x$，说明两个节点不连通，将$x$的父指针指向$y$；否则，即<code>findRoot(y)==x</code>，说明两个节点联通，直接返回。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(findRoot(q)!=p)</span><br><span class=\"line\">        p-&gt;ftr=q;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><p>我们需要实现函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>切断给定的两个节点之间的边。不存在就什么也不做。</p>\n<p>需要注意的是，两个节点$x$和$y$之间直接有边相连，不仅要求$x$与$y$联通，还要求它们在Splay中是相邻的两个节点。为了避免讨论深度的大小关系，我们先调用<code>makeRoot(x)</code>，此时$y$应该是$x$的右儿子，并且它不能有左儿子。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(findRoot(q)==p&amp;&amp;q-&gt;ftr==p&amp;&amp;q-&gt;ls==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        q-&gt;ftr=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把上面这么一些东西写好之后，再根据题目要求搞一搞，您就可以切掉模板题了。</p>\n<p>完整板子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 300000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">        _tp z=x;</span><br><span class=\"line\">        x=y;</span><br><span class=\"line\">        y=z;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LinkCutTree</span>&#123;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">        SplayNode *ftr,*ls,*rs;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> val,sum,rev;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ftr==<span class=\"literal\">NULL</span>||(ftr-&gt;ls!=<span class=\"keyword\">this</span>&amp;&amp;ftr-&gt;rs!=<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">std</span>::swap(ls,rs);</span><br><span class=\"line\">            rev^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rev)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                    ls-&gt;reverse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                    rs-&gt;reverse();</span><br><span class=\"line\">                rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            sum=val;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                sum^=ls-&gt;sum;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                sum^=rs-&gt;sum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">        q-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;ls==q)</span><br><span class=\"line\">                p-&gt;ftr-&gt;ls=p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rs==q)</span><br><span class=\"line\">                p-&gt;ftr-&gt;rs=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rs==p)&#123;</span><br><span class=\"line\">            q-&gt;rs=p-&gt;ls;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                q-&gt;rs-&gt;ftr=q;</span><br><span class=\"line\">            p-&gt;ls=q;</span><br><span class=\"line\">            q-&gt;ftr=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            q-&gt;ls=p-&gt;rs;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                q-&gt;ls-&gt;ftr=q;</span><br><span class=\"line\">            p-&gt;rs=q;</span><br><span class=\"line\">            q-&gt;ftr=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        q-&gt;pushUp();</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;!p-&gt;isRoot();rotate(p))</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!p-&gt;ftr-&gt;isRoot())</span><br><span class=\"line\">                rotate((p-&gt;ftr-&gt;ftr-&gt;ls==p-&gt;ftr)==(p-&gt;ftr-&gt;ls==p)?p-&gt;ftr:p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">            re SplayNode* p=mempool+i;</span><br><span class=\"line\">            p-&gt;ftr=p-&gt;ls=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            cltstream::read(p-&gt;val);</span><br><span class=\"line\">            p-&gt;sum=p-&gt;val;</span><br><span class=\"line\">            p-&gt;rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">        p-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;q=q-&gt;ftr)&#123;</span><br><span class=\"line\">            splay(q-&gt;ftr);</span><br><span class=\"line\">            q-&gt;ftr-&gt;pushDown();</span><br><span class=\"line\">            q-&gt;ftr-&gt;rs=q;</span><br><span class=\"line\">            q-&gt;ftr-&gt;pushUp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        access(p);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;p-&gt;ls!=<span class=\"literal\">NULL</span>;p=p-&gt;ls);</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        access(p);</span><br><span class=\"line\">        p-&gt;reverse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        access(q);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(findRoot(q)!=p)</span><br><span class=\"line\">            p-&gt;ftr=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(findRoot(q)==p&amp;&amp;q-&gt;ftr==p&amp;&amp;q-&gt;ls==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q-&gt;ftr=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            p-&gt;pushUp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">queryPathXorSum</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        split(mempool+x,mempool+y);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (mempool+y)-&gt;sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">createEdge</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        link(mempool+x,mempool+y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">destoryEdge</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        cut(mempool+x,mempool+y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">modifyVertice</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        splay(mempool+x);</span><br><span class=\"line\">        (mempool+x)-&gt;val=y;</span><br><span class=\"line\">        (mempool+x)-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">printTree</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            p-&gt;pushDown();</span><br><span class=\"line\">            printTree(p-&gt;ls);</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(</span><br><span class=\"line\">                <span class=\"string\">\"%d(%d,%d,%d)\\n\"</span>,</span><br><span class=\"line\">                p-mempool,</span><br><span class=\"line\">                p-&gt;ftr!=<span class=\"literal\">NULL</span>?p-&gt;ftr-mempool:<span class=\"number\">-1</span>,</span><br><span class=\"line\">                p-&gt;ls!=<span class=\"literal\">NULL</span>?p-&gt;ls-mempool:<span class=\"number\">-1</span>,</span><br><span class=\"line\">                p-&gt;rs!=<span class=\"literal\">NULL</span>?p-&gt;rs-mempool:<span class=\"number\">-1</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">            printTree(p-&gt;rs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">LinkCutTree QAQ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;\\</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    QAQ.build(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt,x,y;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        cltstream::read(y);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                cltstream::write(QAQ.queryPathXorSum(x,y),<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                QAQ.createEdge(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                QAQ.destoryEdge(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                QAQ.modifyVertice(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>是不是感觉很好写呢（</del></p>\n<h3 id=\"用LCT维护子树信息\"><a href=\"#用LCT维护子树信息\" class=\"headerlink\" title=\"用LCT维护子树信息\"></a>用LCT维护子树信息</h3><p>咕咕咕。</p>\n","site":{"data":{}},"excerpt":"<p>24号要出去学习，趁现在先自己xjb学点啥。</p>","more":"<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><p>首先我们有一道<a href=\"https://www.luogu.org/problemnew/show/P3690\">模板题</a>。</p>\n<p>我们所熟悉的树链剖分指的是重链剖分。也就是定义一个节点的子树大小最大的儿子为它的重儿子，连接重儿子的边叫做重边，若干条重边连在一起形成重链。除了重儿子以外的儿子被称为轻儿子，连接轻儿子的边叫做轻边。</p>\n<p>这样一来，我们给原树的节点重新标号，使得一条重链上的所有节点的新标号是连续的，然后通过线段树或者树状数组等能够处理区间的数据结构进行维护，通过轻边合并两条重链上的信息。时间复杂度一般是$O(n\\log^{2}n)$。</p>\n<p>但是这样有一个问题，因为线段树，又或者是树状数组，都是静态的数据结构，它们不能支持我们在上面xjb捣鼓。反映到原树上，这就意味着我们边的轻重只能也是静态的。这会带来很多不便。就比如说，我们现在要维护一片森林，要求支持动态连边、删边，同时需要查询某条链上的信息。</p>\n<p>很明显这是重链剖分无法胜任的。为了解决这个问题，我们需要一种能够动态修改边的轻重的算法，也就是实链剖分。</p>\n<p>实链剖分一般被称为LCT，全称<del>Link-Cat Tree</del> <del>Linear Challestend Transformation</del> Link-Cut Tree，也就是动态树。</p>\n<p>与重链剖分类似地，我们根据实际情况，随便钦定一个节点的某个儿子为它的实儿子，连接实儿子的边叫做实边，若干条实边连在一起形成实链。除了实儿子以外的儿子被称为虚儿子，连接虚儿子的边叫做虚边。</p>\n<p>为了实现它，我们需要通过更加灵活的Splay来维护每一条实链。它具有如下性质：</p>\n<ol>\n<li>每棵Splay维护的是一条原森林中深度严格递增的路径，也就是一条实链。</li>\n<li>每个节点属于且仅属于一棵Splay。</li>\n<li>如果一个节点在原森林中有多个儿子，只有一个与它在同一颗Splay中，也就是实儿子。其他儿子所在的Splay的根节点有一根父指针指向这个节点，但是从这个节点访问不到它们。</li>\n<li>不同于重链剖分，就算一个节点有至少一个儿子，也可以没有实儿子。</li>\n</ol>\n<p>以下图片来自<a href=\"https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。\">https://wenku.baidu.com/view/75906f160b4e767f5acfcedb。</a></p>\n<p>我们来看这样一棵树</p>\n<p><img src=\"/images/1309909-20180123095924037-1618037447.png\" alt=\"\"></p>\n<p>其中粗线表示实边，虚线表示虚边。</p>\n<p>它所对应的Splay森林可能长下面这样，每一个绿框内都是一棵Splay。</p>\n<p><img src=\"/images/1309909-20180123095955350-1680422636.png\" alt=\"\"></p>\n<p>当然这并不是唯一的。</p>\n<p>为了方便，我先放出我Splay的代码实现</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">    SplayNode *ftr,*ls,*rs;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val,sum,rev;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ftr==<span class=\"literal\">NULL</span>||(ftr-&gt;ls!=<span class=\"keyword\">this</span>&amp;&amp;ftr-&gt;rs!=<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//判断一个节点是否是原森林中的一棵树的树根</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::swap(ls,rs);</span><br><span class=\"line\">        rev^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rev)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                ls-&gt;reverse();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                rs-&gt;reverse();</span><br><span class=\"line\">            rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        sum=val;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            sum^=ls-&gt;sum;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            sum^=rs-&gt;sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">    q-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;ls==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;ls=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rs==q)</span><br><span class=\"line\">            p-&gt;ftr-&gt;rs=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(q-&gt;rs==p)&#123;</span><br><span class=\"line\">        q-&gt;rs=p-&gt;ls;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;rs-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;ls=q;</span><br><span class=\"line\">        q-&gt;ftr=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        q-&gt;ls=p-&gt;rs;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            q-&gt;ls-&gt;ftr=q;</span><br><span class=\"line\">        p-&gt;rs=q;</span><br><span class=\"line\">        q-&gt;ftr=p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;pushUp();</span><br><span class=\"line\">    p-&gt;pushUp();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//不同于我们以前写的Splay，现在我们只需要将一个节点旋转到根即可</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;!p-&gt;isRoot();rotate(p))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!p-&gt;ftr-&gt;isRoot())</span><br><span class=\"line\">            rotate((p-&gt;ftr-&gt;ftr-&gt;ls==p-&gt;ftr)==(p-&gt;ftr-&gt;ls==p)?p-&gt;ftr:p);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"access\"><a href=\"#access\" class=\"headerlink\" title=\"access\"></a>access</h3><p>首先我们有一个基本操作</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>首先有一个问题是，这个单词怎么读？</p>\n<p><code>/ək&#39;ses/</code>？不不不应该是<code>/&#39;ækses/</code>。</p>\n<p>如果您有兴趣，可以在<a href=\"https://github.com/shimohq/chinese-programmer-wrong-pronunciation\">这里</a>看看自己以前都读错了多少单词（</p>\n<p>这个函数的作用是打通指定节点到根节点的路径，将这条路径修改成实链，并抛弃指定节点自身的实儿子。</p>\n<p>我们来看看这个函数的具体过程。还是上面的例子，现在我们调用<code>access(N)</code>，整棵树会变成这样</p>\n<p><img src=\"/images/1309909-20180123101901740-2118178734.png\" alt=\"\"></p>\n<p><del>虽然说好像图上用的还是轻重……不过这些细节就不要在意啦（</del></p>\n<p>首先我们调用<code>splay(N)</code>，令$\\text{N}$成为它所在的Splay的根节点，然后它所在的实链中再往下的部分就到了它的右子树中，我们直接回收它的右儿子指针即可。需要注意的是，我们并没有切断这条边，只是让它变虚，因此它的右儿子的父指针不应该被修改。</p>\n<p><img src=\"/images/1309909-20180123110136115-1112016464.png\" alt=\"\"></p>\n<p>向上找到$\\text{N}$的父亲$\\text{I}$，调用<code>splay(I)</code>，回收$\\text{I}$的右儿子指针。不过这一次，我们需要再令其指向$\\text{N}$，然后$\\text{N}$就成了$\\text{I}$的实儿子了。</p>\n<p><img src=\"/images/1309909-20180123110156272-1242463729.png\" alt=\"\"></p>\n<p>然后继续向上，找到$\\text{I}$的父亲$\\text{H}$，调用<code>splay(H)</code>，并令$\\text{H}$的右儿子指针指向$\\text{I}$。</p>\n<p><img src=\"/images/1309909-20180123110209772-2057141058.png\" alt=\"\"></p>\n<p>最后一步，找到$\\text{H}$的父亲$\\text{A}$，调用<code>splay(A)</code>，并令$\\text{A}$的右儿子指针指向$\\text{H}$。</p>\n<p><img src=\"/images/1309909-20180123110213709-49169640.png\" alt=\"\"></p>\n<p>然后我们看到，$\\text{N}$和$\\text{A}$到了同一颗Splay中，完成任务，返回。</p>\n<p>代码实现：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    p-&gt;pushDown();</span><br><span class=\"line\">    p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    p-&gt;pushUp();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;q=q-&gt;ftr)&#123;</span><br><span class=\"line\">        splay(q-&gt;ftr);</span><br><span class=\"line\">        q-&gt;ftr-&gt;pushDown();</span><br><span class=\"line\">        q-&gt;ftr-&gt;rs=q;</span><br><span class=\"line\">        q-&gt;ftr-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    <span class=\"comment\">//据说闲着没事瞎转转有利于摊开时间复杂度（</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"findRoot\"><a href=\"#findRoot\" class=\"headerlink\" title=\"findRoot\"></a>findRoot</h3><p>有了<code>access</code>，我们就可以随心所欲的瞎搞了。比如说</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>返回给定节点所在的树的树根，也就是调用完<code>access</code>后它所在的实链上深度最小的节点。</p>\n<p>因为<code>access</code>的最后自带了一个<code>splay</code>，这个时候给定节点已经是Splay的根节点了，我们直接循环跳左儿子指针即可。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;p-&gt;ls!=<span class=\"literal\">NULL</span>;p=p-&gt;ls);</span><br><span class=\"line\">    splay(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"makeRoot-amp-amp-split\"><a href=\"#makeRoot-amp-amp-split\" class=\"headerlink\" title=\"makeRoot &amp;&amp; split\"></a>makeRoot &amp;&amp; split</h3><p>现在我们要提取出树上两个给定节点之间的路径。但是我们知道，这样的路径不一定满足深度严格递增，也就是说，它可能不能够出现在一棵Splay中。</p>\n<p>不过办法总是有的。比如说我们指定了两个节点$x$和$y$，我们先调用<code>access(x)</code>，然后考虑翻转$x$的子树之后会发生什么。</p>\n<p><code>access</code>结束后，$x$没有右子树，翻转之后就没有了左子树，也就是说，现在没有比$x$的深度更小的节点了。换句话说就是，$x$现在成为了树根。</p>\n<p>那么这样一来，$x$到$y$的路径就一定满足深度严格递增了，我们只需调用一次<code>access(y)</code>就可以把它抽出来。</p>\n<p>我们实现下面两个函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>令给定节点成为树根。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>抽出给定的两个节点之间的路径。不过虽然说模板题保证联通，还是有必要稍微考虑一下不连通的情况的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">    access(p);</span><br><span class=\"line\">    p-&gt;reverse();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    access(q);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"link\"><a href=\"#link\" class=\"headerlink\" title=\"link\"></a>link</h3><p>我们需要实现函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>在给定的两个节点间连一条边。特殊地，如果说给定的两个节点已经联通，什么都不做直接返回。不过这是模板题的要求，有些题可能会让你输出操作失败，这种情况下改一下返回值就行。</p>\n<p>思路很简单。假设我们指定$x$和$y$两个节点，首先调用<code>makeRoot(x)</code>，然后检查<code>findRoot(y)</code>的返回值。如果不是$x$，说明两个节点不连通，将$x$的父指针指向$y$；否则，即<code>findRoot(y)==x</code>，说明两个节点联通，直接返回。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(findRoot(q)!=p)</span><br><span class=\"line\">        p-&gt;ftr=q;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><p>我们需要实现函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(SplayNode*,SplayNode*)</span></span></span><br></pre></td></tr></table></figure>\n<p>切断给定的两个节点之间的边。不存在就什么也不做。</p>\n<p>需要注意的是，两个节点$x$和$y$之间直接有边相连，不仅要求$x$与$y$联通，还要求它们在Splay中是相邻的两个节点。为了避免讨论深度的大小关系，我们先调用<code>makeRoot(x)</code>，此时$y$应该是$x$的右儿子，并且它不能有左儿子。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">    makeRoot(p);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(findRoot(q)==p&amp;&amp;q-&gt;ftr==p&amp;&amp;q-&gt;ls==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        q-&gt;ftr=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把上面这么一些东西写好之后，再根据题目要求搞一搞，您就可以切掉模板题了。</p>\n<p>完整板子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 300000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">        _tp z=x;</span><br><span class=\"line\">        x=y;</span><br><span class=\"line\">        y=z;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LinkCutTree</span>&#123;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SplayNode</span>&#123;</span></span><br><span class=\"line\">        SplayNode *ftr,*ls,*rs;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> val,sum,rev;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">isRoot</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ftr==<span class=\"literal\">NULL</span>||(ftr-&gt;ls!=<span class=\"keyword\">this</span>&amp;&amp;ftr-&gt;rs!=<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">std</span>::swap(ls,rs);</span><br><span class=\"line\">            rev^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushDown</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rev)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                    ls-&gt;reverse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                    rs-&gt;reverse();</span><br><span class=\"line\">                rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushUp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            sum=val;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                sum^=ls-&gt;sum;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                sum^=rs-&gt;sum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    SplayNode mempool[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        re SplayNode* q=p-&gt;ftr;</span><br><span class=\"line\">        q-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;ftr=q-&gt;ftr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ftr!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;ls==q)</span><br><span class=\"line\">                p-&gt;ftr-&gt;ls=p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;ftr-&gt;rs==q)</span><br><span class=\"line\">                p-&gt;ftr-&gt;rs=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rs==p)&#123;</span><br><span class=\"line\">            q-&gt;rs=p-&gt;ls;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;rs!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                q-&gt;rs-&gt;ftr=q;</span><br><span class=\"line\">            p-&gt;ls=q;</span><br><span class=\"line\">            q-&gt;ftr=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            q-&gt;ls=p-&gt;rs;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;ls!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                q-&gt;ls-&gt;ftr=q;</span><br><span class=\"line\">            p-&gt;rs=q;</span><br><span class=\"line\">            q-&gt;ftr=p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        q-&gt;pushUp();</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">splay</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;!p-&gt;isRoot();rotate(p))</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!p-&gt;ftr-&gt;isRoot())</span><br><span class=\"line\">                rotate((p-&gt;ftr-&gt;ftr-&gt;ls==p-&gt;ftr)==(p-&gt;ftr-&gt;ls==p)?p-&gt;ftr:p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">            re SplayNode* p=mempool+i;</span><br><span class=\"line\">            p-&gt;ftr=p-&gt;ls=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            cltstream::read(p-&gt;val);</span><br><span class=\"line\">            p-&gt;sum=p-&gt;val;</span><br><span class=\"line\">            p-&gt;rev=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">access</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">        p-&gt;pushDown();</span><br><span class=\"line\">        p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        p-&gt;pushUp();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re SplayNode* q=p;q-&gt;ftr!=<span class=\"literal\">NULL</span>;q=q-&gt;ftr)&#123;</span><br><span class=\"line\">            splay(q-&gt;ftr);</span><br><span class=\"line\">            q-&gt;ftr-&gt;pushDown();</span><br><span class=\"line\">            q-&gt;ftr-&gt;rs=q;</span><br><span class=\"line\">            q-&gt;ftr-&gt;pushUp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> SplayNode* <span class=\"title\">findRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        access(p);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;p-&gt;ls!=<span class=\"literal\">NULL</span>;p=p-&gt;ls);</span><br><span class=\"line\">        splay(p);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">makeRoot</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        access(p);</span><br><span class=\"line\">        p-&gt;reverse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        access(q);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(findRoot(q)!=p)</span><br><span class=\"line\">            p-&gt;ftr=q;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">(re SplayNode* p,re SplayNode* q)</span></span>&#123;</span><br><span class=\"line\">        makeRoot(p);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(findRoot(q)==p&amp;&amp;q-&gt;ftr==p&amp;&amp;q-&gt;ls==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q-&gt;ftr=p-&gt;rs=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            p-&gt;pushUp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">queryPathXorSum</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        split(mempool+x,mempool+y);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (mempool+y)-&gt;sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">createEdge</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        link(mempool+x,mempool+y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">destoryEdge</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        cut(mempool+x,mempool+y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">modifyVertice</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        splay(mempool+x);</span><br><span class=\"line\">        (mempool+x)-&gt;val=y;</span><br><span class=\"line\">        (mempool+x)-&gt;pushUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">printTree</span><span class=\"params\">(re SplayNode* p)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            p-&gt;pushDown();</span><br><span class=\"line\">            printTree(p-&gt;ls);</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(</span><br><span class=\"line\">                <span class=\"string\">\"%d(%d,%d,%d)\\n\"</span>,</span><br><span class=\"line\">                p-mempool,</span><br><span class=\"line\">                p-&gt;ftr!=<span class=\"literal\">NULL</span>?p-&gt;ftr-mempool:<span class=\"number\">-1</span>,</span><br><span class=\"line\">                p-&gt;ls!=<span class=\"literal\">NULL</span>?p-&gt;ls-mempool:<span class=\"number\">-1</span>,</span><br><span class=\"line\">                p-&gt;rs!=<span class=\"literal\">NULL</span>?p-&gt;rs-mempool:<span class=\"number\">-1</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">            printTree(p-&gt;rs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">LinkCutTree QAQ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;\\</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    QAQ.build(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> opt,x,y;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(x);</span><br><span class=\"line\">        cltstream::read(y);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(opt)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                cltstream::write(QAQ.queryPathXorSum(x,y),<span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                QAQ.createEdge(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                QAQ.destoryEdge(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                QAQ.modifyVertice(x,y);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>是不是感觉很好写呢（</del></p>\n<h3 id=\"用LCT维护子树信息\"><a href=\"#用LCT维护子树信息\" class=\"headerlink\" title=\"用LCT维护子树信息\"></a>用LCT维护子树信息</h3><p>咕咕咕。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-03-15T03:34:27.000Z","title":"生成函数学习笔记","password":null,"_content":"又被wzx吊打了QAQ\n\n来写一篇生成函数吧QAQ\n\n~~本文全部内容抄袭自[这篇blog](https://www.cnblogs.com/asuldb/p/10533453.html)和[这篇blog](https://www.cnblogs.com/asuldb/p/10534860.html)~~\n\n<!-- more -->\n\n### 定义\n\n一个数列$\\{a_{0},a_{1},\\cdots,a_{n}\\}$的生成函数$f(x)$被定义为\n\n$$f(x)=\\sum_{i=0}^{n}a_{i}x^{i}$$\n\n就这样（\n\n### 封闭表达式\n\n但是这个形式比较玄乎，不便于我们推式子。特别是当我们需要求一个无穷数列的生成函数时。于是我们希望能够进一步化简。\n\n比如说，当$a_{n}=c^{n}$，即这个数列是$\\{1,c,c^{2},\\cdots\\}$时，它的生成函数是\n\n$$f(x)=\\sum_{i=0}^{n}c^{i}x^{i}=\\cfrac{1-(cx)^{n+1}}{1-cx}$$\n\n就是一个简单地等比数列求和。很明显，当$x\\in(-1,1)$时，如果$n$趋向于正无穷大，则上式等于$\\cfrac{1}{1-cx}$。\n\n我们现在来分析一下斐波那契数列的生成函数。\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\n\\end{aligned}$$\n\n为了方便，我们定义当$n\\lt 0$时，$F_{n}=0$。\n\n然后我们发现$F_{1}=F_{0}+F_{-1}=0+0=0$，于是我们再加上一项$[i=1]$。\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2}+[i=1])x^{i}\\\\\n&=x+\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\\\\\n&=x+x\\sum_{i=0}^{n}F_{i-1}x^{i-1}+x^{2}\\sum_{i=0}^{n}F_{i-2}x^{i-2}\\\\\n&=x+xF(x)+x^{2}F(x)\n\\end{aligned}$$\n\n于是\n\n$$F(x)=\\cfrac{x}{1-x-x^{2}}$$\n\n### 通项公式\n\n#### 斐波那契数\n\n那么问题来了，我们闲着没事求这个生成函数有什么用啊。\n\n求通项公式。\n\n我们知道形如$a_{n}=c^{n}$的数列的生成函数等于$\\cfrac{1}{1-cx}$，我们可以试着将$\\cfrac{x}{1-x-x^{2}}$分解成两个类似形式的分式的和。\n\n设\n\n$$1-x-x^{2}=(1-ax)(1-bx)$$\n\n$$\\begin{cases}\n&a+b=1\\\\\n&ab=-1\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&a=\\cfrac{1+\\sqrt{5}}{2}\\\\\n&b=\\cfrac{1-\\sqrt{5}}{2}\n\\end{cases}$$\n\n再设\n\n$$\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{x}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}$$\n\n$$\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}$$\n\n于是\n\n$$c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx=x$$\n\n等式右边没有常数项，因此$c+d$应当是$0$。再继续接下去，我们得到\n\n$$\n\\begin{cases}\n&c=\\cfrac{1}{\\sqrt{5}}\\\\\n&d=-\\cfrac{1}{\\sqrt{5}}\n\\end{cases}$$\n\n于是\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1+\\sqrt{5}}{2}x}-\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1-\\sqrt{5}}{2}x}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}x^{i}-\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}\\right)x^{i}\n\\end{aligned}$$\n\n结论就是\n\n$$F_{n}=\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{n}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{n}\\right)$$\n\n#### 卡特兰数\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}C_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i}\\\\\n&=1+x\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i-1}\\\\\n&=1+xF^{2}(x)\n\\end{aligned}$$\n\n于是\n\n$$xF^{2}(x)-F(x)+1=0$$\n\n$$F(x)=\\cfrac{1\\pm\\sqrt{1-4x}}{2x}$$\n\n$$2xF(x)=1\\pm\\sqrt{1-4x}$$\n\n当$x=0$时\n\n$$2\\times 0\\times 1=1\\pm1$$\n\n因此根号前应该取负。至此我们得到\n\n$$F(x)=\\cfrac{1-\\sqrt{1-4x}}{2x}$$\n\n那么通项公式呢？\n\n根据~~一个我抄过来的~~广义二项式定理，我们有\n\n$$\\begin{aligned}\n\\sqrt{1-4x}&=1+\\sum_{i=1}^{n}\\cfrac{(-1)^{i-1}}{i2^{2i-1}}C_{2i-2}^{i-1}(-4x)^{i}\\\\\n&=1+2\\sum_{i=1}^{n}\\cfrac{(-1)^{2i-1}}{i}C_{2i-2}^{i-1}x^{i}\\\\\n&=1-2\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i}\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1-\\sqrt{1-4x}}{2x}\\\\\n&=\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i-1}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{i+1}C_{2i}^{i}x^{i}\n\\end{aligned}$$\n\n于是\n\n$$C_{n}=\\cfrac{1}{n+1}C_{2n}^{n}$$\n\n#### 默慈金数\n\n~~等会默慈金数是个什么鬼？（~~\n\n默慈金数一般记为$M_{n}$，被定义为在均匀分布在一个圆上的$n$个有编号的点之间连出彼此不相交的弦的方案数。一根弦也不连也是一种方案。\n\n$$M_{0}=1$$\n\n$$M_{n}=M_{n-1}+\\sum_{i=0}^{n-2}M_{i}M_{n-i-2}$$\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}M_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}\\right)x^{i}\\\\\n&=1+xF(x)+x^{2}F^{2}(x)\n\\end{aligned}$$\n\n于是\n\n$$x^{2}F^{2}(x)+(x-1)F(x)+1=0$$\n\n$$F(x)=\\cfrac{1-x\\pm\\sqrt{1-2x-3x^{2}}}{2x^{2}}$$\n\n总之根号前应该取负（\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1-x-\\sqrt{1-2x-3x^{2}}}{2x^{2}}\\\\\n&=\\cfrac{2-2x-2\\sqrt{1-2x-3x^{2}}}{4x^{2}}\\\\\n&=\\cfrac{(1+x)-2\\sqrt{(1+x)(1-3x)}+(1-3x)}{4x^{2}}\\\\\n&=\\cfrac{(\\sqrt{1+x}-\\sqrt{1-3x})^{2}}{4x^{2}}\n\\end{aligned}$$\n\nwoc这什么鬼东西溜了溜了。\n\n~~留作课后习题，哪位dalao推出来了让我%一%（~~\n\n### 例题\n\n#### [「TJOI2015」概率论](https://www.luogu.org/problemnew/show/P3978)\n\n首先很明显，互不同构的二叉树一共$C_{n}$棵，其中$C_{n}$是卡特兰数。现在我们希望求出这些二叉树的叶子结点总数，我们记为$F_{n}$。不难发现\n\n$$F_{0}=0$$\n\n$$F_{1}=1$$\n\n$$F_{n}=2\\sum_{i=0}^{n-1}C_{i}F_{n-i-1}+[i=1]$$\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}+[i=1]\\right)x^{i}\\\\\n&=x+2\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}\\right)x^{i}\\\\\n&=x+2xCF(x)\n\\end{aligned}$$\n\n于是\n\n$$F(x)=\\cfrac{x}{1-2xC(x)}$$\n\n其中$C(x)$是卡特兰数的生成函数，我们知道它的值是$\\cfrac{1-\\sqrt{1-4x}}{2x}$，所以说\n\n$$F(x)=\\cfrac{x}{\\sqrt{1-4x}}$$\n\n~~然后我又不会了（~~\n\n$$(xC(x))^{\\prime}=\\cfrac{1}{\\sqrt{1-4x}}=\\cfrac{F(x)}{x}$$\n\n$$(xC(x))^{\\prime}=\\sum_{i=0}^{n}(i+1)C_{i}x^{i}$$\n\n$$\\cfrac{F(x)}{x}=\\sum_{i=0}^{n}F_{i}x^{i-1}=\\sum_{i=-1}^{n}F_{i+1}x^{i}$$\n\n我们就得到\n\n$$iC_{i-1}=F_{i}$$\n\n于是\n\n$$\\begin{aligned}\n\\text{Ans}&=\\cfrac{F_{n}}{C_{n}}\\\\\n&=\\cfrac{nC_{n-1}}{C_{n}}\\\\\n&=\\cfrac{C_{2n-2}^{n-1}}{\\cfrac{1}{n+1}C_{2n}^{n}}\\\\\n&=\\cfrac{\\cfrac{(2n-2)!}{(n-1)!(n-1)!}}{\\cfrac{(2n)!}{n!(n+1)!}}\\\\\n&=\\cfrac{(2n-2)!n!(n+1)!}{(n-1)!(n-1)!(2n)!}\\\\\n&=\\cfrac{n(n+1)}{2(2n-1)}\n\\end{aligned}$$\n\n#### [「国家集训队」整数的lqp拆分](https://www.luogu.org/problemnew/show/P4451)\n\n其实这道题我几个月前推出来了一个$O(n^{2})$的式子（\n\n如果记答案为$G_{n}$，我们有\n\n$$G_{n}=\\sum_{i=0}^{n}F_{i}G_{n-i}$$\n\n其中$F_{n}$是斐波那契数。为了方便，我们强行定义$G_{0}=1$。\n\n$$\\begin{aligned}\nG(x)&=\\sum_{i=0}^{n}G_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}\\right)x^{i}\\\\\n&=1+FG(x)\n\\end{aligned}$$\n\n其中$F(x)$是斐波那契数的生成函数。于是\n\n$$G(x)=\\cfrac{1}{1-F(x)}=\\cfrac{1-x-x^{2}}{1-2x-x^{2}}=1+\\cfrac{x}{1-2x-x^{2}}$$\n\n多出来的那个$1$是$G_{0}$，可以无视掉。\n\n设\n\n$$(1-ax)(1-bx)=1-2x-x^{2}$$\n\n（中间过程略）\n\n$$\\begin{cases}\n&a=1+\\sqrt{2}\\\\\n&b=1-\\sqrt{2}\n\\end{cases}$$\n\n再设\n\n$$\\cfrac{c}{1-(1+\\sqrt{2})x}+\\cfrac{d}{1-(1-\\sqrt{2})x}=\\cfrac{x}{1-2x-x^{2}}$$\n\n（中间过程略$\\times 2$）\n\n$$\\begin{cases}\n&c=\\cfrac{1}{2\\sqrt{2}}\\\\\n&d=-\\cfrac{1}{2\\sqrt{2}}\n\\end{cases}$$\n\n于是\n\n$$\\begin{aligned}\nG(x)&=1+\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1+\\sqrt{2})x}-\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1-\\sqrt{2})x}\\\\\n&=1+\\sum_{i=0}^{n}\\cfrac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{i}-(1-\\sqrt{2})^{i}\\right)x^{i}\n\\end{aligned}$$\n\n最终结论就是\n\n$$G_{n}=\\cfrac{(1+\\sqrt{2})^{n}-(1-\\sqrt{2})^{n}}{2\\sqrt{2}}$$\n\n根据暴力枚举，我们得出$\\sqrt{2}\\equiv 59713600\\pmod{10^{9}+7}$。\n","source":"_posts/2019-03-15-generating-function-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-03-15 11:34:27\ntitle: 生成函数学习笔记\ntags:\n  - 生成函数\ncategories:\n  - 学习笔记\npassword:\n---\n又被wzx吊打了QAQ\n\n来写一篇生成函数吧QAQ\n\n~~本文全部内容抄袭自[这篇blog](https://www.cnblogs.com/asuldb/p/10533453.html)和[这篇blog](https://www.cnblogs.com/asuldb/p/10534860.html)~~\n\n<!-- more -->\n\n### 定义\n\n一个数列$\\{a_{0},a_{1},\\cdots,a_{n}\\}$的生成函数$f(x)$被定义为\n\n$$f(x)=\\sum_{i=0}^{n}a_{i}x^{i}$$\n\n就这样（\n\n### 封闭表达式\n\n但是这个形式比较玄乎，不便于我们推式子。特别是当我们需要求一个无穷数列的生成函数时。于是我们希望能够进一步化简。\n\n比如说，当$a_{n}=c^{n}$，即这个数列是$\\{1,c,c^{2},\\cdots\\}$时，它的生成函数是\n\n$$f(x)=\\sum_{i=0}^{n}c^{i}x^{i}=\\cfrac{1-(cx)^{n+1}}{1-cx}$$\n\n就是一个简单地等比数列求和。很明显，当$x\\in(-1,1)$时，如果$n$趋向于正无穷大，则上式等于$\\cfrac{1}{1-cx}$。\n\n我们现在来分析一下斐波那契数列的生成函数。\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\n\\end{aligned}$$\n\n为了方便，我们定义当$n\\lt 0$时，$F_{n}=0$。\n\n然后我们发现$F_{1}=F_{0}+F_{-1}=0+0=0$，于是我们再加上一项$[i=1]$。\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2}+[i=1])x^{i}\\\\\n&=x+\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\\\\\n&=x+x\\sum_{i=0}^{n}F_{i-1}x^{i-1}+x^{2}\\sum_{i=0}^{n}F_{i-2}x^{i-2}\\\\\n&=x+xF(x)+x^{2}F(x)\n\\end{aligned}$$\n\n于是\n\n$$F(x)=\\cfrac{x}{1-x-x^{2}}$$\n\n### 通项公式\n\n#### 斐波那契数\n\n那么问题来了，我们闲着没事求这个生成函数有什么用啊。\n\n求通项公式。\n\n我们知道形如$a_{n}=c^{n}$的数列的生成函数等于$\\cfrac{1}{1-cx}$，我们可以试着将$\\cfrac{x}{1-x-x^{2}}$分解成两个类似形式的分式的和。\n\n设\n\n$$1-x-x^{2}=(1-ax)(1-bx)$$\n\n$$\\begin{cases}\n&a+b=1\\\\\n&ab=-1\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&a=\\cfrac{1+\\sqrt{5}}{2}\\\\\n&b=\\cfrac{1-\\sqrt{5}}{2}\n\\end{cases}$$\n\n再设\n\n$$\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{x}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}$$\n\n$$\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}$$\n\n于是\n\n$$c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx=x$$\n\n等式右边没有常数项，因此$c+d$应当是$0$。再继续接下去，我们得到\n\n$$\n\\begin{cases}\n&c=\\cfrac{1}{\\sqrt{5}}\\\\\n&d=-\\cfrac{1}{\\sqrt{5}}\n\\end{cases}$$\n\n于是\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1+\\sqrt{5}}{2}x}-\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1-\\sqrt{5}}{2}x}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}x^{i}-\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}\\right)x^{i}\n\\end{aligned}$$\n\n结论就是\n\n$$F_{n}=\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{n}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{n}\\right)$$\n\n#### 卡特兰数\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}C_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i}\\\\\n&=1+x\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i-1}\\\\\n&=1+xF^{2}(x)\n\\end{aligned}$$\n\n于是\n\n$$xF^{2}(x)-F(x)+1=0$$\n\n$$F(x)=\\cfrac{1\\pm\\sqrt{1-4x}}{2x}$$\n\n$$2xF(x)=1\\pm\\sqrt{1-4x}$$\n\n当$x=0$时\n\n$$2\\times 0\\times 1=1\\pm1$$\n\n因此根号前应该取负。至此我们得到\n\n$$F(x)=\\cfrac{1-\\sqrt{1-4x}}{2x}$$\n\n那么通项公式呢？\n\n根据~~一个我抄过来的~~广义二项式定理，我们有\n\n$$\\begin{aligned}\n\\sqrt{1-4x}&=1+\\sum_{i=1}^{n}\\cfrac{(-1)^{i-1}}{i2^{2i-1}}C_{2i-2}^{i-1}(-4x)^{i}\\\\\n&=1+2\\sum_{i=1}^{n}\\cfrac{(-1)^{2i-1}}{i}C_{2i-2}^{i-1}x^{i}\\\\\n&=1-2\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i}\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1-\\sqrt{1-4x}}{2x}\\\\\n&=\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i-1}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{i+1}C_{2i}^{i}x^{i}\n\\end{aligned}$$\n\n于是\n\n$$C_{n}=\\cfrac{1}{n+1}C_{2n}^{n}$$\n\n#### 默慈金数\n\n~~等会默慈金数是个什么鬼？（~~\n\n默慈金数一般记为$M_{n}$，被定义为在均匀分布在一个圆上的$n$个有编号的点之间连出彼此不相交的弦的方案数。一根弦也不连也是一种方案。\n\n$$M_{0}=1$$\n\n$$M_{n}=M_{n-1}+\\sum_{i=0}^{n-2}M_{i}M_{n-i-2}$$\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}M_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}\\right)x^{i}\\\\\n&=1+xF(x)+x^{2}F^{2}(x)\n\\end{aligned}$$\n\n于是\n\n$$x^{2}F^{2}(x)+(x-1)F(x)+1=0$$\n\n$$F(x)=\\cfrac{1-x\\pm\\sqrt{1-2x-3x^{2}}}{2x^{2}}$$\n\n总之根号前应该取负（\n\n$$\\begin{aligned}\nF(x)&=\\cfrac{1-x-\\sqrt{1-2x-3x^{2}}}{2x^{2}}\\\\\n&=\\cfrac{2-2x-2\\sqrt{1-2x-3x^{2}}}{4x^{2}}\\\\\n&=\\cfrac{(1+x)-2\\sqrt{(1+x)(1-3x)}+(1-3x)}{4x^{2}}\\\\\n&=\\cfrac{(\\sqrt{1+x}-\\sqrt{1-3x})^{2}}{4x^{2}}\n\\end{aligned}$$\n\nwoc这什么鬼东西溜了溜了。\n\n~~留作课后习题，哪位dalao推出来了让我%一%（~~\n\n### 例题\n\n#### [「TJOI2015」概率论](https://www.luogu.org/problemnew/show/P3978)\n\n首先很明显，互不同构的二叉树一共$C_{n}$棵，其中$C_{n}$是卡特兰数。现在我们希望求出这些二叉树的叶子结点总数，我们记为$F_{n}$。不难发现\n\n$$F_{0}=0$$\n\n$$F_{1}=1$$\n\n$$F_{n}=2\\sum_{i=0}^{n-1}C_{i}F_{n-i-1}+[i=1]$$\n\n$$\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}+[i=1]\\right)x^{i}\\\\\n&=x+2\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}\\right)x^{i}\\\\\n&=x+2xCF(x)\n\\end{aligned}$$\n\n于是\n\n$$F(x)=\\cfrac{x}{1-2xC(x)}$$\n\n其中$C(x)$是卡特兰数的生成函数，我们知道它的值是$\\cfrac{1-\\sqrt{1-4x}}{2x}$，所以说\n\n$$F(x)=\\cfrac{x}{\\sqrt{1-4x}}$$\n\n~~然后我又不会了（~~\n\n$$(xC(x))^{\\prime}=\\cfrac{1}{\\sqrt{1-4x}}=\\cfrac{F(x)}{x}$$\n\n$$(xC(x))^{\\prime}=\\sum_{i=0}^{n}(i+1)C_{i}x^{i}$$\n\n$$\\cfrac{F(x)}{x}=\\sum_{i=0}^{n}F_{i}x^{i-1}=\\sum_{i=-1}^{n}F_{i+1}x^{i}$$\n\n我们就得到\n\n$$iC_{i-1}=F_{i}$$\n\n于是\n\n$$\\begin{aligned}\n\\text{Ans}&=\\cfrac{F_{n}}{C_{n}}\\\\\n&=\\cfrac{nC_{n-1}}{C_{n}}\\\\\n&=\\cfrac{C_{2n-2}^{n-1}}{\\cfrac{1}{n+1}C_{2n}^{n}}\\\\\n&=\\cfrac{\\cfrac{(2n-2)!}{(n-1)!(n-1)!}}{\\cfrac{(2n)!}{n!(n+1)!}}\\\\\n&=\\cfrac{(2n-2)!n!(n+1)!}{(n-1)!(n-1)!(2n)!}\\\\\n&=\\cfrac{n(n+1)}{2(2n-1)}\n\\end{aligned}$$\n\n#### [「国家集训队」整数的lqp拆分](https://www.luogu.org/problemnew/show/P4451)\n\n其实这道题我几个月前推出来了一个$O(n^{2})$的式子（\n\n如果记答案为$G_{n}$，我们有\n\n$$G_{n}=\\sum_{i=0}^{n}F_{i}G_{n-i}$$\n\n其中$F_{n}$是斐波那契数。为了方便，我们强行定义$G_{0}=1$。\n\n$$\\begin{aligned}\nG(x)&=\\sum_{i=0}^{n}G_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}\\right)x^{i}\\\\\n&=1+FG(x)\n\\end{aligned}$$\n\n其中$F(x)$是斐波那契数的生成函数。于是\n\n$$G(x)=\\cfrac{1}{1-F(x)}=\\cfrac{1-x-x^{2}}{1-2x-x^{2}}=1+\\cfrac{x}{1-2x-x^{2}}$$\n\n多出来的那个$1$是$G_{0}$，可以无视掉。\n\n设\n\n$$(1-ax)(1-bx)=1-2x-x^{2}$$\n\n（中间过程略）\n\n$$\\begin{cases}\n&a=1+\\sqrt{2}\\\\\n&b=1-\\sqrt{2}\n\\end{cases}$$\n\n再设\n\n$$\\cfrac{c}{1-(1+\\sqrt{2})x}+\\cfrac{d}{1-(1-\\sqrt{2})x}=\\cfrac{x}{1-2x-x^{2}}$$\n\n（中间过程略$\\times 2$）\n\n$$\\begin{cases}\n&c=\\cfrac{1}{2\\sqrt{2}}\\\\\n&d=-\\cfrac{1}{2\\sqrt{2}}\n\\end{cases}$$\n\n于是\n\n$$\\begin{aligned}\nG(x)&=1+\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1+\\sqrt{2})x}-\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1-\\sqrt{2})x}\\\\\n&=1+\\sum_{i=0}^{n}\\cfrac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{i}-(1-\\sqrt{2})^{i}\\right)x^{i}\n\\end{aligned}$$\n\n最终结论就是\n\n$$G_{n}=\\cfrac{(1+\\sqrt{2})^{n}-(1-\\sqrt{2})^{n}}{2\\sqrt{2}}$$\n\n根据暴力枚举，我们得出$\\sqrt{2}\\equiv 59713600\\pmod{10^{9}+7}$。\n","slug":"generating-function-learning-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmx007wmku93dpf09cc","content":"<p>又被wzx吊打了QAQ</p>\n<p>来写一篇生成函数吧QAQ</p>\n<p><del>本文全部内容抄袭自<a href=\"https://www.cnblogs.com/asuldb/p/10533453.html\">这篇blog</a>和<a href=\"https://www.cnblogs.com/asuldb/p/10534860.html\">这篇blog</a></del></p>\n<a id=\"more\"></a>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>一个数列$\\{a_{0},a_{1},\\cdots,a_{n}\\}$的生成函数$f(x)$被定义为</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum_{i=0}^{n}a_{i}x^{i}</script><p>就这样（</p>\n<h3 id=\"封闭表达式\"><a href=\"#封闭表达式\" class=\"headerlink\" title=\"封闭表达式\"></a>封闭表达式</h3><p>但是这个形式比较玄乎，不便于我们推式子。特别是当我们需要求一个无穷数列的生成函数时。于是我们希望能够进一步化简。</p>\n<p>比如说，当$a_{n}=c^{n}$，即这个数列是$\\{1,c,c^{2},\\cdots\\}$时，它的生成函数是</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum_{i=0}^{n}c^{i}x^{i}=\\cfrac{1-(cx)^{n+1}}{1-cx}</script><p>就是一个简单地等比数列求和。很明显，当$x\\in(-1,1)$时，如果$n$趋向于正无穷大，则上式等于$\\cfrac{1}{1-cx}$。</p>\n<p>我们现在来分析一下斐波那契数列的生成函数。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\n\\end{aligned}</script><p>为了方便，我们定义当$n\\lt 0$时，$F_{n}=0$。</p>\n<p>然后我们发现$F_{1}=F_{0}+F_{-1}=0+0=0$，于是我们再加上一项$[i=1]$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2}+[i=1])x^{i}\\\\\n&=x+\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\\\\\n&=x+x\\sum_{i=0}^{n}F_{i-1}x^{i-1}+x^{2}\\sum_{i=0}^{n}F_{i-2}x^{i-2}\\\\\n&=x+xF(x)+x^{2}F(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{1-x-x^{2}}</script><h3 id=\"通项公式\"><a href=\"#通项公式\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h3><h4 id=\"斐波那契数\"><a href=\"#斐波那契数\" class=\"headerlink\" title=\"斐波那契数\"></a>斐波那契数</h4><p>那么问题来了，我们闲着没事求这个生成函数有什么用啊。</p>\n<p>求通项公式。</p>\n<p>我们知道形如$a_{n}=c^{n}$的数列的生成函数等于$\\cfrac{1}{1-cx}$，我们可以试着将$\\cfrac{x}{1-x-x^{2}}$分解成两个类似形式的分式的和。</p>\n<p>设</p>\n<script type=\"math/tex; mode=display\">1-x-x^{2}=(1-ax)(1-bx)</script><script type=\"math/tex; mode=display\">\\begin{cases}\n&a+b=1\\\\\n&ab=-1\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&a=\\cfrac{1+\\sqrt{5}}{2}\\\\\n&b=\\cfrac{1-\\sqrt{5}}{2}\n\\end{cases}</script><p>再设</p>\n<script type=\"math/tex; mode=display\">\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{x}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}</script><script type=\"math/tex; mode=display\">\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx=x</script><p>等式右边没有常数项，因此$c+d$应当是$0$。再继续接下去，我们得到</p>\n<script type=\"math/tex; mode=display\">\n\\begin{cases}\n&c=\\cfrac{1}{\\sqrt{5}}\\\\\n&d=-\\cfrac{1}{\\sqrt{5}}\n\\end{cases}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1+\\sqrt{5}}{2}x}-\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1-\\sqrt{5}}{2}x}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}x^{i}-\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}\\right)x^{i}\n\\end{aligned}</script><p>结论就是</p>\n<script type=\"math/tex; mode=display\">F_{n}=\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{n}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{n}\\right)</script><h4 id=\"卡特兰数\"><a href=\"#卡特兰数\" class=\"headerlink\" title=\"卡特兰数\"></a>卡特兰数</h4><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}C_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i}\\\\\n&=1+x\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i-1}\\\\\n&=1+xF^{2}(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">xF^{2}(x)-F(x)+1=0</script><script type=\"math/tex; mode=display\">F(x)=\\cfrac{1\\pm\\sqrt{1-4x}}{2x}</script><script type=\"math/tex; mode=display\">2xF(x)=1\\pm\\sqrt{1-4x}</script><p>当$x=0$时</p>\n<script type=\"math/tex; mode=display\">2\\times 0\\times 1=1\\pm1</script><p>因此根号前应该取负。至此我们得到</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{1-\\sqrt{1-4x}}{2x}</script><p>那么通项公式呢？</p>\n<p>根据<del>一个我抄过来的</del>广义二项式定理，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sqrt{1-4x}&=1+\\sum_{i=1}^{n}\\cfrac{(-1)^{i-1}}{i2^{2i-1}}C_{2i-2}^{i-1}(-4x)^{i}\\\\\n&=1+2\\sum_{i=1}^{n}\\cfrac{(-1)^{2i-1}}{i}C_{2i-2}^{i-1}x^{i}\\\\\n&=1-2\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1-\\sqrt{1-4x}}{2x}\\\\\n&=\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i-1}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{i+1}C_{2i}^{i}x^{i}\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">C_{n}=\\cfrac{1}{n+1}C_{2n}^{n}</script><h4 id=\"默慈金数\"><a href=\"#默慈金数\" class=\"headerlink\" title=\"默慈金数\"></a>默慈金数</h4><p><del>等会默慈金数是个什么鬼？（</del></p>\n<p>默慈金数一般记为$M_{n}$，被定义为在均匀分布在一个圆上的$n$个有编号的点之间连出彼此不相交的弦的方案数。一根弦也不连也是一种方案。</p>\n<script type=\"math/tex; mode=display\">M_{0}=1</script><script type=\"math/tex; mode=display\">M_{n}=M_{n-1}+\\sum_{i=0}^{n-2}M_{i}M_{n-i-2}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}M_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}\\right)x^{i}\\\\\n&=1+xF(x)+x^{2}F^{2}(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">x^{2}F^{2}(x)+(x-1)F(x)+1=0</script><script type=\"math/tex; mode=display\">F(x)=\\cfrac{1-x\\pm\\sqrt{1-2x-3x^{2}}}{2x^{2}}</script><p>总之根号前应该取负（</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1-x-\\sqrt{1-2x-3x^{2}}}{2x^{2}}\\\\\n&=\\cfrac{2-2x-2\\sqrt{1-2x-3x^{2}}}{4x^{2}}\\\\\n&=\\cfrac{(1+x)-2\\sqrt{(1+x)(1-3x)}+(1-3x)}{4x^{2}}\\\\\n&=\\cfrac{(\\sqrt{1+x}-\\sqrt{1-3x})^{2}}{4x^{2}}\n\\end{aligned}</script><p>woc这什么鬼东西溜了溜了。</p>\n<p><del>留作课后习题，哪位dalao推出来了让我%一%（</del></p>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><h4 id=\"「TJOI2015」概率论\"><a href=\"#「TJOI2015」概率论\" class=\"headerlink\" title=\"「TJOI2015」概率论\"></a><a href=\"https://www.luogu.org/problemnew/show/P3978\">「TJOI2015」概率论</a></h4><p>首先很明显，互不同构的二叉树一共$C_{n}$棵，其中$C_{n}$是卡特兰数。现在我们希望求出这些二叉树的叶子结点总数，我们记为$F_{n}$。不难发现</p>\n<script type=\"math/tex; mode=display\">F_{0}=0</script><script type=\"math/tex; mode=display\">F_{1}=1</script><script type=\"math/tex; mode=display\">F_{n}=2\\sum_{i=0}^{n-1}C_{i}F_{n-i-1}+[i=1]</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}+[i=1]\\right)x^{i}\\\\\n&=x+2\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}\\right)x^{i}\\\\\n&=x+2xCF(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{1-2xC(x)}</script><p>其中$C(x)$是卡特兰数的生成函数，我们知道它的值是$\\cfrac{1-\\sqrt{1-4x}}{2x}$，所以说</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{\\sqrt{1-4x}}</script><p><del>然后我又不会了（</del></p>\n<script type=\"math/tex; mode=display\">(xC(x))^{\\prime}=\\cfrac{1}{\\sqrt{1-4x}}=\\cfrac{F(x)}{x}</script><script type=\"math/tex; mode=display\">(xC(x))^{\\prime}=\\sum_{i=0}^{n}(i+1)C_{i}x^{i}</script><script type=\"math/tex; mode=display\">\\cfrac{F(x)}{x}=\\sum_{i=0}^{n}F_{i}x^{i-1}=\\sum_{i=-1}^{n}F_{i+1}x^{i}</script><p>我们就得到</p>\n<script type=\"math/tex; mode=display\">iC_{i-1}=F_{i}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=\\cfrac{F_{n}}{C_{n}}\\\\\n&=\\cfrac{nC_{n-1}}{C_{n}}\\\\\n&=\\cfrac{C_{2n-2}^{n-1}}{\\cfrac{1}{n+1}C_{2n}^{n}}\\\\\n&=\\cfrac{\\cfrac{(2n-2)!}{(n-1)!(n-1)!}}{\\cfrac{(2n)!}{n!(n+1)!}}\\\\\n&=\\cfrac{(2n-2)!n!(n+1)!}{(n-1)!(n-1)!(2n)!}\\\\\n&=\\cfrac{n(n+1)}{2(2n-1)}\n\\end{aligned}</script><h4 id=\"「国家集训队」整数的lqp拆分\"><a href=\"#「国家集训队」整数的lqp拆分\" class=\"headerlink\" title=\"「国家集训队」整数的lqp拆分\"></a><a href=\"https://www.luogu.org/problemnew/show/P4451\">「国家集训队」整数的lqp拆分</a></h4><p>其实这道题我几个月前推出来了一个$O(n^{2})$的式子（</p>\n<p>如果记答案为$G_{n}$，我们有</p>\n<script type=\"math/tex; mode=display\">G_{n}=\\sum_{i=0}^{n}F_{i}G_{n-i}</script><p>其中$F_{n}$是斐波那契数。为了方便，我们强行定义$G_{0}=1$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\sum_{i=0}^{n}G_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}\\right)x^{i}\\\\\n&=1+FG(x)\n\\end{aligned}</script><p>其中$F(x)$是斐波那契数的生成函数。于是</p>\n<script type=\"math/tex; mode=display\">G(x)=\\cfrac{1}{1-F(x)}=\\cfrac{1-x-x^{2}}{1-2x-x^{2}}=1+\\cfrac{x}{1-2x-x^{2}}</script><p>多出来的那个$1$是$G_{0}$，可以无视掉。</p>\n<p>设</p>\n<script type=\"math/tex; mode=display\">(1-ax)(1-bx)=1-2x-x^{2}</script><p>（中间过程略）</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&a=1+\\sqrt{2}\\\\\n&b=1-\\sqrt{2}\n\\end{cases}</script><p>再设</p>\n<script type=\"math/tex; mode=display\">\\cfrac{c}{1-(1+\\sqrt{2})x}+\\cfrac{d}{1-(1-\\sqrt{2})x}=\\cfrac{x}{1-2x-x^{2}}</script><p>（中间过程略$\\times 2$）</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&c=\\cfrac{1}{2\\sqrt{2}}\\\\\n&d=-\\cfrac{1}{2\\sqrt{2}}\n\\end{cases}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=1+\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1+\\sqrt{2})x}-\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1-\\sqrt{2})x}\\\\\n&=1+\\sum_{i=0}^{n}\\cfrac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{i}-(1-\\sqrt{2})^{i}\\right)x^{i}\n\\end{aligned}</script><p>最终结论就是</p>\n<script type=\"math/tex; mode=display\">G_{n}=\\cfrac{(1+\\sqrt{2})^{n}-(1-\\sqrt{2})^{n}}{2\\sqrt{2}}</script><p>根据暴力枚举，我们得出$\\sqrt{2}\\equiv 59713600\\pmod{10^{9}+7}$。</p>\n","site":{"data":{}},"excerpt":"<p>又被wzx吊打了QAQ</p>\n<p>来写一篇生成函数吧QAQ</p>\n<p><del>本文全部内容抄袭自<a href=\"https://www.cnblogs.com/asuldb/p/10533453.html\">这篇blog</a>和<a href=\"https://www.cnblogs.com/asuldb/p/10534860.html\">这篇blog</a></del></p>","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>一个数列$\\{a_{0},a_{1},\\cdots,a_{n}\\}$的生成函数$f(x)$被定义为</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum_{i=0}^{n}a_{i}x^{i}</script><p>就这样（</p>\n<h3 id=\"封闭表达式\"><a href=\"#封闭表达式\" class=\"headerlink\" title=\"封闭表达式\"></a>封闭表达式</h3><p>但是这个形式比较玄乎，不便于我们推式子。特别是当我们需要求一个无穷数列的生成函数时。于是我们希望能够进一步化简。</p>\n<p>比如说，当$a_{n}=c^{n}$，即这个数列是$\\{1,c,c^{2},\\cdots\\}$时，它的生成函数是</p>\n<script type=\"math/tex; mode=display\">f(x)=\\sum_{i=0}^{n}c^{i}x^{i}=\\cfrac{1-(cx)^{n+1}}{1-cx}</script><p>就是一个简单地等比数列求和。很明显，当$x\\in(-1,1)$时，如果$n$趋向于正无穷大，则上式等于$\\cfrac{1}{1-cx}$。</p>\n<p>我们现在来分析一下斐波那契数列的生成函数。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\n\\end{aligned}</script><p>为了方便，我们定义当$n\\lt 0$时，$F_{n}=0$。</p>\n<p>然后我们发现$F_{1}=F_{0}+F_{-1}=0+0=0$，于是我们再加上一项$[i=1]$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}(F_{i-1}+F_{i-2}+[i=1])x^{i}\\\\\n&=x+\\sum_{i=0}^{n}(F_{i-1}+F_{i-2})x^{i}\\\\\n&=x+x\\sum_{i=0}^{n}F_{i-1}x^{i-1}+x^{2}\\sum_{i=0}^{n}F_{i-2}x^{i-2}\\\\\n&=x+xF(x)+x^{2}F(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{1-x-x^{2}}</script><h3 id=\"通项公式\"><a href=\"#通项公式\" class=\"headerlink\" title=\"通项公式\"></a>通项公式</h3><h4 id=\"斐波那契数\"><a href=\"#斐波那契数\" class=\"headerlink\" title=\"斐波那契数\"></a>斐波那契数</h4><p>那么问题来了，我们闲着没事求这个生成函数有什么用啊。</p>\n<p>求通项公式。</p>\n<p>我们知道形如$a_{n}=c^{n}$的数列的生成函数等于$\\cfrac{1}{1-cx}$，我们可以试着将$\\cfrac{x}{1-x-x^{2}}$分解成两个类似形式的分式的和。</p>\n<p>设</p>\n<script type=\"math/tex; mode=display\">1-x-x^{2}=(1-ax)(1-bx)</script><script type=\"math/tex; mode=display\">\\begin{cases}\n&a+b=1\\\\\n&ab=-1\n\\end{cases}\n\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\n\\begin{cases}\n&a=\\cfrac{1+\\sqrt{5}}{2}\\\\\n&b=\\cfrac{1-\\sqrt{5}}{2}\n\\end{cases}</script><p>再设</p>\n<script type=\"math/tex; mode=display\">\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{x}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}</script><script type=\"math/tex; mode=display\">\\cfrac{c}{1-\\cfrac{1+\\sqrt{5}}{2}x}+\\cfrac{d}{1-\\cfrac{1-\\sqrt{5}}{2}x}=\\cfrac{c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx}{(1-\\cfrac{1+\\sqrt{5}}{2}x)(1-\\cfrac{1-\\sqrt{5}}{2}x)}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">c-\\cfrac{1-\\sqrt{5}}{2}cx+d-\\cfrac{1+\\sqrt{5}}{2}dx=x</script><p>等式右边没有常数项，因此$c+d$应当是$0$。再继续接下去，我们得到</p>\n<script type=\"math/tex; mode=display\">\n\\begin{cases}\n&c=\\cfrac{1}{\\sqrt{5}}\\\\\n&d=-\\cfrac{1}{\\sqrt{5}}\n\\end{cases}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1+\\sqrt{5}}{2}x}-\\cfrac{1}{\\sqrt{5}}\\cfrac{1}{1-\\cfrac{1-\\sqrt{5}}{2}x}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}x^{i}-\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{i}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{i}\\right)x^{i}\n\\end{aligned}</script><p>结论就是</p>\n<script type=\"math/tex; mode=display\">F_{n}=\\cfrac{1}{\\sqrt{5}}\\left(\\left(\\cfrac{1+\\sqrt{5}}{2}\\right)^{n}-\\left(\\cfrac{1-\\sqrt{5}}{2}\\right)^{n}\\right)</script><h4 id=\"卡特兰数\"><a href=\"#卡特兰数\" class=\"headerlink\" title=\"卡特兰数\"></a>卡特兰数</h4><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}C_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i}\\\\\n&=1+x\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}C_{i-j-1}\\right)x^{i-1}\\\\\n&=1+xF^{2}(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">xF^{2}(x)-F(x)+1=0</script><script type=\"math/tex; mode=display\">F(x)=\\cfrac{1\\pm\\sqrt{1-4x}}{2x}</script><script type=\"math/tex; mode=display\">2xF(x)=1\\pm\\sqrt{1-4x}</script><p>当$x=0$时</p>\n<script type=\"math/tex; mode=display\">2\\times 0\\times 1=1\\pm1</script><p>因此根号前应该取负。至此我们得到</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{1-\\sqrt{1-4x}}{2x}</script><p>那么通项公式呢？</p>\n<p>根据<del>一个我抄过来的</del>广义二项式定理，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sqrt{1-4x}&=1+\\sum_{i=1}^{n}\\cfrac{(-1)^{i-1}}{i2^{2i-1}}C_{2i-2}^{i-1}(-4x)^{i}\\\\\n&=1+2\\sum_{i=1}^{n}\\cfrac{(-1)^{2i-1}}{i}C_{2i-2}^{i-1}x^{i}\\\\\n&=1-2\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1-\\sqrt{1-4x}}{2x}\\\\\n&=\\sum_{i=1}^{n}\\cfrac{1}{i}C_{2i-2}^{i-1}x^{i-1}\\\\\n&=\\sum_{i=0}^{n}\\cfrac{1}{i+1}C_{2i}^{i}x^{i}\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">C_{n}=\\cfrac{1}{n+1}C_{2n}^{n}</script><h4 id=\"默慈金数\"><a href=\"#默慈金数\" class=\"headerlink\" title=\"默慈金数\"></a>默慈金数</h4><p><del>等会默慈金数是个什么鬼？（</del></p>\n<p>默慈金数一般记为$M_{n}$，被定义为在均匀分布在一个圆上的$n$个有编号的点之间连出彼此不相交的弦的方案数。一根弦也不连也是一种方案。</p>\n<script type=\"math/tex; mode=display\">M_{0}=1</script><script type=\"math/tex; mode=display\">M_{n}=M_{n-1}+\\sum_{i=0}^{n-2}M_{i}M_{n-i-2}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}M_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(M_{i-1}+\\sum_{j=0}^{i-2}M_{j}M_{i-j-2}\\right)x^{i}\\\\\n&=1+xF(x)+x^{2}F^{2}(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">x^{2}F^{2}(x)+(x-1)F(x)+1=0</script><script type=\"math/tex; mode=display\">F(x)=\\cfrac{1-x\\pm\\sqrt{1-2x-3x^{2}}}{2x^{2}}</script><p>总之根号前应该取负（</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\cfrac{1-x-\\sqrt{1-2x-3x^{2}}}{2x^{2}}\\\\\n&=\\cfrac{2-2x-2\\sqrt{1-2x-3x^{2}}}{4x^{2}}\\\\\n&=\\cfrac{(1+x)-2\\sqrt{(1+x)(1-3x)}+(1-3x)}{4x^{2}}\\\\\n&=\\cfrac{(\\sqrt{1+x}-\\sqrt{1-3x})^{2}}{4x^{2}}\n\\end{aligned}</script><p>woc这什么鬼东西溜了溜了。</p>\n<p><del>留作课后习题，哪位dalao推出来了让我%一%（</del></p>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><h4 id=\"「TJOI2015」概率论\"><a href=\"#「TJOI2015」概率论\" class=\"headerlink\" title=\"「TJOI2015」概率论\"></a><a href=\"https://www.luogu.org/problemnew/show/P3978\">「TJOI2015」概率论</a></h4><p>首先很明显，互不同构的二叉树一共$C_{n}$棵，其中$C_{n}$是卡特兰数。现在我们希望求出这些二叉树的叶子结点总数，我们记为$F_{n}$。不难发现</p>\n<script type=\"math/tex; mode=display\">F_{0}=0</script><script type=\"math/tex; mode=display\">F_{1}=1</script><script type=\"math/tex; mode=display\">F_{n}=2\\sum_{i=0}^{n-1}C_{i}F_{n-i-1}+[i=1]</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(x)&=\\sum_{i=0}^{n}F_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}+[i=1]\\right)x^{i}\\\\\n&=x+2\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i-1}C_{j}F_{i-j-1}\\right)x^{i}\\\\\n&=x+2xCF(x)\n\\end{aligned}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{1-2xC(x)}</script><p>其中$C(x)$是卡特兰数的生成函数，我们知道它的值是$\\cfrac{1-\\sqrt{1-4x}}{2x}$，所以说</p>\n<script type=\"math/tex; mode=display\">F(x)=\\cfrac{x}{\\sqrt{1-4x}}</script><p><del>然后我又不会了（</del></p>\n<script type=\"math/tex; mode=display\">(xC(x))^{\\prime}=\\cfrac{1}{\\sqrt{1-4x}}=\\cfrac{F(x)}{x}</script><script type=\"math/tex; mode=display\">(xC(x))^{\\prime}=\\sum_{i=0}^{n}(i+1)C_{i}x^{i}</script><script type=\"math/tex; mode=display\">\\cfrac{F(x)}{x}=\\sum_{i=0}^{n}F_{i}x^{i-1}=\\sum_{i=-1}^{n}F_{i+1}x^{i}</script><p>我们就得到</p>\n<script type=\"math/tex; mode=display\">iC_{i-1}=F_{i}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\text{Ans}&=\\cfrac{F_{n}}{C_{n}}\\\\\n&=\\cfrac{nC_{n-1}}{C_{n}}\\\\\n&=\\cfrac{C_{2n-2}^{n-1}}{\\cfrac{1}{n+1}C_{2n}^{n}}\\\\\n&=\\cfrac{\\cfrac{(2n-2)!}{(n-1)!(n-1)!}}{\\cfrac{(2n)!}{n!(n+1)!}}\\\\\n&=\\cfrac{(2n-2)!n!(n+1)!}{(n-1)!(n-1)!(2n)!}\\\\\n&=\\cfrac{n(n+1)}{2(2n-1)}\n\\end{aligned}</script><h4 id=\"「国家集训队」整数的lqp拆分\"><a href=\"#「国家集训队」整数的lqp拆分\" class=\"headerlink\" title=\"「国家集训队」整数的lqp拆分\"></a><a href=\"https://www.luogu.org/problemnew/show/P4451\">「国家集训队」整数的lqp拆分</a></h4><p>其实这道题我几个月前推出来了一个$O(n^{2})$的式子（</p>\n<p>如果记答案为$G_{n}$，我们有</p>\n<script type=\"math/tex; mode=display\">G_{n}=\\sum_{i=0}^{n}F_{i}G_{n-i}</script><p>其中$F_{n}$是斐波那契数。为了方便，我们强行定义$G_{0}=1$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=\\sum_{i=0}^{n}G_{i}x^{i}\\\\\n&=\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}+[i=0]\\right)x^{i}\\\\\n&=1+\\sum_{i=0}^{n}\\left(\\sum_{j=0}^{i}F_{j}G_{i-j}\\right)x^{i}\\\\\n&=1+FG(x)\n\\end{aligned}</script><p>其中$F(x)$是斐波那契数的生成函数。于是</p>\n<script type=\"math/tex; mode=display\">G(x)=\\cfrac{1}{1-F(x)}=\\cfrac{1-x-x^{2}}{1-2x-x^{2}}=1+\\cfrac{x}{1-2x-x^{2}}</script><p>多出来的那个$1$是$G_{0}$，可以无视掉。</p>\n<p>设</p>\n<script type=\"math/tex; mode=display\">(1-ax)(1-bx)=1-2x-x^{2}</script><p>（中间过程略）</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&a=1+\\sqrt{2}\\\\\n&b=1-\\sqrt{2}\n\\end{cases}</script><p>再设</p>\n<script type=\"math/tex; mode=display\">\\cfrac{c}{1-(1+\\sqrt{2})x}+\\cfrac{d}{1-(1-\\sqrt{2})x}=\\cfrac{x}{1-2x-x^{2}}</script><p>（中间过程略$\\times 2$）</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&c=\\cfrac{1}{2\\sqrt{2}}\\\\\n&d=-\\cfrac{1}{2\\sqrt{2}}\n\\end{cases}</script><p>于是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nG(x)&=1+\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1+\\sqrt{2})x}-\\cfrac{1}{2\\sqrt{2}}\\cfrac{1}{1-(1-\\sqrt{2})x}\\\\\n&=1+\\sum_{i=0}^{n}\\cfrac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{i}-(1-\\sqrt{2})^{i}\\right)x^{i}\n\\end{aligned}</script><p>最终结论就是</p>\n<script type=\"math/tex; mode=display\">G_{n}=\\cfrac{(1+\\sqrt{2})^{n}-(1-\\sqrt{2})^{n}}{2\\sqrt{2}}</script><p>根据暴力枚举，我们得出$\\sqrt{2}\\equiv 59713600\\pmod{10^{9}+7}$。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-04-11T02:28:42.000Z","title":"FWT抄袭笔记","password":null,"_content":"看到坐在我左边的dalao在学FWT。\n\n想着二轮前学一些很酷很炫~~很失败~~的算法，于是来~~背一下~~学一下吧。\n\n[抄袭来源](http://www.cnblogs.com/cjyyb/p/9065615.html)。\n\n<!-- more -->\n\n### 引入\n\n我们利用FFT可以在$O(n\\log n)$的时间复杂度内计算\n\n$$H[k]=(F\\times G)[k]=\\sum_{i+j=k}F[i]G[j]$$\n\n假如说我们把这个式子变一变\n\n$$H[k]=(F\\vee G)[k]=\\sum_{i\\vee j=k}F[i]G[j]$$\n\n$$H[k]=(F\\wedge G)[k]=\\sum_{i\\wedge j=k}F[i]G[j]$$\n\n$$H[k]=(F\\oplus G)[k]=\\sum_{i\\oplus j=k}F[i]G[j]$$\n\n其中$\\vee$指按位或，$\\wedge$指按位与，$\\oplus$指按位异或。\n\n我们还是希望能够在$O(n\\log n)$的时间复杂度内计算出答案。\n\n这种时候我们就需要FWT（快速沃尔什变换，Fast Walsh–Hadamard Transformation）了。\n\n在FFT中，我们先计算出了$F$和$G$的点值多项式，然后将对应位直接相乘得到了$F\\times G$的点值多项式，最后还原回了$F\\times G$。\n\n类似地，我们可不可以试着计算出两个多项式$F^{\\prime},G^{\\prime}$，使得\n\n$$(F\\times G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n~~当然可以啊不然还怎么会有FWT（~~\n\n### 一些约定\n\n对于两个向量$A$和$B$，我们令\n\n$$(A,B)=(A[0],A[1],\\cdots,B[0],B[1],\\cdots)$$\n\n设$F$的项数为$2^{t}$。为了方便，我们将其看做一个$2^{t}$维向量\n\n$$(F[0],F[1],\\cdots,F[2^{t}-1])$$\n\n然后我们定义\n\n$$F_{0}=(F[0],F[1],\\cdots,F[2^{t-1}-1])$$\n\n$$F_{1}=(F[2^{t-1}],F[2^{t-1}+1],\\cdots,F[2^{t}-1])$$\n\n### 正变换\n\n#### 按位或\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime},F_{1}^{\\prime}+F_{0}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n我们发现\n\n$$F^{\\prime}[i]=\\sum_{j\\vee i=i}F[j]$$\n\n$t=0$时这十分显然，我们来考虑$t\\gt 0$时的情况。\n\n首先很明显的一点是$j\\vee i=i\\Leftrightarrow j\\subseteq i$，也就是说$j$是$i$的子集。\n\n对于$F_{1}$中的一个下标$i$，我们在$F_{1}$左边接上$F_{0}$后，这个$i$就多了一个$2^{t-1}$。\n\n之前$i$的每一个子集$j$，也同样多了一个$2^{t-1}$，它们产生的贡献已经被统计在了$F_{1}^{\\prime}[i]$内。\n\n那么去掉这个$2^{t-1}$，我们还有$j\\subseteq i+2^{t-1}$，这部分其实就是$F_{0}^{\\prime}[i]$的值。\n\n据此，我们就有\n\n$$\\begin{aligned}\nF^{\\prime}\\cdot G^{\\prime}[i]&=\\left(\\sum_{j\\subseteq i}F[j]\\right)\\left(\\sum_{k\\subseteq i}G[k]\\right)\\\\\n&=\\sum_{j\\vee k\\subseteq i}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}\\sum_{j\\vee k=l}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}(F\\vee G)[l]\\\\\n&=(F\\vee G)^{\\prime}[i]\n\\end{aligned}$$\n\n#### 按位与\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n它具有类似的性质\n\n$$F^{\\prime}[i]=\\sum_{j\\wedge i=i}F[j]$$\n\n$$(F\\wedge G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n证明略。\n\n#### 按位异或\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n然后我们发现按位异或并没有像上面一样的和子集相关的性质。因此我们需要通过一些其他方式来证明它的正确性。\n\n首先\n\n$$(F+G)^{\\prime}=F^{\\prime}+G^{\\prime}$$\n\n如果$F$和$G$都只有一项，这十分显然。\n\n否则\n\n$$\\begin{aligned}\nF^{\\prime}+G^{\\prime}&=(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})+(G_{0}^{\\prime}+G_{1}^{\\prime},G_{0}^{\\prime}-G_{1}^{\\prime})\\\\\n&=(F_{0}^{\\prime}+G_{0}^{\\prime}+F_{1}^{\\prime}+G_{1}^{\\prime},F_{0}^{\\prime}+G_{0}^{\\prime}-F_{1}^{\\prime}-G_{1}^{\\prime})\\\\\n&=((F+G)_{0}^{\\prime}+(F+G)_{1}^{\\prime},(F+G)_{0}^{\\prime}-(F+G)_{1}^{\\prime})\\\\\n&=(F+G)^{\\prime}\n\\end{aligned}$$\n\n$$(F\\oplus G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n这个不会证，告辞。\n\n### 逆变换\n\n就是把刚刚算出来的$F^{\\prime}$变回$F$。\n\n$$F=\\begin{cases}\n&F^{\\prime}&(t=0)\\\\\n&\\begin{cases}\n&(F_{0},F_{1}-F_{0})&(\\vee)\\\\\n&(F_{0}-F_{1},F_{1})&(\\wedge)\\\\\n&(\\cfrac{F_{0}+F_{1}}{2},\\cfrac{F_{0}-F_{1}}{2})\\;\\;\\;\\;\\;\\;\\;\\;&(\\oplus)\n\\end{cases}\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\n\\end{cases}$$\n\n~~啥意思啊看不懂啊（~~\n\n然后您就可以切掉这道[板子题](https://www.luogu.org/problemnew/show/P4717)了。\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 17\n#define mod 998244353\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n;\nint F[1<<maxn][3],G[1<<maxn][3];\n\n#define FWT(F,tp) {\\\n\tfor(re int p=1;p<n;p<<=1)\\\n\t\tfor(re int i=0;i<n;i+=p<<1)\\\n\t\t\tfor(re int j=i;j<i+p;++j){\\\n\t\t\t\tF[j+p][0]=!tp?(F[j+p][0]+F[j][0])%mod:(F[j+p][0]-F[j][0]+mod)%mod;\\\n\t\t\t\tF[j][1]=!tp?(F[j][1]+F[j+p][1])%mod:(F[j][1]-F[j+p][1]+mod)%mod;\\\n\t\t\t\tre int x=F[j][2],y=F[j+p][2];\\\n\t\t\t\tF[j][2]=(x+y)%mod;\\\n\t\t\t\tF[j+p][2]=(x-y+mod)%mod;\\\n\t\t\t\tif(tp){\\\n\t\t\t\t\tF[j][2]=499122177LL*F[j][2]%mod;\\\n\t\t\t\t\tF[j+p][2]=499122177LL*F[j+p][2]%mod;\\\n\t\t\t\t}\\\n\t\t\t}\\\n}\n\nint main(){\n\tcltstream::read(n);\n\tn=1<<n;\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(F[i][0]);\n\t\tF[i][1]=F[i][2]=F[i][0];\n\t}\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(G[i][0]);\n\t\tG[i][1]=G[i][2]=G[i][0];\n\t}\n\tFWT(F,0);\n\tFWT(G,0);\n\tfor(re int j=0;j<3;++j)\n\t\tfor(re int i=0;i<n;++i)\n\t\t\tF[i][j]=1LL*F[i][j]*G[i][j]%mod;\n\tFWT(F,1);\n\tfor(re int j=0;j<3;++j)\n\t\tfor(re int i=0;i<n;++i)\n\t\t\tcltstream::write(F[i][j],i<n-1?32:10);\n\tclop();\n\treturn 0;\n}\n```\n\n### 单位元\n\n我们知道FFT中的单位元多项式是$F(x)=1$，类似地，FWT是否也拥有这样的一个单位元呢？\n\n当然是有的。\n\n对于按位或和按位异或来说，它们的单位元是\n\n$$(1,0,\\cdots,0,0)$$\n\n对于按位与来说，它的单位元是\n\n$$(0,0,\\cdots,0,1)$$\n\n### 求逆\n\n既然有了单位元，我们就不禁会想……这东西能求逆吗？\n\n大概……能吧。\n\n以下所有运算在模$998244353$意义下进行。\n\n#### 按位或\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\vee G=(1,0,\\cdots,0,0)$$\n\n首先我们需要知道\n\n$$F\\vee G=(F_{0}\\vee G_{0},F_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1})$$\n\n注意到左半部分和右半部分的下标有一个重要区别就是从右往左第$t$位是否为$1$。\n\n如果某个下标和右半部分的某个下标进行了按位或，它的第$t$位一定是$1$，那么它就跑到右半部分去了。\n\n否则，即两个左半部分的下标进行了按位或，这种情况结果还是在左半部分。\n\n然后我们就可以往下推了\n\n$$\\begin{aligned}\nF_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1}&=0\\\\\n(F_{0}+F_{1})\\vee G_{1}&=-F_{1}\\vee G_{0}\\\\\nG_{1}&=-F_{1}\\vee G_{0}\\vee (F_{0}+F_{1})^{-1}\n\\end{aligned}$$\n\n边界条件$G[0]=F[0]^{-1}$。\n\n大致代码如下\n\n```cpp\nvoid Inv(re int* F,re int* G,re int n){\n\tif(n==1)\n\t\tG[0]=cltpow(F[0],mod-2);\n\telse{\n\t\tint tmp1[1<<maxn],tmp2[1<<maxn];\n\t\tInv(F,G,n>>1);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\ttmp1[i]=F[i]+F[(n>>1)+i];\n\t\tInv(tmp1,tmp2,n>>1);\n\t\tFWT(F+(n>>1),n>>1,0);\n\t\tFWT(G,n>>1,0);\n\t\tFWT(tmp2,n>>1,0);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\ttmp2[i]=1LL*F[(n>>1)+i]*G[i]%mod*tmp2[i]%mod;\n\t\tFWT(F+(n>>1),n>>1,1);\n\t\tFWT(G,n>>1,1);\n\t\tFWT(tmp2,n>>1,1);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\tG[(n>>1)+i]=(mod-tmp2[i])%mod;\n\t}\n}\n```\n\n时间复杂度非常显然是$O(n^{2}2^{n})$。\n\n#### 按位与\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\wedge G=(0,0,\\cdots,0,1)$$\n\n我们可以用类似的过程得到如下结论\n\n$$F\\wedge G=(F_{0}\\wedge G_{0}+F_{0}\\wedge G_{1}+F_{1}\\wedge G_{0},F_{1}\\wedge G_{1})$$\n\n$$G_{0}=-F_{0}\\wedge G_{1}\\wedge (F_{0}+F_{1})^{-1}$$\n\n#### 按位异或\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\oplus G=(1,0,\\cdots,0,0)$$\n\n首先我们有\n\n$$F\\oplus G=(F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1},F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0})$$\n\n也就是说\n\n$$F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1}=\\epsilon$$\n$$F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0}=0$$\n\n将上面两个式子相加、相减，得到\n\n$$(F_{0}+F_{1})\\oplus(G_{0}+G_{1})=\\epsilon$$\n$$(F_{0}-F_{1})\\oplus(G_{0}-G_{1})=\\epsilon$$\n\n于是\n\n$$G_{0}=\\cfrac{(F_{0}+F_{1})^{-1}+(F_{0}-F_{1})^{-1}}{2}$$\n\n$$G_{1}=\\cfrac{(F_{0}+F_{1})^{-1}-(F_{0}-F_{1})^{-1}}{2}$$\n\n时间复杂度$O(n2^{n})$。\n\n这就没了？并不是。\n\n如果您按照上面的式子写好程序，然后往里面输入\n\n```\n2\n1 2 3 4\n```\n\n这样一组数据，您会发现您的程序给出的结果并不正确。\n\n那么原因是什么呢？是我们式子推错了吗？\n\n输出一下中间的运算过程，我们发现，在中间有一步，我们计算$(2,2)^{-1}$时，需要用到$(0)^{-1}$。\n\n显然它不存在，但是同样显然的是，如果$(2,2)^{-1}$存在，那么这个过程不应该出现这样的问题。\n\n所以说原因就是，$(2,2)^{-1}$，或者更进一步地，$(1,2,3,4)^{-1}$__不存在__。\n\n### [子集卷积](https://loj.ac/problem/152)\n\n~~让我来看看有没有点进去看完题面一脸懵逼地关闭标签页的。~~\n\n这道题是让我们求这个东西\n\n$$h_{R}=\\sum_{S\\vee T=R,S\\wedge T=\\varnothing}f_{S}g_{T}$$\n\n这比我们之前看到的卷积拥有更加严格的要求，$S\\wedge T=\\varnothing$，很明显，这是在提示我们抄题解。\n\n我们定义\n\n$$F_{i,S}=\\begin{cases}\n&f_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n$$G_{i,S}=\\begin{cases}\n&g_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n$$H_{i,S}=\\begin{cases}\n&h_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n然后我们从小到大枚举$i$，计算\n\n$$H_{i}=\\sum_{j=0}^{i}F_{j}\\vee G_{i-j}$$\n\n为了理解这个式子，我们先将其展开\n\n$$H_{i,R}=\\sum_{j=0}^{i}\\sum_{S\\vee T=R}F_{j,S}G_{i-j,T}$$\n\n根据定义，$F_{i,S}$和$G_{i,S}$有值当且仅当$|S|=i$，因此这就相当于\n\n$$H_{i,R}=\\sum_{S\\vee T=R,|S|+|T|=i}F_{|S|,S}G_{|T|,T}$$\n\n因为$S$和$T$可能会有交集，从而$i\\gt |R|$时$H_{i,R}$也可能有值，这是不符合定义的，因此（如果有必要的话）我们需要手动清空。\n\n代码如下\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 20\n#define mod 1000000009\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,N;\nint cnt[1<<maxn],F[maxn+1][1<<maxn],G[maxn+1][1<<maxn],H[maxn+1][1<<maxn];\n\ninline void FWT(re int* F,re int tp){\n\tfor(re int p=1;p<N;p<<=1)\n\t\tfor(re int i=0;i<N;i+=p<<1)\n\t\t\tfor(re int j=i;j<i+p;++j)\n\t\t\t\tF[j+p]=!tp?(F[j+p]+F[j])%mod:(F[j+p]-F[j]+mod)%mod;\n}\n\nint main(){\n\tcltstream::read(n);\n\tN=1<<n;\n\tfor(re int i=1;i<N;++i)\n\t\tcnt[i]=cnt[i>>1]+(i&1);\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::read(F[cnt[i]][i]);\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::read(G[cnt[i]][i]);\n\tfor(re int i=0;i<=n;++i){\n\t\tFWT(F[i],0);\n\t\tFWT(G[i],0);\n\t\tfor(re int j=0;j<=i;++j)\n\t\t\tfor(re int S=0;S<N;++S)\n\t\t\t\tH[i][S]=(H[i][S]+1LL*F[j][S]*G[i-j][S]%mod)%mod;\n\t\tFWT(H[i],1);\n\t\tfor(re int S=0;S<N;++S)\n\t\t\tcnt[S]==i||(H[i][S]=0);\n\t}\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::write(H[cnt[i]][i],32);\n\tclop();\n\treturn 0;\n}\n```\n\n### 例题\n\n![](/images/TIM图片20181011211750.jpg)\n","source":"_posts/2019-04-11-fwt-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-04-11 10:28:42\ntitle: FWT抄袭笔记\ntags:\n  - FWT\ncategories:\n  - 学习笔记\npassword:\n---\n看到坐在我左边的dalao在学FWT。\n\n想着二轮前学一些很酷很炫~~很失败~~的算法，于是来~~背一下~~学一下吧。\n\n[抄袭来源](http://www.cnblogs.com/cjyyb/p/9065615.html)。\n\n<!-- more -->\n\n### 引入\n\n我们利用FFT可以在$O(n\\log n)$的时间复杂度内计算\n\n$$H[k]=(F\\times G)[k]=\\sum_{i+j=k}F[i]G[j]$$\n\n假如说我们把这个式子变一变\n\n$$H[k]=(F\\vee G)[k]=\\sum_{i\\vee j=k}F[i]G[j]$$\n\n$$H[k]=(F\\wedge G)[k]=\\sum_{i\\wedge j=k}F[i]G[j]$$\n\n$$H[k]=(F\\oplus G)[k]=\\sum_{i\\oplus j=k}F[i]G[j]$$\n\n其中$\\vee$指按位或，$\\wedge$指按位与，$\\oplus$指按位异或。\n\n我们还是希望能够在$O(n\\log n)$的时间复杂度内计算出答案。\n\n这种时候我们就需要FWT（快速沃尔什变换，Fast Walsh–Hadamard Transformation）了。\n\n在FFT中，我们先计算出了$F$和$G$的点值多项式，然后将对应位直接相乘得到了$F\\times G$的点值多项式，最后还原回了$F\\times G$。\n\n类似地，我们可不可以试着计算出两个多项式$F^{\\prime},G^{\\prime}$，使得\n\n$$(F\\times G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n~~当然可以啊不然还怎么会有FWT（~~\n\n### 一些约定\n\n对于两个向量$A$和$B$，我们令\n\n$$(A,B)=(A[0],A[1],\\cdots,B[0],B[1],\\cdots)$$\n\n设$F$的项数为$2^{t}$。为了方便，我们将其看做一个$2^{t}$维向量\n\n$$(F[0],F[1],\\cdots,F[2^{t}-1])$$\n\n然后我们定义\n\n$$F_{0}=(F[0],F[1],\\cdots,F[2^{t-1}-1])$$\n\n$$F_{1}=(F[2^{t-1}],F[2^{t-1}+1],\\cdots,F[2^{t}-1])$$\n\n### 正变换\n\n#### 按位或\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime},F_{1}^{\\prime}+F_{0}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n我们发现\n\n$$F^{\\prime}[i]=\\sum_{j\\vee i=i}F[j]$$\n\n$t=0$时这十分显然，我们来考虑$t\\gt 0$时的情况。\n\n首先很明显的一点是$j\\vee i=i\\Leftrightarrow j\\subseteq i$，也就是说$j$是$i$的子集。\n\n对于$F_{1}$中的一个下标$i$，我们在$F_{1}$左边接上$F_{0}$后，这个$i$就多了一个$2^{t-1}$。\n\n之前$i$的每一个子集$j$，也同样多了一个$2^{t-1}$，它们产生的贡献已经被统计在了$F_{1}^{\\prime}[i]$内。\n\n那么去掉这个$2^{t-1}$，我们还有$j\\subseteq i+2^{t-1}$，这部分其实就是$F_{0}^{\\prime}[i]$的值。\n\n据此，我们就有\n\n$$\\begin{aligned}\nF^{\\prime}\\cdot G^{\\prime}[i]&=\\left(\\sum_{j\\subseteq i}F[j]\\right)\\left(\\sum_{k\\subseteq i}G[k]\\right)\\\\\n&=\\sum_{j\\vee k\\subseteq i}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}\\sum_{j\\vee k=l}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}(F\\vee G)[l]\\\\\n&=(F\\vee G)^{\\prime}[i]\n\\end{aligned}$$\n\n#### 按位与\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n它具有类似的性质\n\n$$F^{\\prime}[i]=\\sum_{j\\wedge i=i}F[j]$$\n\n$$(F\\wedge G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n证明略。\n\n#### 按位异或\n\n定义\n\n$$F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}$$\n\n然后我们发现按位异或并没有像上面一样的和子集相关的性质。因此我们需要通过一些其他方式来证明它的正确性。\n\n首先\n\n$$(F+G)^{\\prime}=F^{\\prime}+G^{\\prime}$$\n\n如果$F$和$G$都只有一项，这十分显然。\n\n否则\n\n$$\\begin{aligned}\nF^{\\prime}+G^{\\prime}&=(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})+(G_{0}^{\\prime}+G_{1}^{\\prime},G_{0}^{\\prime}-G_{1}^{\\prime})\\\\\n&=(F_{0}^{\\prime}+G_{0}^{\\prime}+F_{1}^{\\prime}+G_{1}^{\\prime},F_{0}^{\\prime}+G_{0}^{\\prime}-F_{1}^{\\prime}-G_{1}^{\\prime})\\\\\n&=((F+G)_{0}^{\\prime}+(F+G)_{1}^{\\prime},(F+G)_{0}^{\\prime}-(F+G)_{1}^{\\prime})\\\\\n&=(F+G)^{\\prime}\n\\end{aligned}$$\n\n$$(F\\oplus G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}$$\n\n这个不会证，告辞。\n\n### 逆变换\n\n就是把刚刚算出来的$F^{\\prime}$变回$F$。\n\n$$F=\\begin{cases}\n&F^{\\prime}&(t=0)\\\\\n&\\begin{cases}\n&(F_{0},F_{1}-F_{0})&(\\vee)\\\\\n&(F_{0}-F_{1},F_{1})&(\\wedge)\\\\\n&(\\cfrac{F_{0}+F_{1}}{2},\\cfrac{F_{0}-F_{1}}{2})\\;\\;\\;\\;\\;\\;\\;\\;&(\\oplus)\n\\end{cases}\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\n\\end{cases}$$\n\n~~啥意思啊看不懂啊（~~\n\n然后您就可以切掉这道[板子题](https://www.luogu.org/problemnew/show/P4717)了。\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 17\n#define mod 998244353\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n;\nint F[1<<maxn][3],G[1<<maxn][3];\n\n#define FWT(F,tp) {\\\n\tfor(re int p=1;p<n;p<<=1)\\\n\t\tfor(re int i=0;i<n;i+=p<<1)\\\n\t\t\tfor(re int j=i;j<i+p;++j){\\\n\t\t\t\tF[j+p][0]=!tp?(F[j+p][0]+F[j][0])%mod:(F[j+p][0]-F[j][0]+mod)%mod;\\\n\t\t\t\tF[j][1]=!tp?(F[j][1]+F[j+p][1])%mod:(F[j][1]-F[j+p][1]+mod)%mod;\\\n\t\t\t\tre int x=F[j][2],y=F[j+p][2];\\\n\t\t\t\tF[j][2]=(x+y)%mod;\\\n\t\t\t\tF[j+p][2]=(x-y+mod)%mod;\\\n\t\t\t\tif(tp){\\\n\t\t\t\t\tF[j][2]=499122177LL*F[j][2]%mod;\\\n\t\t\t\t\tF[j+p][2]=499122177LL*F[j+p][2]%mod;\\\n\t\t\t\t}\\\n\t\t\t}\\\n}\n\nint main(){\n\tcltstream::read(n);\n\tn=1<<n;\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(F[i][0]);\n\t\tF[i][1]=F[i][2]=F[i][0];\n\t}\n\tfor(re int i=0;i<n;++i){\n\t\tcltstream::read(G[i][0]);\n\t\tG[i][1]=G[i][2]=G[i][0];\n\t}\n\tFWT(F,0);\n\tFWT(G,0);\n\tfor(re int j=0;j<3;++j)\n\t\tfor(re int i=0;i<n;++i)\n\t\t\tF[i][j]=1LL*F[i][j]*G[i][j]%mod;\n\tFWT(F,1);\n\tfor(re int j=0;j<3;++j)\n\t\tfor(re int i=0;i<n;++i)\n\t\t\tcltstream::write(F[i][j],i<n-1?32:10);\n\tclop();\n\treturn 0;\n}\n```\n\n### 单位元\n\n我们知道FFT中的单位元多项式是$F(x)=1$，类似地，FWT是否也拥有这样的一个单位元呢？\n\n当然是有的。\n\n对于按位或和按位异或来说，它们的单位元是\n\n$$(1,0,\\cdots,0,0)$$\n\n对于按位与来说，它的单位元是\n\n$$(0,0,\\cdots,0,1)$$\n\n### 求逆\n\n既然有了单位元，我们就不禁会想……这东西能求逆吗？\n\n大概……能吧。\n\n以下所有运算在模$998244353$意义下进行。\n\n#### 按位或\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\vee G=(1,0,\\cdots,0,0)$$\n\n首先我们需要知道\n\n$$F\\vee G=(F_{0}\\vee G_{0},F_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1})$$\n\n注意到左半部分和右半部分的下标有一个重要区别就是从右往左第$t$位是否为$1$。\n\n如果某个下标和右半部分的某个下标进行了按位或，它的第$t$位一定是$1$，那么它就跑到右半部分去了。\n\n否则，即两个左半部分的下标进行了按位或，这种情况结果还是在左半部分。\n\n然后我们就可以往下推了\n\n$$\\begin{aligned}\nF_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1}&=0\\\\\n(F_{0}+F_{1})\\vee G_{1}&=-F_{1}\\vee G_{0}\\\\\nG_{1}&=-F_{1}\\vee G_{0}\\vee (F_{0}+F_{1})^{-1}\n\\end{aligned}$$\n\n边界条件$G[0]=F[0]^{-1}$。\n\n大致代码如下\n\n```cpp\nvoid Inv(re int* F,re int* G,re int n){\n\tif(n==1)\n\t\tG[0]=cltpow(F[0],mod-2);\n\telse{\n\t\tint tmp1[1<<maxn],tmp2[1<<maxn];\n\t\tInv(F,G,n>>1);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\ttmp1[i]=F[i]+F[(n>>1)+i];\n\t\tInv(tmp1,tmp2,n>>1);\n\t\tFWT(F+(n>>1),n>>1,0);\n\t\tFWT(G,n>>1,0);\n\t\tFWT(tmp2,n>>1,0);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\ttmp2[i]=1LL*F[(n>>1)+i]*G[i]%mod*tmp2[i]%mod;\n\t\tFWT(F+(n>>1),n>>1,1);\n\t\tFWT(G,n>>1,1);\n\t\tFWT(tmp2,n>>1,1);\n\t\tfor(re int i=0;i<(n>>1);++i)\n\t\t\tG[(n>>1)+i]=(mod-tmp2[i])%mod;\n\t}\n}\n```\n\n时间复杂度非常显然是$O(n^{2}2^{n})$。\n\n#### 按位与\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\wedge G=(0,0,\\cdots,0,1)$$\n\n我们可以用类似的过程得到如下结论\n\n$$F\\wedge G=(F_{0}\\wedge G_{0}+F_{0}\\wedge G_{1}+F_{1}\\wedge G_{0},F_{1}\\wedge G_{1})$$\n\n$$G_{0}=-F_{0}\\wedge G_{1}\\wedge (F_{0}+F_{1})^{-1}$$\n\n#### 按位异或\n\n给定一个多项式$F$，让你求出一个多项式$G$，使得\n\n$$F\\oplus G=(1,0,\\cdots,0,0)$$\n\n首先我们有\n\n$$F\\oplus G=(F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1},F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0})$$\n\n也就是说\n\n$$F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1}=\\epsilon$$\n$$F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0}=0$$\n\n将上面两个式子相加、相减，得到\n\n$$(F_{0}+F_{1})\\oplus(G_{0}+G_{1})=\\epsilon$$\n$$(F_{0}-F_{1})\\oplus(G_{0}-G_{1})=\\epsilon$$\n\n于是\n\n$$G_{0}=\\cfrac{(F_{0}+F_{1})^{-1}+(F_{0}-F_{1})^{-1}}{2}$$\n\n$$G_{1}=\\cfrac{(F_{0}+F_{1})^{-1}-(F_{0}-F_{1})^{-1}}{2}$$\n\n时间复杂度$O(n2^{n})$。\n\n这就没了？并不是。\n\n如果您按照上面的式子写好程序，然后往里面输入\n\n```\n2\n1 2 3 4\n```\n\n这样一组数据，您会发现您的程序给出的结果并不正确。\n\n那么原因是什么呢？是我们式子推错了吗？\n\n输出一下中间的运算过程，我们发现，在中间有一步，我们计算$(2,2)^{-1}$时，需要用到$(0)^{-1}$。\n\n显然它不存在，但是同样显然的是，如果$(2,2)^{-1}$存在，那么这个过程不应该出现这样的问题。\n\n所以说原因就是，$(2,2)^{-1}$，或者更进一步地，$(1,2,3,4)^{-1}$__不存在__。\n\n### [子集卷积](https://loj.ac/problem/152)\n\n~~让我来看看有没有点进去看完题面一脸懵逼地关闭标签页的。~~\n\n这道题是让我们求这个东西\n\n$$h_{R}=\\sum_{S\\vee T=R,S\\wedge T=\\varnothing}f_{S}g_{T}$$\n\n这比我们之前看到的卷积拥有更加严格的要求，$S\\wedge T=\\varnothing$，很明显，这是在提示我们抄题解。\n\n我们定义\n\n$$F_{i,S}=\\begin{cases}\n&f_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n$$G_{i,S}=\\begin{cases}\n&g_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n$$H_{i,S}=\\begin{cases}\n&h_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}$$\n\n然后我们从小到大枚举$i$，计算\n\n$$H_{i}=\\sum_{j=0}^{i}F_{j}\\vee G_{i-j}$$\n\n为了理解这个式子，我们先将其展开\n\n$$H_{i,R}=\\sum_{j=0}^{i}\\sum_{S\\vee T=R}F_{j,S}G_{i-j,T}$$\n\n根据定义，$F_{i,S}$和$G_{i,S}$有值当且仅当$|S|=i$，因此这就相当于\n\n$$H_{i,R}=\\sum_{S\\vee T=R,|S|+|T|=i}F_{|S|,S}G_{|T|,T}$$\n\n因为$S$和$T$可能会有交集，从而$i\\gt |R|$时$H_{i,R}$也可能有值，这是不符合定义的，因此（如果有必要的话）我们需要手动清空。\n\n代码如下\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 20\n#define mod 1000000009\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,N;\nint cnt[1<<maxn],F[maxn+1][1<<maxn],G[maxn+1][1<<maxn],H[maxn+1][1<<maxn];\n\ninline void FWT(re int* F,re int tp){\n\tfor(re int p=1;p<N;p<<=1)\n\t\tfor(re int i=0;i<N;i+=p<<1)\n\t\t\tfor(re int j=i;j<i+p;++j)\n\t\t\t\tF[j+p]=!tp?(F[j+p]+F[j])%mod:(F[j+p]-F[j]+mod)%mod;\n}\n\nint main(){\n\tcltstream::read(n);\n\tN=1<<n;\n\tfor(re int i=1;i<N;++i)\n\t\tcnt[i]=cnt[i>>1]+(i&1);\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::read(F[cnt[i]][i]);\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::read(G[cnt[i]][i]);\n\tfor(re int i=0;i<=n;++i){\n\t\tFWT(F[i],0);\n\t\tFWT(G[i],0);\n\t\tfor(re int j=0;j<=i;++j)\n\t\t\tfor(re int S=0;S<N;++S)\n\t\t\t\tH[i][S]=(H[i][S]+1LL*F[j][S]*G[i-j][S]%mod)%mod;\n\t\tFWT(H[i],1);\n\t\tfor(re int S=0;S<N;++S)\n\t\t\tcnt[S]==i||(H[i][S]=0);\n\t}\n\tfor(re int i=0;i<N;++i)\n\t\tcltstream::write(H[cnt[i]][i],32);\n\tclop();\n\treturn 0;\n}\n```\n\n### 例题\n\n![](/images/TIM图片20181011211750.jpg)\n","slug":"fwt-learning-notes","published":1,"updated":"2020-05-17T12:07:04.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhmz007zmku9c4f56ial","content":"<p>看到坐在我左边的dalao在学FWT。</p>\n<p>想着二轮前学一些很酷很炫<del>很失败</del>的算法，于是来<del>背一下</del>学一下吧。</p>\n<p><a href=\"http://www.cnblogs.com/cjyyb/p/9065615.html\">抄袭来源</a>。</p>\n<a id=\"more\"></a>\n<h3 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h3><p>我们利用FFT可以在$O(n\\log n)$的时间复杂度内计算</p>\n<script type=\"math/tex; mode=display\">H[k]=(F\\times G)[k]=\\sum_{i+j=k}F[i]G[j]</script><p>假如说我们把这个式子变一变</p>\n<script type=\"math/tex; mode=display\">H[k]=(F\\vee G)[k]=\\sum_{i\\vee j=k}F[i]G[j]</script><script type=\"math/tex; mode=display\">H[k]=(F\\wedge G)[k]=\\sum_{i\\wedge j=k}F[i]G[j]</script><script type=\"math/tex; mode=display\">H[k]=(F\\oplus G)[k]=\\sum_{i\\oplus j=k}F[i]G[j]</script><p>其中$\\vee$指按位或，$\\wedge$指按位与，$\\oplus$指按位异或。</p>\n<p>我们还是希望能够在$O(n\\log n)$的时间复杂度内计算出答案。</p>\n<p>这种时候我们就需要FWT（快速沃尔什变换，Fast Walsh–Hadamard Transformation）了。</p>\n<p>在FFT中，我们先计算出了$F$和$G$的点值多项式，然后将对应位直接相乘得到了$F\\times G$的点值多项式，最后还原回了$F\\times G$。</p>\n<p>类似地，我们可不可以试着计算出两个多项式$F^{\\prime},G^{\\prime}$，使得</p>\n<script type=\"math/tex; mode=display\">(F\\times G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p><del>当然可以啊不然还怎么会有FWT（</del></p>\n<h3 id=\"一些约定\"><a href=\"#一些约定\" class=\"headerlink\" title=\"一些约定\"></a>一些约定</h3><p>对于两个向量$A$和$B$，我们令</p>\n<script type=\"math/tex; mode=display\">(A,B)=(A[0],A[1],\\cdots,B[0],B[1],\\cdots)</script><p>设$F$的项数为$2^{t}$。为了方便，我们将其看做一个$2^{t}$维向量</p>\n<script type=\"math/tex; mode=display\">(F[0],F[1],\\cdots,F[2^{t}-1])</script><p>然后我们定义</p>\n<script type=\"math/tex; mode=display\">F_{0}=(F[0],F[1],\\cdots,F[2^{t-1}-1])</script><script type=\"math/tex; mode=display\">F_{1}=(F[2^{t-1}],F[2^{t-1}+1],\\cdots,F[2^{t}-1])</script><h3 id=\"正变换\"><a href=\"#正变换\" class=\"headerlink\" title=\"正变换\"></a>正变换</h3><h4 id=\"按位或\"><a href=\"#按位或\" class=\"headerlink\" title=\"按位或\"></a>按位或</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime},F_{1}^{\\prime}+F_{0}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>我们发现</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}[i]=\\sum_{j\\vee i=i}F[j]</script><p>$t=0$时这十分显然，我们来考虑$t\\gt 0$时的情况。</p>\n<p>首先很明显的一点是$j\\vee i=i\\Leftrightarrow j\\subseteq i$，也就是说$j$是$i$的子集。</p>\n<p>对于$F_{1}$中的一个下标$i$，我们在$F_{1}$左边接上$F_{0}$后，这个$i$就多了一个$2^{t-1}$。</p>\n<p>之前$i$的每一个子集$j$，也同样多了一个$2^{t-1}$，它们产生的贡献已经被统计在了$F_{1}^{\\prime}[i]$内。</p>\n<p>那么去掉这个$2^{t-1}$，我们还有$j\\subseteq i+2^{t-1}$，这部分其实就是$F_{0}^{\\prime}[i]$的值。</p>\n<p>据此，我们就有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF^{\\prime}\\cdot G^{\\prime}[i]&=\\left(\\sum_{j\\subseteq i}F[j]\\right)\\left(\\sum_{k\\subseteq i}G[k]\\right)\\\\\n&=\\sum_{j\\vee k\\subseteq i}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}\\sum_{j\\vee k=l}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}(F\\vee G)[l]\\\\\n&=(F\\vee G)^{\\prime}[i]\n\\end{aligned}</script><h4 id=\"按位与\"><a href=\"#按位与\" class=\"headerlink\" title=\"按位与\"></a>按位与</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>它具有类似的性质</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}[i]=\\sum_{j\\wedge i=i}F[j]</script><script type=\"math/tex; mode=display\">(F\\wedge G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p>证明略。</p>\n<h4 id=\"按位异或\"><a href=\"#按位异或\" class=\"headerlink\" title=\"按位异或\"></a>按位异或</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>然后我们发现按位异或并没有像上面一样的和子集相关的性质。因此我们需要通过一些其他方式来证明它的正确性。</p>\n<p>首先</p>\n<script type=\"math/tex; mode=display\">(F+G)^{\\prime}=F^{\\prime}+G^{\\prime}</script><p>如果$F$和$G$都只有一项，这十分显然。</p>\n<p>否则</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF^{\\prime}+G^{\\prime}&=(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})+(G_{0}^{\\prime}+G_{1}^{\\prime},G_{0}^{\\prime}-G_{1}^{\\prime})\\\\\n&=(F_{0}^{\\prime}+G_{0}^{\\prime}+F_{1}^{\\prime}+G_{1}^{\\prime},F_{0}^{\\prime}+G_{0}^{\\prime}-F_{1}^{\\prime}-G_{1}^{\\prime})\\\\\n&=((F+G)_{0}^{\\prime}+(F+G)_{1}^{\\prime},(F+G)_{0}^{\\prime}-(F+G)_{1}^{\\prime})\\\\\n&=(F+G)^{\\prime}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">(F\\oplus G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p>这个不会证，告辞。</p>\n<h3 id=\"逆变换\"><a href=\"#逆变换\" class=\"headerlink\" title=\"逆变换\"></a>逆变换</h3><p>就是把刚刚算出来的$F^{\\prime}$变回$F$。</p>\n<script type=\"math/tex; mode=display\">F=\\begin{cases}\n&F^{\\prime}&(t=0)\\\\\n&\\begin{cases}\n&(F_{0},F_{1}-F_{0})&(\\vee)\\\\\n&(F_{0}-F_{1},F_{1})&(\\wedge)\\\\\n&(\\cfrac{F_{0}+F_{1}}{2},\\cfrac{F_{0}-F_{1}}{2})\\;\\;\\;\\;\\;\\;\\;\\;&(\\oplus)\n\\end{cases}\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\n\\end{cases}</script><p><del>啥意思啊看不懂啊（</del></p>\n<p>然后您就可以切掉这道<a href=\"https://www.luogu.org/problemnew/show/P4717\">板子题</a>了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 17</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> F[<span class=\"number\">1</span>&lt;&lt;maxn][<span class=\"number\">3</span>],G[<span class=\"number\">1</span>&lt;&lt;maxn][<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FWT(F,tp) &#123;\\</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;p&lt;n;p&lt;&lt;=<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)\\</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;\\</span><br><span class=\"line\">                F[j+p][<span class=\"number\">0</span>]=!tp?(F[j+p][<span class=\"number\">0</span>]+F[j][<span class=\"number\">0</span>])%mod:(F[j+p][<span class=\"number\">0</span>]-F[j][<span class=\"number\">0</span>]+mod)%mod;\\</span><br><span class=\"line\">                F[j][<span class=\"number\">1</span>]=!tp?(F[j][<span class=\"number\">1</span>]+F[j+p][<span class=\"number\">1</span>])%mod:(F[j][<span class=\"number\">1</span>]-F[j+p][<span class=\"number\">1</span>]+mod)%mod;\\</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j][<span class=\"number\">2</span>],y=F[j+p][<span class=\"number\">2</span>];\\</span><br><span class=\"line\">                F[j][<span class=\"number\">2</span>]=(x+y)%mod;\\</span><br><span class=\"line\">                F[j+p][<span class=\"number\">2</span>]=(x-y+mod)%mod;\\</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tp)&#123;\\</span><br><span class=\"line\">                    F[j][<span class=\"number\">2</span>]=<span class=\"number\">499122177L</span>L*F[j][<span class=\"number\">2</span>]%mod;\\</span><br><span class=\"line\">                    F[j+p][<span class=\"number\">2</span>]=<span class=\"number\">499122177L</span>L*F[j+p][<span class=\"number\">2</span>]%mod;\\</span><br><span class=\"line\">                &#125;\\</span><br><span class=\"line\">            &#125;\\</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    n=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(F[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        F[i][<span class=\"number\">1</span>]=F[i][<span class=\"number\">2</span>]=F[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(G[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        G[i][<span class=\"number\">1</span>]=G[i][<span class=\"number\">2</span>]=G[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FWT(F,<span class=\"number\">0</span>);</span><br><span class=\"line\">    FWT(G,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;++j)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">            F[i][j]=<span class=\"number\">1L</span>L*F[i][j]*G[i][j]%mod;</span><br><span class=\"line\">    FWT(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;++j)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">            cltstream::write(F[i][j],i&lt;n<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"单位元\"><a href=\"#单位元\" class=\"headerlink\" title=\"单位元\"></a>单位元</h3><p>我们知道FFT中的单位元多项式是$F(x)=1$，类似地，FWT是否也拥有这样的一个单位元呢？</p>\n<p>当然是有的。</p>\n<p>对于按位或和按位异或来说，它们的单位元是</p>\n<script type=\"math/tex; mode=display\">(1,0,\\cdots,0,0)</script><p>对于按位与来说，它的单位元是</p>\n<script type=\"math/tex; mode=display\">(0,0,\\cdots,0,1)</script><h3 id=\"求逆\"><a href=\"#求逆\" class=\"headerlink\" title=\"求逆\"></a>求逆</h3><p>既然有了单位元，我们就不禁会想……这东西能求逆吗？</p>\n<p>大概……能吧。</p>\n<p>以下所有运算在模$998244353$意义下进行。</p>\n<h4 id=\"按位或-1\"><a href=\"#按位或-1\" class=\"headerlink\" title=\"按位或\"></a>按位或</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\vee G=(1,0,\\cdots,0,0)</script><p>首先我们需要知道</p>\n<script type=\"math/tex; mode=display\">F\\vee G=(F_{0}\\vee G_{0},F_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1})</script><p>注意到左半部分和右半部分的下标有一个重要区别就是从右往左第$t$位是否为$1$。</p>\n<p>如果某个下标和右半部分的某个下标进行了按位或，它的第$t$位一定是$1$，那么它就跑到右半部分去了。</p>\n<p>否则，即两个左半部分的下标进行了按位或，这种情况结果还是在左半部分。</p>\n<p>然后我们就可以往下推了</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1}&=0\\\\\n(F_{0}+F_{1})\\vee G_{1}&=-F_{1}\\vee G_{0}\\\\\nG_{1}&=-F_{1}\\vee G_{0}\\vee (F_{0}+F_{1})^{-1}\n\\end{aligned}</script><p>边界条件$G[0]=F[0]^{-1}$。</p>\n<p>大致代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">        G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp1[<span class=\"number\">1</span>&lt;&lt;maxn],tmp2[<span class=\"number\">1</span>&lt;&lt;maxn];</span><br><span class=\"line\">        Inv(F,G,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            tmp1[i]=F[i]+F[(n&gt;&gt;<span class=\"number\">1</span>)+i];</span><br><span class=\"line\">        Inv(tmp1,tmp2,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(F+(n&gt;&gt;<span class=\"number\">1</span>),n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(G,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(tmp2,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            tmp2[i]=<span class=\"number\">1L</span>L*F[(n&gt;&gt;<span class=\"number\">1</span>)+i]*G[i]%mod*tmp2[i]%mod;</span><br><span class=\"line\">        FWT(F+(n&gt;&gt;<span class=\"number\">1</span>),n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(G,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(tmp2,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            G[(n&gt;&gt;<span class=\"number\">1</span>)+i]=(mod-tmp2[i])%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>时间复杂度非常显然是$O(n^{2}2^{n})$。</p>\n<h4 id=\"按位与-1\"><a href=\"#按位与-1\" class=\"headerlink\" title=\"按位与\"></a>按位与</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\wedge G=(0,0,\\cdots,0,1)</script><p>我们可以用类似的过程得到如下结论</p>\n<script type=\"math/tex; mode=display\">F\\wedge G=(F_{0}\\wedge G_{0}+F_{0}\\wedge G_{1}+F_{1}\\wedge G_{0},F_{1}\\wedge G_{1})</script><script type=\"math/tex; mode=display\">G_{0}=-F_{0}\\wedge G_{1}\\wedge (F_{0}+F_{1})^{-1}</script><h4 id=\"按位异或-1\"><a href=\"#按位异或-1\" class=\"headerlink\" title=\"按位异或\"></a>按位异或</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\oplus G=(1,0,\\cdots,0,0)</script><p>首先我们有</p>\n<script type=\"math/tex; mode=display\">F\\oplus G=(F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1},F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0})</script><p>也就是说</p>\n<script type=\"math/tex; mode=display\">F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1}=\\epsilon</script><script type=\"math/tex; mode=display\">F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0}=0</script><p>将上面两个式子相加、相减，得到</p>\n<script type=\"math/tex; mode=display\">(F_{0}+F_{1})\\oplus(G_{0}+G_{1})=\\epsilon</script><script type=\"math/tex; mode=display\">(F_{0}-F_{1})\\oplus(G_{0}-G_{1})=\\epsilon</script><p>于是</p>\n<script type=\"math/tex; mode=display\">G_{0}=\\cfrac{(F_{0}+F_{1})^{-1}+(F_{0}-F_{1})^{-1}}{2}</script><script type=\"math/tex; mode=display\">G_{1}=\\cfrac{(F_{0}+F_{1})^{-1}-(F_{0}-F_{1})^{-1}}{2}</script><p>时间复杂度$O(n2^{n})$。</p>\n<p>这就没了？并不是。</p>\n<p>如果您按照上面的式子写好程序，然后往里面输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2 3 4</span><br></pre></td></tr></table></figure>\n<p>这样一组数据，您会发现您的程序给出的结果并不正确。</p>\n<p>那么原因是什么呢？是我们式子推错了吗？</p>\n<p>输出一下中间的运算过程，我们发现，在中间有一步，我们计算$(2,2)^{-1}$时，需要用到$(0)^{-1}$。</p>\n<p>显然它不存在，但是同样显然的是，如果$(2,2)^{-1}$存在，那么这个过程不应该出现这样的问题。</p>\n<p>所以说原因就是，$(2,2)^{-1}$，或者更进一步地，$(1,2,3,4)^{-1}$<strong>不存在</strong>。</p>\n<h3 id=\"子集卷积\"><a href=\"#子集卷积\" class=\"headerlink\" title=\"子集卷积\"></a><a href=\"https://loj.ac/problem/152\">子集卷积</a></h3><p><del>让我来看看有没有点进去看完题面一脸懵逼地关闭标签页的。</del></p>\n<p>这道题是让我们求这个东西</p>\n<script type=\"math/tex; mode=display\">h_{R}=\\sum_{S\\vee T=R,S\\wedge T=\\varnothing}f_{S}g_{T}</script><p>这比我们之前看到的卷积拥有更加严格的要求，$S\\wedge T=\\varnothing$，很明显，这是在提示我们抄题解。</p>\n<p>我们定义</p>\n<script type=\"math/tex; mode=display\">F_{i,S}=\\begin{cases}\n&f_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G_{i,S}=\\begin{cases}\n&g_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><script type=\"math/tex; mode=display\">H_{i,S}=\\begin{cases}\n&h_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><p>然后我们从小到大枚举$i$，计算</p>\n<script type=\"math/tex; mode=display\">H_{i}=\\sum_{j=0}^{i}F_{j}\\vee G_{i-j}</script><p>为了理解这个式子，我们先将其展开</p>\n<script type=\"math/tex; mode=display\">H_{i,R}=\\sum_{j=0}^{i}\\sum_{S\\vee T=R}F_{j,S}G_{i-j,T}</script><p>根据定义，$F_{i,S}$和$G_{i,S}$有值当且仅当$|S|=i$，因此这就相当于</p>\n<script type=\"math/tex; mode=display\">H_{i,R}=\\sum_{S\\vee T=R,|S|+|T|=i}F_{|S|,S}G_{|T|,T}</script><p>因为$S$和$T$可能会有交集，从而$i\\gt |R|$时$H_{i,R}$也可能有值，这是不符合定义的，因此（如果有必要的话）我们需要手动清空。</p>\n<p>代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 20</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000009</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,N;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt[<span class=\"number\">1</span>&lt;&lt;maxn],F[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn],G[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn],H[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FWT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;p&lt;N;p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)</span><br><span class=\"line\">                F[j+p]=!tp?(F[j+p]+F[j])%mod:(F[j+p]-F[j]+mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    N=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">        cnt[i]=cnt[i&gt;&gt;<span class=\"number\">1</span>]+(i&amp;<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::read(F[cnt[i]][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::read(G[cnt[i]][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        FWT(F[i],<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(G[i],<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;++j)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> S=<span class=\"number\">0</span>;S&lt;N;++S)</span><br><span class=\"line\">                H[i][S]=(H[i][S]+<span class=\"number\">1L</span>L*F[j][S]*G[i-j][S]%mod)%mod;</span><br><span class=\"line\">        FWT(H[i],<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> S=<span class=\"number\">0</span>;S&lt;N;++S)</span><br><span class=\"line\">            cnt[S]==i||(H[i][S]=<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::write(H[cnt[i]][i],<span class=\"number\">32</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p><img src=\"/images/TIM图片20181011211750.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>看到坐在我左边的dalao在学FWT。</p>\n<p>想着二轮前学一些很酷很炫<del>很失败</del>的算法，于是来<del>背一下</del>学一下吧。</p>\n<p><a href=\"http://www.cnblogs.com/cjyyb/p/9065615.html\">抄袭来源</a>。</p>","more":"<h3 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h3><p>我们利用FFT可以在$O(n\\log n)$的时间复杂度内计算</p>\n<script type=\"math/tex; mode=display\">H[k]=(F\\times G)[k]=\\sum_{i+j=k}F[i]G[j]</script><p>假如说我们把这个式子变一变</p>\n<script type=\"math/tex; mode=display\">H[k]=(F\\vee G)[k]=\\sum_{i\\vee j=k}F[i]G[j]</script><script type=\"math/tex; mode=display\">H[k]=(F\\wedge G)[k]=\\sum_{i\\wedge j=k}F[i]G[j]</script><script type=\"math/tex; mode=display\">H[k]=(F\\oplus G)[k]=\\sum_{i\\oplus j=k}F[i]G[j]</script><p>其中$\\vee$指按位或，$\\wedge$指按位与，$\\oplus$指按位异或。</p>\n<p>我们还是希望能够在$O(n\\log n)$的时间复杂度内计算出答案。</p>\n<p>这种时候我们就需要FWT（快速沃尔什变换，Fast Walsh–Hadamard Transformation）了。</p>\n<p>在FFT中，我们先计算出了$F$和$G$的点值多项式，然后将对应位直接相乘得到了$F\\times G$的点值多项式，最后还原回了$F\\times G$。</p>\n<p>类似地，我们可不可以试着计算出两个多项式$F^{\\prime},G^{\\prime}$，使得</p>\n<script type=\"math/tex; mode=display\">(F\\times G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p><del>当然可以啊不然还怎么会有FWT（</del></p>\n<h3 id=\"一些约定\"><a href=\"#一些约定\" class=\"headerlink\" title=\"一些约定\"></a>一些约定</h3><p>对于两个向量$A$和$B$，我们令</p>\n<script type=\"math/tex; mode=display\">(A,B)=(A[0],A[1],\\cdots,B[0],B[1],\\cdots)</script><p>设$F$的项数为$2^{t}$。为了方便，我们将其看做一个$2^{t}$维向量</p>\n<script type=\"math/tex; mode=display\">(F[0],F[1],\\cdots,F[2^{t}-1])</script><p>然后我们定义</p>\n<script type=\"math/tex; mode=display\">F_{0}=(F[0],F[1],\\cdots,F[2^{t-1}-1])</script><script type=\"math/tex; mode=display\">F_{1}=(F[2^{t-1}],F[2^{t-1}+1],\\cdots,F[2^{t}-1])</script><h3 id=\"正变换\"><a href=\"#正变换\" class=\"headerlink\" title=\"正变换\"></a>正变换</h3><h4 id=\"按位或\"><a href=\"#按位或\" class=\"headerlink\" title=\"按位或\"></a>按位或</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime},F_{1}^{\\prime}+F_{0}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>我们发现</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}[i]=\\sum_{j\\vee i=i}F[j]</script><p>$t=0$时这十分显然，我们来考虑$t\\gt 0$时的情况。</p>\n<p>首先很明显的一点是$j\\vee i=i\\Leftrightarrow j\\subseteq i$，也就是说$j$是$i$的子集。</p>\n<p>对于$F_{1}$中的一个下标$i$，我们在$F_{1}$左边接上$F_{0}$后，这个$i$就多了一个$2^{t-1}$。</p>\n<p>之前$i$的每一个子集$j$，也同样多了一个$2^{t-1}$，它们产生的贡献已经被统计在了$F_{1}^{\\prime}[i]$内。</p>\n<p>那么去掉这个$2^{t-1}$，我们还有$j\\subseteq i+2^{t-1}$，这部分其实就是$F_{0}^{\\prime}[i]$的值。</p>\n<p>据此，我们就有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF^{\\prime}\\cdot G^{\\prime}[i]&=\\left(\\sum_{j\\subseteq i}F[j]\\right)\\left(\\sum_{k\\subseteq i}G[k]\\right)\\\\\n&=\\sum_{j\\vee k\\subseteq i}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}\\sum_{j\\vee k=l}F[j]G[k]\\\\\n&=\\sum_{l\\subseteq i}(F\\vee G)[l]\\\\\n&=(F\\vee G)^{\\prime}[i]\n\\end{aligned}</script><h4 id=\"按位与\"><a href=\"#按位与\" class=\"headerlink\" title=\"按位与\"></a>按位与</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>它具有类似的性质</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}[i]=\\sum_{j\\wedge i=i}F[j]</script><script type=\"math/tex; mode=display\">(F\\wedge G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p>证明略。</p>\n<h4 id=\"按位异或\"><a href=\"#按位异或\" class=\"headerlink\" title=\"按位异或\"></a>按位异或</h4><p>定义</p>\n<script type=\"math/tex; mode=display\">F^{\\prime}=\\begin{cases}\n&(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\\\\\n&F&(t=0)\n\\end{cases}</script><p>然后我们发现按位异或并没有像上面一样的和子集相关的性质。因此我们需要通过一些其他方式来证明它的正确性。</p>\n<p>首先</p>\n<script type=\"math/tex; mode=display\">(F+G)^{\\prime}=F^{\\prime}+G^{\\prime}</script><p>如果$F$和$G$都只有一项，这十分显然。</p>\n<p>否则</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF^{\\prime}+G^{\\prime}&=(F_{0}^{\\prime}+F_{1}^{\\prime},F_{0}^{\\prime}-F_{1}^{\\prime})+(G_{0}^{\\prime}+G_{1}^{\\prime},G_{0}^{\\prime}-G_{1}^{\\prime})\\\\\n&=(F_{0}^{\\prime}+G_{0}^{\\prime}+F_{1}^{\\prime}+G_{1}^{\\prime},F_{0}^{\\prime}+G_{0}^{\\prime}-F_{1}^{\\prime}-G_{1}^{\\prime})\\\\\n&=((F+G)_{0}^{\\prime}+(F+G)_{1}^{\\prime},(F+G)_{0}^{\\prime}-(F+G)_{1}^{\\prime})\\\\\n&=(F+G)^{\\prime}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">(F\\oplus G)^{\\prime}=F^{\\prime}\\cdot G^{\\prime}</script><p>这个不会证，告辞。</p>\n<h3 id=\"逆变换\"><a href=\"#逆变换\" class=\"headerlink\" title=\"逆变换\"></a>逆变换</h3><p>就是把刚刚算出来的$F^{\\prime}$变回$F$。</p>\n<script type=\"math/tex; mode=display\">F=\\begin{cases}\n&F^{\\prime}&(t=0)\\\\\n&\\begin{cases}\n&(F_{0},F_{1}-F_{0})&(\\vee)\\\\\n&(F_{0}-F_{1},F_{1})&(\\wedge)\\\\\n&(\\cfrac{F_{0}+F_{1}}{2},\\cfrac{F_{0}-F_{1}}{2})\\;\\;\\;\\;\\;\\;\\;\\;&(\\oplus)\n\\end{cases}\\;\\;\\;\\;\\;\\;\\;\\;&(t\\gt 0)\n\\end{cases}</script><p><del>啥意思啊看不懂啊（</del></p>\n<p>然后您就可以切掉这道<a href=\"https://www.luogu.org/problemnew/show/P4717\">板子题</a>了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 17</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> F[<span class=\"number\">1</span>&lt;&lt;maxn][<span class=\"number\">3</span>],G[<span class=\"number\">1</span>&lt;&lt;maxn][<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FWT(F,tp) &#123;\\</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;p&lt;n;p&lt;&lt;=<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)\\</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;\\</span><br><span class=\"line\">                F[j+p][<span class=\"number\">0</span>]=!tp?(F[j+p][<span class=\"number\">0</span>]+F[j][<span class=\"number\">0</span>])%mod:(F[j+p][<span class=\"number\">0</span>]-F[j][<span class=\"number\">0</span>]+mod)%mod;\\</span><br><span class=\"line\">                F[j][<span class=\"number\">1</span>]=!tp?(F[j][<span class=\"number\">1</span>]+F[j+p][<span class=\"number\">1</span>])%mod:(F[j][<span class=\"number\">1</span>]-F[j+p][<span class=\"number\">1</span>]+mod)%mod;\\</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j][<span class=\"number\">2</span>],y=F[j+p][<span class=\"number\">2</span>];\\</span><br><span class=\"line\">                F[j][<span class=\"number\">2</span>]=(x+y)%mod;\\</span><br><span class=\"line\">                F[j+p][<span class=\"number\">2</span>]=(x-y+mod)%mod;\\</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tp)&#123;\\</span><br><span class=\"line\">                    F[j][<span class=\"number\">2</span>]=<span class=\"number\">499122177L</span>L*F[j][<span class=\"number\">2</span>]%mod;\\</span><br><span class=\"line\">                    F[j+p][<span class=\"number\">2</span>]=<span class=\"number\">499122177L</span>L*F[j+p][<span class=\"number\">2</span>]%mod;\\</span><br><span class=\"line\">                &#125;\\</span><br><span class=\"line\">            &#125;\\</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    n=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(F[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        F[i][<span class=\"number\">1</span>]=F[i][<span class=\"number\">2</span>]=F[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        cltstream::read(G[i][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        G[i][<span class=\"number\">1</span>]=G[i][<span class=\"number\">2</span>]=G[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FWT(F,<span class=\"number\">0</span>);</span><br><span class=\"line\">    FWT(G,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;++j)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">            F[i][j]=<span class=\"number\">1L</span>L*F[i][j]*G[i][j]%mod;</span><br><span class=\"line\">    FWT(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;++j)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">            cltstream::write(F[i][j],i&lt;n<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">10</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"单位元\"><a href=\"#单位元\" class=\"headerlink\" title=\"单位元\"></a>单位元</h3><p>我们知道FFT中的单位元多项式是$F(x)=1$，类似地，FWT是否也拥有这样的一个单位元呢？</p>\n<p>当然是有的。</p>\n<p>对于按位或和按位异或来说，它们的单位元是</p>\n<script type=\"math/tex; mode=display\">(1,0,\\cdots,0,0)</script><p>对于按位与来说，它的单位元是</p>\n<script type=\"math/tex; mode=display\">(0,0,\\cdots,0,1)</script><h3 id=\"求逆\"><a href=\"#求逆\" class=\"headerlink\" title=\"求逆\"></a>求逆</h3><p>既然有了单位元，我们就不禁会想……这东西能求逆吗？</p>\n<p>大概……能吧。</p>\n<p>以下所有运算在模$998244353$意义下进行。</p>\n<h4 id=\"按位或-1\"><a href=\"#按位或-1\" class=\"headerlink\" title=\"按位或\"></a>按位或</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\vee G=(1,0,\\cdots,0,0)</script><p>首先我们需要知道</p>\n<script type=\"math/tex; mode=display\">F\\vee G=(F_{0}\\vee G_{0},F_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1})</script><p>注意到左半部分和右半部分的下标有一个重要区别就是从右往左第$t$位是否为$1$。</p>\n<p>如果某个下标和右半部分的某个下标进行了按位或，它的第$t$位一定是$1$，那么它就跑到右半部分去了。</p>\n<p>否则，即两个左半部分的下标进行了按位或，这种情况结果还是在左半部分。</p>\n<p>然后我们就可以往下推了</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{0}\\vee G_{1}+F_{1}\\vee G_{0}+F_{1}\\vee G_{1}&=0\\\\\n(F_{0}+F_{1})\\vee G_{1}&=-F_{1}\\vee G_{0}\\\\\nG_{1}&=-F_{1}\\vee G_{0}\\vee (F_{0}+F_{1})^{-1}\n\\end{aligned}</script><p>边界条件$G[0]=F[0]^{-1}$。</p>\n<p>大致代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span>* G,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">        G[<span class=\"number\">0</span>]=cltpow(F[<span class=\"number\">0</span>],mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp1[<span class=\"number\">1</span>&lt;&lt;maxn],tmp2[<span class=\"number\">1</span>&lt;&lt;maxn];</span><br><span class=\"line\">        Inv(F,G,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            tmp1[i]=F[i]+F[(n&gt;&gt;<span class=\"number\">1</span>)+i];</span><br><span class=\"line\">        Inv(tmp1,tmp2,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(F+(n&gt;&gt;<span class=\"number\">1</span>),n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(G,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(tmp2,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            tmp2[i]=<span class=\"number\">1L</span>L*F[(n&gt;&gt;<span class=\"number\">1</span>)+i]*G[i]%mod*tmp2[i]%mod;</span><br><span class=\"line\">        FWT(F+(n&gt;&gt;<span class=\"number\">1</span>),n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(G,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        FWT(tmp2,n&gt;&gt;<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i)</span><br><span class=\"line\">            G[(n&gt;&gt;<span class=\"number\">1</span>)+i]=(mod-tmp2[i])%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>时间复杂度非常显然是$O(n^{2}2^{n})$。</p>\n<h4 id=\"按位与-1\"><a href=\"#按位与-1\" class=\"headerlink\" title=\"按位与\"></a>按位与</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\wedge G=(0,0,\\cdots,0,1)</script><p>我们可以用类似的过程得到如下结论</p>\n<script type=\"math/tex; mode=display\">F\\wedge G=(F_{0}\\wedge G_{0}+F_{0}\\wedge G_{1}+F_{1}\\wedge G_{0},F_{1}\\wedge G_{1})</script><script type=\"math/tex; mode=display\">G_{0}=-F_{0}\\wedge G_{1}\\wedge (F_{0}+F_{1})^{-1}</script><h4 id=\"按位异或-1\"><a href=\"#按位异或-1\" class=\"headerlink\" title=\"按位异或\"></a>按位异或</h4><p>给定一个多项式$F$，让你求出一个多项式$G$，使得</p>\n<script type=\"math/tex; mode=display\">F\\oplus G=(1,0,\\cdots,0,0)</script><p>首先我们有</p>\n<script type=\"math/tex; mode=display\">F\\oplus G=(F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1},F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0})</script><p>也就是说</p>\n<script type=\"math/tex; mode=display\">F_{0}\\oplus G_{0}+F_{1}\\oplus G_{1}=\\epsilon</script><script type=\"math/tex; mode=display\">F_{0}\\oplus G_{1}+F_{1}\\oplus G_{0}=0</script><p>将上面两个式子相加、相减，得到</p>\n<script type=\"math/tex; mode=display\">(F_{0}+F_{1})\\oplus(G_{0}+G_{1})=\\epsilon</script><script type=\"math/tex; mode=display\">(F_{0}-F_{1})\\oplus(G_{0}-G_{1})=\\epsilon</script><p>于是</p>\n<script type=\"math/tex; mode=display\">G_{0}=\\cfrac{(F_{0}+F_{1})^{-1}+(F_{0}-F_{1})^{-1}}{2}</script><script type=\"math/tex; mode=display\">G_{1}=\\cfrac{(F_{0}+F_{1})^{-1}-(F_{0}-F_{1})^{-1}}{2}</script><p>时间复杂度$O(n2^{n})$。</p>\n<p>这就没了？并不是。</p>\n<p>如果您按照上面的式子写好程序，然后往里面输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2 3 4</span><br></pre></td></tr></table></figure>\n<p>这样一组数据，您会发现您的程序给出的结果并不正确。</p>\n<p>那么原因是什么呢？是我们式子推错了吗？</p>\n<p>输出一下中间的运算过程，我们发现，在中间有一步，我们计算$(2,2)^{-1}$时，需要用到$(0)^{-1}$。</p>\n<p>显然它不存在，但是同样显然的是，如果$(2,2)^{-1}$存在，那么这个过程不应该出现这样的问题。</p>\n<p>所以说原因就是，$(2,2)^{-1}$，或者更进一步地，$(1,2,3,4)^{-1}$<strong>不存在</strong>。</p>\n<h3 id=\"子集卷积\"><a href=\"#子集卷积\" class=\"headerlink\" title=\"子集卷积\"></a><a href=\"https://loj.ac/problem/152\">子集卷积</a></h3><p><del>让我来看看有没有点进去看完题面一脸懵逼地关闭标签页的。</del></p>\n<p>这道题是让我们求这个东西</p>\n<script type=\"math/tex; mode=display\">h_{R}=\\sum_{S\\vee T=R,S\\wedge T=\\varnothing}f_{S}g_{T}</script><p>这比我们之前看到的卷积拥有更加严格的要求，$S\\wedge T=\\varnothing$，很明显，这是在提示我们抄题解。</p>\n<p>我们定义</p>\n<script type=\"math/tex; mode=display\">F_{i,S}=\\begin{cases}\n&f_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><script type=\"math/tex; mode=display\">G_{i,S}=\\begin{cases}\n&g_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><script type=\"math/tex; mode=display\">H_{i,S}=\\begin{cases}\n&h_{S}\\;\\;\\;\\;\\;\\;\\;\\;&(|S|=i)\\\\\n&0&(|S|\\neq i)\n\\end{cases}</script><p>然后我们从小到大枚举$i$，计算</p>\n<script type=\"math/tex; mode=display\">H_{i}=\\sum_{j=0}^{i}F_{j}\\vee G_{i-j}</script><p>为了理解这个式子，我们先将其展开</p>\n<script type=\"math/tex; mode=display\">H_{i,R}=\\sum_{j=0}^{i}\\sum_{S\\vee T=R}F_{j,S}G_{i-j,T}</script><p>根据定义，$F_{i,S}$和$G_{i,S}$有值当且仅当$|S|=i$，因此这就相当于</p>\n<script type=\"math/tex; mode=display\">H_{i,R}=\\sum_{S\\vee T=R,|S|+|T|=i}F_{|S|,S}G_{|T|,T}</script><p>因为$S$和$T$可能会有交集，从而$i\\gt |R|$时$H_{i,R}$也可能有值，这是不符合定义的，因此（如果有必要的话）我们需要手动清空。</p>\n<p>代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 20</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000009</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,N;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt[<span class=\"number\">1</span>&lt;&lt;maxn],F[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn],G[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn],H[maxn+<span class=\"number\">1</span>][<span class=\"number\">1</span>&lt;&lt;maxn];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FWT</span><span class=\"params\">(re <span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;p&lt;N;p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)</span><br><span class=\"line\">                F[j+p]=!tp?(F[j+p]+F[j])%mod:(F[j+p]-F[j]+mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    N=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;N;++i)</span><br><span class=\"line\">        cnt[i]=cnt[i&gt;&gt;<span class=\"number\">1</span>]+(i&amp;<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::read(F[cnt[i]][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::read(G[cnt[i]][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        FWT(F[i],<span class=\"number\">0</span>);</span><br><span class=\"line\">        FWT(G[i],<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;++j)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> S=<span class=\"number\">0</span>;S&lt;N;++S)</span><br><span class=\"line\">                H[i][S]=(H[i][S]+<span class=\"number\">1L</span>L*F[j][S]*G[i-j][S]%mod)%mod;</span><br><span class=\"line\">        FWT(H[i],<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> S=<span class=\"number\">0</span>;S&lt;N;++S)</span><br><span class=\"line\">            cnt[S]==i||(H[i][S]=<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;++i)</span><br><span class=\"line\">        cltstream::write(H[cnt[i]][i],<span class=\"number\">32</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p><img src=\"/images/TIM图片20181011211750.jpg\" alt=\"\"></p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2020-06-02T12:07:21.000Z","title":"「SDOI2020 游记」五月蠅いなお前なんて大嫌いだ","password":null,"_content":"闲着没事干写篇游记。\n\n<!-- more -->\n\n> 鉴于 NOI2020 拟于 8 月份举办以及各省目前的疫情防控情况，NOI 科学委员会经过研究决定：由 CCF 统一命题和评测的 NOI2020 省队选拔安排在 6 月 20 日 - 21 日（周六周日）举行。统一省选安排两试，时间为每天上午 8 点半到 13 点。\n\n以上文字引用自[ CCF 关于 NOI2020 省选举办时间和方式的通知](http://www.noi.cn/newsview.html?id=1215&hash=618DAD&type=1)。\n\n~~标题的「五月蠅いな」和「お前なんて大嫌いだ」是两句话，因为「五月蠅い」后面要直接跟名词不能加「な」qwq~~\n\n### Day -∞\n\n颓废一时爽，一直颓废一直爽~~，回去做题火葬场~~。\n\n### Day -17（2020-6-2）\n\n因为合格考没过被迫开始补政治和语文。\n\n~~呐，世界，毁灭吧（无端~~\n\n不知道为什么从中午开始一直头疼，躺了一整个下午总算好点了。\n\n躺在床上的时候突然就想，自己加入信息组已经两年了啊。\n\n曹爷（ID 忘了，Luogu 上叫第一发言者），DEVILK，SuperGoodGame，star_dust，hachimanjy，RiverFun，wavwing，Bj2002，Colorfulmist，SnoWY，Ciyang，ArachnidaKing，Red_dye……\n\n我突然想起来了，以前每天晚上，我们在宿舍里，一边闻着曹爷的大臭脚一边谈笑风生，然后抢曹爷被子时的事情。\n\n我突然想起来了，曾经有过一个晚上，DEVILK 手把手帮我调生日蛋糕时的事情。\n\n我突然想起来了，2018 年的 NOIp，我们在宿舍里，玩算法版谁是卧底时的事情。\n\n我突然想起来了，曾经有过一个晚上，我帮着 hachimanjy 搭建 GitHub 博客时的事情。\n\n当初我去自招的时候见到 RiverFun 是什么心情呢？我已经不知道了。\n\n一开始因为误打误撞进了信息组，wavwing（好像）还惹出了不少事。当时我还只能跟着他后面不做声，结果现在也变成爷字辈了。\n\n我突然想起来了，第一次合格考我回到机房时，Bj2002 大喊一声「您们看看谁来了！」时的事情。\n\n我突然想起来了，当初我为了和 asuldb 深入交流，不畏 Colorfulmist 的潮之力毅然调座位时的事情。结果调过去遇到的第一道题就是一道神仙虚树反演题 `Surprise Me!`（\n\n我突然想起来了，我以前手把手教 SnoWY 学算法时的事情。结果他现在文化课 OI 两开花随手吊打我。\n\n我突然想起来了，以前闲下来没事干的时候，成天就知道往 Taduro 的座位旁边凑时的事情。\n\n我突然想起来了，以前和 Juan_feng 一起调试 `五彩斑斓的世界`，`未来日记` 时的事情。结果后来自己参与了 std 编写的题 `文化课`（一开始叫 `四则运算基础练习题`）也被收入 Ynoi\n了。还是活成了自己讨厌的模样（大雾\n\n我突然想起来了，2019 年一轮省队集训，Day 9，被 nzhtl1477 拍着肩膀说「珂以啊！」时的事情。\n\n我突然想起来了，省队选拔前夕，拿着小本本跑回宿舍记录 Colorfulmist 名人名言时的事情。\n\n我突然想起来了，2019 年一轮省队选拔，Day 1 考完，我和 asuldb 几个人一起在教学楼后面谈笑风生时的事情。\n\n也许真就像那句话所说吧：\n\n> 哪有什么突然想起，只是一直藏在心底罢了。\n\n插播一则旧闻：\n\n> 潮子与 asuldb 论 SAM。潮子潮之曰：你的 SAM 没有 A，SM，A 不了。次日，asuldb 遇 SAM 题，得正解。然倍增毙，爆零也。遂叹曰：潮爷奶的准，我的 SAM 就是 A 不了。\n\n经 典 咏 流 传。\n\n### Day -10（2020-6-9）\n\n我终于通关 Slay the Spire 了！（倒地\n\n~~为什么我这么菜啊 /kk~~\n\n用新角色观者打了一发，感觉不知道为什么就是好像很厉害（大雾\n\n### Day 0（2020-6-19）\n\n中间竟然有连着 9 天没有更新（\n\n而且连 Wiki 也没有（\n\n其实是有一天 GitHub 突然 push 不上去了于是懒得搞了于是咕掉了（\n\n明天就是 Day 1 了 /kk\n\n大概考完这场省选我就要退役了吧 /kk\n\n想着要说点什么，想来想去，还是这句话：\n\n「何も問題は無いようじゃがの～」\n\n~~最近在看 BUG 之风，看得我拳☆銃☆大☆爆☆発。~~\n\n~~「そして、オレだけが<ruby>再<rt>リ</rt>起<rt>タ</rt>不<rt>イ</rt>能<rt>ヤ</rt></ruby>しない事を許可しろ！」~~\n\n### Day 1（2020-6-20）\n\n前一天晚上定了一个五点整的闹钟，结果~~因为某种神秘的原因~~提前十分钟就起来了。\n\n七点几分出的家门，到了机房大概有半多了。进门看到块坐在稳稳的位置上，陶就坐在旁边他自己的位置上。\n\n跟他们说最近在玩 Slay the Spire，陶表示不知道。于是给他看了一下 PKUWC 的同名题目。\n\n以前烜写过这道题的题解，说这是 SB 题。可惜我现在还是不会。直接去问他，他表示早就忘了。\n\n进考场之后也没啥。看他们都在拼命打板子，但是我觉得打了也没用，所以反复确认试题。\n\n一共三道题，`icefire`，`problem` 和 `shop`，从大样例的数量来看全部都是传统题。\n\n解压密码一团乱码。\n\n具体的题意应该迟早会上传到各大 OJ 上，这里就不赘述了。\n\n一开始看了一个小时 T1 毫无进展，于是去看 T2。\n\n稍微推了推就推出来一个矩阵的做法，$O(m^{3}\\log n)$，结合暴力可以拿到 60 pts。\n\n然后再回去看 T1 发现这个东西是单峰的，于是写了个三分套树状数组，$O(n\\log^{2}n)$，60 pts。但实际上因为是三分所以其中一个 $\\log$ 是以 $1.5$ 为底数的，常数会大。可以改成二分，但无论如何都是 60 pts。\n\n做到这里就已经没时间了，T3 直接输出样例走人。\n\n出考场和机房中 dalao 讨论题，发现烜 T1 想出了正解但是没有写出来。据他说是线段树，但是说实话我表示怀疑。\n\n被天下第一的胡块块邀请到了他的家里。现在我写这些东西的时候也是在他家里。\n\n块说自己在家里经常健身，于是我顺便拜见了一下他的健身器械。\n\n被块暴力安利了炉石传说。其实我第一次听说炉石传说还是「你必须攻击该具有嘲讽的随从」的来着。\n\n一个下午就打完了新手教学（\n\n块「你是我见过的新手教学打得最认真的。」\n\n算了吧还是 Slay 好玩（\n\n### Day 2（2020-6-21）\n\n又定了一个五点的闹钟，结果又提前十分钟起来了。\n\n不到七点就走了，到了机房还没开门。\n\n重新抽了座位，然而两天都是二号考场。\n\n瞅一眼压缩包里面，`count`，`transfer` 和 `tree`，传统题。\n\n……？！`count`！这一定是一道计数题，看我写个 NTT 板子。\n\n结果写了半个小时没写出来 /kk\n\n解压密码和昨天一样是乱码。\n\n打开一看发现 `count` 是 T3，生成树题。\n\n于是三道题来回看了又看，一直在「想到新思路 -> 开始写代码 -> 写到一半发现假了 -> 自闭」这样循环。\n\n到最后突然发现 T3 可以莫比乌斯反演套矩阵树，然后突然发现自己不会矩阵树。写了半个小时没写出来，弃疗了。\n\n最终成绩：60+60+0+30+10+30=190。我没了 /kk\n\n烜「这套题暴力分贼肥啊你怎么回事啊。」\n\n最后的最后，loli 让我们下午回家，明天开始学文化课。大概这就是我打的最后一场正式的 OI 比赛了吧。\n\n对了差点忘了说了，昨天听说块没看过 JO5 但是被剧透过，于是带着他看了第一话。\n\n~~黄金精神，指偷别人钱抢别人行李给别人发好人卡。~~\n\n~~「めーはもう……めーはもう……めーはもう推しだ！」~~\n\n~~「大丈夫ですかブチャラティ？」~~\n\n### The End\n\n> 今番良晤，豪兴不浅，\n> \n> 他日江湖相逢，再当杯酒言欢。\n> \n> 咱们就此别过。\n> \n> 江湖路远，各位请一路珍重。\n\n~~虽然是从花花的犇犇里抄来的。~~\n\n插播一则新闻：\n\n> 真实成绩：60+60+0+0+10+10=140。看来是 D2T1 整个写炸了，D2T3 莫名其妙丢了 20 pts。\n","source":"_posts/2020-06-02-sdoi2020-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2020-06-02 20:07:21\ntitle: 「SDOI2020 游记」五月蠅いなお前なんて大嫌いだ\ntags:\n  - SDOI\n  - 2020\ncategories:\n  - 游记\npassword:\n---\n闲着没事干写篇游记。\n\n<!-- more -->\n\n> 鉴于 NOI2020 拟于 8 月份举办以及各省目前的疫情防控情况，NOI 科学委员会经过研究决定：由 CCF 统一命题和评测的 NOI2020 省队选拔安排在 6 月 20 日 - 21 日（周六周日）举行。统一省选安排两试，时间为每天上午 8 点半到 13 点。\n\n以上文字引用自[ CCF 关于 NOI2020 省选举办时间和方式的通知](http://www.noi.cn/newsview.html?id=1215&hash=618DAD&type=1)。\n\n~~标题的「五月蠅いな」和「お前なんて大嫌いだ」是两句话，因为「五月蠅い」后面要直接跟名词不能加「な」qwq~~\n\n### Day -∞\n\n颓废一时爽，一直颓废一直爽~~，回去做题火葬场~~。\n\n### Day -17（2020-6-2）\n\n因为合格考没过被迫开始补政治和语文。\n\n~~呐，世界，毁灭吧（无端~~\n\n不知道为什么从中午开始一直头疼，躺了一整个下午总算好点了。\n\n躺在床上的时候突然就想，自己加入信息组已经两年了啊。\n\n曹爷（ID 忘了，Luogu 上叫第一发言者），DEVILK，SuperGoodGame，star_dust，hachimanjy，RiverFun，wavwing，Bj2002，Colorfulmist，SnoWY，Ciyang，ArachnidaKing，Red_dye……\n\n我突然想起来了，以前每天晚上，我们在宿舍里，一边闻着曹爷的大臭脚一边谈笑风生，然后抢曹爷被子时的事情。\n\n我突然想起来了，曾经有过一个晚上，DEVILK 手把手帮我调生日蛋糕时的事情。\n\n我突然想起来了，2018 年的 NOIp，我们在宿舍里，玩算法版谁是卧底时的事情。\n\n我突然想起来了，曾经有过一个晚上，我帮着 hachimanjy 搭建 GitHub 博客时的事情。\n\n当初我去自招的时候见到 RiverFun 是什么心情呢？我已经不知道了。\n\n一开始因为误打误撞进了信息组，wavwing（好像）还惹出了不少事。当时我还只能跟着他后面不做声，结果现在也变成爷字辈了。\n\n我突然想起来了，第一次合格考我回到机房时，Bj2002 大喊一声「您们看看谁来了！」时的事情。\n\n我突然想起来了，当初我为了和 asuldb 深入交流，不畏 Colorfulmist 的潮之力毅然调座位时的事情。结果调过去遇到的第一道题就是一道神仙虚树反演题 `Surprise Me!`（\n\n我突然想起来了，我以前手把手教 SnoWY 学算法时的事情。结果他现在文化课 OI 两开花随手吊打我。\n\n我突然想起来了，以前闲下来没事干的时候，成天就知道往 Taduro 的座位旁边凑时的事情。\n\n我突然想起来了，以前和 Juan_feng 一起调试 `五彩斑斓的世界`，`未来日记` 时的事情。结果后来自己参与了 std 编写的题 `文化课`（一开始叫 `四则运算基础练习题`）也被收入 Ynoi\n了。还是活成了自己讨厌的模样（大雾\n\n我突然想起来了，2019 年一轮省队集训，Day 9，被 nzhtl1477 拍着肩膀说「珂以啊！」时的事情。\n\n我突然想起来了，省队选拔前夕，拿着小本本跑回宿舍记录 Colorfulmist 名人名言时的事情。\n\n我突然想起来了，2019 年一轮省队选拔，Day 1 考完，我和 asuldb 几个人一起在教学楼后面谈笑风生时的事情。\n\n也许真就像那句话所说吧：\n\n> 哪有什么突然想起，只是一直藏在心底罢了。\n\n插播一则旧闻：\n\n> 潮子与 asuldb 论 SAM。潮子潮之曰：你的 SAM 没有 A，SM，A 不了。次日，asuldb 遇 SAM 题，得正解。然倍增毙，爆零也。遂叹曰：潮爷奶的准，我的 SAM 就是 A 不了。\n\n经 典 咏 流 传。\n\n### Day -10（2020-6-9）\n\n我终于通关 Slay the Spire 了！（倒地\n\n~~为什么我这么菜啊 /kk~~\n\n用新角色观者打了一发，感觉不知道为什么就是好像很厉害（大雾\n\n### Day 0（2020-6-19）\n\n中间竟然有连着 9 天没有更新（\n\n而且连 Wiki 也没有（\n\n其实是有一天 GitHub 突然 push 不上去了于是懒得搞了于是咕掉了（\n\n明天就是 Day 1 了 /kk\n\n大概考完这场省选我就要退役了吧 /kk\n\n想着要说点什么，想来想去，还是这句话：\n\n「何も問題は無いようじゃがの～」\n\n~~最近在看 BUG 之风，看得我拳☆銃☆大☆爆☆発。~~\n\n~~「そして、オレだけが<ruby>再<rt>リ</rt>起<rt>タ</rt>不<rt>イ</rt>能<rt>ヤ</rt></ruby>しない事を許可しろ！」~~\n\n### Day 1（2020-6-20）\n\n前一天晚上定了一个五点整的闹钟，结果~~因为某种神秘的原因~~提前十分钟就起来了。\n\n七点几分出的家门，到了机房大概有半多了。进门看到块坐在稳稳的位置上，陶就坐在旁边他自己的位置上。\n\n跟他们说最近在玩 Slay the Spire，陶表示不知道。于是给他看了一下 PKUWC 的同名题目。\n\n以前烜写过这道题的题解，说这是 SB 题。可惜我现在还是不会。直接去问他，他表示早就忘了。\n\n进考场之后也没啥。看他们都在拼命打板子，但是我觉得打了也没用，所以反复确认试题。\n\n一共三道题，`icefire`，`problem` 和 `shop`，从大样例的数量来看全部都是传统题。\n\n解压密码一团乱码。\n\n具体的题意应该迟早会上传到各大 OJ 上，这里就不赘述了。\n\n一开始看了一个小时 T1 毫无进展，于是去看 T2。\n\n稍微推了推就推出来一个矩阵的做法，$O(m^{3}\\log n)$，结合暴力可以拿到 60 pts。\n\n然后再回去看 T1 发现这个东西是单峰的，于是写了个三分套树状数组，$O(n\\log^{2}n)$，60 pts。但实际上因为是三分所以其中一个 $\\log$ 是以 $1.5$ 为底数的，常数会大。可以改成二分，但无论如何都是 60 pts。\n\n做到这里就已经没时间了，T3 直接输出样例走人。\n\n出考场和机房中 dalao 讨论题，发现烜 T1 想出了正解但是没有写出来。据他说是线段树，但是说实话我表示怀疑。\n\n被天下第一的胡块块邀请到了他的家里。现在我写这些东西的时候也是在他家里。\n\n块说自己在家里经常健身，于是我顺便拜见了一下他的健身器械。\n\n被块暴力安利了炉石传说。其实我第一次听说炉石传说还是「你必须攻击该具有嘲讽的随从」的来着。\n\n一个下午就打完了新手教学（\n\n块「你是我见过的新手教学打得最认真的。」\n\n算了吧还是 Slay 好玩（\n\n### Day 2（2020-6-21）\n\n又定了一个五点的闹钟，结果又提前十分钟起来了。\n\n不到七点就走了，到了机房还没开门。\n\n重新抽了座位，然而两天都是二号考场。\n\n瞅一眼压缩包里面，`count`，`transfer` 和 `tree`，传统题。\n\n……？！`count`！这一定是一道计数题，看我写个 NTT 板子。\n\n结果写了半个小时没写出来 /kk\n\n解压密码和昨天一样是乱码。\n\n打开一看发现 `count` 是 T3，生成树题。\n\n于是三道题来回看了又看，一直在「想到新思路 -> 开始写代码 -> 写到一半发现假了 -> 自闭」这样循环。\n\n到最后突然发现 T3 可以莫比乌斯反演套矩阵树，然后突然发现自己不会矩阵树。写了半个小时没写出来，弃疗了。\n\n最终成绩：60+60+0+30+10+30=190。我没了 /kk\n\n烜「这套题暴力分贼肥啊你怎么回事啊。」\n\n最后的最后，loli 让我们下午回家，明天开始学文化课。大概这就是我打的最后一场正式的 OI 比赛了吧。\n\n对了差点忘了说了，昨天听说块没看过 JO5 但是被剧透过，于是带着他看了第一话。\n\n~~黄金精神，指偷别人钱抢别人行李给别人发好人卡。~~\n\n~~「めーはもう……めーはもう……めーはもう推しだ！」~~\n\n~~「大丈夫ですかブチャラティ？」~~\n\n### The End\n\n> 今番良晤，豪兴不浅，\n> \n> 他日江湖相逢，再当杯酒言欢。\n> \n> 咱们就此别过。\n> \n> 江湖路远，各位请一路珍重。\n\n~~虽然是从花花的犇犇里抄来的。~~\n\n插播一则新闻：\n\n> 真实成绩：60+60+0+0+10+10=140。看来是 D2T1 整个写炸了，D2T3 莫名其妙丢了 20 pts。\n","slug":"sdoi2020-notes","published":1,"updated":"2020-06-23T03:18:50.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhn10082mku997b8a9t9","content":"<p>闲着没事干写篇游记。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>鉴于 NOI2020 拟于 8 月份举办以及各省目前的疫情防控情况，NOI 科学委员会经过研究决定：由 CCF 统一命题和评测的 NOI2020 省队选拔安排在 6 月 20 日 - 21 日（周六周日）举行。统一省选安排两试，时间为每天上午 8 点半到 13 点。</p>\n</blockquote>\n<p>以上文字引用自<a href=\"http://www.noi.cn/newsview.html?id=1215&amp;hash=618DAD&amp;type=1\"> CCF 关于 NOI2020 省选举办时间和方式的通知</a>。</p>\n<p><del>标题的「五月蠅いな」和「お前なんて大嫌いだ」是两句话，因为「五月蠅い」后面要直接跟名词不能加「な」qwq</del></p>\n<h3 id=\"Day-∞\"><a href=\"#Day-∞\" class=\"headerlink\" title=\"Day -∞\"></a>Day -∞</h3><p>颓废一时爽，一直颓废一直爽<del>，回去做题火葬场</del>。</p>\n<h3 id=\"Day-17（2020-6-2）\"><a href=\"#Day-17（2020-6-2）\" class=\"headerlink\" title=\"Day -17（2020-6-2）\"></a>Day -17（2020-6-2）</h3><p>因为合格考没过被迫开始补政治和语文。</p>\n<p><del>呐，世界，毁灭吧（无端</del></p>\n<p>不知道为什么从中午开始一直头疼，躺了一整个下午总算好点了。</p>\n<p>躺在床上的时候突然就想，自己加入信息组已经两年了啊。</p>\n<p>曹爷（ID 忘了，Luogu 上叫第一发言者），DEVILK，SuperGoodGame，star_dust，hachimanjy，RiverFun，wavwing，Bj2002，Colorfulmist，SnoWY，Ciyang，ArachnidaKing，Red_dye……</p>\n<p>我突然想起来了，以前每天晚上，我们在宿舍里，一边闻着曹爷的大臭脚一边谈笑风生，然后抢曹爷被子时的事情。</p>\n<p>我突然想起来了，曾经有过一个晚上，DEVILK 手把手帮我调生日蛋糕时的事情。</p>\n<p>我突然想起来了，2018 年的 NOIp，我们在宿舍里，玩算法版谁是卧底时的事情。</p>\n<p>我突然想起来了，曾经有过一个晚上，我帮着 hachimanjy 搭建 GitHub 博客时的事情。</p>\n<p>当初我去自招的时候见到 RiverFun 是什么心情呢？我已经不知道了。</p>\n<p>一开始因为误打误撞进了信息组，wavwing（好像）还惹出了不少事。当时我还只能跟着他后面不做声，结果现在也变成爷字辈了。</p>\n<p>我突然想起来了，第一次合格考我回到机房时，Bj2002 大喊一声「您们看看谁来了！」时的事情。</p>\n<p>我突然想起来了，当初我为了和 asuldb 深入交流，不畏 Colorfulmist 的潮之力毅然调座位时的事情。结果调过去遇到的第一道题就是一道神仙虚树反演题 <code>Surprise Me!</code>（</p>\n<p>我突然想起来了，我以前手把手教 SnoWY 学算法时的事情。结果他现在文化课 OI 两开花随手吊打我。</p>\n<p>我突然想起来了，以前闲下来没事干的时候，成天就知道往 Taduro 的座位旁边凑时的事情。</p>\n<p>我突然想起来了，以前和 Juan_feng 一起调试 <code>五彩斑斓的世界</code>，<code>未来日记</code> 时的事情。结果后来自己参与了 std 编写的题 <code>文化课</code>（一开始叫 <code>四则运算基础练习题</code>）也被收入 Ynoi<br>了。还是活成了自己讨厌的模样（大雾</p>\n<p>我突然想起来了，2019 年一轮省队集训，Day 9，被 nzhtl1477 拍着肩膀说「珂以啊！」时的事情。</p>\n<p>我突然想起来了，省队选拔前夕，拿着小本本跑回宿舍记录 Colorfulmist 名人名言时的事情。</p>\n<p>我突然想起来了，2019 年一轮省队选拔，Day 1 考完，我和 asuldb 几个人一起在教学楼后面谈笑风生时的事情。</p>\n<p>也许真就像那句话所说吧：</p>\n<blockquote>\n<p>哪有什么突然想起，只是一直藏在心底罢了。</p>\n</blockquote>\n<p>插播一则旧闻：</p>\n<blockquote>\n<p>潮子与 asuldb 论 SAM。潮子潮之曰：你的 SAM 没有 A，SM，A 不了。次日，asuldb 遇 SAM 题，得正解。然倍增毙，爆零也。遂叹曰：潮爷奶的准，我的 SAM 就是 A 不了。</p>\n</blockquote>\n<p>经 典 咏 流 传。</p>\n<h3 id=\"Day-10（2020-6-9）\"><a href=\"#Day-10（2020-6-9）\" class=\"headerlink\" title=\"Day -10（2020-6-9）\"></a>Day -10（2020-6-9）</h3><p>我终于通关 Slay the Spire 了！（倒地</p>\n<p><del>为什么我这么菜啊 /kk</del></p>\n<p>用新角色观者打了一发，感觉不知道为什么就是好像很厉害（大雾</p>\n<h3 id=\"Day-0（2020-6-19）\"><a href=\"#Day-0（2020-6-19）\" class=\"headerlink\" title=\"Day 0（2020-6-19）\"></a>Day 0（2020-6-19）</h3><p>中间竟然有连着 9 天没有更新（</p>\n<p>而且连 Wiki 也没有（</p>\n<p>其实是有一天 GitHub 突然 push 不上去了于是懒得搞了于是咕掉了（</p>\n<p>明天就是 Day 1 了 /kk</p>\n<p>大概考完这场省选我就要退役了吧 /kk</p>\n<p>想着要说点什么，想来想去，还是这句话：</p>\n<p>「何も問題は無いようじゃがの～」</p>\n<p><del>最近在看 BUG 之风，看得我拳☆銃☆大☆爆☆発。</del></p>\n<p><del>「そして、オレだけが<ruby>再<rt>リ</rt>起<rt>タ</rt>不<rt>イ</rt>能<rt>ヤ</rt></ruby>しない事を許可しろ！」</del></p>\n<h3 id=\"Day-1（2020-6-20）\"><a href=\"#Day-1（2020-6-20）\" class=\"headerlink\" title=\"Day 1（2020-6-20）\"></a>Day 1（2020-6-20）</h3><p>前一天晚上定了一个五点整的闹钟，结果<del>因为某种神秘的原因</del>提前十分钟就起来了。</p>\n<p>七点几分出的家门，到了机房大概有半多了。进门看到块坐在稳稳的位置上，陶就坐在旁边他自己的位置上。</p>\n<p>跟他们说最近在玩 Slay the Spire，陶表示不知道。于是给他看了一下 PKUWC 的同名题目。</p>\n<p>以前烜写过这道题的题解，说这是 SB 题。可惜我现在还是不会。直接去问他，他表示早就忘了。</p>\n<p>进考场之后也没啥。看他们都在拼命打板子，但是我觉得打了也没用，所以反复确认试题。</p>\n<p>一共三道题，<code>icefire</code>，<code>problem</code> 和 <code>shop</code>，从大样例的数量来看全部都是传统题。</p>\n<p>解压密码一团乱码。</p>\n<p>具体的题意应该迟早会上传到各大 OJ 上，这里就不赘述了。</p>\n<p>一开始看了一个小时 T1 毫无进展，于是去看 T2。</p>\n<p>稍微推了推就推出来一个矩阵的做法，$O(m^{3}\\log n)$，结合暴力可以拿到 60 pts。</p>\n<p>然后再回去看 T1 发现这个东西是单峰的，于是写了个三分套树状数组，$O(n\\log^{2}n)$，60 pts。但实际上因为是三分所以其中一个 $\\log$ 是以 $1.5$ 为底数的，常数会大。可以改成二分，但无论如何都是 60 pts。</p>\n<p>做到这里就已经没时间了，T3 直接输出样例走人。</p>\n<p>出考场和机房中 dalao 讨论题，发现烜 T1 想出了正解但是没有写出来。据他说是线段树，但是说实话我表示怀疑。</p>\n<p>被天下第一的胡块块邀请到了他的家里。现在我写这些东西的时候也是在他家里。</p>\n<p>块说自己在家里经常健身，于是我顺便拜见了一下他的健身器械。</p>\n<p>被块暴力安利了炉石传说。其实我第一次听说炉石传说还是「你必须攻击该具有嘲讽的随从」的来着。</p>\n<p>一个下午就打完了新手教学（</p>\n<p>块「你是我见过的新手教学打得最认真的。」</p>\n<p>算了吧还是 Slay 好玩（</p>\n<h3 id=\"Day-2（2020-6-21）\"><a href=\"#Day-2（2020-6-21）\" class=\"headerlink\" title=\"Day 2（2020-6-21）\"></a>Day 2（2020-6-21）</h3><p>又定了一个五点的闹钟，结果又提前十分钟起来了。</p>\n<p>不到七点就走了，到了机房还没开门。</p>\n<p>重新抽了座位，然而两天都是二号考场。</p>\n<p>瞅一眼压缩包里面，<code>count</code>，<code>transfer</code> 和 <code>tree</code>，传统题。</p>\n<p>……？！<code>count</code>！这一定是一道计数题，看我写个 NTT 板子。</p>\n<p>结果写了半个小时没写出来 /kk</p>\n<p>解压密码和昨天一样是乱码。</p>\n<p>打开一看发现 <code>count</code> 是 T3，生成树题。</p>\n<p>于是三道题来回看了又看，一直在「想到新思路 -&gt; 开始写代码 -&gt; 写到一半发现假了 -&gt; 自闭」这样循环。</p>\n<p>到最后突然发现 T3 可以莫比乌斯反演套矩阵树，然后突然发现自己不会矩阵树。写了半个小时没写出来，弃疗了。</p>\n<p>最终成绩：60+60+0+30+10+30=190。我没了 /kk</p>\n<p>烜「这套题暴力分贼肥啊你怎么回事啊。」</p>\n<p>最后的最后，loli 让我们下午回家，明天开始学文化课。大概这就是我打的最后一场正式的 OI 比赛了吧。</p>\n<p>对了差点忘了说了，昨天听说块没看过 JO5 但是被剧透过，于是带着他看了第一话。</p>\n<p><del>黄金精神，指偷别人钱抢别人行李给别人发好人卡。</del></p>\n<p><del>「めーはもう……めーはもう……めーはもう推しだ！」</del></p>\n<p><del>「大丈夫ですかブチャラティ？」</del></p>\n<h3 id=\"The-End\"><a href=\"#The-End\" class=\"headerlink\" title=\"The End\"></a>The End</h3><blockquote>\n<p>今番良晤，豪兴不浅，</p>\n<p>他日江湖相逢，再当杯酒言欢。</p>\n<p>咱们就此别过。</p>\n<p>江湖路远，各位请一路珍重。</p>\n</blockquote>\n<p><del>虽然是从花花的犇犇里抄来的。</del></p>\n<p>插播一则新闻：</p>\n<blockquote>\n<p>真实成绩：60+60+0+0+10+10=140。看来是 D2T1 整个写炸了，D2T3 莫名其妙丢了 20 pts。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>闲着没事干写篇游记。</p>","more":"<blockquote>\n<p>鉴于 NOI2020 拟于 8 月份举办以及各省目前的疫情防控情况，NOI 科学委员会经过研究决定：由 CCF 统一命题和评测的 NOI2020 省队选拔安排在 6 月 20 日 - 21 日（周六周日）举行。统一省选安排两试，时间为每天上午 8 点半到 13 点。</p>\n</blockquote>\n<p>以上文字引用自<a href=\"http://www.noi.cn/newsview.html?id=1215&amp;hash=618DAD&amp;type=1\"> CCF 关于 NOI2020 省选举办时间和方式的通知</a>。</p>\n<p><del>标题的「五月蠅いな」和「お前なんて大嫌いだ」是两句话，因为「五月蠅い」后面要直接跟名词不能加「な」qwq</del></p>\n<h3 id=\"Day-∞\"><a href=\"#Day-∞\" class=\"headerlink\" title=\"Day -∞\"></a>Day -∞</h3><p>颓废一时爽，一直颓废一直爽<del>，回去做题火葬场</del>。</p>\n<h3 id=\"Day-17（2020-6-2）\"><a href=\"#Day-17（2020-6-2）\" class=\"headerlink\" title=\"Day -17（2020-6-2）\"></a>Day -17（2020-6-2）</h3><p>因为合格考没过被迫开始补政治和语文。</p>\n<p><del>呐，世界，毁灭吧（无端</del></p>\n<p>不知道为什么从中午开始一直头疼，躺了一整个下午总算好点了。</p>\n<p>躺在床上的时候突然就想，自己加入信息组已经两年了啊。</p>\n<p>曹爷（ID 忘了，Luogu 上叫第一发言者），DEVILK，SuperGoodGame，star_dust，hachimanjy，RiverFun，wavwing，Bj2002，Colorfulmist，SnoWY，Ciyang，ArachnidaKing，Red_dye……</p>\n<p>我突然想起来了，以前每天晚上，我们在宿舍里，一边闻着曹爷的大臭脚一边谈笑风生，然后抢曹爷被子时的事情。</p>\n<p>我突然想起来了，曾经有过一个晚上，DEVILK 手把手帮我调生日蛋糕时的事情。</p>\n<p>我突然想起来了，2018 年的 NOIp，我们在宿舍里，玩算法版谁是卧底时的事情。</p>\n<p>我突然想起来了，曾经有过一个晚上，我帮着 hachimanjy 搭建 GitHub 博客时的事情。</p>\n<p>当初我去自招的时候见到 RiverFun 是什么心情呢？我已经不知道了。</p>\n<p>一开始因为误打误撞进了信息组，wavwing（好像）还惹出了不少事。当时我还只能跟着他后面不做声，结果现在也变成爷字辈了。</p>\n<p>我突然想起来了，第一次合格考我回到机房时，Bj2002 大喊一声「您们看看谁来了！」时的事情。</p>\n<p>我突然想起来了，当初我为了和 asuldb 深入交流，不畏 Colorfulmist 的潮之力毅然调座位时的事情。结果调过去遇到的第一道题就是一道神仙虚树反演题 <code>Surprise Me!</code>（</p>\n<p>我突然想起来了，我以前手把手教 SnoWY 学算法时的事情。结果他现在文化课 OI 两开花随手吊打我。</p>\n<p>我突然想起来了，以前闲下来没事干的时候，成天就知道往 Taduro 的座位旁边凑时的事情。</p>\n<p>我突然想起来了，以前和 Juan_feng 一起调试 <code>五彩斑斓的世界</code>，<code>未来日记</code> 时的事情。结果后来自己参与了 std 编写的题 <code>文化课</code>（一开始叫 <code>四则运算基础练习题</code>）也被收入 Ynoi<br>了。还是活成了自己讨厌的模样（大雾</p>\n<p>我突然想起来了，2019 年一轮省队集训，Day 9，被 nzhtl1477 拍着肩膀说「珂以啊！」时的事情。</p>\n<p>我突然想起来了，省队选拔前夕，拿着小本本跑回宿舍记录 Colorfulmist 名人名言时的事情。</p>\n<p>我突然想起来了，2019 年一轮省队选拔，Day 1 考完，我和 asuldb 几个人一起在教学楼后面谈笑风生时的事情。</p>\n<p>也许真就像那句话所说吧：</p>\n<blockquote>\n<p>哪有什么突然想起，只是一直藏在心底罢了。</p>\n</blockquote>\n<p>插播一则旧闻：</p>\n<blockquote>\n<p>潮子与 asuldb 论 SAM。潮子潮之曰：你的 SAM 没有 A，SM，A 不了。次日，asuldb 遇 SAM 题，得正解。然倍增毙，爆零也。遂叹曰：潮爷奶的准，我的 SAM 就是 A 不了。</p>\n</blockquote>\n<p>经 典 咏 流 传。</p>\n<h3 id=\"Day-10（2020-6-9）\"><a href=\"#Day-10（2020-6-9）\" class=\"headerlink\" title=\"Day -10（2020-6-9）\"></a>Day -10（2020-6-9）</h3><p>我终于通关 Slay the Spire 了！（倒地</p>\n<p><del>为什么我这么菜啊 /kk</del></p>\n<p>用新角色观者打了一发，感觉不知道为什么就是好像很厉害（大雾</p>\n<h3 id=\"Day-0（2020-6-19）\"><a href=\"#Day-0（2020-6-19）\" class=\"headerlink\" title=\"Day 0（2020-6-19）\"></a>Day 0（2020-6-19）</h3><p>中间竟然有连着 9 天没有更新（</p>\n<p>而且连 Wiki 也没有（</p>\n<p>其实是有一天 GitHub 突然 push 不上去了于是懒得搞了于是咕掉了（</p>\n<p>明天就是 Day 1 了 /kk</p>\n<p>大概考完这场省选我就要退役了吧 /kk</p>\n<p>想着要说点什么，想来想去，还是这句话：</p>\n<p>「何も問題は無いようじゃがの～」</p>\n<p><del>最近在看 BUG 之风，看得我拳☆銃☆大☆爆☆発。</del></p>\n<p><del>「そして、オレだけが<ruby>再<rt>リ</rt>起<rt>タ</rt>不<rt>イ</rt>能<rt>ヤ</rt></ruby>しない事を許可しろ！」</del></p>\n<h3 id=\"Day-1（2020-6-20）\"><a href=\"#Day-1（2020-6-20）\" class=\"headerlink\" title=\"Day 1（2020-6-20）\"></a>Day 1（2020-6-20）</h3><p>前一天晚上定了一个五点整的闹钟，结果<del>因为某种神秘的原因</del>提前十分钟就起来了。</p>\n<p>七点几分出的家门，到了机房大概有半多了。进门看到块坐在稳稳的位置上，陶就坐在旁边他自己的位置上。</p>\n<p>跟他们说最近在玩 Slay the Spire，陶表示不知道。于是给他看了一下 PKUWC 的同名题目。</p>\n<p>以前烜写过这道题的题解，说这是 SB 题。可惜我现在还是不会。直接去问他，他表示早就忘了。</p>\n<p>进考场之后也没啥。看他们都在拼命打板子，但是我觉得打了也没用，所以反复确认试题。</p>\n<p>一共三道题，<code>icefire</code>，<code>problem</code> 和 <code>shop</code>，从大样例的数量来看全部都是传统题。</p>\n<p>解压密码一团乱码。</p>\n<p>具体的题意应该迟早会上传到各大 OJ 上，这里就不赘述了。</p>\n<p>一开始看了一个小时 T1 毫无进展，于是去看 T2。</p>\n<p>稍微推了推就推出来一个矩阵的做法，$O(m^{3}\\log n)$，结合暴力可以拿到 60 pts。</p>\n<p>然后再回去看 T1 发现这个东西是单峰的，于是写了个三分套树状数组，$O(n\\log^{2}n)$，60 pts。但实际上因为是三分所以其中一个 $\\log$ 是以 $1.5$ 为底数的，常数会大。可以改成二分，但无论如何都是 60 pts。</p>\n<p>做到这里就已经没时间了，T3 直接输出样例走人。</p>\n<p>出考场和机房中 dalao 讨论题，发现烜 T1 想出了正解但是没有写出来。据他说是线段树，但是说实话我表示怀疑。</p>\n<p>被天下第一的胡块块邀请到了他的家里。现在我写这些东西的时候也是在他家里。</p>\n<p>块说自己在家里经常健身，于是我顺便拜见了一下他的健身器械。</p>\n<p>被块暴力安利了炉石传说。其实我第一次听说炉石传说还是「你必须攻击该具有嘲讽的随从」的来着。</p>\n<p>一个下午就打完了新手教学（</p>\n<p>块「你是我见过的新手教学打得最认真的。」</p>\n<p>算了吧还是 Slay 好玩（</p>\n<h3 id=\"Day-2（2020-6-21）\"><a href=\"#Day-2（2020-6-21）\" class=\"headerlink\" title=\"Day 2（2020-6-21）\"></a>Day 2（2020-6-21）</h3><p>又定了一个五点的闹钟，结果又提前十分钟起来了。</p>\n<p>不到七点就走了，到了机房还没开门。</p>\n<p>重新抽了座位，然而两天都是二号考场。</p>\n<p>瞅一眼压缩包里面，<code>count</code>，<code>transfer</code> 和 <code>tree</code>，传统题。</p>\n<p>……？！<code>count</code>！这一定是一道计数题，看我写个 NTT 板子。</p>\n<p>结果写了半个小时没写出来 /kk</p>\n<p>解压密码和昨天一样是乱码。</p>\n<p>打开一看发现 <code>count</code> 是 T3，生成树题。</p>\n<p>于是三道题来回看了又看，一直在「想到新思路 -&gt; 开始写代码 -&gt; 写到一半发现假了 -&gt; 自闭」这样循环。</p>\n<p>到最后突然发现 T3 可以莫比乌斯反演套矩阵树，然后突然发现自己不会矩阵树。写了半个小时没写出来，弃疗了。</p>\n<p>最终成绩：60+60+0+30+10+30=190。我没了 /kk</p>\n<p>烜「这套题暴力分贼肥啊你怎么回事啊。」</p>\n<p>最后的最后，loli 让我们下午回家，明天开始学文化课。大概这就是我打的最后一场正式的 OI 比赛了吧。</p>\n<p>对了差点忘了说了，昨天听说块没看过 JO5 但是被剧透过，于是带着他看了第一话。</p>\n<p><del>黄金精神，指偷别人钱抢别人行李给别人发好人卡。</del></p>\n<p><del>「めーはもう……めーはもう……めーはもう推しだ！」</del></p>\n<p><del>「大丈夫ですかブチャラティ？」</del></p>\n<h3 id=\"The-End\"><a href=\"#The-End\" class=\"headerlink\" title=\"The End\"></a>The End</h3><blockquote>\n<p>今番良晤，豪兴不浅，</p>\n<p>他日江湖相逢，再当杯酒言欢。</p>\n<p>咱们就此别过。</p>\n<p>江湖路远，各位请一路珍重。</p>\n</blockquote>\n<p><del>虽然是从花花的犇犇里抄来的。</del></p>\n<p>插播一则新闻：</p>\n<blockquote>\n<p>真实成绩：60+60+0+0+10+10=140。看来是 D2T1 整个写炸了，D2T3 莫名其妙丢了 20 pts。</p>\n</blockquote>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2020-07-30T03:12:50.000Z","title":"SpellCardsCollectionSecond","password":null,"_content":"Juan_feng 使用了 AK Ynoi 之术！\n\n效果拔群！\n\n**内含大量图片！（真的很大）**\n\n<!-- more -->\n\n最近想突然写一个 OI 模拟人生。\n\n和慎老师交流之后，确定了「设计一个两名玩家见面之后的决斗方式」这样的总体方针。\n\n最后我们确定了「传统的回合制 RPG」「卡牌对决」这样的两种方案。\n\n然后为了设计招式名称，我很快想到从 Nono 443 设计的丰富的符卡库里面找一些灵感。\n\n突然发现 SpellCardsCollectionSecond 还在更新，于是去玩了一下。版本号 `0b.39`。\n\n### `b0.39` 已实装符卡\n\n#### 寒波「Cold Stream」（寒流）\n\n![](/img/SCCS/寒波0.png)\n\n随便扭扭.jpg\n\n#### 流星「Comet Shower」（彗星之浴）\n\n![](/img/SCCS/流星0.png)\n\n随便扭扭.jpg\n\n#### 月相「Blind Wall」（盲目之壁）\n\n![](/img/SCCS/月相0.png)\n\n小玉随机，且只能看到一半；激光奇数。\n\n随便扭扭.jpg\n\n#### 增幅「Howl Amplify」（怒吼放大）\n\n![](/img/SCCS/增幅0.png)\n\n红弹回音式反弹；蓝弹奇数。\n\n随便扭扭.jpg\n\n#### 把驻「Splash Anchor」（溅射锚击）\n\n![](/img/SCCS/把驻0.png)\n\n锚奇数，回来的时候会有水滴弹，way 数会不断增加。\n\n随便扭扭.jpg\n\n#### 爪痕「染血的狂爪」\n\n![](/img/SCCS/爪痕0.png)\n\n随机 + 有些初见杀的狙。\n\n随便扭扭.jpg\n\n#### 辻风「弹幕尘旋风」\n\n![](/img/SCCS/辻风0.png)\n\n好像 yuke 和梦旧市都玩过这种弹幕？\n\n随便扭扭.jpg\n\n#### 北风「Northern Gust」（北方阵风）\n\n![](/img/SCCS/北风0.png)\n\n随便扭扭.jpg\n\n#### 阳光「Solar Ray Fall」（太阳射线落）\n\n![](/img/SCCS/阳光0.png)\n\n激光打到自机会变成麟弹狙。\n\n诶真好玩.jpg\n\n#### 月日「Miniature Eclipse」（微型日食）\n\n![](/img/SCCS/月日0.png)\n\n露娜本体会把桑尼的激光变成米弹；但是血很少且不会复活所以需要控枪。\n\n~~话说回来那激光也不是完全无缝啊 TAS 大概能躲吧。~~\n\n#### 现像「<ruby>虚　像　投　影<rt>Virtual Projection</rt></ruby>」\n\n![](/img/SCCS/现像0.png)\n\n趁着弹幕虚化，一遍向上冲异变躲紫铳弹。\n\n#### 雷庭「天空中的龙之巢」\n\n![](/img/SCCS/雷庭0.png)\n\n![](/img/SCCS/雷庭1.png)\n\n随便扭扭.jpg\n\n#### 结界「多重捕缚阵」\n\n![](/img/SCCS/结界0.png)\n\n随便扭扭.jpg\n\n#### 祈愿「风祝的祝福」\n\n![](/img/SCCS/祈愿0.png)\n\n有一说一，到后面发弹频率狂暴之后还有点麻烦的。\n\n#### 残响「Reverberate Echo」（反响回声）\n\n![](/img/SCCS/残响0.png)\n\n中玉打到板顶版底反弹出发光点弹，发光中玉，光玉三层。\n\n随便扭扭.jpg\n\n#### 咆哮「Hunting Howls」（猎杀咆哮）\n\n![](/img/SCCS/咆哮0.png)\n\n![](/img/SCCS/咆哮1.png)\n\n扔出两拨人弹，然后把它们变成自机狙的狗弹。\n\n需要引到角落否则很麻烦。\n\n#### 星条「Old Glory」（旧日荣耀）\n\n![](/img/SCCS/星条0.png)\n\n![](/img/SCCS/星条1.png)\n\n美国国旗.jpg\n\n横向的红白激光每个一段时间就会触发一次；被蓝色激光围住的大星弹打到版底会变成小星弹；所有弹幕都在向下移动。\n\n说实话我也不知道怎么躲，随缘吧。\n\n#### 星月「Tiny Satellites」（极小的卫星）\n\n![](/img/SCCS/星月0.png)\n\n整个游戏最无聊的符卡。\n\n#### 魔涡「Deep Mealstrom」（深涡）\n\n![](/img/SCCS/魔涡0.png)\n\n怎么说呢……随便扭扭吧也没啥好说的。\n\n#### 突风「叶团扇 Downburst（爆发）」\n\n![](/img/SCCS/突风0.png)\n\n![](/img/SCCS/突风1.png)\n\n中玉打到版底炸成开花麟弹链，然后麟弹又变成带环小玉自然下落。\n\n旧版本玩过的符卡，用金发孩子的话需要左右大幅度横拉，总之很糟就是了。\n\n#### 离散「<ruby>调　律　搅　乱<rt>Tune Shaker</rt></ruby>」\n\n![](/img/SCCS/离散0.png)\n\n一堆狙加上乱七八糟的随机弹。\n\n随便扭扭.jpg\n\n#### 狱炎「Abyss Prominence」（深渊流行）\n\n![](/img/SCCS/狱炎0.png)\n\n其实我也不知道 Abyss Prominence 该咋翻译。\n\n月球可以消去黑红弹和部分大星弹；必须要借着月球的掩护逆穿黑红弹否则会被封死。\n\n比较典型的看上去简单玩起来难的类型。\n\n#### 「原初之光」\n\n![](/img/SCCS/原初之光0.png)\n\n大毒瘤纯狐 /kk\n\n#### 乾坤「如同两位神明大人所说」\n\n![](/img/SCCS/乾坤0.png)\n\n![](/img/SCCS/乾坤1.png)\n\n青蛙弱诱导弹，蛇 y 轴狙。\n\n我的解法是奇数波往早苗头上引，偶数波等发弹完大力拉上去。\n\n#### 结晶「Fallen Fractal」（坠落分型）\n\n![](/img/SCCS/结晶0.png)\n\n新的 BGM！\n\n……还有新的难度。\n\n#### 日星「Little Supernova」（小小的超新星）\n\n![](/img/SCCS/日星0.png)\n\n研究了一段时间的符卡。\n\n最后我找到的解法就是……版底左右晃。\n\n#### 雷鱼「带电游泳弹」\n\n![](/img/SCCS/雷鱼0.png)\n\n激光靠近你会在你身边生成很密的麟弹，就像放电一样很有意思。\n\n大概绕圈吧。\n\n#### 反击「Interception Charge」（截断蓄力）\n\n![](/img/SCCS/反击0.png)\n\n本质上是捕获自机子弹变成大玉；然而金发孩子主要用激光所以木大！\n\n#### 怪奇「Jevodan（杰沃丹）的野兽」\n\n![](/img/SCCS/怪奇0.png)\n\n「杰沃丹」这个翻译来自于 https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#\n\n影狼会不停地横冲直撞，并撕碎沿路上的人弹。反而是圈越小越容易突破出去。\n\n总之就是尽快钻到人弹圈外就好了。\n\n#### 传说「三角海域之魔」\n\n![](/img/SCCS/传说0.png)\n\n船长和两颗鬼火之间的三角形，如果自机进去会生成白色激光，会封死三角形内全部的区域；锚奇数，打到版边的水滴弹大概是随机吧。\n\n大概只能固定走位。\n\n#### 「经年的憎恶」\n\n![](/img/SCCS/经年的憎恶0.png)\n\n随便扭扭.jpg\n\n#### 秘术「古代传来的神技」\n\n![](/img/SCCS/秘术0.png)\n\n![](/img/SCCS/秘术1.png)\n\n固定 + 狙。\n\n随便扭扭.jpg\n\n#### 神鸟「迦楼罗天翔」\n\n![](/img/SCCS/神鸟0.png)\n\n![](/img/SCCS/神鸟1.png)\n\n大概算是整个游戏第三难的符卡。\n\n绿色的麟弹圈速度很快，上穿一定要果断；然后一边处理麟弹圈一边左右移动躲中玉狙或者看准或弹链的缝。\n\n#### 变动「<ruby>波　纹　偏　移<rt>Ripple Shifter</rt></ruby>」\n\n![](/img/SCCS/变动0.png)\n\n![](/img/SCCS/变动1.png)\n\n![](/img/SCCS/变动2.png)\n\n![](/img/SCCS/变动3.png)\n\n![](/img/SCCS/变动4.png)\n\n![](/img/SCCS/变动5.png)\n\n![](/img/SCCS/变动6.png)\n\n大概算是整个游戏第二难的符卡。\n\n一共三波，循环；每一波都是红蓝弹绕着版面中心旋转，其中红弹逆时针，蓝弹顺时针；比较特殊的是第三波，红蓝弹重叠会在特定位置形成无缝。\n\n最后一张截图就是差点被封死然后击破了。\n\n#### 電中「超高压 Voltecker（伏特克）」\n\n![](/img/SCCS/电中0.png)\n\n![](/img/SCCS/电中1.png)\n\n![](/img/SCCS/电中2.png)\n\n所以说 Voltecker 是个啥玩意（\n\n带核弹撞人 + 扔核弹 + 泛狙到纯随机的闪电。\n\n#### 击沉「Abyss Sinker」（深渊坠沉）\n\n![](/img/SCCS/击沉0.png)\n\n![](/img/SCCS/击沉1.png)\n\n![](/img/SCCS/击沉2.png)\n\n![](/img/SCCS/击沉3.png)\n\n锚本身是固定的，扔出去后会在轨迹上留下发光小玉，收回来的时候回把小玉打碎成水滴弹；下一波锚彻底砸下来之前上一波的水滴弹不会消失。\n\n三波，循环，但其实后两波有点像的。\n\n#### 转移「<ruby>次　元　飞　跃<rt>Parallel Switching</rt></ruby>」\n\n![](/img/SCCS/转移0.png)\n\n![](/img/SCCS/转移1.png)\n\n![](/img/SCCS/转移2.png)\n\n毫无疑问的整个游戏最难符卡。\n\n弹幕本身是无缝的，分红蓝两色，其中有一种颜色的弹幕没有判定（就是半透明的子弹）；如果穿过没有判定的弹链会导致判定状态切换，即之前没有判定的颜色变得有判定，有判定的颜色变得没有判定。\n\n典型的看上去难玩起来更难的类型。\n\n### 后记\n\n如果后面又有更新了的话大概这边也会更新吧。\n","source":"_posts/2020-07-30-spell-cards-collection-second.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2020-07-30 11:12:50\ntitle: SpellCardsCollectionSecond\ntags:\n  - 东方\n  - Nono 443\ncategories:\n  - 颓废\npassword:\n---\nJuan_feng 使用了 AK Ynoi 之术！\n\n效果拔群！\n\n**内含大量图片！（真的很大）**\n\n<!-- more -->\n\n最近想突然写一个 OI 模拟人生。\n\n和慎老师交流之后，确定了「设计一个两名玩家见面之后的决斗方式」这样的总体方针。\n\n最后我们确定了「传统的回合制 RPG」「卡牌对决」这样的两种方案。\n\n然后为了设计招式名称，我很快想到从 Nono 443 设计的丰富的符卡库里面找一些灵感。\n\n突然发现 SpellCardsCollectionSecond 还在更新，于是去玩了一下。版本号 `0b.39`。\n\n### `b0.39` 已实装符卡\n\n#### 寒波「Cold Stream」（寒流）\n\n![](/img/SCCS/寒波0.png)\n\n随便扭扭.jpg\n\n#### 流星「Comet Shower」（彗星之浴）\n\n![](/img/SCCS/流星0.png)\n\n随便扭扭.jpg\n\n#### 月相「Blind Wall」（盲目之壁）\n\n![](/img/SCCS/月相0.png)\n\n小玉随机，且只能看到一半；激光奇数。\n\n随便扭扭.jpg\n\n#### 增幅「Howl Amplify」（怒吼放大）\n\n![](/img/SCCS/增幅0.png)\n\n红弹回音式反弹；蓝弹奇数。\n\n随便扭扭.jpg\n\n#### 把驻「Splash Anchor」（溅射锚击）\n\n![](/img/SCCS/把驻0.png)\n\n锚奇数，回来的时候会有水滴弹，way 数会不断增加。\n\n随便扭扭.jpg\n\n#### 爪痕「染血的狂爪」\n\n![](/img/SCCS/爪痕0.png)\n\n随机 + 有些初见杀的狙。\n\n随便扭扭.jpg\n\n#### 辻风「弹幕尘旋风」\n\n![](/img/SCCS/辻风0.png)\n\n好像 yuke 和梦旧市都玩过这种弹幕？\n\n随便扭扭.jpg\n\n#### 北风「Northern Gust」（北方阵风）\n\n![](/img/SCCS/北风0.png)\n\n随便扭扭.jpg\n\n#### 阳光「Solar Ray Fall」（太阳射线落）\n\n![](/img/SCCS/阳光0.png)\n\n激光打到自机会变成麟弹狙。\n\n诶真好玩.jpg\n\n#### 月日「Miniature Eclipse」（微型日食）\n\n![](/img/SCCS/月日0.png)\n\n露娜本体会把桑尼的激光变成米弹；但是血很少且不会复活所以需要控枪。\n\n~~话说回来那激光也不是完全无缝啊 TAS 大概能躲吧。~~\n\n#### 现像「<ruby>虚　像　投　影<rt>Virtual Projection</rt></ruby>」\n\n![](/img/SCCS/现像0.png)\n\n趁着弹幕虚化，一遍向上冲异变躲紫铳弹。\n\n#### 雷庭「天空中的龙之巢」\n\n![](/img/SCCS/雷庭0.png)\n\n![](/img/SCCS/雷庭1.png)\n\n随便扭扭.jpg\n\n#### 结界「多重捕缚阵」\n\n![](/img/SCCS/结界0.png)\n\n随便扭扭.jpg\n\n#### 祈愿「风祝的祝福」\n\n![](/img/SCCS/祈愿0.png)\n\n有一说一，到后面发弹频率狂暴之后还有点麻烦的。\n\n#### 残响「Reverberate Echo」（反响回声）\n\n![](/img/SCCS/残响0.png)\n\n中玉打到板顶版底反弹出发光点弹，发光中玉，光玉三层。\n\n随便扭扭.jpg\n\n#### 咆哮「Hunting Howls」（猎杀咆哮）\n\n![](/img/SCCS/咆哮0.png)\n\n![](/img/SCCS/咆哮1.png)\n\n扔出两拨人弹，然后把它们变成自机狙的狗弹。\n\n需要引到角落否则很麻烦。\n\n#### 星条「Old Glory」（旧日荣耀）\n\n![](/img/SCCS/星条0.png)\n\n![](/img/SCCS/星条1.png)\n\n美国国旗.jpg\n\n横向的红白激光每个一段时间就会触发一次；被蓝色激光围住的大星弹打到版底会变成小星弹；所有弹幕都在向下移动。\n\n说实话我也不知道怎么躲，随缘吧。\n\n#### 星月「Tiny Satellites」（极小的卫星）\n\n![](/img/SCCS/星月0.png)\n\n整个游戏最无聊的符卡。\n\n#### 魔涡「Deep Mealstrom」（深涡）\n\n![](/img/SCCS/魔涡0.png)\n\n怎么说呢……随便扭扭吧也没啥好说的。\n\n#### 突风「叶团扇 Downburst（爆发）」\n\n![](/img/SCCS/突风0.png)\n\n![](/img/SCCS/突风1.png)\n\n中玉打到版底炸成开花麟弹链，然后麟弹又变成带环小玉自然下落。\n\n旧版本玩过的符卡，用金发孩子的话需要左右大幅度横拉，总之很糟就是了。\n\n#### 离散「<ruby>调　律　搅　乱<rt>Tune Shaker</rt></ruby>」\n\n![](/img/SCCS/离散0.png)\n\n一堆狙加上乱七八糟的随机弹。\n\n随便扭扭.jpg\n\n#### 狱炎「Abyss Prominence」（深渊流行）\n\n![](/img/SCCS/狱炎0.png)\n\n其实我也不知道 Abyss Prominence 该咋翻译。\n\n月球可以消去黑红弹和部分大星弹；必须要借着月球的掩护逆穿黑红弹否则会被封死。\n\n比较典型的看上去简单玩起来难的类型。\n\n#### 「原初之光」\n\n![](/img/SCCS/原初之光0.png)\n\n大毒瘤纯狐 /kk\n\n#### 乾坤「如同两位神明大人所说」\n\n![](/img/SCCS/乾坤0.png)\n\n![](/img/SCCS/乾坤1.png)\n\n青蛙弱诱导弹，蛇 y 轴狙。\n\n我的解法是奇数波往早苗头上引，偶数波等发弹完大力拉上去。\n\n#### 结晶「Fallen Fractal」（坠落分型）\n\n![](/img/SCCS/结晶0.png)\n\n新的 BGM！\n\n……还有新的难度。\n\n#### 日星「Little Supernova」（小小的超新星）\n\n![](/img/SCCS/日星0.png)\n\n研究了一段时间的符卡。\n\n最后我找到的解法就是……版底左右晃。\n\n#### 雷鱼「带电游泳弹」\n\n![](/img/SCCS/雷鱼0.png)\n\n激光靠近你会在你身边生成很密的麟弹，就像放电一样很有意思。\n\n大概绕圈吧。\n\n#### 反击「Interception Charge」（截断蓄力）\n\n![](/img/SCCS/反击0.png)\n\n本质上是捕获自机子弹变成大玉；然而金发孩子主要用激光所以木大！\n\n#### 怪奇「Jevodan（杰沃丹）的野兽」\n\n![](/img/SCCS/怪奇0.png)\n\n「杰沃丹」这个翻译来自于 https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#\n\n影狼会不停地横冲直撞，并撕碎沿路上的人弹。反而是圈越小越容易突破出去。\n\n总之就是尽快钻到人弹圈外就好了。\n\n#### 传说「三角海域之魔」\n\n![](/img/SCCS/传说0.png)\n\n船长和两颗鬼火之间的三角形，如果自机进去会生成白色激光，会封死三角形内全部的区域；锚奇数，打到版边的水滴弹大概是随机吧。\n\n大概只能固定走位。\n\n#### 「经年的憎恶」\n\n![](/img/SCCS/经年的憎恶0.png)\n\n随便扭扭.jpg\n\n#### 秘术「古代传来的神技」\n\n![](/img/SCCS/秘术0.png)\n\n![](/img/SCCS/秘术1.png)\n\n固定 + 狙。\n\n随便扭扭.jpg\n\n#### 神鸟「迦楼罗天翔」\n\n![](/img/SCCS/神鸟0.png)\n\n![](/img/SCCS/神鸟1.png)\n\n大概算是整个游戏第三难的符卡。\n\n绿色的麟弹圈速度很快，上穿一定要果断；然后一边处理麟弹圈一边左右移动躲中玉狙或者看准或弹链的缝。\n\n#### 变动「<ruby>波　纹　偏　移<rt>Ripple Shifter</rt></ruby>」\n\n![](/img/SCCS/变动0.png)\n\n![](/img/SCCS/变动1.png)\n\n![](/img/SCCS/变动2.png)\n\n![](/img/SCCS/变动3.png)\n\n![](/img/SCCS/变动4.png)\n\n![](/img/SCCS/变动5.png)\n\n![](/img/SCCS/变动6.png)\n\n大概算是整个游戏第二难的符卡。\n\n一共三波，循环；每一波都是红蓝弹绕着版面中心旋转，其中红弹逆时针，蓝弹顺时针；比较特殊的是第三波，红蓝弹重叠会在特定位置形成无缝。\n\n最后一张截图就是差点被封死然后击破了。\n\n#### 電中「超高压 Voltecker（伏特克）」\n\n![](/img/SCCS/电中0.png)\n\n![](/img/SCCS/电中1.png)\n\n![](/img/SCCS/电中2.png)\n\n所以说 Voltecker 是个啥玩意（\n\n带核弹撞人 + 扔核弹 + 泛狙到纯随机的闪电。\n\n#### 击沉「Abyss Sinker」（深渊坠沉）\n\n![](/img/SCCS/击沉0.png)\n\n![](/img/SCCS/击沉1.png)\n\n![](/img/SCCS/击沉2.png)\n\n![](/img/SCCS/击沉3.png)\n\n锚本身是固定的，扔出去后会在轨迹上留下发光小玉，收回来的时候回把小玉打碎成水滴弹；下一波锚彻底砸下来之前上一波的水滴弹不会消失。\n\n三波，循环，但其实后两波有点像的。\n\n#### 转移「<ruby>次　元　飞　跃<rt>Parallel Switching</rt></ruby>」\n\n![](/img/SCCS/转移0.png)\n\n![](/img/SCCS/转移1.png)\n\n![](/img/SCCS/转移2.png)\n\n毫无疑问的整个游戏最难符卡。\n\n弹幕本身是无缝的，分红蓝两色，其中有一种颜色的弹幕没有判定（就是半透明的子弹）；如果穿过没有判定的弹链会导致判定状态切换，即之前没有判定的颜色变得有判定，有判定的颜色变得没有判定。\n\n典型的看上去难玩起来更难的类型。\n\n### 后记\n\n如果后面又有更新了的话大概这边也会更新吧。\n","slug":"spell-cards-collection-second","published":1,"updated":"2020-07-30T04:51:57.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhn20086mku900mlhyg0","content":"<p>Juan_feng 使用了 AK Ynoi 之术！</p>\n<p>效果拔群！</p>\n<p><strong>内含大量图片！（真的很大）</strong></p>\n<a id=\"more\"></a>\n<p>最近想突然写一个 OI 模拟人生。</p>\n<p>和慎老师交流之后，确定了「设计一个两名玩家见面之后的决斗方式」这样的总体方针。</p>\n<p>最后我们确定了「传统的回合制 RPG」「卡牌对决」这样的两种方案。</p>\n<p>然后为了设计招式名称，我很快想到从 Nono 443 设计的丰富的符卡库里面找一些灵感。</p>\n<p>突然发现 SpellCardsCollectionSecond 还在更新，于是去玩了一下。版本号 <code>0b.39</code>。</p>\n<h3 id=\"b0-39-已实装符卡\"><a href=\"#b0-39-已实装符卡\" class=\"headerlink\" title=\"b0.39 已实装符卡\"></a><code>b0.39</code> 已实装符卡</h3><h4 id=\"寒波「Cold-Stream」（寒流）\"><a href=\"#寒波「Cold-Stream」（寒流）\" class=\"headerlink\" title=\"寒波「Cold Stream」（寒流）\"></a>寒波「Cold Stream」（寒流）</h4><p><img src=\"/img/SCCS/寒波0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"流星「Comet-Shower」（彗星之浴）\"><a href=\"#流星「Comet-Shower」（彗星之浴）\" class=\"headerlink\" title=\"流星「Comet Shower」（彗星之浴）\"></a>流星「Comet Shower」（彗星之浴）</h4><p><img src=\"/img/SCCS/流星0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"月相「Blind-Wall」（盲目之壁）\"><a href=\"#月相「Blind-Wall」（盲目之壁）\" class=\"headerlink\" title=\"月相「Blind Wall」（盲目之壁）\"></a>月相「Blind Wall」（盲目之壁）</h4><p><img src=\"/img/SCCS/月相0.png\" alt=\"\"></p>\n<p>小玉随机，且只能看到一半；激光奇数。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"增幅「Howl-Amplify」（怒吼放大）\"><a href=\"#增幅「Howl-Amplify」（怒吼放大）\" class=\"headerlink\" title=\"增幅「Howl Amplify」（怒吼放大）\"></a>增幅「Howl Amplify」（怒吼放大）</h4><p><img src=\"/img/SCCS/增幅0.png\" alt=\"\"></p>\n<p>红弹回音式反弹；蓝弹奇数。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"把驻「Splash-Anchor」（溅射锚击）\"><a href=\"#把驻「Splash-Anchor」（溅射锚击）\" class=\"headerlink\" title=\"把驻「Splash Anchor」（溅射锚击）\"></a>把驻「Splash Anchor」（溅射锚击）</h4><p><img src=\"/img/SCCS/把驻0.png\" alt=\"\"></p>\n<p>锚奇数，回来的时候会有水滴弹，way 数会不断增加。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"爪痕「染血的狂爪」\"><a href=\"#爪痕「染血的狂爪」\" class=\"headerlink\" title=\"爪痕「染血的狂爪」\"></a>爪痕「染血的狂爪」</h4><p><img src=\"/img/SCCS/爪痕0.png\" alt=\"\"></p>\n<p>随机 + 有些初见杀的狙。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"辻风「弹幕尘旋风」\"><a href=\"#辻风「弹幕尘旋风」\" class=\"headerlink\" title=\"辻风「弹幕尘旋风」\"></a>辻风「弹幕尘旋风」</h4><p><img src=\"/img/SCCS/辻风0.png\" alt=\"\"></p>\n<p>好像 yuke 和梦旧市都玩过这种弹幕？</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"北风「Northern-Gust」（北方阵风）\"><a href=\"#北风「Northern-Gust」（北方阵风）\" class=\"headerlink\" title=\"北风「Northern Gust」（北方阵风）\"></a>北风「Northern Gust」（北方阵风）</h4><p><img src=\"/img/SCCS/北风0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"阳光「Solar-Ray-Fall」（太阳射线落）\"><a href=\"#阳光「Solar-Ray-Fall」（太阳射线落）\" class=\"headerlink\" title=\"阳光「Solar Ray Fall」（太阳射线落）\"></a>阳光「Solar Ray Fall」（太阳射线落）</h4><p><img src=\"/img/SCCS/阳光0.png\" alt=\"\"></p>\n<p>激光打到自机会变成麟弹狙。</p>\n<p>诶真好玩.jpg</p>\n<h4 id=\"月日「Miniature-Eclipse」（微型日食）\"><a href=\"#月日「Miniature-Eclipse」（微型日食）\" class=\"headerlink\" title=\"月日「Miniature Eclipse」（微型日食）\"></a>月日「Miniature Eclipse」（微型日食）</h4><p><img src=\"/img/SCCS/月日0.png\" alt=\"\"></p>\n<p>露娜本体会把桑尼的激光变成米弹；但是血很少且不会复活所以需要控枪。</p>\n<p><del>话说回来那激光也不是完全无缝啊 TAS 大概能躲吧。</del></p>\n<h4 id=\"现像「虚-像-投-影Virtual-Projection」\"><a href=\"#现像「虚-像-投-影Virtual-Projection」\" class=\"headerlink\" title=\"现像「虚　像　投　影Virtual Projection」\"></a>现像「<ruby>虚　像　投　影<rt>Virtual Projection</rt></ruby>」</h4><p><img src=\"/img/SCCS/现像0.png\" alt=\"\"></p>\n<p>趁着弹幕虚化，一遍向上冲异变躲紫铳弹。</p>\n<h4 id=\"雷庭「天空中的龙之巢」\"><a href=\"#雷庭「天空中的龙之巢」\" class=\"headerlink\" title=\"雷庭「天空中的龙之巢」\"></a>雷庭「天空中的龙之巢」</h4><p><img src=\"/img/SCCS/雷庭0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/雷庭1.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"结界「多重捕缚阵」\"><a href=\"#结界「多重捕缚阵」\" class=\"headerlink\" title=\"结界「多重捕缚阵」\"></a>结界「多重捕缚阵」</h4><p><img src=\"/img/SCCS/结界0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"祈愿「风祝的祝福」\"><a href=\"#祈愿「风祝的祝福」\" class=\"headerlink\" title=\"祈愿「风祝的祝福」\"></a>祈愿「风祝的祝福」</h4><p><img src=\"/img/SCCS/祈愿0.png\" alt=\"\"></p>\n<p>有一说一，到后面发弹频率狂暴之后还有点麻烦的。</p>\n<h4 id=\"残响「Reverberate-Echo」（反响回声）\"><a href=\"#残响「Reverberate-Echo」（反响回声）\" class=\"headerlink\" title=\"残响「Reverberate Echo」（反响回声）\"></a>残响「Reverberate Echo」（反响回声）</h4><p><img src=\"/img/SCCS/残响0.png\" alt=\"\"></p>\n<p>中玉打到板顶版底反弹出发光点弹，发光中玉，光玉三层。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"咆哮「Hunting-Howls」（猎杀咆哮）\"><a href=\"#咆哮「Hunting-Howls」（猎杀咆哮）\" class=\"headerlink\" title=\"咆哮「Hunting Howls」（猎杀咆哮）\"></a>咆哮「Hunting Howls」（猎杀咆哮）</h4><p><img src=\"/img/SCCS/咆哮0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/咆哮1.png\" alt=\"\"></p>\n<p>扔出两拨人弹，然后把它们变成自机狙的狗弹。</p>\n<p>需要引到角落否则很麻烦。</p>\n<h4 id=\"星条「Old-Glory」（旧日荣耀）\"><a href=\"#星条「Old-Glory」（旧日荣耀）\" class=\"headerlink\" title=\"星条「Old Glory」（旧日荣耀）\"></a>星条「Old Glory」（旧日荣耀）</h4><p><img src=\"/img/SCCS/星条0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/星条1.png\" alt=\"\"></p>\n<p>美国国旗.jpg</p>\n<p>横向的红白激光每个一段时间就会触发一次；被蓝色激光围住的大星弹打到版底会变成小星弹；所有弹幕都在向下移动。</p>\n<p>说实话我也不知道怎么躲，随缘吧。</p>\n<h4 id=\"星月「Tiny-Satellites」（极小的卫星）\"><a href=\"#星月「Tiny-Satellites」（极小的卫星）\" class=\"headerlink\" title=\"星月「Tiny Satellites」（极小的卫星）\"></a>星月「Tiny Satellites」（极小的卫星）</h4><p><img src=\"/img/SCCS/星月0.png\" alt=\"\"></p>\n<p>整个游戏最无聊的符卡。</p>\n<h4 id=\"魔涡「Deep-Mealstrom」（深涡）\"><a href=\"#魔涡「Deep-Mealstrom」（深涡）\" class=\"headerlink\" title=\"魔涡「Deep Mealstrom」（深涡）\"></a>魔涡「Deep Mealstrom」（深涡）</h4><p><img src=\"/img/SCCS/魔涡0.png\" alt=\"\"></p>\n<p>怎么说呢……随便扭扭吧也没啥好说的。</p>\n<h4 id=\"突风「叶团扇-Downburst（爆发）」\"><a href=\"#突风「叶团扇-Downburst（爆发）」\" class=\"headerlink\" title=\"突风「叶团扇 Downburst（爆发）」\"></a>突风「叶团扇 Downburst（爆发）」</h4><p><img src=\"/img/SCCS/突风0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/突风1.png\" alt=\"\"></p>\n<p>中玉打到版底炸成开花麟弹链，然后麟弹又变成带环小玉自然下落。</p>\n<p>旧版本玩过的符卡，用金发孩子的话需要左右大幅度横拉，总之很糟就是了。</p>\n<h4 id=\"离散「调-律-搅-乱Tune-Shaker」\"><a href=\"#离散「调-律-搅-乱Tune-Shaker」\" class=\"headerlink\" title=\"离散「调　律　搅　乱Tune Shaker」\"></a>离散「<ruby>调　律　搅　乱<rt>Tune Shaker</rt></ruby>」</h4><p><img src=\"/img/SCCS/离散0.png\" alt=\"\"></p>\n<p>一堆狙加上乱七八糟的随机弹。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"狱炎「Abyss-Prominence」（深渊流行）\"><a href=\"#狱炎「Abyss-Prominence」（深渊流行）\" class=\"headerlink\" title=\"狱炎「Abyss Prominence」（深渊流行）\"></a>狱炎「Abyss Prominence」（深渊流行）</h4><p><img src=\"/img/SCCS/狱炎0.png\" alt=\"\"></p>\n<p>其实我也不知道 Abyss Prominence 该咋翻译。</p>\n<p>月球可以消去黑红弹和部分大星弹；必须要借着月球的掩护逆穿黑红弹否则会被封死。</p>\n<p>比较典型的看上去简单玩起来难的类型。</p>\n<h4 id=\"「原初之光」\"><a href=\"#「原初之光」\" class=\"headerlink\" title=\"「原初之光」\"></a>「原初之光」</h4><p><img src=\"/img/SCCS/原初之光0.png\" alt=\"\"></p>\n<p>大毒瘤纯狐 /kk</p>\n<h4 id=\"乾坤「如同两位神明大人所说」\"><a href=\"#乾坤「如同两位神明大人所说」\" class=\"headerlink\" title=\"乾坤「如同两位神明大人所说」\"></a>乾坤「如同两位神明大人所说」</h4><p><img src=\"/img/SCCS/乾坤0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/乾坤1.png\" alt=\"\"></p>\n<p>青蛙弱诱导弹，蛇 y 轴狙。</p>\n<p>我的解法是奇数波往早苗头上引，偶数波等发弹完大力拉上去。</p>\n<h4 id=\"结晶「Fallen-Fractal」（坠落分型）\"><a href=\"#结晶「Fallen-Fractal」（坠落分型）\" class=\"headerlink\" title=\"结晶「Fallen Fractal」（坠落分型）\"></a>结晶「Fallen Fractal」（坠落分型）</h4><p><img src=\"/img/SCCS/结晶0.png\" alt=\"\"></p>\n<p>新的 BGM！</p>\n<p>……还有新的难度。</p>\n<h4 id=\"日星「Little-Supernova」（小小的超新星）\"><a href=\"#日星「Little-Supernova」（小小的超新星）\" class=\"headerlink\" title=\"日星「Little Supernova」（小小的超新星）\"></a>日星「Little Supernova」（小小的超新星）</h4><p><img src=\"/img/SCCS/日星0.png\" alt=\"\"></p>\n<p>研究了一段时间的符卡。</p>\n<p>最后我找到的解法就是……版底左右晃。</p>\n<h4 id=\"雷鱼「带电游泳弹」\"><a href=\"#雷鱼「带电游泳弹」\" class=\"headerlink\" title=\"雷鱼「带电游泳弹」\"></a>雷鱼「带电游泳弹」</h4><p><img src=\"/img/SCCS/雷鱼0.png\" alt=\"\"></p>\n<p>激光靠近你会在你身边生成很密的麟弹，就像放电一样很有意思。</p>\n<p>大概绕圈吧。</p>\n<h4 id=\"反击「Interception-Charge」（截断蓄力）\"><a href=\"#反击「Interception-Charge」（截断蓄力）\" class=\"headerlink\" title=\"反击「Interception Charge」（截断蓄力）\"></a>反击「Interception Charge」（截断蓄力）</h4><p><img src=\"/img/SCCS/反击0.png\" alt=\"\"></p>\n<p>本质上是捕获自机子弹变成大玉；然而金发孩子主要用激光所以木大！</p>\n<h4 id=\"怪奇「Jevodan（杰沃丹）的野兽」\"><a href=\"#怪奇「Jevodan（杰沃丹）的野兽」\" class=\"headerlink\" title=\"怪奇「Jevodan（杰沃丹）的野兽」\"></a>怪奇「Jevodan（杰沃丹）的野兽」</h4><p><img src=\"/img/SCCS/怪奇0.png\" alt=\"\"></p>\n<p>「杰沃丹」这个翻译来自于 <a href=\"https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#\">https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#</a></p>\n<p>影狼会不停地横冲直撞，并撕碎沿路上的人弹。反而是圈越小越容易突破出去。</p>\n<p>总之就是尽快钻到人弹圈外就好了。</p>\n<h4 id=\"传说「三角海域之魔」\"><a href=\"#传说「三角海域之魔」\" class=\"headerlink\" title=\"传说「三角海域之魔」\"></a>传说「三角海域之魔」</h4><p><img src=\"/img/SCCS/传说0.png\" alt=\"\"></p>\n<p>船长和两颗鬼火之间的三角形，如果自机进去会生成白色激光，会封死三角形内全部的区域；锚奇数，打到版边的水滴弹大概是随机吧。</p>\n<p>大概只能固定走位。</p>\n<h4 id=\"「经年的憎恶」\"><a href=\"#「经年的憎恶」\" class=\"headerlink\" title=\"「经年的憎恶」\"></a>「经年的憎恶」</h4><p><img src=\"/img/SCCS/经年的憎恶0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"秘术「古代传来的神技」\"><a href=\"#秘术「古代传来的神技」\" class=\"headerlink\" title=\"秘术「古代传来的神技」\"></a>秘术「古代传来的神技」</h4><p><img src=\"/img/SCCS/秘术0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/秘术1.png\" alt=\"\"></p>\n<p>固定 + 狙。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"神鸟「迦楼罗天翔」\"><a href=\"#神鸟「迦楼罗天翔」\" class=\"headerlink\" title=\"神鸟「迦楼罗天翔」\"></a>神鸟「迦楼罗天翔」</h4><p><img src=\"/img/SCCS/神鸟0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/神鸟1.png\" alt=\"\"></p>\n<p>大概算是整个游戏第三难的符卡。</p>\n<p>绿色的麟弹圈速度很快，上穿一定要果断；然后一边处理麟弹圈一边左右移动躲中玉狙或者看准或弹链的缝。</p>\n<h4 id=\"变动「波-纹-偏-移Ripple-Shifter」\"><a href=\"#变动「波-纹-偏-移Ripple-Shifter」\" class=\"headerlink\" title=\"变动「波　纹　偏　移Ripple Shifter」\"></a>变动「<ruby>波　纹　偏　移<rt>Ripple Shifter</rt></ruby>」</h4><p><img src=\"/img/SCCS/变动0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动2.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动3.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动4.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动5.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动6.png\" alt=\"\"></p>\n<p>大概算是整个游戏第二难的符卡。</p>\n<p>一共三波，循环；每一波都是红蓝弹绕着版面中心旋转，其中红弹逆时针，蓝弹顺时针；比较特殊的是第三波，红蓝弹重叠会在特定位置形成无缝。</p>\n<p>最后一张截图就是差点被封死然后击破了。</p>\n<h4 id=\"電中「超高压-Voltecker（伏特克）」\"><a href=\"#電中「超高压-Voltecker（伏特克）」\" class=\"headerlink\" title=\"電中「超高压 Voltecker（伏特克）」\"></a>電中「超高压 Voltecker（伏特克）」</h4><p><img src=\"/img/SCCS/电中0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/电中1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/电中2.png\" alt=\"\"></p>\n<p>所以说 Voltecker 是个啥玩意（</p>\n<p>带核弹撞人 + 扔核弹 + 泛狙到纯随机的闪电。</p>\n<h4 id=\"击沉「Abyss-Sinker」（深渊坠沉）\"><a href=\"#击沉「Abyss-Sinker」（深渊坠沉）\" class=\"headerlink\" title=\"击沉「Abyss Sinker」（深渊坠沉）\"></a>击沉「Abyss Sinker」（深渊坠沉）</h4><p><img src=\"/img/SCCS/击沉0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉2.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉3.png\" alt=\"\"></p>\n<p>锚本身是固定的，扔出去后会在轨迹上留下发光小玉，收回来的时候回把小玉打碎成水滴弹；下一波锚彻底砸下来之前上一波的水滴弹不会消失。</p>\n<p>三波，循环，但其实后两波有点像的。</p>\n<h4 id=\"转移「次-元-飞-跃Parallel-Switching」\"><a href=\"#转移「次-元-飞-跃Parallel-Switching」\" class=\"headerlink\" title=\"转移「次　元　飞　跃Parallel Switching」\"></a>转移「<ruby>次　元　飞　跃<rt>Parallel Switching</rt></ruby>」</h4><p><img src=\"/img/SCCS/转移0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/转移1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/转移2.png\" alt=\"\"></p>\n<p>毫无疑问的整个游戏最难符卡。</p>\n<p>弹幕本身是无缝的，分红蓝两色，其中有一种颜色的弹幕没有判定（就是半透明的子弹）；如果穿过没有判定的弹链会导致判定状态切换，即之前没有判定的颜色变得有判定，有判定的颜色变得没有判定。</p>\n<p>典型的看上去难玩起来更难的类型。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>如果后面又有更新了的话大概这边也会更新吧。</p>\n","site":{"data":{}},"excerpt":"<p>Juan_feng 使用了 AK Ynoi 之术！</p>\n<p>效果拔群！</p>\n<p><strong>内含大量图片！（真的很大）</strong></p>","more":"<p>最近想突然写一个 OI 模拟人生。</p>\n<p>和慎老师交流之后，确定了「设计一个两名玩家见面之后的决斗方式」这样的总体方针。</p>\n<p>最后我们确定了「传统的回合制 RPG」「卡牌对决」这样的两种方案。</p>\n<p>然后为了设计招式名称，我很快想到从 Nono 443 设计的丰富的符卡库里面找一些灵感。</p>\n<p>突然发现 SpellCardsCollectionSecond 还在更新，于是去玩了一下。版本号 <code>0b.39</code>。</p>\n<h3 id=\"b0-39-已实装符卡\"><a href=\"#b0-39-已实装符卡\" class=\"headerlink\" title=\"b0.39 已实装符卡\"></a><code>b0.39</code> 已实装符卡</h3><h4 id=\"寒波「Cold-Stream」（寒流）\"><a href=\"#寒波「Cold-Stream」（寒流）\" class=\"headerlink\" title=\"寒波「Cold Stream」（寒流）\"></a>寒波「Cold Stream」（寒流）</h4><p><img src=\"/img/SCCS/寒波0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"流星「Comet-Shower」（彗星之浴）\"><a href=\"#流星「Comet-Shower」（彗星之浴）\" class=\"headerlink\" title=\"流星「Comet Shower」（彗星之浴）\"></a>流星「Comet Shower」（彗星之浴）</h4><p><img src=\"/img/SCCS/流星0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"月相「Blind-Wall」（盲目之壁）\"><a href=\"#月相「Blind-Wall」（盲目之壁）\" class=\"headerlink\" title=\"月相「Blind Wall」（盲目之壁）\"></a>月相「Blind Wall」（盲目之壁）</h4><p><img src=\"/img/SCCS/月相0.png\" alt=\"\"></p>\n<p>小玉随机，且只能看到一半；激光奇数。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"增幅「Howl-Amplify」（怒吼放大）\"><a href=\"#增幅「Howl-Amplify」（怒吼放大）\" class=\"headerlink\" title=\"增幅「Howl Amplify」（怒吼放大）\"></a>增幅「Howl Amplify」（怒吼放大）</h4><p><img src=\"/img/SCCS/增幅0.png\" alt=\"\"></p>\n<p>红弹回音式反弹；蓝弹奇数。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"把驻「Splash-Anchor」（溅射锚击）\"><a href=\"#把驻「Splash-Anchor」（溅射锚击）\" class=\"headerlink\" title=\"把驻「Splash Anchor」（溅射锚击）\"></a>把驻「Splash Anchor」（溅射锚击）</h4><p><img src=\"/img/SCCS/把驻0.png\" alt=\"\"></p>\n<p>锚奇数，回来的时候会有水滴弹，way 数会不断增加。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"爪痕「染血的狂爪」\"><a href=\"#爪痕「染血的狂爪」\" class=\"headerlink\" title=\"爪痕「染血的狂爪」\"></a>爪痕「染血的狂爪」</h4><p><img src=\"/img/SCCS/爪痕0.png\" alt=\"\"></p>\n<p>随机 + 有些初见杀的狙。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"辻风「弹幕尘旋风」\"><a href=\"#辻风「弹幕尘旋风」\" class=\"headerlink\" title=\"辻风「弹幕尘旋风」\"></a>辻风「弹幕尘旋风」</h4><p><img src=\"/img/SCCS/辻风0.png\" alt=\"\"></p>\n<p>好像 yuke 和梦旧市都玩过这种弹幕？</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"北风「Northern-Gust」（北方阵风）\"><a href=\"#北风「Northern-Gust」（北方阵风）\" class=\"headerlink\" title=\"北风「Northern Gust」（北方阵风）\"></a>北风「Northern Gust」（北方阵风）</h4><p><img src=\"/img/SCCS/北风0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"阳光「Solar-Ray-Fall」（太阳射线落）\"><a href=\"#阳光「Solar-Ray-Fall」（太阳射线落）\" class=\"headerlink\" title=\"阳光「Solar Ray Fall」（太阳射线落）\"></a>阳光「Solar Ray Fall」（太阳射线落）</h4><p><img src=\"/img/SCCS/阳光0.png\" alt=\"\"></p>\n<p>激光打到自机会变成麟弹狙。</p>\n<p>诶真好玩.jpg</p>\n<h4 id=\"月日「Miniature-Eclipse」（微型日食）\"><a href=\"#月日「Miniature-Eclipse」（微型日食）\" class=\"headerlink\" title=\"月日「Miniature Eclipse」（微型日食）\"></a>月日「Miniature Eclipse」（微型日食）</h4><p><img src=\"/img/SCCS/月日0.png\" alt=\"\"></p>\n<p>露娜本体会把桑尼的激光变成米弹；但是血很少且不会复活所以需要控枪。</p>\n<p><del>话说回来那激光也不是完全无缝啊 TAS 大概能躲吧。</del></p>\n<h4 id=\"现像「虚-像-投-影Virtual-Projection」\"><a href=\"#现像「虚-像-投-影Virtual-Projection」\" class=\"headerlink\" title=\"现像「虚　像　投　影Virtual Projection」\"></a>现像「<ruby>虚　像　投　影<rt>Virtual Projection</rt></ruby>」</h4><p><img src=\"/img/SCCS/现像0.png\" alt=\"\"></p>\n<p>趁着弹幕虚化，一遍向上冲异变躲紫铳弹。</p>\n<h4 id=\"雷庭「天空中的龙之巢」\"><a href=\"#雷庭「天空中的龙之巢」\" class=\"headerlink\" title=\"雷庭「天空中的龙之巢」\"></a>雷庭「天空中的龙之巢」</h4><p><img src=\"/img/SCCS/雷庭0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/雷庭1.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"结界「多重捕缚阵」\"><a href=\"#结界「多重捕缚阵」\" class=\"headerlink\" title=\"结界「多重捕缚阵」\"></a>结界「多重捕缚阵」</h4><p><img src=\"/img/SCCS/结界0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"祈愿「风祝的祝福」\"><a href=\"#祈愿「风祝的祝福」\" class=\"headerlink\" title=\"祈愿「风祝的祝福」\"></a>祈愿「风祝的祝福」</h4><p><img src=\"/img/SCCS/祈愿0.png\" alt=\"\"></p>\n<p>有一说一，到后面发弹频率狂暴之后还有点麻烦的。</p>\n<h4 id=\"残响「Reverberate-Echo」（反响回声）\"><a href=\"#残响「Reverberate-Echo」（反响回声）\" class=\"headerlink\" title=\"残响「Reverberate Echo」（反响回声）\"></a>残响「Reverberate Echo」（反响回声）</h4><p><img src=\"/img/SCCS/残响0.png\" alt=\"\"></p>\n<p>中玉打到板顶版底反弹出发光点弹，发光中玉，光玉三层。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"咆哮「Hunting-Howls」（猎杀咆哮）\"><a href=\"#咆哮「Hunting-Howls」（猎杀咆哮）\" class=\"headerlink\" title=\"咆哮「Hunting Howls」（猎杀咆哮）\"></a>咆哮「Hunting Howls」（猎杀咆哮）</h4><p><img src=\"/img/SCCS/咆哮0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/咆哮1.png\" alt=\"\"></p>\n<p>扔出两拨人弹，然后把它们变成自机狙的狗弹。</p>\n<p>需要引到角落否则很麻烦。</p>\n<h4 id=\"星条「Old-Glory」（旧日荣耀）\"><a href=\"#星条「Old-Glory」（旧日荣耀）\" class=\"headerlink\" title=\"星条「Old Glory」（旧日荣耀）\"></a>星条「Old Glory」（旧日荣耀）</h4><p><img src=\"/img/SCCS/星条0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/星条1.png\" alt=\"\"></p>\n<p>美国国旗.jpg</p>\n<p>横向的红白激光每个一段时间就会触发一次；被蓝色激光围住的大星弹打到版底会变成小星弹；所有弹幕都在向下移动。</p>\n<p>说实话我也不知道怎么躲，随缘吧。</p>\n<h4 id=\"星月「Tiny-Satellites」（极小的卫星）\"><a href=\"#星月「Tiny-Satellites」（极小的卫星）\" class=\"headerlink\" title=\"星月「Tiny Satellites」（极小的卫星）\"></a>星月「Tiny Satellites」（极小的卫星）</h4><p><img src=\"/img/SCCS/星月0.png\" alt=\"\"></p>\n<p>整个游戏最无聊的符卡。</p>\n<h4 id=\"魔涡「Deep-Mealstrom」（深涡）\"><a href=\"#魔涡「Deep-Mealstrom」（深涡）\" class=\"headerlink\" title=\"魔涡「Deep Mealstrom」（深涡）\"></a>魔涡「Deep Mealstrom」（深涡）</h4><p><img src=\"/img/SCCS/魔涡0.png\" alt=\"\"></p>\n<p>怎么说呢……随便扭扭吧也没啥好说的。</p>\n<h4 id=\"突风「叶团扇-Downburst（爆发）」\"><a href=\"#突风「叶团扇-Downburst（爆发）」\" class=\"headerlink\" title=\"突风「叶团扇 Downburst（爆发）」\"></a>突风「叶团扇 Downburst（爆发）」</h4><p><img src=\"/img/SCCS/突风0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/突风1.png\" alt=\"\"></p>\n<p>中玉打到版底炸成开花麟弹链，然后麟弹又变成带环小玉自然下落。</p>\n<p>旧版本玩过的符卡，用金发孩子的话需要左右大幅度横拉，总之很糟就是了。</p>\n<h4 id=\"离散「调-律-搅-乱Tune-Shaker」\"><a href=\"#离散「调-律-搅-乱Tune-Shaker」\" class=\"headerlink\" title=\"离散「调　律　搅　乱Tune Shaker」\"></a>离散「<ruby>调　律　搅　乱<rt>Tune Shaker</rt></ruby>」</h4><p><img src=\"/img/SCCS/离散0.png\" alt=\"\"></p>\n<p>一堆狙加上乱七八糟的随机弹。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"狱炎「Abyss-Prominence」（深渊流行）\"><a href=\"#狱炎「Abyss-Prominence」（深渊流行）\" class=\"headerlink\" title=\"狱炎「Abyss Prominence」（深渊流行）\"></a>狱炎「Abyss Prominence」（深渊流行）</h4><p><img src=\"/img/SCCS/狱炎0.png\" alt=\"\"></p>\n<p>其实我也不知道 Abyss Prominence 该咋翻译。</p>\n<p>月球可以消去黑红弹和部分大星弹；必须要借着月球的掩护逆穿黑红弹否则会被封死。</p>\n<p>比较典型的看上去简单玩起来难的类型。</p>\n<h4 id=\"「原初之光」\"><a href=\"#「原初之光」\" class=\"headerlink\" title=\"「原初之光」\"></a>「原初之光」</h4><p><img src=\"/img/SCCS/原初之光0.png\" alt=\"\"></p>\n<p>大毒瘤纯狐 /kk</p>\n<h4 id=\"乾坤「如同两位神明大人所说」\"><a href=\"#乾坤「如同两位神明大人所说」\" class=\"headerlink\" title=\"乾坤「如同两位神明大人所说」\"></a>乾坤「如同两位神明大人所说」</h4><p><img src=\"/img/SCCS/乾坤0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/乾坤1.png\" alt=\"\"></p>\n<p>青蛙弱诱导弹，蛇 y 轴狙。</p>\n<p>我的解法是奇数波往早苗头上引，偶数波等发弹完大力拉上去。</p>\n<h4 id=\"结晶「Fallen-Fractal」（坠落分型）\"><a href=\"#结晶「Fallen-Fractal」（坠落分型）\" class=\"headerlink\" title=\"结晶「Fallen Fractal」（坠落分型）\"></a>结晶「Fallen Fractal」（坠落分型）</h4><p><img src=\"/img/SCCS/结晶0.png\" alt=\"\"></p>\n<p>新的 BGM！</p>\n<p>……还有新的难度。</p>\n<h4 id=\"日星「Little-Supernova」（小小的超新星）\"><a href=\"#日星「Little-Supernova」（小小的超新星）\" class=\"headerlink\" title=\"日星「Little Supernova」（小小的超新星）\"></a>日星「Little Supernova」（小小的超新星）</h4><p><img src=\"/img/SCCS/日星0.png\" alt=\"\"></p>\n<p>研究了一段时间的符卡。</p>\n<p>最后我找到的解法就是……版底左右晃。</p>\n<h4 id=\"雷鱼「带电游泳弹」\"><a href=\"#雷鱼「带电游泳弹」\" class=\"headerlink\" title=\"雷鱼「带电游泳弹」\"></a>雷鱼「带电游泳弹」</h4><p><img src=\"/img/SCCS/雷鱼0.png\" alt=\"\"></p>\n<p>激光靠近你会在你身边生成很密的麟弹，就像放电一样很有意思。</p>\n<p>大概绕圈吧。</p>\n<h4 id=\"反击「Interception-Charge」（截断蓄力）\"><a href=\"#反击「Interception-Charge」（截断蓄力）\" class=\"headerlink\" title=\"反击「Interception Charge」（截断蓄力）\"></a>反击「Interception Charge」（截断蓄力）</h4><p><img src=\"/img/SCCS/反击0.png\" alt=\"\"></p>\n<p>本质上是捕获自机子弹变成大玉；然而金发孩子主要用激光所以木大！</p>\n<h4 id=\"怪奇「Jevodan（杰沃丹）的野兽」\"><a href=\"#怪奇「Jevodan（杰沃丹）的野兽」\" class=\"headerlink\" title=\"怪奇「Jevodan（杰沃丹）的野兽」\"></a>怪奇「Jevodan（杰沃丹）的野兽」</h4><p><img src=\"/img/SCCS/怪奇0.png\" alt=\"\"></p>\n<p>「杰沃丹」这个翻译来自于 <a href=\"https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#\">https://zh.moegirl.org.cn/%E6%A2%B5%E8%92%82%E5%86%88%E5%A5%87%E8%BF%B9%E8%B0%83%E6%9F%A5%E5%AE%98#</a></p>\n<p>影狼会不停地横冲直撞，并撕碎沿路上的人弹。反而是圈越小越容易突破出去。</p>\n<p>总之就是尽快钻到人弹圈外就好了。</p>\n<h4 id=\"传说「三角海域之魔」\"><a href=\"#传说「三角海域之魔」\" class=\"headerlink\" title=\"传说「三角海域之魔」\"></a>传说「三角海域之魔」</h4><p><img src=\"/img/SCCS/传说0.png\" alt=\"\"></p>\n<p>船长和两颗鬼火之间的三角形，如果自机进去会生成白色激光，会封死三角形内全部的区域；锚奇数，打到版边的水滴弹大概是随机吧。</p>\n<p>大概只能固定走位。</p>\n<h4 id=\"「经年的憎恶」\"><a href=\"#「经年的憎恶」\" class=\"headerlink\" title=\"「经年的憎恶」\"></a>「经年的憎恶」</h4><p><img src=\"/img/SCCS/经年的憎恶0.png\" alt=\"\"></p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"秘术「古代传来的神技」\"><a href=\"#秘术「古代传来的神技」\" class=\"headerlink\" title=\"秘术「古代传来的神技」\"></a>秘术「古代传来的神技」</h4><p><img src=\"/img/SCCS/秘术0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/秘术1.png\" alt=\"\"></p>\n<p>固定 + 狙。</p>\n<p>随便扭扭.jpg</p>\n<h4 id=\"神鸟「迦楼罗天翔」\"><a href=\"#神鸟「迦楼罗天翔」\" class=\"headerlink\" title=\"神鸟「迦楼罗天翔」\"></a>神鸟「迦楼罗天翔」</h4><p><img src=\"/img/SCCS/神鸟0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/神鸟1.png\" alt=\"\"></p>\n<p>大概算是整个游戏第三难的符卡。</p>\n<p>绿色的麟弹圈速度很快，上穿一定要果断；然后一边处理麟弹圈一边左右移动躲中玉狙或者看准或弹链的缝。</p>\n<h4 id=\"变动「波-纹-偏-移Ripple-Shifter」\"><a href=\"#变动「波-纹-偏-移Ripple-Shifter」\" class=\"headerlink\" title=\"变动「波　纹　偏　移Ripple Shifter」\"></a>变动「<ruby>波　纹　偏　移<rt>Ripple Shifter</rt></ruby>」</h4><p><img src=\"/img/SCCS/变动0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动2.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动3.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动4.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动5.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/变动6.png\" alt=\"\"></p>\n<p>大概算是整个游戏第二难的符卡。</p>\n<p>一共三波，循环；每一波都是红蓝弹绕着版面中心旋转，其中红弹逆时针，蓝弹顺时针；比较特殊的是第三波，红蓝弹重叠会在特定位置形成无缝。</p>\n<p>最后一张截图就是差点被封死然后击破了。</p>\n<h4 id=\"電中「超高压-Voltecker（伏特克）」\"><a href=\"#電中「超高压-Voltecker（伏特克）」\" class=\"headerlink\" title=\"電中「超高压 Voltecker（伏特克）」\"></a>電中「超高压 Voltecker（伏特克）」</h4><p><img src=\"/img/SCCS/电中0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/电中1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/电中2.png\" alt=\"\"></p>\n<p>所以说 Voltecker 是个啥玩意（</p>\n<p>带核弹撞人 + 扔核弹 + 泛狙到纯随机的闪电。</p>\n<h4 id=\"击沉「Abyss-Sinker」（深渊坠沉）\"><a href=\"#击沉「Abyss-Sinker」（深渊坠沉）\" class=\"headerlink\" title=\"击沉「Abyss Sinker」（深渊坠沉）\"></a>击沉「Abyss Sinker」（深渊坠沉）</h4><p><img src=\"/img/SCCS/击沉0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉2.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/击沉3.png\" alt=\"\"></p>\n<p>锚本身是固定的，扔出去后会在轨迹上留下发光小玉，收回来的时候回把小玉打碎成水滴弹；下一波锚彻底砸下来之前上一波的水滴弹不会消失。</p>\n<p>三波，循环，但其实后两波有点像的。</p>\n<h4 id=\"转移「次-元-飞-跃Parallel-Switching」\"><a href=\"#转移「次-元-飞-跃Parallel-Switching」\" class=\"headerlink\" title=\"转移「次　元　飞　跃Parallel Switching」\"></a>转移「<ruby>次　元　飞　跃<rt>Parallel Switching</rt></ruby>」</h4><p><img src=\"/img/SCCS/转移0.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/转移1.png\" alt=\"\"></p>\n<p><img src=\"/img/SCCS/转移2.png\" alt=\"\"></p>\n<p>毫无疑问的整个游戏最难符卡。</p>\n<p>弹幕本身是无缝的，分红蓝两色，其中有一种颜色的弹幕没有判定（就是半透明的子弹）；如果穿过没有判定的弹链会导致判定状态切换，即之前没有判定的颜色变得有判定，有判定的颜色变得没有判定。</p>\n<p>典型的看上去难玩起来更难的类型。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>如果后面又有更新了的话大概这边也会更新吧。</p>"},{"title":"一些乱七八糟的数论","date":"2018-11-29T06:41:17.000Z","mathjax":true,"_content":"最近在洛谷日报的待审核列表里翻到了杜教筛的相关内容，打算连着之前的卷积反演啥的一起复习一下。\n\n~~抄袭来源~~参考文献：\n\n- [铃悬的数学小讲堂——狄利克雷卷积与莫比乌斯反演](https://lx-2003.blog.luogu.org/mobius-inversion)\n- [浅谈杜教筛](https://www.luogu.org/blog/54745/dls-tql)\n- [铃悬的数学小讲堂——杜教筛](https://lx-2003.blog.luogu.org/dujiao-sieve)\n\n<!-- more -->\n\n# 数论函数\n\n## 定义与相关性质\n\n数论函数就是定义域为$\\mathbb{N}^{+}$的函数。\n\n两个数论函数相加，就是简单地把函数值相加。\n\n$$(f+g)(n)=f(n)+g(n)$$\n\n数乘也是类似的。\n\n$$(\\alpha f)(n)=\\alpha f(n)$$\n\n点积也是类似的。\n\n$$(f\\cdot g)(n)=f(n)g(n)$$\n\n~~好像没啥用。~~\n\n在数论函数相关的运算中，一个非常重要的运算是狄利克雷卷积。两个数论函数的狄利克雷卷积是这样定义的：\n\n$$(f\\times g)(n)=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})$$\n\n或者说：\n\n$$(f\\times g)(n)=\\sum\\limits_{ij=n}f(i)g(j)$$\n\n它具有以下的一些性质：\n\n交换律，即$f\\times g=g\\times f$。\n\n这很明显。\n\n结合律，即$(f\\times g)\\times h=f\\times(g\\times h)$。\n\n$$\\begin{aligned}\n((f\\times g)\\times h)(n)&=\\sum\\limits_{ij=n}(\\sum\\limits_{kl=i}f(k)g(l))h(j)\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}$$\n\n$$\\begin{aligned}\n(f\\times(g\\times h))(n)&=\\sum\\limits_{ij=n}f(i)(\\sum\\limits_{kl=j}g(k)h(l))\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}$$\n\n分配率，即$(f+g)\\times h=f\\times h+g\\times h$。\n\n$$\\begin{aligned}\n((f+g)\\times h)(n)&=\\sum\\limits_{ij=n}(f+g)(i)h(j)\\\\\n&=\\sum\\limits_{ij=n}f(i)h(j)+g(i)h(j)\\\\\n&=(f\\times h)(n)+(g\\times h)(n)\n\\end{aligned}$$\n\n单位元为$\\epsilon(n)=[n=1]$，$f\\times\\epsilon =f$。\n\n这也很明显。\n\n对于任意一个满足$f(1)\\neq 0$的函数$f$，都存在唯一的一个函数$g$使得$f\\times g=\\epsilon$。这时我们称$g$是$f$的逆。\n\n我们可以这样定义一个函数的逆：\n\n$$g(n)=\\cfrac{\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})}{f(1)}$$\n\n这样我们就有\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=f(1)g(n)+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)\n\\end{aligned}$$\n\n## 积性函数与完全积性函数\n\n如果一个数论函数$f$满足\n\n$$\\forall x,y\\in\\mathbb{N}^{+}\\wedge x\\perp y\\;\\;f(xy)=f(x)f(y)$$\n\n我们就说$f$是一个积性函数。\n\n特别的，如果上式去掉$x\\perp y$仍成立，则称$f$是一个完全积性函数。\n\n很明显地，任意一个积性函数$f$一定有$f(1)=1$，这样才能有$f(1\\times n)=f(1)\\times f(n)=f(n)$。\n\n常见的完全积性函数有$\\epsilon,id^{k}$。$\\epsilon$在上文已经提到过。$id^{k}(n)=n^k$。这两个函数的完全积性十分明显。\n\n常见的积性函数有$\\varphi,d,\\sigma$。$\\varphi(n)$的值等于小于等于$n$且与$n$互质的正整数的数量。$d(n)$和$\\sigma(n)$的值分别等于$n$的约数个数和约数和。\n\n关于$\\varphi$的积性，我并不会证（\n\n我们来分析$d$的积性。首先，根据唯一分解定理，$n$的每个因数都可以唯一地分解成$n$所有质因子的非负整数次幂乘积。不妨设\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n其中$p_{i}$都是质数，所有$r_{i}$都是正整数。对于每一个$p_{i}$，它的指数有$(r_{i}+1)$种取值，因而我们有\n\n$$d(n)=\\prod\\limits_{i=1}^{N}(r_{i}+1)$$\n\n我们再假设有一个$m$，且\n\n$$m=\\prod\\limits_{i=1}^{M}q_{i}^{s_{i}}$$\n\n如果说$n\\perp m$，肯定有\n\n$$\\forall i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z}\\;\\;p_{i}\\neq q_{j}$$\n\n于是我们就有\n\n$$nm=(\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}})(\\prod\\limits_{j=1}^{M}q_{j}^{s_{j}})$$\n\n$$\\begin{aligned}\nd(nm)&=(\\prod\\limits_{i=1}^{N}(r_{i}+1))(\\prod\\limits_{j=1}^{M}(s_{j}+1))\\\\\n&=d(n)d(m)\n\\end{aligned}$$\n\n不妨再反过来考虑。如果说$n\\not\\perp m$，那么一定存在一对$(i,j)(i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z})$，使得$p_{i}=q_{j}$。那么$d(n)d(m)$就会有一个因子是$(r_{i}+1)(s_{j}+1)=r_{i}s_{j}+r_{i}+s_{j}+1$。但是仔细思考我们会发现，$d(nm)$中对应的项应该是$r_{i}+s_{j}+1$。因而此时$d(nm)\\neq d(n)d(m)$。\n\n我们再来分析$\\sigma$的积性。还是设\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n其中$p_{i}$都是质数，所有$r_{i}$都是正整数。与$d$不同的是，现在我们是要用$p_{i}$乘出$n$的因数，$p_{i}$在此过程中可以产生的贡献为$p_{i}^x(x\\in [0,r_{i}]\\cap\\mathbb{Z})$。我们可以把这想象成一个$N$个数组，第$i$个数组的长度为$r_{i}+1$，第$j$个元素为$p_{i}^{j-1}$。现在我们每次从每个数组里选出恰好一个元素相乘，要求所有方案的乘积之和。我们知道，这个问题的答案就是\n\n$$\\prod\\limits_{i=1}^{N}\\sum\\limits_{j=0}^{r_{i}}p_{i}^{j}$$\n\n这正是$\\sigma(n)$的值。\n\n接下来的过程就与上文证明$d$的积性如出一辙了，在此不再重复。\n\n现在我们来分析，两个积性函数的卷积是否也是积性函数。~~虽然说都这么问了肯定就是了。~~\n\n$$\\begin{aligned}\n(f\\times g)(n)(f\\times g)(m)&=(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(i)g(\\cfrac{n}{i})f(j)g(\\cfrac{m}{j})\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(ij)g(\\cfrac{nm}{ij})\\\\\n&=\\sum\\limits_{k\\mid nm}f(k)g(\\cfrac{nm}{k})\\\\\n&=(f\\times g)(nm)\n\\end{aligned}$$\n\n关于上面的第四个等号。时刻注意$n\\perp m$，在这种前提下，我们枚举到的$i$和$j$一定也是互质的，那么$ij$的所有值一定是互不相同的。这从$d(nm)=d(n)d(m)$这一等式中也能看出。\n\n再接下来，我们来分析一下一个积性函数的逆是否也是积性函数。\n\n设有一个积性函数$f$，它的逆是$g$。\n\n当$nm=1$时，$g(1)=1$。\n\n当$nm>1$时，我们假设对于任意$n^{\\prime}m^{\\prime}<nm$，都有$g(n^{\\prime}m^{\\prime})=g(n^{\\prime})g(m^{\\prime})$。此时\n\n$$\\begin{aligned}\ng(nm)&=-\\sum\\limits_{k\\mid nm,k\\neq 1}f(k)g(\\cfrac{nm}{k})\\\\\n&=-\\sum\\limits_{i\\mid n,j\\mid m,ij\\neq 1}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-\\sum\\limits_{i\\mid n,j\\mid m}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=g(n)g(m)-\\epsilon(n)\\epsilon(m)\\\\\n&=g(n)g(m)\n\\end{aligned}$$\n\n~~其实上面这些全都是抄来的（~~\n\n# 莫比乌斯反演\n\n## 正向反演\n\n定义$\\mu$为$1$的逆。也就是说，$\\mu\\times 1=\\epsilon$。\n\n如果您看过其他的一些关于莫比乌斯反演的学习笔记的话，您可能会看到如下的定义：\n\n> 首先地，$\\mu(1)=1$。当$n>1$时，如果$n$的所有质因子互不相同，设其有$k$个质因子，那么$\\mu(n)=(-1)^{k}$。否则，$\\mu(n)=0$。\n\n那么，这两种定义等价吗？\n\n考虑到$\\mu$是一个积性函数，对于任意一个$n>1$，如果我们把它分解成\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n我们就有\n\n$$\\mu(n)=\\prod\\limits_{i=1}^{N}\\mu(p_{i}^{r_{i}})$$\n\n因此，确定一个积性函数的函数值的关键在于确定其在质数的非负整数次幂上的取值。\n\n设有一个质数$p$。不难发现\n\n$$\\mu(p)=-\\mu(1)=-1$$\n\n$$\\mu(p^{2})=-\\mu(1)-\\mu(p)=-1+1=0$$\n\n$$\\mu(p^{3})=-\\mu(1)-\\mu(p)-\\mu(p^{2})=-1+1+0=0$$\n\n$$\\vdots$$\n\n至此，不难看出上文给出的两种定义是等价的。\n\n那么这个东西有什么用呢？\n\n我们设\n\n$$F(n)=\\sum\\limits_{i\\mid n}f(i)$$\n\n或者等价地说，$F=f\\times 1$。我们可以得到\n\n$$\\begin{aligned}\nF&=f\\times 1\\\\\nF\\times\\mu&=f\\times 1\\times\\mu\\\\\nF\\times\\mu&=f\n\\end{aligned}$$\n\n像这样，如果说$F$相对好求，而$f$相对难求，我们就可以通过上式来减小我们求解$f$的难度。具体地说\n\n$$f(n)=\\sum\\limits_{i\\mid n}F(i)\\mu(\\cfrac{n}{i})$$\n\n## 反向反演\n\n有些时候我们还需要用到像下面这样反过来的莫比乌斯反演\n\n$$F(n)=\\sum\\limits_{n\\mid d}f(d)⇔f(n)=\\sum\\limits_{n\\mid d}F(d)\\mu(\\cfrac{d}{n})$$\n\n我们可以定义一种新的运算\n\n$$(f\\otimes g)(n)=\\sum\\limits_{n\\mid d}f(d)g(\\cfrac{d}{n})$$\n\n我们不难证明出它具有结合律。具体过程与上文证明狄利克雷卷积的结合律的过程基本重复。那么我们就有\n\n$$F=f\\otimes 1⇔F\\otimes\\mu=f$$\n\n于是就有了上面的反向反演。\n\n> Updated on 2018-12-03\n>\n> 例题……还是算了吧（\n>\n> 发现反演常用的套路都忘的差不多了，还是别丢人了（\n\n# 杜教筛\n\n## 实现与模板题\n\n接下来才是主要内容。\n\n现在，我们要求一个积性函数的前$n$项和。$n\\leqslant 10^{10}$。\n\n我们定义\n\n$$S(n)=\\sum\\limits_{i=1}^{n}f(i)$$\n\n再拿来一个积性函数$g$，然后把它与$f$卷积并求前缀和。\n\n$$\\begin{aligned}\n\\sum_{i=1}^{n}(f\\times g)(i)&=\\sum_{i=1}^{n}\\sum_{j\\mid i}f(j)g(\\cfrac{i}{j})\\\\\n&=\\sum_{i=1}^{n}g(i)\\sum_{j=1}^{\\lfloor\\frac{n}{i}\\rfloor}f(j)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}$$\n\n然而我的语文实在是太菜了，大概说也说不明白，自行理解吧（\n\n因为$g$也是积性函数，有$g(1)=1$，所以\n\n$$\\begin{aligned}\nS(n)&=g(1)S(n)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\\\\\n&=\\sum_{i=1}^{n}(f\\times g)(i)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}$$\n\n就是说从第一项开始的前缀和减去从第二项开始的前缀和等于第一项本身。\n\n如果说我们选择的$g$可以让我们迅速地求出$f\\times g$和$g$的前缀和，我们就可以做到快速求$f$的前缀和了。\n\n关于后面的$g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)$，如果直接暴力算复杂度会是$O(n)$的，在大部分情况下，这是无法接受的。\n\n我们来分析一下$\\lfloor\\cfrac{n}{i}\\rfloor$。如果$1\\leqslant i\\leqslant\\sqrt{n}$，因为$i$只有$\\sqrt{n}$种不同的取值，$\\lfloor\\cfrac{n}{i}\\rfloor$同样也只有$\\sqrt{n}$种不同的取值。如果$\\sqrt{n}<i\\leqslant n$，$1\\leqslant\\lfloor\\cfrac{n}{i}\\rfloor<\\sqrt{n}$，又因为要向下取整，自然也只有$\\sqrt{n}$种不同的取值。如果我们能够把$\\lfloor\\cfrac{n}{i}\\rfloor$相同的$i$一起计算，就能够将时间杂度优化到$O(\\sqrt{n})$。\n\n大体代码如下：\n\n```cpp\nfor(re int l=1,r;l<=n;l=r+1){\n\tr=n/(n/l);\n\t//......\n}\n```\n\n关于$r$的这个上界是怎么来的，我并不会证（\n\n这样一来，要计算$S(n)$，我们需要调用所有的$\\lfloor\\cfrac{n}{x}\\rfloor$，分别是$\\lfloor\\cfrac{n}{1}\\rfloor,\\lfloor\\cfrac{n}{2}\\rfloor,\\cdots,\\lfloor\\cfrac{n}{\\sqrt{n}}\\rfloor,\\sqrt{n},\\sqrt{n}-1,\\cdots,1$。单独计算一个$S(n)$的时间复杂度很明显是$O(\\sqrt{n})$的。那么这样一来，总体的时间复杂度就是\n\n$$\\begin{aligned}\nO(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{i}+\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})&=O(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{x}\\rfloor}dx)\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\cfrac{n}{x}}dx)\\\\\n&=O(2n^{\\frac{1}{2}}(n^{\\frac{1}{4}}-1))\\\\\n&=O(n^{\\frac{3}{4}})\n\\end{aligned}$$\n\n因为相比之下$\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor}$很明显要大一些，我们就可以将$\\sqrt{i}$舍去。然后去掉取整符号并用积分近似。\n\n这个实现方法还可以优化。具体来讲，我们先线性筛出前$m$项，然后再用杜教筛。这么做的时间复杂度是$O(m+\\cfrac{n}{\\sqrt{m}})$，当$m=n^{\\frac{2}{3}}$时取得最小值$O(n^{\\frac{2}{3}})$。\n\n举个例子，就比如说我们要求\n\n$$\\sum\\limits_{i=1}^{n}\\varphi(i)$$\n\n我们取$f=\\varphi,g=1$，这样根据$\\varphi$的性质，$f\\times g=id$。不难看出$g$与$f\\times g$的前缀和都可以$O(1)$求。具体的代码实现差不多长这样：\n\n```cpp\nlong long getSum(int n){\n\tif(n<=maxn)\n\t\treturn phi[n];\n\t//phi是提前线性筛好的前缀和\n\tif(ans.count(n))\n\t\treturn ans[n];\n\t//ans用来实现记忆化的哈希表，比如说unordered_map\n\tre long long res=1LL*n*(n+1)>>1;\n\t//f*g的前缀和\n\tfor(re int l=2,r;l<=n;l=r+1){\n\t//注意要从2开始\n\t\tr=n/(n/l);\n\t\tres-=(r-l+1)*getSum(n/l);\n\t\t//r-l+1是g的前缀和\n\t\t//像这样递归+记忆化求解f的前缀和\n\t}\n\treturn ans[n]=res;\n\t//返回的时候不要忘记存一下\n\t//就比如说我就忘过一次（\n}\n```\n\n以及，不用哈希表也是可以的。因为我们查询的数都是形如$\\lfloor\\cfrac{n}{x}\\rfloor$的，当这个值大于$n^{\\frac{2}{3}}$，即$x<n^{\\frac{1}{3}}$时，我们才会到哈希表里查询。因此我们可以令`ans[x]`表示$S(\\lfloor\\cfrac{n}{x}\\rfloor)$。具体代码我就不写了（\n\n再举个例子，求\n\n$$\\sum\\limits_{i=1}^{n}\\mu(i)$$\n\n取$f=\\mu,g=1,f\\times g=\\epsilon$。代码和上面差不多。\n\n如果您理解了上面两个函数，这道[模板题](https://www.luogu.org/problemnew/show/P4213)您就可以切了。\n\n## 其他题\n\n### [「Luogu-P3768」简单的数学题](https://www.luogu.org/problemnew/show/P3768)\n\n快乐地推式子：\n\n$$\\begin{aligned}\n\\sum\\limits_{i=1}^{n}i\\sum\\limits_{j=1}^{n}j\\text{gcd}(i,j)&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}x^{2}\\mu(x)\\text{Sum}^{2}(\\lfloor\\cfrac{n}{dx}\\rfloor)\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\sum\\limits_{j\\mid i}j\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\varphi(i)\n\\end{aligned}$$\n\n其中\n\n$$\\text{Sum}(n)=\\sum\\limits_{i=1}^{n}i$$\n\n最后一步是因为\n\n$$\\begin{aligned}\nid\\times\\mu&=\\varphi\\times 1\\times\\mu\\\\\n&=\\varphi\\times\\epsilon\\\\\n&=\\varphi\n\\end{aligned}$$\n\n理解不了上面的式子的话就多看看吧（\n\n不难发现我们是要求$f(n)=n^{2}\\varphi(n)$的前缀和，那么，我们该怎么选取$g$呢？\n\n~~枚举瞎蒙（~~\n\n考虑$g(n)=n^{2}$。\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=\\sum\\limits_{i\\mid n}i^{2}\\varphi(i)\\cfrac{n^{2}}{i^{2}}\\\\\n&=n^{2}\\sum\\limits_{i\\mid n}\\varphi(i)\\\\\n&=n^{3}\n\\end{aligned}$$\n\n~~其实我都不知道我当时是怎么想到这种操作的（~~\n\n然后就和上面一样了。\n\n### [「Luogu-U18201」分析矿洞](https://www.luogu.org/problemnew/show/U18201)\n\n不知道从哪翻出来的题（\n\n是某场个人邀请赛的$\\text{T}1$~~，从某种意义上也能看出那场比赛有多么神仙~~。\n\n$$\\begin{aligned}\n\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{n}\\varphi(\\text{gcd}^{2}(i,j))&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(x)\\lfloor\\cfrac{n}{dx}\\rfloor^{2}\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}\\varphi(j^{2})\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}j\\varphi(j)\\mu(\\cfrac{i}{j})\n\\end{aligned}$$\n\n设$f_1(n)=n\\varphi(n),f_2(n)=\\mu(n)$，考虑筛$f=f_1\\times f_2$的前缀和。然而，与上面的其它题不同，并不存在一个$g$使我们能够$O(1)$地求出$g$和$f\\times g$的前缀和。一种较优的方案是，令$g=1$，$f\\times g=(id\\cdot\\varphi)\\times\\mu\\times 1=id\\cdot\\varphi$，这样，我们还需要筛出$f_1(n)=n\\varphi(n)$的前缀和。\n\n怎么办？\n\n再套一层杜教筛！\n\n然而可能是常数会有些大也可能是我太菜了自带大常数，好像会跑的很慢（\n\n以及，像这种$n$爆了`int`的，一定要注意经常取模。~~因为这个WA了好几次（~~\n\n最后，源文件$17\\text{KB}​$祭，blog翻页祭。\n","source":"_posts/2018-11-29-number-theory-learning-notes.md","raw":"---\ntitle: 一些乱七八糟的数论\ndate: 2018-11-29 14:41:17\ntags:\n  - 数论\n  - 杜教筛\ncategories:\n  - 学习笔记\nmathjax: true\n---\n最近在洛谷日报的待审核列表里翻到了杜教筛的相关内容，打算连着之前的卷积反演啥的一起复习一下。\n\n~~抄袭来源~~参考文献：\n\n- [铃悬的数学小讲堂——狄利克雷卷积与莫比乌斯反演](https://lx-2003.blog.luogu.org/mobius-inversion)\n- [浅谈杜教筛](https://www.luogu.org/blog/54745/dls-tql)\n- [铃悬的数学小讲堂——杜教筛](https://lx-2003.blog.luogu.org/dujiao-sieve)\n\n<!-- more -->\n\n# 数论函数\n\n## 定义与相关性质\n\n数论函数就是定义域为$\\mathbb{N}^{+}$的函数。\n\n两个数论函数相加，就是简单地把函数值相加。\n\n$$(f+g)(n)=f(n)+g(n)$$\n\n数乘也是类似的。\n\n$$(\\alpha f)(n)=\\alpha f(n)$$\n\n点积也是类似的。\n\n$$(f\\cdot g)(n)=f(n)g(n)$$\n\n~~好像没啥用。~~\n\n在数论函数相关的运算中，一个非常重要的运算是狄利克雷卷积。两个数论函数的狄利克雷卷积是这样定义的：\n\n$$(f\\times g)(n)=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})$$\n\n或者说：\n\n$$(f\\times g)(n)=\\sum\\limits_{ij=n}f(i)g(j)$$\n\n它具有以下的一些性质：\n\n交换律，即$f\\times g=g\\times f$。\n\n这很明显。\n\n结合律，即$(f\\times g)\\times h=f\\times(g\\times h)$。\n\n$$\\begin{aligned}\n((f\\times g)\\times h)(n)&=\\sum\\limits_{ij=n}(\\sum\\limits_{kl=i}f(k)g(l))h(j)\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}$$\n\n$$\\begin{aligned}\n(f\\times(g\\times h))(n)&=\\sum\\limits_{ij=n}f(i)(\\sum\\limits_{kl=j}g(k)h(l))\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}$$\n\n分配率，即$(f+g)\\times h=f\\times h+g\\times h$。\n\n$$\\begin{aligned}\n((f+g)\\times h)(n)&=\\sum\\limits_{ij=n}(f+g)(i)h(j)\\\\\n&=\\sum\\limits_{ij=n}f(i)h(j)+g(i)h(j)\\\\\n&=(f\\times h)(n)+(g\\times h)(n)\n\\end{aligned}$$\n\n单位元为$\\epsilon(n)=[n=1]$，$f\\times\\epsilon =f$。\n\n这也很明显。\n\n对于任意一个满足$f(1)\\neq 0$的函数$f$，都存在唯一的一个函数$g$使得$f\\times g=\\epsilon$。这时我们称$g$是$f$的逆。\n\n我们可以这样定义一个函数的逆：\n\n$$g(n)=\\cfrac{\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})}{f(1)}$$\n\n这样我们就有\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=f(1)g(n)+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)\n\\end{aligned}$$\n\n## 积性函数与完全积性函数\n\n如果一个数论函数$f$满足\n\n$$\\forall x,y\\in\\mathbb{N}^{+}\\wedge x\\perp y\\;\\;f(xy)=f(x)f(y)$$\n\n我们就说$f$是一个积性函数。\n\n特别的，如果上式去掉$x\\perp y$仍成立，则称$f$是一个完全积性函数。\n\n很明显地，任意一个积性函数$f$一定有$f(1)=1$，这样才能有$f(1\\times n)=f(1)\\times f(n)=f(n)$。\n\n常见的完全积性函数有$\\epsilon,id^{k}$。$\\epsilon$在上文已经提到过。$id^{k}(n)=n^k$。这两个函数的完全积性十分明显。\n\n常见的积性函数有$\\varphi,d,\\sigma$。$\\varphi(n)$的值等于小于等于$n$且与$n$互质的正整数的数量。$d(n)$和$\\sigma(n)$的值分别等于$n$的约数个数和约数和。\n\n关于$\\varphi$的积性，我并不会证（\n\n我们来分析$d$的积性。首先，根据唯一分解定理，$n$的每个因数都可以唯一地分解成$n$所有质因子的非负整数次幂乘积。不妨设\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n其中$p_{i}$都是质数，所有$r_{i}$都是正整数。对于每一个$p_{i}$，它的指数有$(r_{i}+1)$种取值，因而我们有\n\n$$d(n)=\\prod\\limits_{i=1}^{N}(r_{i}+1)$$\n\n我们再假设有一个$m$，且\n\n$$m=\\prod\\limits_{i=1}^{M}q_{i}^{s_{i}}$$\n\n如果说$n\\perp m$，肯定有\n\n$$\\forall i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z}\\;\\;p_{i}\\neq q_{j}$$\n\n于是我们就有\n\n$$nm=(\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}})(\\prod\\limits_{j=1}^{M}q_{j}^{s_{j}})$$\n\n$$\\begin{aligned}\nd(nm)&=(\\prod\\limits_{i=1}^{N}(r_{i}+1))(\\prod\\limits_{j=1}^{M}(s_{j}+1))\\\\\n&=d(n)d(m)\n\\end{aligned}$$\n\n不妨再反过来考虑。如果说$n\\not\\perp m$，那么一定存在一对$(i,j)(i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z})$，使得$p_{i}=q_{j}$。那么$d(n)d(m)$就会有一个因子是$(r_{i}+1)(s_{j}+1)=r_{i}s_{j}+r_{i}+s_{j}+1$。但是仔细思考我们会发现，$d(nm)$中对应的项应该是$r_{i}+s_{j}+1$。因而此时$d(nm)\\neq d(n)d(m)$。\n\n我们再来分析$\\sigma$的积性。还是设\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n其中$p_{i}$都是质数，所有$r_{i}$都是正整数。与$d$不同的是，现在我们是要用$p_{i}$乘出$n$的因数，$p_{i}$在此过程中可以产生的贡献为$p_{i}^x(x\\in [0,r_{i}]\\cap\\mathbb{Z})$。我们可以把这想象成一个$N$个数组，第$i$个数组的长度为$r_{i}+1$，第$j$个元素为$p_{i}^{j-1}$。现在我们每次从每个数组里选出恰好一个元素相乘，要求所有方案的乘积之和。我们知道，这个问题的答案就是\n\n$$\\prod\\limits_{i=1}^{N}\\sum\\limits_{j=0}^{r_{i}}p_{i}^{j}$$\n\n这正是$\\sigma(n)$的值。\n\n接下来的过程就与上文证明$d$的积性如出一辙了，在此不再重复。\n\n现在我们来分析，两个积性函数的卷积是否也是积性函数。~~虽然说都这么问了肯定就是了。~~\n\n$$\\begin{aligned}\n(f\\times g)(n)(f\\times g)(m)&=(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(i)g(\\cfrac{n}{i})f(j)g(\\cfrac{m}{j})\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(ij)g(\\cfrac{nm}{ij})\\\\\n&=\\sum\\limits_{k\\mid nm}f(k)g(\\cfrac{nm}{k})\\\\\n&=(f\\times g)(nm)\n\\end{aligned}$$\n\n关于上面的第四个等号。时刻注意$n\\perp m$，在这种前提下，我们枚举到的$i$和$j$一定也是互质的，那么$ij$的所有值一定是互不相同的。这从$d(nm)=d(n)d(m)$这一等式中也能看出。\n\n再接下来，我们来分析一下一个积性函数的逆是否也是积性函数。\n\n设有一个积性函数$f$，它的逆是$g$。\n\n当$nm=1$时，$g(1)=1$。\n\n当$nm>1$时，我们假设对于任意$n^{\\prime}m^{\\prime}<nm$，都有$g(n^{\\prime}m^{\\prime})=g(n^{\\prime})g(m^{\\prime})$。此时\n\n$$\\begin{aligned}\ng(nm)&=-\\sum\\limits_{k\\mid nm,k\\neq 1}f(k)g(\\cfrac{nm}{k})\\\\\n&=-\\sum\\limits_{i\\mid n,j\\mid m,ij\\neq 1}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-\\sum\\limits_{i\\mid n,j\\mid m}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=g(n)g(m)-\\epsilon(n)\\epsilon(m)\\\\\n&=g(n)g(m)\n\\end{aligned}$$\n\n~~其实上面这些全都是抄来的（~~\n\n# 莫比乌斯反演\n\n## 正向反演\n\n定义$\\mu$为$1$的逆。也就是说，$\\mu\\times 1=\\epsilon$。\n\n如果您看过其他的一些关于莫比乌斯反演的学习笔记的话，您可能会看到如下的定义：\n\n> 首先地，$\\mu(1)=1$。当$n>1$时，如果$n$的所有质因子互不相同，设其有$k$个质因子，那么$\\mu(n)=(-1)^{k}$。否则，$\\mu(n)=0$。\n\n那么，这两种定义等价吗？\n\n考虑到$\\mu$是一个积性函数，对于任意一个$n>1$，如果我们把它分解成\n\n$$n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}$$\n\n我们就有\n\n$$\\mu(n)=\\prod\\limits_{i=1}^{N}\\mu(p_{i}^{r_{i}})$$\n\n因此，确定一个积性函数的函数值的关键在于确定其在质数的非负整数次幂上的取值。\n\n设有一个质数$p$。不难发现\n\n$$\\mu(p)=-\\mu(1)=-1$$\n\n$$\\mu(p^{2})=-\\mu(1)-\\mu(p)=-1+1=0$$\n\n$$\\mu(p^{3})=-\\mu(1)-\\mu(p)-\\mu(p^{2})=-1+1+0=0$$\n\n$$\\vdots$$\n\n至此，不难看出上文给出的两种定义是等价的。\n\n那么这个东西有什么用呢？\n\n我们设\n\n$$F(n)=\\sum\\limits_{i\\mid n}f(i)$$\n\n或者等价地说，$F=f\\times 1$。我们可以得到\n\n$$\\begin{aligned}\nF&=f\\times 1\\\\\nF\\times\\mu&=f\\times 1\\times\\mu\\\\\nF\\times\\mu&=f\n\\end{aligned}$$\n\n像这样，如果说$F$相对好求，而$f$相对难求，我们就可以通过上式来减小我们求解$f$的难度。具体地说\n\n$$f(n)=\\sum\\limits_{i\\mid n}F(i)\\mu(\\cfrac{n}{i})$$\n\n## 反向反演\n\n有些时候我们还需要用到像下面这样反过来的莫比乌斯反演\n\n$$F(n)=\\sum\\limits_{n\\mid d}f(d)⇔f(n)=\\sum\\limits_{n\\mid d}F(d)\\mu(\\cfrac{d}{n})$$\n\n我们可以定义一种新的运算\n\n$$(f\\otimes g)(n)=\\sum\\limits_{n\\mid d}f(d)g(\\cfrac{d}{n})$$\n\n我们不难证明出它具有结合律。具体过程与上文证明狄利克雷卷积的结合律的过程基本重复。那么我们就有\n\n$$F=f\\otimes 1⇔F\\otimes\\mu=f$$\n\n于是就有了上面的反向反演。\n\n> Updated on 2018-12-03\n>\n> 例题……还是算了吧（\n>\n> 发现反演常用的套路都忘的差不多了，还是别丢人了（\n\n# 杜教筛\n\n## 实现与模板题\n\n接下来才是主要内容。\n\n现在，我们要求一个积性函数的前$n$项和。$n\\leqslant 10^{10}$。\n\n我们定义\n\n$$S(n)=\\sum\\limits_{i=1}^{n}f(i)$$\n\n再拿来一个积性函数$g$，然后把它与$f$卷积并求前缀和。\n\n$$\\begin{aligned}\n\\sum_{i=1}^{n}(f\\times g)(i)&=\\sum_{i=1}^{n}\\sum_{j\\mid i}f(j)g(\\cfrac{i}{j})\\\\\n&=\\sum_{i=1}^{n}g(i)\\sum_{j=1}^{\\lfloor\\frac{n}{i}\\rfloor}f(j)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}$$\n\n然而我的语文实在是太菜了，大概说也说不明白，自行理解吧（\n\n因为$g$也是积性函数，有$g(1)=1$，所以\n\n$$\\begin{aligned}\nS(n)&=g(1)S(n)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\\\\\n&=\\sum_{i=1}^{n}(f\\times g)(i)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}$$\n\n就是说从第一项开始的前缀和减去从第二项开始的前缀和等于第一项本身。\n\n如果说我们选择的$g$可以让我们迅速地求出$f\\times g$和$g$的前缀和，我们就可以做到快速求$f$的前缀和了。\n\n关于后面的$g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)$，如果直接暴力算复杂度会是$O(n)$的，在大部分情况下，这是无法接受的。\n\n我们来分析一下$\\lfloor\\cfrac{n}{i}\\rfloor$。如果$1\\leqslant i\\leqslant\\sqrt{n}$，因为$i$只有$\\sqrt{n}$种不同的取值，$\\lfloor\\cfrac{n}{i}\\rfloor$同样也只有$\\sqrt{n}$种不同的取值。如果$\\sqrt{n}<i\\leqslant n$，$1\\leqslant\\lfloor\\cfrac{n}{i}\\rfloor<\\sqrt{n}$，又因为要向下取整，自然也只有$\\sqrt{n}$种不同的取值。如果我们能够把$\\lfloor\\cfrac{n}{i}\\rfloor$相同的$i$一起计算，就能够将时间杂度优化到$O(\\sqrt{n})$。\n\n大体代码如下：\n\n```cpp\nfor(re int l=1,r;l<=n;l=r+1){\n\tr=n/(n/l);\n\t//......\n}\n```\n\n关于$r$的这个上界是怎么来的，我并不会证（\n\n这样一来，要计算$S(n)$，我们需要调用所有的$\\lfloor\\cfrac{n}{x}\\rfloor$，分别是$\\lfloor\\cfrac{n}{1}\\rfloor,\\lfloor\\cfrac{n}{2}\\rfloor,\\cdots,\\lfloor\\cfrac{n}{\\sqrt{n}}\\rfloor,\\sqrt{n},\\sqrt{n}-1,\\cdots,1$。单独计算一个$S(n)$的时间复杂度很明显是$O(\\sqrt{n})$的。那么这样一来，总体的时间复杂度就是\n\n$$\\begin{aligned}\nO(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{i}+\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})&=O(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{x}\\rfloor}dx)\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\cfrac{n}{x}}dx)\\\\\n&=O(2n^{\\frac{1}{2}}(n^{\\frac{1}{4}}-1))\\\\\n&=O(n^{\\frac{3}{4}})\n\\end{aligned}$$\n\n因为相比之下$\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor}$很明显要大一些，我们就可以将$\\sqrt{i}$舍去。然后去掉取整符号并用积分近似。\n\n这个实现方法还可以优化。具体来讲，我们先线性筛出前$m$项，然后再用杜教筛。这么做的时间复杂度是$O(m+\\cfrac{n}{\\sqrt{m}})$，当$m=n^{\\frac{2}{3}}$时取得最小值$O(n^{\\frac{2}{3}})$。\n\n举个例子，就比如说我们要求\n\n$$\\sum\\limits_{i=1}^{n}\\varphi(i)$$\n\n我们取$f=\\varphi,g=1$，这样根据$\\varphi$的性质，$f\\times g=id$。不难看出$g$与$f\\times g$的前缀和都可以$O(1)$求。具体的代码实现差不多长这样：\n\n```cpp\nlong long getSum(int n){\n\tif(n<=maxn)\n\t\treturn phi[n];\n\t//phi是提前线性筛好的前缀和\n\tif(ans.count(n))\n\t\treturn ans[n];\n\t//ans用来实现记忆化的哈希表，比如说unordered_map\n\tre long long res=1LL*n*(n+1)>>1;\n\t//f*g的前缀和\n\tfor(re int l=2,r;l<=n;l=r+1){\n\t//注意要从2开始\n\t\tr=n/(n/l);\n\t\tres-=(r-l+1)*getSum(n/l);\n\t\t//r-l+1是g的前缀和\n\t\t//像这样递归+记忆化求解f的前缀和\n\t}\n\treturn ans[n]=res;\n\t//返回的时候不要忘记存一下\n\t//就比如说我就忘过一次（\n}\n```\n\n以及，不用哈希表也是可以的。因为我们查询的数都是形如$\\lfloor\\cfrac{n}{x}\\rfloor$的，当这个值大于$n^{\\frac{2}{3}}$，即$x<n^{\\frac{1}{3}}$时，我们才会到哈希表里查询。因此我们可以令`ans[x]`表示$S(\\lfloor\\cfrac{n}{x}\\rfloor)$。具体代码我就不写了（\n\n再举个例子，求\n\n$$\\sum\\limits_{i=1}^{n}\\mu(i)$$\n\n取$f=\\mu,g=1,f\\times g=\\epsilon$。代码和上面差不多。\n\n如果您理解了上面两个函数，这道[模板题](https://www.luogu.org/problemnew/show/P4213)您就可以切了。\n\n## 其他题\n\n### [「Luogu-P3768」简单的数学题](https://www.luogu.org/problemnew/show/P3768)\n\n快乐地推式子：\n\n$$\\begin{aligned}\n\\sum\\limits_{i=1}^{n}i\\sum\\limits_{j=1}^{n}j\\text{gcd}(i,j)&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}x^{2}\\mu(x)\\text{Sum}^{2}(\\lfloor\\cfrac{n}{dx}\\rfloor)\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\sum\\limits_{j\\mid i}j\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\varphi(i)\n\\end{aligned}$$\n\n其中\n\n$$\\text{Sum}(n)=\\sum\\limits_{i=1}^{n}i$$\n\n最后一步是因为\n\n$$\\begin{aligned}\nid\\times\\mu&=\\varphi\\times 1\\times\\mu\\\\\n&=\\varphi\\times\\epsilon\\\\\n&=\\varphi\n\\end{aligned}$$\n\n理解不了上面的式子的话就多看看吧（\n\n不难发现我们是要求$f(n)=n^{2}\\varphi(n)$的前缀和，那么，我们该怎么选取$g$呢？\n\n~~枚举瞎蒙（~~\n\n考虑$g(n)=n^{2}$。\n\n$$\\begin{aligned}\n(f\\times g)(n)&=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=\\sum\\limits_{i\\mid n}i^{2}\\varphi(i)\\cfrac{n^{2}}{i^{2}}\\\\\n&=n^{2}\\sum\\limits_{i\\mid n}\\varphi(i)\\\\\n&=n^{3}\n\\end{aligned}$$\n\n~~其实我都不知道我当时是怎么想到这种操作的（~~\n\n然后就和上面一样了。\n\n### [「Luogu-U18201」分析矿洞](https://www.luogu.org/problemnew/show/U18201)\n\n不知道从哪翻出来的题（\n\n是某场个人邀请赛的$\\text{T}1$~~，从某种意义上也能看出那场比赛有多么神仙~~。\n\n$$\\begin{aligned}\n\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{n}\\varphi(\\text{gcd}^{2}(i,j))&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(x)\\lfloor\\cfrac{n}{dx}\\rfloor^{2}\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}\\varphi(j^{2})\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}j\\varphi(j)\\mu(\\cfrac{i}{j})\n\\end{aligned}$$\n\n设$f_1(n)=n\\varphi(n),f_2(n)=\\mu(n)$，考虑筛$f=f_1\\times f_2$的前缀和。然而，与上面的其它题不同，并不存在一个$g$使我们能够$O(1)$地求出$g$和$f\\times g$的前缀和。一种较优的方案是，令$g=1$，$f\\times g=(id\\cdot\\varphi)\\times\\mu\\times 1=id\\cdot\\varphi$，这样，我们还需要筛出$f_1(n)=n\\varphi(n)$的前缀和。\n\n怎么办？\n\n再套一层杜教筛！\n\n然而可能是常数会有些大也可能是我太菜了自带大常数，好像会跑的很慢（\n\n以及，像这种$n$爆了`int`的，一定要注意经常取模。~~因为这个WA了好几次（~~\n\n最后，源文件$17\\text{KB}​$祭，blog翻页祭。\n","slug":"number-theory-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhnj008wmku91mi5a2ib","content":"<p>最近在洛谷日报的待审核列表里翻到了杜教筛的相关内容，打算连着之前的卷积反演啥的一起复习一下。</p>\n<p><del>抄袭来源</del>参考文献：</p>\n<ul>\n<li><a href=\"https://lx-2003.blog.luogu.org/mobius-inversion\">铃悬的数学小讲堂——狄利克雷卷积与莫比乌斯反演</a></li>\n<li><a href=\"https://www.luogu.org/blog/54745/dls-tql\">浅谈杜教筛</a></li>\n<li><a href=\"https://lx-2003.blog.luogu.org/dujiao-sieve\">铃悬的数学小讲堂——杜教筛</a></li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"数论函数\"><a href=\"#数论函数\" class=\"headerlink\" title=\"数论函数\"></a>数论函数</h1><h2 id=\"定义与相关性质\"><a href=\"#定义与相关性质\" class=\"headerlink\" title=\"定义与相关性质\"></a>定义与相关性质</h2><p>数论函数就是定义域为$\\mathbb{N}^{+}$的函数。</p>\n<p>两个数论函数相加，就是简单地把函数值相加。</p>\n<script type=\"math/tex; mode=display\">(f+g)(n)=f(n)+g(n)</script><p>数乘也是类似的。</p>\n<script type=\"math/tex; mode=display\">(\\alpha f)(n)=\\alpha f(n)</script><p>点积也是类似的。</p>\n<script type=\"math/tex; mode=display\">(f\\cdot g)(n)=f(n)g(n)</script><p><del>好像没啥用。</del></p>\n<p>在数论函数相关的运算中，一个非常重要的运算是狄利克雷卷积。两个数论函数的狄利克雷卷积是这样定义的：</p>\n<script type=\"math/tex; mode=display\">(f\\times g)(n)=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})</script><p>或者说：</p>\n<script type=\"math/tex; mode=display\">(f\\times g)(n)=\\sum\\limits_{ij=n}f(i)g(j)</script><p>它具有以下的一些性质：</p>\n<p>交换律，即$f\\times g=g\\times f$。</p>\n<p>这很明显。</p>\n<p>结合律，即$(f\\times g)\\times h=f\\times(g\\times h)$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n((f\\times g)\\times h)(n)&=\\sum\\limits_{ij=n}(\\sum\\limits_{kl=i}f(k)g(l))h(j)\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times(g\\times h))(n)&=\\sum\\limits_{ij=n}f(i)(\\sum\\limits_{kl=j}g(k)h(l))\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}</script><p>分配率，即$(f+g)\\times h=f\\times h+g\\times h$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n((f+g)\\times h)(n)&=\\sum\\limits_{ij=n}(f+g)(i)h(j)\\\\\n&=\\sum\\limits_{ij=n}f(i)h(j)+g(i)h(j)\\\\\n&=(f\\times h)(n)+(g\\times h)(n)\n\\end{aligned}</script><p>单位元为$\\epsilon(n)=[n=1]$，$f\\times\\epsilon =f$。</p>\n<p>这也很明显。</p>\n<p>对于任意一个满足$f(1)\\neq 0$的函数$f$，都存在唯一的一个函数$g$使得$f\\times g=\\epsilon$。这时我们称$g$是$f$的逆。</p>\n<p>我们可以这样定义一个函数的逆：</p>\n<script type=\"math/tex; mode=display\">g(n)=\\cfrac{\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})}{f(1)}</script><p>这样我们就有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=f(1)g(n)+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)\n\\end{aligned}</script><h2 id=\"积性函数与完全积性函数\"><a href=\"#积性函数与完全积性函数\" class=\"headerlink\" title=\"积性函数与完全积性函数\"></a>积性函数与完全积性函数</h2><p>如果一个数论函数$f$满足</p>\n<script type=\"math/tex; mode=display\">\\forall x,y\\in\\mathbb{N}^{+}\\wedge x\\perp y\\;\\;f(xy)=f(x)f(y)</script><p>我们就说$f$是一个积性函数。</p>\n<p>特别的，如果上式去掉$x\\perp y$仍成立，则称$f$是一个完全积性函数。</p>\n<p>很明显地，任意一个积性函数$f$一定有$f(1)=1$，这样才能有$f(1\\times n)=f(1)\\times f(n)=f(n)$。</p>\n<p>常见的完全积性函数有$\\epsilon,id^{k}$。$\\epsilon$在上文已经提到过。$id^{k}(n)=n^k$。这两个函数的完全积性十分明显。</p>\n<p>常见的积性函数有$\\varphi,d,\\sigma$。$\\varphi(n)$的值等于小于等于$n$且与$n$互质的正整数的数量。$d(n)$和$\\sigma(n)$的值分别等于$n$的约数个数和约数和。</p>\n<p>关于$\\varphi$的积性，我并不会证（</p>\n<p>我们来分析$d$的积性。首先，根据唯一分解定理，$n$的每个因数都可以唯一地分解成$n$所有质因子的非负整数次幂乘积。不妨设</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>其中$p_{i}$都是质数，所有$r_{i}$都是正整数。对于每一个$p_{i}$，它的指数有$(r_{i}+1)$种取值，因而我们有</p>\n<script type=\"math/tex; mode=display\">d(n)=\\prod\\limits_{i=1}^{N}(r_{i}+1)</script><p>我们再假设有一个$m$，且</p>\n<script type=\"math/tex; mode=display\">m=\\prod\\limits_{i=1}^{M}q_{i}^{s_{i}}</script><p>如果说$n\\perp m$，肯定有</p>\n<script type=\"math/tex; mode=display\">\\forall i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z}\\;\\;p_{i}\\neq q_{j}</script><p>于是我们就有</p>\n<script type=\"math/tex; mode=display\">nm=(\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}})(\\prod\\limits_{j=1}^{M}q_{j}^{s_{j}})</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nd(nm)&=(\\prod\\limits_{i=1}^{N}(r_{i}+1))(\\prod\\limits_{j=1}^{M}(s_{j}+1))\\\\\n&=d(n)d(m)\n\\end{aligned}</script><p>不妨再反过来考虑。如果说$n\\not\\perp m$，那么一定存在一对$(i,j)(i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z})$，使得$p_{i}=q_{j}$。那么$d(n)d(m)$就会有一个因子是$(r_{i}+1)(s_{j}+1)=r_{i}s_{j}+r_{i}+s_{j}+1$。但是仔细思考我们会发现，$d(nm)$中对应的项应该是$r_{i}+s_{j}+1$。因而此时$d(nm)\\neq d(n)d(m)$。</p>\n<p>我们再来分析$\\sigma$的积性。还是设</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>其中$p_{i}$都是质数，所有$r_{i}$都是正整数。与$d$不同的是，现在我们是要用$p_{i}$乘出$n$的因数，$p_{i}$在此过程中可以产生的贡献为$p_{i}^x(x\\in [0,r_{i}]\\cap\\mathbb{Z})$。我们可以把这想象成一个$N$个数组，第$i$个数组的长度为$r_{i}+1$，第$j$个元素为$p_{i}^{j-1}$。现在我们每次从每个数组里选出恰好一个元素相乘，要求所有方案的乘积之和。我们知道，这个问题的答案就是</p>\n<script type=\"math/tex; mode=display\">\\prod\\limits_{i=1}^{N}\\sum\\limits_{j=0}^{r_{i}}p_{i}^{j}</script><p>这正是$\\sigma(n)$的值。</p>\n<p>接下来的过程就与上文证明$d$的积性如出一辙了，在此不再重复。</p>\n<p>现在我们来分析，两个积性函数的卷积是否也是积性函数。<del>虽然说都这么问了肯定就是了。</del></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)(f\\times g)(m)&=(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(i)g(\\cfrac{n}{i})f(j)g(\\cfrac{m}{j})\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(ij)g(\\cfrac{nm}{ij})\\\\\n&=\\sum\\limits_{k\\mid nm}f(k)g(\\cfrac{nm}{k})\\\\\n&=(f\\times g)(nm)\n\\end{aligned}</script><p>关于上面的第四个等号。时刻注意$n\\perp m$，在这种前提下，我们枚举到的$i$和$j$一定也是互质的，那么$ij$的所有值一定是互不相同的。这从$d(nm)=d(n)d(m)$这一等式中也能看出。</p>\n<p>再接下来，我们来分析一下一个积性函数的逆是否也是积性函数。</p>\n<p>设有一个积性函数$f$，它的逆是$g$。</p>\n<p>当$nm=1$时，$g(1)=1$。</p>\n<p>当$nm&gt;1$时，我们假设对于任意$n^{\\prime}m^{\\prime}&lt;nm$，都有$g(n^{\\prime}m^{\\prime})=g(n^{\\prime})g(m^{\\prime})$。此时</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(nm)&=-\\sum\\limits_{k\\mid nm,k\\neq 1}f(k)g(\\cfrac{nm}{k})\\\\\n&=-\\sum\\limits_{i\\mid n,j\\mid m,ij\\neq 1}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-\\sum\\limits_{i\\mid n,j\\mid m}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=g(n)g(m)-\\epsilon(n)\\epsilon(m)\\\\\n&=g(n)g(m)\n\\end{aligned}</script><p><del>其实上面这些全都是抄来的（</del></p>\n<h1 id=\"莫比乌斯反演\"><a href=\"#莫比乌斯反演\" class=\"headerlink\" title=\"莫比乌斯反演\"></a>莫比乌斯反演</h1><h2 id=\"正向反演\"><a href=\"#正向反演\" class=\"headerlink\" title=\"正向反演\"></a>正向反演</h2><p>定义$\\mu$为$1$的逆。也就是说，$\\mu\\times 1=\\epsilon$。</p>\n<p>如果您看过其他的一些关于莫比乌斯反演的学习笔记的话，您可能会看到如下的定义：</p>\n<blockquote>\n<p>首先地，$\\mu(1)=1$。当$n&gt;1$时，如果$n$的所有质因子互不相同，设其有$k$个质因子，那么$\\mu(n)=(-1)^{k}$。否则，$\\mu(n)=0$。</p>\n</blockquote>\n<p>那么，这两种定义等价吗？</p>\n<p>考虑到$\\mu$是一个积性函数，对于任意一个$n&gt;1$，如果我们把它分解成</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>我们就有</p>\n<script type=\"math/tex; mode=display\">\\mu(n)=\\prod\\limits_{i=1}^{N}\\mu(p_{i}^{r_{i}})</script><p>因此，确定一个积性函数的函数值的关键在于确定其在质数的非负整数次幂上的取值。</p>\n<p>设有一个质数$p$。不难发现</p>\n<script type=\"math/tex; mode=display\">\\mu(p)=-\\mu(1)=-1</script><script type=\"math/tex; mode=display\">\\mu(p^{2})=-\\mu(1)-\\mu(p)=-1+1=0</script><script type=\"math/tex; mode=display\">\\mu(p^{3})=-\\mu(1)-\\mu(p)-\\mu(p^{2})=-1+1+0=0</script><script type=\"math/tex; mode=display\">\\vdots</script><p>至此，不难看出上文给出的两种定义是等价的。</p>\n<p>那么这个东西有什么用呢？</p>\n<p>我们设</p>\n<script type=\"math/tex; mode=display\">F(n)=\\sum\\limits_{i\\mid n}f(i)</script><p>或者等价地说，$F=f\\times 1$。我们可以得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF&=f\\times 1\\\\\nF\\times\\mu&=f\\times 1\\times\\mu\\\\\nF\\times\\mu&=f\n\\end{aligned}</script><p>像这样，如果说$F$相对好求，而$f$相对难求，我们就可以通过上式来减小我们求解$f$的难度。具体地说</p>\n<script type=\"math/tex; mode=display\">f(n)=\\sum\\limits_{i\\mid n}F(i)\\mu(\\cfrac{n}{i})</script><h2 id=\"反向反演\"><a href=\"#反向反演\" class=\"headerlink\" title=\"反向反演\"></a>反向反演</h2><p>有些时候我们还需要用到像下面这样反过来的莫比乌斯反演</p>\n<script type=\"math/tex; mode=display\">F(n)=\\sum\\limits_{n\\mid d}f(d)⇔f(n)=\\sum\\limits_{n\\mid d}F(d)\\mu(\\cfrac{d}{n})</script><p>我们可以定义一种新的运算</p>\n<script type=\"math/tex; mode=display\">(f\\otimes g)(n)=\\sum\\limits_{n\\mid d}f(d)g(\\cfrac{d}{n})</script><p>我们不难证明出它具有结合律。具体过程与上文证明狄利克雷卷积的结合律的过程基本重复。那么我们就有</p>\n<script type=\"math/tex; mode=display\">F=f\\otimes 1⇔F\\otimes\\mu=f</script><p>于是就有了上面的反向反演。</p>\n<blockquote>\n<p>Updated on 2018-12-03</p>\n<p>例题……还是算了吧（</p>\n<p>发现反演常用的套路都忘的差不多了，还是别丢人了（</p>\n</blockquote>\n<h1 id=\"杜教筛\"><a href=\"#杜教筛\" class=\"headerlink\" title=\"杜教筛\"></a>杜教筛</h1><h2 id=\"实现与模板题\"><a href=\"#实现与模板题\" class=\"headerlink\" title=\"实现与模板题\"></a>实现与模板题</h2><p>接下来才是主要内容。</p>\n<p>现在，我们要求一个积性函数的前$n$项和。$n\\leqslant 10^{10}$。</p>\n<p>我们定义</p>\n<script type=\"math/tex; mode=display\">S(n)=\\sum\\limits_{i=1}^{n}f(i)</script><p>再拿来一个积性函数$g$，然后把它与$f$卷积并求前缀和。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=1}^{n}(f\\times g)(i)&=\\sum_{i=1}^{n}\\sum_{j\\mid i}f(j)g(\\cfrac{i}{j})\\\\\n&=\\sum_{i=1}^{n}g(i)\\sum_{j=1}^{\\lfloor\\frac{n}{i}\\rfloor}f(j)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}</script><p>然而我的语文实在是太菜了，大概说也说不明白，自行理解吧（</p>\n<p>因为$g$也是积性函数，有$g(1)=1$，所以</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nS(n)&=g(1)S(n)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\\\\\n&=\\sum_{i=1}^{n}(f\\times g)(i)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}</script><p>就是说从第一项开始的前缀和减去从第二项开始的前缀和等于第一项本身。</p>\n<p>如果说我们选择的$g$可以让我们迅速地求出$f\\times g$和$g$的前缀和，我们就可以做到快速求$f$的前缀和了。</p>\n<p>关于后面的$g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)$，如果直接暴力算复杂度会是$O(n)$的，在大部分情况下，这是无法接受的。</p>\n<p>我们来分析一下$\\lfloor\\cfrac{n}{i}\\rfloor$。如果$1\\leqslant i\\leqslant\\sqrt{n}$，因为$i$只有$\\sqrt{n}$种不同的取值，$\\lfloor\\cfrac{n}{i}\\rfloor$同样也只有$\\sqrt{n}$种不同的取值。如果$\\sqrt{n}&lt;i\\leqslant n$，$1\\leqslant\\lfloor\\cfrac{n}{i}\\rfloor&lt;\\sqrt{n}$，又因为要向下取整，自然也只有$\\sqrt{n}$种不同的取值。如果我们能够把$\\lfloor\\cfrac{n}{i}\\rfloor$相同的$i$一起计算，就能够将时间杂度优化到$O(\\sqrt{n})$。</p>\n<p>大体代码如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    r=n/(n/l);</span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>关于$r$的这个上界是怎么来的，我并不会证（</p>\n<p>这样一来，要计算$S(n)$，我们需要调用所有的$\\lfloor\\cfrac{n}{x}\\rfloor$，分别是$\\lfloor\\cfrac{n}{1}\\rfloor,\\lfloor\\cfrac{n}{2}\\rfloor,\\cdots,\\lfloor\\cfrac{n}{\\sqrt{n}}\\rfloor,\\sqrt{n},\\sqrt{n}-1,\\cdots,1$。单独计算一个$S(n)$的时间复杂度很明显是$O(\\sqrt{n})$的。那么这样一来，总体的时间复杂度就是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nO(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{i}+\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})&=O(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{x}\\rfloor}dx)\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\cfrac{n}{x}}dx)\\\\\n&=O(2n^{\\frac{1}{2}}(n^{\\frac{1}{4}}-1))\\\\\n&=O(n^{\\frac{3}{4}})\n\\end{aligned}</script><p>因为相比之下$\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor}$很明显要大一些，我们就可以将$\\sqrt{i}$舍去。然后去掉取整符号并用积分近似。</p>\n<p>这个实现方法还可以优化。具体来讲，我们先线性筛出前$m$项，然后再用杜教筛。这么做的时间复杂度是$O(m+\\cfrac{n}{\\sqrt{m}})$，当$m=n^{\\frac{2}{3}}$时取得最小值$O(n^{\\frac{2}{3}})$。</p>\n<p>举个例子，就比如说我们要求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\varphi(i)</script><p>我们取$f=\\varphi,g=1$，这样根据$\\varphi$的性质，$f\\times g=id$。不难看出$g$与$f\\times g$的前缀和都可以$O(1)$求。具体的代码实现差不多长这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">getSum</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&lt;=maxn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> phi[n];</span><br><span class=\"line\">    <span class=\"comment\">//phi是提前线性筛好的前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ans.count(n))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans[n];</span><br><span class=\"line\">    <span class=\"comment\">//ans用来实现记忆化的哈希表，比如说unordered_map</span></span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">//f*g的前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">2</span>,r;l&lt;=n;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//注意要从2开始</span></span><br><span class=\"line\">        r=n/(n/l);</span><br><span class=\"line\">        res-=(r-l+<span class=\"number\">1</span>)*getSum(n/l);</span><br><span class=\"line\">        <span class=\"comment\">//r-l+1是g的前缀和</span></span><br><span class=\"line\">        <span class=\"comment\">//像这样递归+记忆化求解f的前缀和</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans[n]=res;</span><br><span class=\"line\">    <span class=\"comment\">//返回的时候不要忘记存一下</span></span><br><span class=\"line\">    <span class=\"comment\">//就比如说我就忘过一次（</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以及，不用哈希表也是可以的。因为我们查询的数都是形如$\\lfloor\\cfrac{n}{x}\\rfloor$的，当这个值大于$n^{\\frac{2}{3}}$，即$x&lt;n^{\\frac{1}{3}}$时，我们才会到哈希表里查询。因此我们可以令<code>ans[x]</code>表示$S(\\lfloor\\cfrac{n}{x}\\rfloor)$。具体代码我就不写了（</p>\n<p>再举个例子，求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\mu(i)</script><p>取$f=\\mu,g=1,f\\times g=\\epsilon$。代码和上面差不多。</p>\n<p>如果您理解了上面两个函数，这道<a href=\"https://www.luogu.org/problemnew/show/P4213\">模板题</a>您就可以切了。</p>\n<h2 id=\"其他题\"><a href=\"#其他题\" class=\"headerlink\" title=\"其他题\"></a>其他题</h2><h3 id=\"「Luogu-P3768」简单的数学题\"><a href=\"#「Luogu-P3768」简单的数学题\" class=\"headerlink\" title=\"「Luogu-P3768」简单的数学题\"></a><a href=\"https://www.luogu.org/problemnew/show/P3768\">「Luogu-P3768」简单的数学题</a></h3><p>快乐地推式子：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum\\limits_{i=1}^{n}i\\sum\\limits_{j=1}^{n}j\\text{gcd}(i,j)&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}x^{2}\\mu(x)\\text{Sum}^{2}(\\lfloor\\cfrac{n}{dx}\\rfloor)\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\sum\\limits_{j\\mid i}j\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\varphi(i)\n\\end{aligned}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">\\text{Sum}(n)=\\sum\\limits_{i=1}^{n}i</script><p>最后一步是因为</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nid\\times\\mu&=\\varphi\\times 1\\times\\mu\\\\\n&=\\varphi\\times\\epsilon\\\\\n&=\\varphi\n\\end{aligned}</script><p>理解不了上面的式子的话就多看看吧（</p>\n<p>不难发现我们是要求$f(n)=n^{2}\\varphi(n)$的前缀和，那么，我们该怎么选取$g$呢？</p>\n<p><del>枚举瞎蒙（</del></p>\n<p>考虑$g(n)=n^{2}$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=\\sum\\limits_{i\\mid n}i^{2}\\varphi(i)\\cfrac{n^{2}}{i^{2}}\\\\\n&=n^{2}\\sum\\limits_{i\\mid n}\\varphi(i)\\\\\n&=n^{3}\n\\end{aligned}</script><p><del>其实我都不知道我当时是怎么想到这种操作的（</del></p>\n<p>然后就和上面一样了。</p>\n<h3 id=\"「Luogu-U18201」分析矿洞\"><a href=\"#「Luogu-U18201」分析矿洞\" class=\"headerlink\" title=\"「Luogu-U18201」分析矿洞\"></a><a href=\"https://www.luogu.org/problemnew/show/U18201\">「Luogu-U18201」分析矿洞</a></h3><p>不知道从哪翻出来的题（</p>\n<p>是某场个人邀请赛的$\\text{T}1$<del>，从某种意义上也能看出那场比赛有多么神仙</del>。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{n}\\varphi(\\text{gcd}^{2}(i,j))&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(x)\\lfloor\\cfrac{n}{dx}\\rfloor^{2}\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}\\varphi(j^{2})\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}j\\varphi(j)\\mu(\\cfrac{i}{j})\n\\end{aligned}</script><p>设$f_1(n)=n\\varphi(n),f_2(n)=\\mu(n)$，考虑筛$f=f_1\\times f_2$的前缀和。然而，与上面的其它题不同，并不存在一个$g$使我们能够$O(1)$地求出$g$和$f\\times g$的前缀和。一种较优的方案是，令$g=1$，$f\\times g=(id\\cdot\\varphi)\\times\\mu\\times 1=id\\cdot\\varphi$，这样，我们还需要筛出$f_1(n)=n\\varphi(n)$的前缀和。</p>\n<p>怎么办？</p>\n<p>再套一层杜教筛！</p>\n<p>然而可能是常数会有些大也可能是我太菜了自带大常数，好像会跑的很慢（</p>\n<p>以及，像这种$n$爆了<code>int</code>的，一定要注意经常取模。<del>因为这个WA了好几次（</del></p>\n<p>最后，源文件$17\\text{KB}​$祭，blog翻页祭。</p>\n","site":{"data":{}},"excerpt":"<p>最近在洛谷日报的待审核列表里翻到了杜教筛的相关内容，打算连着之前的卷积反演啥的一起复习一下。</p>\n<p><del>抄袭来源</del>参考文献：</p>\n<ul>\n<li><a href=\"https://lx-2003.blog.luogu.org/mobius-inversion\">铃悬的数学小讲堂——狄利克雷卷积与莫比乌斯反演</a></li>\n<li><a href=\"https://www.luogu.org/blog/54745/dls-tql\">浅谈杜教筛</a></li>\n<li><a href=\"https://lx-2003.blog.luogu.org/dujiao-sieve\">铃悬的数学小讲堂——杜教筛</a></li>\n</ul>","more":"<h1 id=\"数论函数\"><a href=\"#数论函数\" class=\"headerlink\" title=\"数论函数\"></a>数论函数</h1><h2 id=\"定义与相关性质\"><a href=\"#定义与相关性质\" class=\"headerlink\" title=\"定义与相关性质\"></a>定义与相关性质</h2><p>数论函数就是定义域为$\\mathbb{N}^{+}$的函数。</p>\n<p>两个数论函数相加，就是简单地把函数值相加。</p>\n<script type=\"math/tex; mode=display\">(f+g)(n)=f(n)+g(n)</script><p>数乘也是类似的。</p>\n<script type=\"math/tex; mode=display\">(\\alpha f)(n)=\\alpha f(n)</script><p>点积也是类似的。</p>\n<script type=\"math/tex; mode=display\">(f\\cdot g)(n)=f(n)g(n)</script><p><del>好像没啥用。</del></p>\n<p>在数论函数相关的运算中，一个非常重要的运算是狄利克雷卷积。两个数论函数的狄利克雷卷积是这样定义的：</p>\n<script type=\"math/tex; mode=display\">(f\\times g)(n)=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})</script><p>或者说：</p>\n<script type=\"math/tex; mode=display\">(f\\times g)(n)=\\sum\\limits_{ij=n}f(i)g(j)</script><p>它具有以下的一些性质：</p>\n<p>交换律，即$f\\times g=g\\times f$。</p>\n<p>这很明显。</p>\n<p>结合律，即$(f\\times g)\\times h=f\\times(g\\times h)$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n((f\\times g)\\times h)(n)&=\\sum\\limits_{ij=n}(\\sum\\limits_{kl=i}f(k)g(l))h(j)\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times(g\\times h))(n)&=\\sum\\limits_{ij=n}f(i)(\\sum\\limits_{kl=j}g(k)h(l))\\\\\n&=\\sum\\limits_{ijk=n}f(i)g(j)h(k)\n\\end{aligned}</script><p>分配率，即$(f+g)\\times h=f\\times h+g\\times h$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n((f+g)\\times h)(n)&=\\sum\\limits_{ij=n}(f+g)(i)h(j)\\\\\n&=\\sum\\limits_{ij=n}f(i)h(j)+g(i)h(j)\\\\\n&=(f\\times h)(n)+(g\\times h)(n)\n\\end{aligned}</script><p>单位元为$\\epsilon(n)=[n=1]$，$f\\times\\epsilon =f$。</p>\n<p>这也很明显。</p>\n<p>对于任意一个满足$f(1)\\neq 0$的函数$f$，都存在唯一的一个函数$g$使得$f\\times g=\\epsilon$。这时我们称$g$是$f$的逆。</p>\n<p>我们可以这样定义一个函数的逆：</p>\n<script type=\"math/tex; mode=display\">g(n)=\\cfrac{\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})}{f(1)}</script><p>这样我们就有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=f(1)g(n)+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)-\\sum\\limits_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})+\\sum_{i\\mid n,i\\neq 1}f(i)g(\\cfrac{n}{i})\\\\\n&=\\epsilon(n)\n\\end{aligned}</script><h2 id=\"积性函数与完全积性函数\"><a href=\"#积性函数与完全积性函数\" class=\"headerlink\" title=\"积性函数与完全积性函数\"></a>积性函数与完全积性函数</h2><p>如果一个数论函数$f$满足</p>\n<script type=\"math/tex; mode=display\">\\forall x,y\\in\\mathbb{N}^{+}\\wedge x\\perp y\\;\\;f(xy)=f(x)f(y)</script><p>我们就说$f$是一个积性函数。</p>\n<p>特别的，如果上式去掉$x\\perp y$仍成立，则称$f$是一个完全积性函数。</p>\n<p>很明显地，任意一个积性函数$f$一定有$f(1)=1$，这样才能有$f(1\\times n)=f(1)\\times f(n)=f(n)$。</p>\n<p>常见的完全积性函数有$\\epsilon,id^{k}$。$\\epsilon$在上文已经提到过。$id^{k}(n)=n^k$。这两个函数的完全积性十分明显。</p>\n<p>常见的积性函数有$\\varphi,d,\\sigma$。$\\varphi(n)$的值等于小于等于$n$且与$n$互质的正整数的数量。$d(n)$和$\\sigma(n)$的值分别等于$n$的约数个数和约数和。</p>\n<p>关于$\\varphi$的积性，我并不会证（</p>\n<p>我们来分析$d$的积性。首先，根据唯一分解定理，$n$的每个因数都可以唯一地分解成$n$所有质因子的非负整数次幂乘积。不妨设</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>其中$p_{i}$都是质数，所有$r_{i}$都是正整数。对于每一个$p_{i}$，它的指数有$(r_{i}+1)$种取值，因而我们有</p>\n<script type=\"math/tex; mode=display\">d(n)=\\prod\\limits_{i=1}^{N}(r_{i}+1)</script><p>我们再假设有一个$m$，且</p>\n<script type=\"math/tex; mode=display\">m=\\prod\\limits_{i=1}^{M}q_{i}^{s_{i}}</script><p>如果说$n\\perp m$，肯定有</p>\n<script type=\"math/tex; mode=display\">\\forall i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z}\\;\\;p_{i}\\neq q_{j}</script><p>于是我们就有</p>\n<script type=\"math/tex; mode=display\">nm=(\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}})(\\prod\\limits_{j=1}^{M}q_{j}^{s_{j}})</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nd(nm)&=(\\prod\\limits_{i=1}^{N}(r_{i}+1))(\\prod\\limits_{j=1}^{M}(s_{j}+1))\\\\\n&=d(n)d(m)\n\\end{aligned}</script><p>不妨再反过来考虑。如果说$n\\not\\perp m$，那么一定存在一对$(i,j)(i\\in [1,N]\\cap\\mathbb{Z},j\\in [1,M]\\cap\\mathbb{Z})$，使得$p_{i}=q_{j}$。那么$d(n)d(m)$就会有一个因子是$(r_{i}+1)(s_{j}+1)=r_{i}s_{j}+r_{i}+s_{j}+1$。但是仔细思考我们会发现，$d(nm)$中对应的项应该是$r_{i}+s_{j}+1$。因而此时$d(nm)\\neq d(n)d(m)$。</p>\n<p>我们再来分析$\\sigma$的积性。还是设</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>其中$p_{i}$都是质数，所有$r_{i}$都是正整数。与$d$不同的是，现在我们是要用$p_{i}$乘出$n$的因数，$p_{i}$在此过程中可以产生的贡献为$p_{i}^x(x\\in [0,r_{i}]\\cap\\mathbb{Z})$。我们可以把这想象成一个$N$个数组，第$i$个数组的长度为$r_{i}+1$，第$j$个元素为$p_{i}^{j-1}$。现在我们每次从每个数组里选出恰好一个元素相乘，要求所有方案的乘积之和。我们知道，这个问题的答案就是</p>\n<script type=\"math/tex; mode=display\">\\prod\\limits_{i=1}^{N}\\sum\\limits_{j=0}^{r_{i}}p_{i}^{j}</script><p>这正是$\\sigma(n)$的值。</p>\n<p>接下来的过程就与上文证明$d$的积性如出一辙了，在此不再重复。</p>\n<p>现在我们来分析，两个积性函数的卷积是否也是积性函数。<del>虽然说都这么问了肯定就是了。</del></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)(f\\times g)(m)&=(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(i)g(\\cfrac{n}{i})f(j)g(\\cfrac{m}{j})\\\\\n&=\\sum\\limits_{i\\mid n}\\sum\\limits_{j\\mid m}f(ij)g(\\cfrac{nm}{ij})\\\\\n&=\\sum\\limits_{k\\mid nm}f(k)g(\\cfrac{nm}{k})\\\\\n&=(f\\times g)(nm)\n\\end{aligned}</script><p>关于上面的第四个等号。时刻注意$n\\perp m$，在这种前提下，我们枚举到的$i$和$j$一定也是互质的，那么$ij$的所有值一定是互不相同的。这从$d(nm)=d(n)d(m)$这一等式中也能看出。</p>\n<p>再接下来，我们来分析一下一个积性函数的逆是否也是积性函数。</p>\n<p>设有一个积性函数$f$，它的逆是$g$。</p>\n<p>当$nm=1$时，$g(1)=1$。</p>\n<p>当$nm&gt;1$时，我们假设对于任意$n^{\\prime}m^{\\prime}&lt;nm$，都有$g(n^{\\prime}m^{\\prime})=g(n^{\\prime})g(m^{\\prime})$。此时</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(nm)&=-\\sum\\limits_{k\\mid nm,k\\neq 1}f(k)g(\\cfrac{nm}{k})\\\\\n&=-\\sum\\limits_{i\\mid n,j\\mid m,ij\\neq 1}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-\\sum\\limits_{i\\mid n,j\\mid m}f(i)f(j)g(\\cfrac{n}{i})g(\\cfrac{m}{j})\\\\\n&=g(n)g(m)-(\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i}))(\\sum\\limits_{j\\mid m}f(j)g(\\cfrac{m}{j}))\\\\\n&=g(n)g(m)-\\epsilon(n)\\epsilon(m)\\\\\n&=g(n)g(m)\n\\end{aligned}</script><p><del>其实上面这些全都是抄来的（</del></p>\n<h1 id=\"莫比乌斯反演\"><a href=\"#莫比乌斯反演\" class=\"headerlink\" title=\"莫比乌斯反演\"></a>莫比乌斯反演</h1><h2 id=\"正向反演\"><a href=\"#正向反演\" class=\"headerlink\" title=\"正向反演\"></a>正向反演</h2><p>定义$\\mu$为$1$的逆。也就是说，$\\mu\\times 1=\\epsilon$。</p>\n<p>如果您看过其他的一些关于莫比乌斯反演的学习笔记的话，您可能会看到如下的定义：</p>\n<blockquote>\n<p>首先地，$\\mu(1)=1$。当$n&gt;1$时，如果$n$的所有质因子互不相同，设其有$k$个质因子，那么$\\mu(n)=(-1)^{k}$。否则，$\\mu(n)=0$。</p>\n</blockquote>\n<p>那么，这两种定义等价吗？</p>\n<p>考虑到$\\mu$是一个积性函数，对于任意一个$n&gt;1$，如果我们把它分解成</p>\n<script type=\"math/tex; mode=display\">n=\\prod\\limits_{i=1}^{N}p_{i}^{r_{i}}</script><p>我们就有</p>\n<script type=\"math/tex; mode=display\">\\mu(n)=\\prod\\limits_{i=1}^{N}\\mu(p_{i}^{r_{i}})</script><p>因此，确定一个积性函数的函数值的关键在于确定其在质数的非负整数次幂上的取值。</p>\n<p>设有一个质数$p$。不难发现</p>\n<script type=\"math/tex; mode=display\">\\mu(p)=-\\mu(1)=-1</script><script type=\"math/tex; mode=display\">\\mu(p^{2})=-\\mu(1)-\\mu(p)=-1+1=0</script><script type=\"math/tex; mode=display\">\\mu(p^{3})=-\\mu(1)-\\mu(p)-\\mu(p^{2})=-1+1+0=0</script><script type=\"math/tex; mode=display\">\\vdots</script><p>至此，不难看出上文给出的两种定义是等价的。</p>\n<p>那么这个东西有什么用呢？</p>\n<p>我们设</p>\n<script type=\"math/tex; mode=display\">F(n)=\\sum\\limits_{i\\mid n}f(i)</script><p>或者等价地说，$F=f\\times 1$。我们可以得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF&=f\\times 1\\\\\nF\\times\\mu&=f\\times 1\\times\\mu\\\\\nF\\times\\mu&=f\n\\end{aligned}</script><p>像这样，如果说$F$相对好求，而$f$相对难求，我们就可以通过上式来减小我们求解$f$的难度。具体地说</p>\n<script type=\"math/tex; mode=display\">f(n)=\\sum\\limits_{i\\mid n}F(i)\\mu(\\cfrac{n}{i})</script><h2 id=\"反向反演\"><a href=\"#反向反演\" class=\"headerlink\" title=\"反向反演\"></a>反向反演</h2><p>有些时候我们还需要用到像下面这样反过来的莫比乌斯反演</p>\n<script type=\"math/tex; mode=display\">F(n)=\\sum\\limits_{n\\mid d}f(d)⇔f(n)=\\sum\\limits_{n\\mid d}F(d)\\mu(\\cfrac{d}{n})</script><p>我们可以定义一种新的运算</p>\n<script type=\"math/tex; mode=display\">(f\\otimes g)(n)=\\sum\\limits_{n\\mid d}f(d)g(\\cfrac{d}{n})</script><p>我们不难证明出它具有结合律。具体过程与上文证明狄利克雷卷积的结合律的过程基本重复。那么我们就有</p>\n<script type=\"math/tex; mode=display\">F=f\\otimes 1⇔F\\otimes\\mu=f</script><p>于是就有了上面的反向反演。</p>\n<blockquote>\n<p>Updated on 2018-12-03</p>\n<p>例题……还是算了吧（</p>\n<p>发现反演常用的套路都忘的差不多了，还是别丢人了（</p>\n</blockquote>\n<h1 id=\"杜教筛\"><a href=\"#杜教筛\" class=\"headerlink\" title=\"杜教筛\"></a>杜教筛</h1><h2 id=\"实现与模板题\"><a href=\"#实现与模板题\" class=\"headerlink\" title=\"实现与模板题\"></a>实现与模板题</h2><p>接下来才是主要内容。</p>\n<p>现在，我们要求一个积性函数的前$n$项和。$n\\leqslant 10^{10}$。</p>\n<p>我们定义</p>\n<script type=\"math/tex; mode=display\">S(n)=\\sum\\limits_{i=1}^{n}f(i)</script><p>再拿来一个积性函数$g$，然后把它与$f$卷积并求前缀和。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum_{i=1}^{n}(f\\times g)(i)&=\\sum_{i=1}^{n}\\sum_{j\\mid i}f(j)g(\\cfrac{i}{j})\\\\\n&=\\sum_{i=1}^{n}g(i)\\sum_{j=1}^{\\lfloor\\frac{n}{i}\\rfloor}f(j)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}</script><p>然而我的语文实在是太菜了，大概说也说不明白，自行理解吧（</p>\n<p>因为$g$也是积性函数，有$g(1)=1$，所以</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nS(n)&=g(1)S(n)\\\\\n&=\\sum_{i=1}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\\\\\n&=\\sum_{i=1}^{n}(f\\times g)(i)-\\sum_{i=2}^{n}g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)\n\\end{aligned}</script><p>就是说从第一项开始的前缀和减去从第二项开始的前缀和等于第一项本身。</p>\n<p>如果说我们选择的$g$可以让我们迅速地求出$f\\times g$和$g$的前缀和，我们就可以做到快速求$f$的前缀和了。</p>\n<p>关于后面的$g(i)S(\\lfloor\\cfrac{n}{i}\\rfloor)$，如果直接暴力算复杂度会是$O(n)$的，在大部分情况下，这是无法接受的。</p>\n<p>我们来分析一下$\\lfloor\\cfrac{n}{i}\\rfloor$。如果$1\\leqslant i\\leqslant\\sqrt{n}$，因为$i$只有$\\sqrt{n}$种不同的取值，$\\lfloor\\cfrac{n}{i}\\rfloor$同样也只有$\\sqrt{n}$种不同的取值。如果$\\sqrt{n}&lt;i\\leqslant n$，$1\\leqslant\\lfloor\\cfrac{n}{i}\\rfloor&lt;\\sqrt{n}$，又因为要向下取整，自然也只有$\\sqrt{n}$种不同的取值。如果我们能够把$\\lfloor\\cfrac{n}{i}\\rfloor$相同的$i$一起计算，就能够将时间杂度优化到$O(\\sqrt{n})$。</p>\n<p>大体代码如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">1</span>,r;l&lt;=n;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    r=n/(n/l);</span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>关于$r$的这个上界是怎么来的，我并不会证（</p>\n<p>这样一来，要计算$S(n)$，我们需要调用所有的$\\lfloor\\cfrac{n}{x}\\rfloor$，分别是$\\lfloor\\cfrac{n}{1}\\rfloor,\\lfloor\\cfrac{n}{2}\\rfloor,\\cdots,\\lfloor\\cfrac{n}{\\sqrt{n}}\\rfloor,\\sqrt{n},\\sqrt{n}-1,\\cdots,1$。单独计算一个$S(n)$的时间复杂度很明显是$O(\\sqrt{n})$的。那么这样一来，总体的时间复杂度就是</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nO(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{i}+\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})&=O(\\sum\\limits_{i=1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor})\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\lfloor\\cfrac{n}{x}\\rfloor}dx)\\\\\n&=O(\\int\\limits_{1}^{\\sqrt{n}}\\sqrt{\\cfrac{n}{x}}dx)\\\\\n&=O(2n^{\\frac{1}{2}}(n^{\\frac{1}{4}}-1))\\\\\n&=O(n^{\\frac{3}{4}})\n\\end{aligned}</script><p>因为相比之下$\\sqrt{\\lfloor\\cfrac{n}{i}\\rfloor}$很明显要大一些，我们就可以将$\\sqrt{i}$舍去。然后去掉取整符号并用积分近似。</p>\n<p>这个实现方法还可以优化。具体来讲，我们先线性筛出前$m$项，然后再用杜教筛。这么做的时间复杂度是$O(m+\\cfrac{n}{\\sqrt{m}})$，当$m=n^{\\frac{2}{3}}$时取得最小值$O(n^{\\frac{2}{3}})$。</p>\n<p>举个例子，就比如说我们要求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\varphi(i)</script><p>我们取$f=\\varphi,g=1$，这样根据$\\varphi$的性质，$f\\times g=id$。不难看出$g$与$f\\times g$的前缀和都可以$O(1)$求。具体的代码实现差不多长这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">getSum</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&lt;=maxn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> phi[n];</span><br><span class=\"line\">    <span class=\"comment\">//phi是提前线性筛好的前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ans.count(n))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans[n];</span><br><span class=\"line\">    <span class=\"comment\">//ans用来实现记忆化的哈希表，比如说unordered_map</span></span><br><span class=\"line\">    re <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res=<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">//f*g的前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> l=<span class=\"number\">2</span>,r;l&lt;=n;l=r+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//注意要从2开始</span></span><br><span class=\"line\">        r=n/(n/l);</span><br><span class=\"line\">        res-=(r-l+<span class=\"number\">1</span>)*getSum(n/l);</span><br><span class=\"line\">        <span class=\"comment\">//r-l+1是g的前缀和</span></span><br><span class=\"line\">        <span class=\"comment\">//像这样递归+记忆化求解f的前缀和</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans[n]=res;</span><br><span class=\"line\">    <span class=\"comment\">//返回的时候不要忘记存一下</span></span><br><span class=\"line\">    <span class=\"comment\">//就比如说我就忘过一次（</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以及，不用哈希表也是可以的。因为我们查询的数都是形如$\\lfloor\\cfrac{n}{x}\\rfloor$的，当这个值大于$n^{\\frac{2}{3}}$，即$x&lt;n^{\\frac{1}{3}}$时，我们才会到哈希表里查询。因此我们可以令<code>ans[x]</code>表示$S(\\lfloor\\cfrac{n}{x}\\rfloor)$。具体代码我就不写了（</p>\n<p>再举个例子，求</p>\n<script type=\"math/tex; mode=display\">\\sum\\limits_{i=1}^{n}\\mu(i)</script><p>取$f=\\mu,g=1,f\\times g=\\epsilon$。代码和上面差不多。</p>\n<p>如果您理解了上面两个函数，这道<a href=\"https://www.luogu.org/problemnew/show/P4213\">模板题</a>您就可以切了。</p>\n<h2 id=\"其他题\"><a href=\"#其他题\" class=\"headerlink\" title=\"其他题\"></a>其他题</h2><h3 id=\"「Luogu-P3768」简单的数学题\"><a href=\"#「Luogu-P3768」简单的数学题\" class=\"headerlink\" title=\"「Luogu-P3768」简单的数学题\"></a><a href=\"https://www.luogu.org/problemnew/show/P3768\">「Luogu-P3768」简单的数学题</a></h3><p>快乐地推式子：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum\\limits_{i=1}^{n}i\\sum\\limits_{j=1}^{n}j\\text{gcd}(i,j)&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}j\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}d^{3}\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}x^{2}\\mu(x)\\text{Sum}^{2}(\\lfloor\\cfrac{n}{dx}\\rfloor)\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\sum\\limits_{j\\mid i}j\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\text{Sum}^{2}(\\lfloor\\cfrac{n}{i}\\rfloor)i^{2}\\varphi(i)\n\\end{aligned}</script><p>其中</p>\n<script type=\"math/tex; mode=display\">\\text{Sum}(n)=\\sum\\limits_{i=1}^{n}i</script><p>最后一步是因为</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nid\\times\\mu&=\\varphi\\times 1\\times\\mu\\\\\n&=\\varphi\\times\\epsilon\\\\\n&=\\varphi\n\\end{aligned}</script><p>理解不了上面的式子的话就多看看吧（</p>\n<p>不难发现我们是要求$f(n)=n^{2}\\varphi(n)$的前缀和，那么，我们该怎么选取$g$呢？</p>\n<p><del>枚举瞎蒙（</del></p>\n<p>考虑$g(n)=n^{2}$。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(f\\times g)(n)&=\\sum\\limits_{i\\mid n}f(i)g(\\cfrac{n}{i})\\\\\n&=\\sum\\limits_{i\\mid n}i^{2}\\varphi(i)\\cfrac{n^{2}}{i^{2}}\\\\\n&=n^{2}\\sum\\limits_{i\\mid n}\\varphi(i)\\\\\n&=n^{3}\n\\end{aligned}</script><p><del>其实我都不知道我当时是怎么想到这种操作的（</del></p>\n<p>然后就和上面一样了。</p>\n<h3 id=\"「Luogu-U18201」分析矿洞\"><a href=\"#「Luogu-U18201」分析矿洞\" class=\"headerlink\" title=\"「Luogu-U18201」分析矿洞\"></a><a href=\"https://www.luogu.org/problemnew/show/U18201\">「Luogu-U18201」分析矿洞</a></h3><p>不知道从哪翻出来的题（</p>\n<p>是某场个人邀请赛的$\\text{T}1$<del>，从某种意义上也能看出那场比赛有多么神仙</del>。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{n}\\varphi(\\text{gcd}^{2}(i,j))&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}[i\\perp j]\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{i=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{x\\mid i,x\\mid j}\\mu(x)\\\\\n&=\\sum\\limits_{d=1}^{n}\\varphi(d^{2})\\sum\\limits_{x=1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(x)\\lfloor\\cfrac{n}{dx}\\rfloor^{2}\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}\\varphi(j^{2})\\mu(\\cfrac{i}{j})\\\\\n&=\\sum\\limits_{i=1}^{n}\\lfloor\\cfrac{n}{i}\\rfloor^{2}\\sum\\limits_{j\\mid i}j\\varphi(j)\\mu(\\cfrac{i}{j})\n\\end{aligned}</script><p>设$f_1(n)=n\\varphi(n),f_2(n)=\\mu(n)$，考虑筛$f=f_1\\times f_2$的前缀和。然而，与上面的其它题不同，并不存在一个$g$使我们能够$O(1)$地求出$g$和$f\\times g$的前缀和。一种较优的方案是，令$g=1$，$f\\times g=(id\\cdot\\varphi)\\times\\mu\\times 1=id\\cdot\\varphi$，这样，我们还需要筛出$f_1(n)=n\\varphi(n)$的前缀和。</p>\n<p>怎么办？</p>\n<p>再套一层杜教筛！</p>\n<p>然而可能是常数会有些大也可能是我太菜了自带大常数，好像会跑的很慢（</p>\n<p>以及，像这种$n$爆了<code>int</code>的，一定要注意经常取模。<del>因为这个WA了好几次（</del></p>\n<p>最后，源文件$17\\text{KB}​$祭，blog翻页祭。</p>"},{"mathjax":true,"date":"2018-12-19T12:23:01.000Z","title":"「多项式学习笔记Part I」最基本的多项式乘法","_content":"最近正好月考，然而并不想去月考，于是来颓blog吧。\n\n<!-- more -->\n\n给你一个$n-1$次多项式$F(x)$和一个$m-1$次多项式$G(x)$，让你求$(F\\times G)(x)$的各项系数。$n,m\\leqslant 10^{6}$。\n\n我们不妨将$F(x)$的$i$次项系数记为$F[i]$\n\n$$F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}$$\n\n$$G(x)=\\sum\\limits_{i=0}^{m-1}G[i]x^{i}$$\n\n$$(F\\times G)(x)=\\sum\\limits_{i=0}^{n-1}\\sum\\limits_{j=0}^{m-1}F[i]G[j]x^{i+j}$$\n\n$$(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]$$\n\n不难发现直接暴力算是$O(n^{2})$的，因此我们需要优化。\n\n不过为了优化，我们得先扯远点。\n\n# 点值表达\n\n如果我们选取$n$个点$(x_{0},y_{0}),(x_{1},y_{1}),\\cdots,(x_{n-1},y_{n-1})$，并且其中$x_{i}$两两不同，我们就可以唯一地确定出一个$n-1$次多项式。\n\n就比如说\n\n$$(0,2),(1,7),(2,4)$$\n\n~~瞎写的（~~\n\n我们可以列出如下的三元一次方程组：\n\n$$\\begin{cases}\n&\\text{C}=2\\\\\n&\\text{A}+\\text{B}+\\text{C}=7\\\\\n&4\\text{A}+2\\text{B}+\\text{C}=4\n\\end{cases}$$\n\n解得\n\n$$\\begin{cases}\n&\\text{A}=-4\\\\\n&\\text{B}=9\\\\\n&\\text{C}=2\n\\end{cases}$$\n\n注意到$(F\\times G)(x)=F(x)G(x)$~~（废话）~~，我们只要知道了$F(x)$和$G(x)$的点值表达，就可以$O(n)$的计算出$(F\\times G)(x)$的点值表达了。因为$(F\\times G)(x)$的次数是$n+m-2$，我们选出前$n+m-1$个自然数即可。\n\n但是这还不够。注意到，如果我们选取的点的横坐标如果很普通，我们首先需要$O(n^{2})$转成点值表达，乘完之后又要转回系数表达，效率甚至不如暴力（\n\n于是我们还需要优化，于是我们还需要再扯远一点。\n\n# 复数\n\n对，你没看错，扯到复数了。\n\n## 基本概念\n\n根据初中学习的数学知识，我们知道有些一元二次方程是没有实数根的。就比如说\n\n$$x^{2}+1=0$$\n\n我们知道，它的判别式是$\\Delta=b^{2}-4ac=-4\\lt 0$，因此它没有实数根。\n\n于是我们就定义了虚数单位$i$，并规定$i^{2}=-1$。形如$x+yi$这样的数被称为复数。它的模长被定义为它到原点的距离，即$\\sqrt{x^{2}+y^{2}}$；幅角被定义为与$x$轴正半轴的夹角，即$\\operatorname{tan}^{-1}\\cfrac{y}{x}$。\n\n因为$i$不是实数，它不能被画在我们现有的数轴上。那我们就再拿来一条数轴，将两条数轴垂直放置，垂足为原点。或者说，我们可以将这理解成平面直角坐标系，$x$就是实轴，$y$轴就是虚轴，$x+yi$就对应了点$(x,y)$。\n\n![](https://i.loli.net/2018/12/19/5c1a46b4d785b.png)\n\n上图展示了$4+i$和$3+4i$。\n\n复数的运算其实没什么出乎意料的：\n\n$$(x_{1}+y_{1}i)+(x_{2}+y_{2}i)=(x_{1}+x_{2})+(y_{1}+y_{2})i$$\n\n$$(x_{1}+y_{1}i)-(x_{2}+y_{2}i)=(x_{1}-x_{2})+(y_{1}-y_{2})i$$\n\n$$(x_{1}+y_{1}i)(x_{2}+y_{2}i)=(x_{1}x_{2}-y_{1}y_{2})+(x_{1}y_{2}+x_{2}y_{1})i$$\n\n$$\\begin{aligned}\n\\cfrac{x_{1}+y_{1}i}{x_{2}+y_{2}i}&=\\cfrac{(x_{1}+y_{1}i)(x_{2}-y_{2}i)}{(x_{2}+y_{2}i)(x_{2}-y_{2}i)}\\\\\n&=\\cfrac{(x_{1}x_{2}+y_{1}y_{2})+(x_{2}y_{1}-x_{1}y_{2})i}{x_{2}^{2}+y_{2}^{2}}\\\\\n&=\\cfrac{x_{1}x_{2}+y_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}+\\cfrac{x_{2}y_{1}-x_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}i\n\\end{aligned}$$\n\n我们来单独考虑一下复数相乘的几何意义。\n\n假设我们有两个复数$c_{1}$，$c_{2}$，它们的模长分别是$r_{1}$，$r_{2}$，幅角分别是$\\alpha_{1}$，$\\alpha_{2}$。不难发现我们有\n\n$$c_{1}=r_{1}(\\operatorname{cos}\\alpha_{1}+i\\operatorname{sin}\\alpha_{1})$$\n\n$$c_{2}=r_{2}(\\operatorname{cos}\\alpha_{2}+i\\operatorname{sin}\\alpha_{2})$$\n\n$$\\begin{aligned}\nc_{1}c_{2}&=r_{1}r_{2}(\\cos\\alpha_{1}+i\\sin\\alpha_{1})(\\cos\\alpha_{2}+i\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}(\\cos\\alpha_{1}\\cos\\alpha_{2}+i\\cos\\alpha_{1}\\sin\\alpha_{2}+i\\sin\\alpha_{1}\\cos\\alpha_{2}-\\sin\\alpha_{1}\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}[\\cos(\\alpha_{1}+\\alpha_{2})+i\\sin(\\alpha_{1}+\\alpha_{2})]\n\\end{aligned}$$\n\n总结成一句话，就是「模长相乘，幅角相加」。\n\n## 单位圆与单位根\n\n单位圆就是指半径为$1$的圆。不过一般我们都是把它画在原点的。\n\n![](https://i.loli.net/2018/12/20/5c1b06e5602fa.png)\n\n考虑这么一个方程\n\n$$x^{n}=1$$\n\n它的所有复数根。\n\n因为复数相乘意味着模长相乘，如果一个复数的$n$次方等于$1$，它自身的模长也应该是$1$。如果它的幅角是$a$，我们应该有\n\n$$2\\pi\\mid na$$\n\n$$\\cfrac{2\\pi}{n}\\mid a$$\n\n不难想象出我们有$n$个这样的复数，它们的幅角通式是$\\cfrac{2k\\pi}{n}(k\\in[0,n)\\cap\\mathbb{Z})$。我们称其中幅角等于$\\cfrac{2\\pi}{n}$的复数，即$\\cos\\cfrac{2\\pi}{n}+i\\sin\\cfrac{2\\pi}{n}$为$n$次单位根$\\omega_{n}$，我们就可以把这$n$个复数表示为$\\omega_{n}^{k}(k\\in[0,n)\\cap\\mathbb{Z})$。\n\n它有如下的一些性质\n\n$$\\omega_{2n}^{2k}=\\omega_{n}^{k}$$\n\n因为它们的模长都是$1$，幅角相等就相等了。\n\n然后就没了，读者自证不难（\n\n$$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$$\n\n因为$\\omega_{n}^{\\frac{n}{2}}$的幅角是$\\cfrac{2\\times\\frac{n}{2}\\pi}{n}=\\pi$，不难发现它就是$-1$了。\n\n# 快速傅里叶变换（Fast Fourier Transformation）\n\n## 运行过程\n\n那么问题来了，我们刚才扯了这么些，有什么用呢？\n\n就是说，有个叫「让·巴普蒂斯·约瑟夫·傅里叶」（Jean Baptiste Joseph Fourier）的神仙有一天大开脑洞，掏出$n$次单位根想要求点值表达。\n\n首先，我们通过在高次补$0$的方式，将这个多项式的项数（也就是次数$+1$）补到$2$的非负整数次幂。\n\n然后一巴掌把这个多项式拍成两半，按奇偶性拼成两个多项式：\n\n$$\\begin{aligned}\nF_{1}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i]x^{i}\\\\\n&=F[0]x^{0}+F[2]x^{1}+\\cdots+F[n-2]x^{\\frac{n}{2}-1}\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF_{2}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i+1]x^{i}\\\\\n&=F[1]x^{0}+F[3]x^{1}+\\cdots+F[n-1]x^{\\frac{n}{2}-1}\n\\end{aligned}$$\n\n于是我们有\n\n$$F(x)=F_{1}(x^{2})+xF_{2}(x^{2})$$\n\n现在我们假设$0\\leqslant k<\\cfrac{n}{2}$，将$x=\\omega_{n}^{k}$和$x=\\omega_{n}^{k+\\frac{n}{2}}$代入\n\n$$\\begin{aligned}\nF(\\omega_{n}^{k})&=F_{1}(\\omega_{n}^{2k})+\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})+\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF(\\omega_{n}^{k+\\frac{n}{2}})&=F_{1}(\\omega_{n}^{2k+n})+\\omega_{n}^{k+\\frac{n}{2}}F_{2}(\\omega_{n}^{2k+n})\\\\\n&=F_{1}(\\omega_{n}^{2k})-\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})-\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}$$\n\n我们注意到，如果说我们求出了$F_{1}(x)$和$F_{2}(x)$的点值表达，我们就能够$O(n)$地求出$F(x)$的点值表达了。至此，我们不难想到分治，边界条件就是$n=1$，这时什么也不用做直接返回即可。\n\n简单地贴一下代码：\n\n```cpp\nvoid work(complex* F,int n){\n\tif(n==1)\n\t\treturn;\n\tcomplex F1[n>>1],F2[n>>1];\n    for(int i=0;i<n;i+=2){\n    \tF1[i]=F[2*i];\n        F2[i]=F[2*i+1];\n\t}\n    work(F1,n>>1);\n    work(F2,n>>1);\n    complex unit(cos(2*Pi/n),sin(2*Pi/n)),tmp=1;\n    for(int i=0;i<(n>>1);++i,tmp=tmp*unit){\n    \tcomplex w=F2[i+(n>>1)]*tmp;\n        F[i]=F1[i]+w;\n        F[i+(n>>1)]=F1[i]-w;\n\t}\n}\n```\n\n不过，以上代码是我现写出来的，~~保证其不正确性~~不保证其正确性。\n\n不过，这样递归运算效率还是太低了。我们来考虑一下，递归到底层后，`F`数组的每一个位置上实际存的是几次项：\n\n```plaintext\n0 1 2 3 4 5 6 7\n0 2 4 6|1 3 5 7\n0 4|2 6|1 5|3 7\n0|4|2|6|1|5|3|7\n```\n\n写成二进制看看：\n\n| 位置（十进制） | 位置（二进制） | 次数（十进制） | 次数（二进制） |\n| :-: | :-: | :-: | :-: |\n| $0$ | $000$ | $0$ | $000$ |\n| $1$ | $001$ | $4$ | $100$ |\n| $2$ | $010$ | $2$ | $010$ |\n| $3$ | $011$ | $6$ | $110$ |\n| $4$ | $100$ | $1$ | $001$ |\n| $5$ | $101$ | $5$ | $101$ |\n| $6$ | $110$ | $3$ | $011$ |\n| $7$ | $111$ | $7$ | $111$ |\n\n注意到两边的数字的二进制是镜像的。也就是说，我们只要把位置编号的二进制位的最后$\\operatorname{log}n$位左右镜像过来，就可以得到递归到最底层后，这个位置上的系数所对应的项的次数了。\n\n我们可以$O(n)$地处理处每个数的镜像：\n\n```cpp\nfor(int i=0;i<n;++i)\n\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n```\n\n中间有一个位或运算符，我们以它为分界线，将上面这行代码分成左右两部分。左边就是$i$这个数除了最后一位以外的所有位的镜像；右边特判了一下$i$的最后一位是否为$1$，如果是的话，就在最高位补一个$1$。\n\n接下来的步骤我不是很能解释得清楚，因为我也是背的板子。总之这个东西写出来差不多长这样：\n\n```cpp\nvoid work(complex* F,int n){\n\tfor(int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tcomplex unit(cos(Pi/p),sin(Pi/p));\n\t\tfor(int i=0;i<n;i+=len){\n\t\t\tcomplex cur(1,0);\n\t\t\tfor(int j=i;j<i+p;++j){\n\t\t\t\tcomplex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n那么现在还差最后一步，将点值表达转回系数表达。我们将$F(\\omega_{n}^{0}),F(\\omega_{n}^{1}),\\cdots,F(\\omega_{n}^{n-1})$分别记为$y_{0},y_{1},\\cdots,y_{n-1}$，我们求点值的过程可以用矩阵表达成这样：\n\n$$\\begin{bmatrix}\n&(\\omega_{n}^{0})^{0}&(\\omega_{n}^{0})^{1}&\\cdots&(\\omega_{n}^{0})^{n-1}&\\\\\n&(\\omega_{n}^{1})^{0}&(\\omega_{n}^{1})^{1}&\\cdots&(\\omega_{n}^{1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&(\\omega_{n}^{n-1})^{0}&(\\omega_{n}^{n-1})^{1}&\\cdots&(\\omega_{n}^{n-1})^{n-1}\\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n&F[0]&\\\\\n&F[1]\\\\\n&\\vdots\\\\\n&F[n-1]\n\\end{bmatrix}\n=\\begin{bmatrix}\n&y_{0}&\\\\\n&y_{1}\\\\\n&\\vdots\\\\\n&y_{n-1}\n\\end{bmatrix}$$\n\n我们可以试图寻找左边那个矩阵的逆矩阵。直接摆结论的话，它差不多长这样：\n\n$$\\begin{bmatrix}\n&\\frac{1}{n}(\\omega_{n}^{0})^{0}&\\frac{1}{n}(\\omega_{n}^{0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{0})^{n-1}&\\\\\n&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\n\\end{bmatrix}$$\n\n现在我们要证明这两个矩阵乘起来是单位矩阵。令第一个矩阵为$A$，第二个矩阵为$B$，$A\\times B=C$。不难发现$A[i][j]=\\omega_{n}^{ij}$，$B[i][j]=\\cfrac{1}{n}\\omega_{n}^{-ij}$，我们有\n\n$$\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}A[i][k]B[k][j]\\\\\n&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{ik-kj}\n\\end{aligned}$$\n\n若$i=j$，不难发现此时$C[i][j]=1$。\n\n否则，即$i\\neq j$，设$i-j=l$，我们有\n\n$$\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{lk}\\\\\n&=\\cfrac{\\omega_{n}^{ln}-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=\\cfrac{1-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=0\n\\end{aligned}$$\n\n综上所述，矩阵$C$是单位矩阵，因此矩阵$B$是矩阵$A$的逆矩阵。\n\n因此我们有\n\n$$\\begin{bmatrix}&\\frac{1}{n}(\\omega_{n}^{-0})^{0}&\\frac{1}{n}(\\omega_{n}^{-0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-0})^{n-1}&\\\\&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\\end{bmatrix}\\begin{bmatrix}&y_{0}&\\\\&y_{1}\\\\&\\vdots\\\\&y_{n-1}\\end{bmatrix}=\\begin{bmatrix}&F[0]&\\\\&F[1]\\\\&\\vdots\\\\&F[n-1]\\end{bmatrix}$$\n\n注意到这个过程和我们之前将系数转化为点值表达的过程极为相似。这就是在启示我们，如果说我们把之前用的$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$换成$\\omega_{n}^{0},\\omega_{n}^{-1},\\cdots,\\omega_{n}^{-n+1}$，然后对着点值表达来一遍FFT，然后再除以$n$，就得到了原多项式的系数了。\n\n注意到这两个过程只有用到的单位根不一样，我们可以将上面那段代码的\n\n```cpp\ncomplex unit(cos(Pi/p),sin(Pi/p));\n```\n\n改成\n\n```cpp\ncomplex unit(cos(Pi/p),tp*sin(Pi/p));\n```\n\n然后调用时再传一个参数`tp`进去。`tp=1`表示是系数转点值，`tp=-1`表示是点值转系数。\n\n完整代码如下：\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define maxn 2097152\n\nconst double Pi=acos(-1.0);\n\nint n,m;\nint rev[maxn+1];\nstruct complex{\n\tdouble r,c;\n\n\tcomplex(double _r=0,double _c=0){\n\t\tr=_r;\n\t\tc=_c;\n\t}\n};\ncomplex F[maxn+1],G[maxn+1];\n\ninline complex operator+(complex& a,complex& b){\n\treturn complex(a.r+b.r,a.c+b.c);\n}\n\ninline complex operator-(complex& a,complex& b){\n\treturn complex(a.r-b.r,a.c-b.c);\n}\n\ninline complex operator*(complex& a,complex& b){\n\treturn complex(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);\n}\n\ntemplate<typename _tp>\ninline void swap(_tp& x,_tp& y){\n\t_tp tmp=x;\n\tx=y;\n\ty=tmp;\n}\n\ninline void FAQ(complex F[],int tp){\n\tfor(register int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(register int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tregister complex unit(cos(Pi/p),tp*sin(Pi/p));\n\t\tfor(register int i=0;i<n;i+=len){\n\t\t\tregister complex cur(1,0);\n\t\t\tfor(register int j=i;j<i+p;++j){\n\t\t\t\tregister complex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\t++n;\n\tfor(register int i=0;i<n;++i)\n\t\tscanf(\"%d\",&F[i].r);\n\t++m;\n\tfor(register int i=0;i<m;++i)\n\t\tscanf(\"%d\",&G[i].r);\n\tfor(m+=n-1,n=1;n<m;n<<=1);\n\tfor(register int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tFAQ(F,1);\n\tFAQ(G,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF[i]=F[i]*G[i];\n\tFAQ(F,-1);\n\tfor(register int i=0;i<m;++i)\n\t\tprintf(\"%0.0lf \",F[i].r/n);\n\treturn 0;\n}\n```\n\n~~不要问我`cltstream`哪去了（~~\n\n然后您就可以切掉这道[板子题](https://www.luogu.org/problemnew/show/P3803)了。\n\n其实上面的代码是我从另一道题里复制过来然后现改的，说不定会改出错（\n\n最好还是自己写吧（\n\n什么？想知道是哪道题？往下看（\n\n## 例题\n\n### [「ZJOI2014」力](https://www.luogu.org/problemnew/show/P3338)\n\n这是一道裸的卷积题。\n\n考虑两个长度为$n$的数组$F$和$G$，现在我们想求一个数组$H$，它满足\n\n$$H[i]=\\sum\\limits_{j=0}^{i}F[j]G[i-j]=\\sum\\limits_{0\\leqslant j<n,0\\leqslant k<n,j+k=i}F[j]G[k]$$\n\n在本页面往上翻，翻到这个式子：\n\n$$(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]$$\n\n发现了吗？这两个过程其实是一样的。\n\n于是，我们如下构造两个多项式\n\n$$F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}$$\n\n$$G(x)=\\sum\\limits_{i=0}^{n-1}G[i]x^{i}$$\n\n然后直接一波FFT套上去，输出次数最低的$n$项的系数就好。\n\n那么这题呢？首先我们把$j\\lt i$和$j\\gt i$分开计算。\n\n先考虑$j\\lt i$，令$F[i]=q_{i}$，$G[i]=\\begin{cases}&\\cfrac{1}{i^{2}}\\;\\;&(i\\gt 0)\\\\&0&(i=0)\\end{cases}$，那么\n\n$$\\begin{aligned}\nE_{i}&=\\sum_{j=0}^{i-1}F[j]G[i-j]\\\\\n&=\\sum_{j=0}^{i}F[j]G[i-j]\n\\end{aligned}$$\n\n直接套板子就行。\n\n对于$j>i$的情况，我们将数组$F$左右翻转，然后继续套板子就行（\n\n具体还是看代码吧：\n\n```cpp\n#include\\lt cstdio>\n#include<cmath>\n#define maxn 2097152\n\nconst double Pi=acos(-1.0);\n\nint n,m;\nint rev[maxn+1];\nstruct complex{\n\tdouble r,c;\n\n\tcomplex(double _r=0,double _c=0){\n\t\tr=_r;\n\t\tc=_c;\n\t}\n};\ncomplex F1[maxn+1],F2[maxn+1],G[maxn+1];\n\ninline complex operator+(complex& a,complex& b){\n\treturn complex(a.r+b.r,a.c+b.c);\n}\n\ninline complex operator-(complex& a,complex& b){\n\treturn complex(a.r-b.r,a.c-b.c);\n}\n\ninline complex operator*(complex& a,complex& b){\n\treturn complex(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);\n}\n\ntemplate<typename _tp>\ninline void swap(_tp& x,_tp& y){\n\t_tp tmp=x;\n\tx=y;\n\ty=tmp;\n}\n\ninline void FAQ(complex F[],int tp){\n\tfor(register int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(register int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tregister complex unit(cos(Pi/p),tp*sin(Pi/p));\n\t\tfor(register int i=0;i<n;i+=len){\n\t\t\tregister complex cur(1,0);\n\t\t\tfor(register int j=i;j<i+p;++j){\n\t\t\t\tregister complex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(register int i=0;i<n;++i){\n\t\tscanf(\"%lf\",&F1[i].r);\n\t\tF2[n-i-1].r=F1[i].r;\n\t}\n\tfor(register int i=1;i<n;++i)\n\t\tG[i]=1.0/i/i;\n\tfor(m=n,n=1;n<m;n<<=1);\n\tn<<=1;\n\tfor(register int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tFAQ(G,1);\n\tFAQ(F1,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF1[i]=F1[i]*G[i];\n\tFAQ(F1,-1);\n\tFAQ(F2,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF2[i]=F2[i]*G[i];\n\tFAQ(F2,-1);\n\tfor(register int i=0;i<m;++i)\n\t\tprintf(\"%lf\\n\",(F1[i].r-F2[m-i-1].r)/n);\n\treturn 0;\n}\n```\n\n# 数论变换（Number-Theoretic Transformation）\n\n注意到朴素的FFT使用的是单位复根。然而它们有一个十分大的缺陷，就是必须要用`double`存。这会带来精度上的误差，一个直接的结果就是，对于只有整数参与的多项式乘法，跑完FFT却会出现小数。\n\n这就启示我们，能不能用其他的什么东西替换掉单位复根。\n\n设有两个互质的正整数$a$和$p$，最小的使得$a^{k}\\equiv 1\\pmod{p}$的$k$被称为$a$模$p$的阶，记作$\\delta_{p}(a)$。\n\n如果说$\\delta_{p}(a)=\\varphi(p)$，我们就称$a$是模$p$的一个原根。\n\n现在我们找一个质数$p=an+1$，其中$a$是一个正整数，$n$是$2$的非负整数次幂。然后我们找到它的原根$g$，并定义$\\omega_{n}=g^{a}$。让我们来看看单位复根有的性质现在的原根有没有：\n\n$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$互不相同。这是为了保证点值表达的合法。\n\n虽然我不会证，不过我们的确有$g^{0},g^{1},\\cdots,g^{n-1}$在模$p$意义下互不相同，$a$次幂自然也一样。\n\n> Updated on 2019-03-17\n>\n> 似乎这么证明有些问题？\n>\n> 原根的这个性质实际上是$g^{0},g^{1},\\cdots,g^{p-2}$在模$p$意义下互不相同。因此如果$(n-1)a<p-1$，那么上面的结论就是正确的。\n>\n> $$\\begin{aligned}\n> (n-1)a&=na-a\\\\\n> &=p-1-\\cfrac{p-1}{n}\\\\\n> &\\lt p-1\n> \\end{aligned}$$\n>\n> 以上。\n\n$\\omega_{2n}^{2k}=\\omega_{n}^{k}$。这是为了让我们可以分治。\n\n根据定义，$\\omega_{2n}=g^{\\frac{a}{2}}$，就是将现在的$p$进一步拆成$\\cfrac{a}{2}\\cdot2n+1$。不难发现\n\n$$\\omega_{2n}^{2k}=g^{\\frac{a}{2}\\cdot{2}k}=g^{ak}=\\omega_{n}^{k}$$\n\n因而原根有上述性质。\n\n$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$，或者说$\\omega_{n}^{\\frac{n}{2}}=-1$。这同样是为了让我们可以分治。\n\n因为$p=an+1$，根据费马小定理，我们有\n\n$$\\omega_{n}^{n}\\equiv g^{an}\\equiv g^{p-1}\\equiv 1\\pmod{p}$$\n\n因而$\\omega_{n}^{\\frac{n}{2}}\\equiv\\pm 1\\pmod{p}$。又因为$\\omega_{n}^{0}=1$，而$\\omega_{n}^{\\frac{n}{2}}\\not\\equiv\\omega_{n}^{0}\\pmod{p}$，我们就得到$\\omega_{n}^{\\frac{n}{2}}\\equiv -1\\pmod{p}$。\n\n若$k\\neq 0$，$\\sum_{i=0}^{n-1}(\\omega_{n}^{k})^{i}=0$。这是为了实现逆变换。不过这个很明显，就留作习题吧。\n\n以上，我们成功地用原根取代了单位复根。一般情况下，我们会取$p=998244353=7\\times 17\\times 2^{23}+1$，它的原根是$3$。\n\n需要注意的是，我们还有一个可以优化的小细节。注意到$\\omega_{n}=g^{a}=g^{\\frac{p-1}{n}}$，我们可以将这些值预处理出来，就不用每次都跑快速幂了。对于$998244353$来说，我们需要预处理$\\omega_{2},\\omega_{4},\\cdots,\\omega_{2^{23}}$。注意到\n\n$$\\omega_{2^{23}}=3^{7\\times 17}=3^{119}$$\n\n$$\\omega_{2^{k}}=\\omega_{2^{k+1}}^{2}$$\n\n我们一遍快速幂算出$\\omega_{2^{23}}$然后倒着推出剩下的即可。\n\n关于$\\omega_{n}^{-k}$，注意到它就是$\\omega_{n}^{k}$在模$998244353$意义下的逆元。那么我们把上面两个式子中的$3$换成它在模$998244353$意义下的逆元即可，这个数是$332748118$。\n\n然后我们把FFT板子里的单位复根全部换成原根，运算换成模意义下的就行了。\n\n代码：\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 2097152\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\nint unit[2][24],rev[maxn+1],F[maxn+1],G[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(int* F,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tcltstream::read(n);\n\tcltstream::read(m);\n\t++n;\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::read(F[i]);\n\t++m;\n\tfor(re int i=0;i<m;++i)\n\t\tcltstream::read(G[i]);\n\tfor(m+=n-1,n=1;n<m;n<<=1);\n\tfor(re int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tNTT(F,0);\n\tNTT(G,0);\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*G[i]%mod;\n\tNTT(F,1);\n\tn=cltpow(n,mod-2);\n\tfor(re int i=0;i<m;++i)\n\t\tcltstream::write(1LL*F[i]*n%mod,i<m-1?32:-1);\n\tclop();\n\treturn 0;\n}\n```\n\n以上。\n","source":"_posts/2018-12-19-polynomial-learning-notes-pt1.md","raw":"---\nmathjax: true\ndate: 2018-12-19 20:23:01\ntitle: 「多项式学习笔记Part I」最基本的多项式乘法\ntags:\n  - FFT\n  - NTT\ncategories:\n  - 学习笔记\n---\n最近正好月考，然而并不想去月考，于是来颓blog吧。\n\n<!-- more -->\n\n给你一个$n-1$次多项式$F(x)$和一个$m-1$次多项式$G(x)$，让你求$(F\\times G)(x)$的各项系数。$n,m\\leqslant 10^{6}$。\n\n我们不妨将$F(x)$的$i$次项系数记为$F[i]$\n\n$$F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}$$\n\n$$G(x)=\\sum\\limits_{i=0}^{m-1}G[i]x^{i}$$\n\n$$(F\\times G)(x)=\\sum\\limits_{i=0}^{n-1}\\sum\\limits_{j=0}^{m-1}F[i]G[j]x^{i+j}$$\n\n$$(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]$$\n\n不难发现直接暴力算是$O(n^{2})$的，因此我们需要优化。\n\n不过为了优化，我们得先扯远点。\n\n# 点值表达\n\n如果我们选取$n$个点$(x_{0},y_{0}),(x_{1},y_{1}),\\cdots,(x_{n-1},y_{n-1})$，并且其中$x_{i}$两两不同，我们就可以唯一地确定出一个$n-1$次多项式。\n\n就比如说\n\n$$(0,2),(1,7),(2,4)$$\n\n~~瞎写的（~~\n\n我们可以列出如下的三元一次方程组：\n\n$$\\begin{cases}\n&\\text{C}=2\\\\\n&\\text{A}+\\text{B}+\\text{C}=7\\\\\n&4\\text{A}+2\\text{B}+\\text{C}=4\n\\end{cases}$$\n\n解得\n\n$$\\begin{cases}\n&\\text{A}=-4\\\\\n&\\text{B}=9\\\\\n&\\text{C}=2\n\\end{cases}$$\n\n注意到$(F\\times G)(x)=F(x)G(x)$~~（废话）~~，我们只要知道了$F(x)$和$G(x)$的点值表达，就可以$O(n)$的计算出$(F\\times G)(x)$的点值表达了。因为$(F\\times G)(x)$的次数是$n+m-2$，我们选出前$n+m-1$个自然数即可。\n\n但是这还不够。注意到，如果我们选取的点的横坐标如果很普通，我们首先需要$O(n^{2})$转成点值表达，乘完之后又要转回系数表达，效率甚至不如暴力（\n\n于是我们还需要优化，于是我们还需要再扯远一点。\n\n# 复数\n\n对，你没看错，扯到复数了。\n\n## 基本概念\n\n根据初中学习的数学知识，我们知道有些一元二次方程是没有实数根的。就比如说\n\n$$x^{2}+1=0$$\n\n我们知道，它的判别式是$\\Delta=b^{2}-4ac=-4\\lt 0$，因此它没有实数根。\n\n于是我们就定义了虚数单位$i$，并规定$i^{2}=-1$。形如$x+yi$这样的数被称为复数。它的模长被定义为它到原点的距离，即$\\sqrt{x^{2}+y^{2}}$；幅角被定义为与$x$轴正半轴的夹角，即$\\operatorname{tan}^{-1}\\cfrac{y}{x}$。\n\n因为$i$不是实数，它不能被画在我们现有的数轴上。那我们就再拿来一条数轴，将两条数轴垂直放置，垂足为原点。或者说，我们可以将这理解成平面直角坐标系，$x$就是实轴，$y$轴就是虚轴，$x+yi$就对应了点$(x,y)$。\n\n![](https://i.loli.net/2018/12/19/5c1a46b4d785b.png)\n\n上图展示了$4+i$和$3+4i$。\n\n复数的运算其实没什么出乎意料的：\n\n$$(x_{1}+y_{1}i)+(x_{2}+y_{2}i)=(x_{1}+x_{2})+(y_{1}+y_{2})i$$\n\n$$(x_{1}+y_{1}i)-(x_{2}+y_{2}i)=(x_{1}-x_{2})+(y_{1}-y_{2})i$$\n\n$$(x_{1}+y_{1}i)(x_{2}+y_{2}i)=(x_{1}x_{2}-y_{1}y_{2})+(x_{1}y_{2}+x_{2}y_{1})i$$\n\n$$\\begin{aligned}\n\\cfrac{x_{1}+y_{1}i}{x_{2}+y_{2}i}&=\\cfrac{(x_{1}+y_{1}i)(x_{2}-y_{2}i)}{(x_{2}+y_{2}i)(x_{2}-y_{2}i)}\\\\\n&=\\cfrac{(x_{1}x_{2}+y_{1}y_{2})+(x_{2}y_{1}-x_{1}y_{2})i}{x_{2}^{2}+y_{2}^{2}}\\\\\n&=\\cfrac{x_{1}x_{2}+y_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}+\\cfrac{x_{2}y_{1}-x_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}i\n\\end{aligned}$$\n\n我们来单独考虑一下复数相乘的几何意义。\n\n假设我们有两个复数$c_{1}$，$c_{2}$，它们的模长分别是$r_{1}$，$r_{2}$，幅角分别是$\\alpha_{1}$，$\\alpha_{2}$。不难发现我们有\n\n$$c_{1}=r_{1}(\\operatorname{cos}\\alpha_{1}+i\\operatorname{sin}\\alpha_{1})$$\n\n$$c_{2}=r_{2}(\\operatorname{cos}\\alpha_{2}+i\\operatorname{sin}\\alpha_{2})$$\n\n$$\\begin{aligned}\nc_{1}c_{2}&=r_{1}r_{2}(\\cos\\alpha_{1}+i\\sin\\alpha_{1})(\\cos\\alpha_{2}+i\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}(\\cos\\alpha_{1}\\cos\\alpha_{2}+i\\cos\\alpha_{1}\\sin\\alpha_{2}+i\\sin\\alpha_{1}\\cos\\alpha_{2}-\\sin\\alpha_{1}\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}[\\cos(\\alpha_{1}+\\alpha_{2})+i\\sin(\\alpha_{1}+\\alpha_{2})]\n\\end{aligned}$$\n\n总结成一句话，就是「模长相乘，幅角相加」。\n\n## 单位圆与单位根\n\n单位圆就是指半径为$1$的圆。不过一般我们都是把它画在原点的。\n\n![](https://i.loli.net/2018/12/20/5c1b06e5602fa.png)\n\n考虑这么一个方程\n\n$$x^{n}=1$$\n\n它的所有复数根。\n\n因为复数相乘意味着模长相乘，如果一个复数的$n$次方等于$1$，它自身的模长也应该是$1$。如果它的幅角是$a$，我们应该有\n\n$$2\\pi\\mid na$$\n\n$$\\cfrac{2\\pi}{n}\\mid a$$\n\n不难想象出我们有$n$个这样的复数，它们的幅角通式是$\\cfrac{2k\\pi}{n}(k\\in[0,n)\\cap\\mathbb{Z})$。我们称其中幅角等于$\\cfrac{2\\pi}{n}$的复数，即$\\cos\\cfrac{2\\pi}{n}+i\\sin\\cfrac{2\\pi}{n}$为$n$次单位根$\\omega_{n}$，我们就可以把这$n$个复数表示为$\\omega_{n}^{k}(k\\in[0,n)\\cap\\mathbb{Z})$。\n\n它有如下的一些性质\n\n$$\\omega_{2n}^{2k}=\\omega_{n}^{k}$$\n\n因为它们的模长都是$1$，幅角相等就相等了。\n\n然后就没了，读者自证不难（\n\n$$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$$\n\n因为$\\omega_{n}^{\\frac{n}{2}}$的幅角是$\\cfrac{2\\times\\frac{n}{2}\\pi}{n}=\\pi$，不难发现它就是$-1$了。\n\n# 快速傅里叶变换（Fast Fourier Transformation）\n\n## 运行过程\n\n那么问题来了，我们刚才扯了这么些，有什么用呢？\n\n就是说，有个叫「让·巴普蒂斯·约瑟夫·傅里叶」（Jean Baptiste Joseph Fourier）的神仙有一天大开脑洞，掏出$n$次单位根想要求点值表达。\n\n首先，我们通过在高次补$0$的方式，将这个多项式的项数（也就是次数$+1$）补到$2$的非负整数次幂。\n\n然后一巴掌把这个多项式拍成两半，按奇偶性拼成两个多项式：\n\n$$\\begin{aligned}\nF_{1}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i]x^{i}\\\\\n&=F[0]x^{0}+F[2]x^{1}+\\cdots+F[n-2]x^{\\frac{n}{2}-1}\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF_{2}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i+1]x^{i}\\\\\n&=F[1]x^{0}+F[3]x^{1}+\\cdots+F[n-1]x^{\\frac{n}{2}-1}\n\\end{aligned}$$\n\n于是我们有\n\n$$F(x)=F_{1}(x^{2})+xF_{2}(x^{2})$$\n\n现在我们假设$0\\leqslant k<\\cfrac{n}{2}$，将$x=\\omega_{n}^{k}$和$x=\\omega_{n}^{k+\\frac{n}{2}}$代入\n\n$$\\begin{aligned}\nF(\\omega_{n}^{k})&=F_{1}(\\omega_{n}^{2k})+\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})+\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}$$\n\n$$\\begin{aligned}\nF(\\omega_{n}^{k+\\frac{n}{2}})&=F_{1}(\\omega_{n}^{2k+n})+\\omega_{n}^{k+\\frac{n}{2}}F_{2}(\\omega_{n}^{2k+n})\\\\\n&=F_{1}(\\omega_{n}^{2k})-\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})-\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}$$\n\n我们注意到，如果说我们求出了$F_{1}(x)$和$F_{2}(x)$的点值表达，我们就能够$O(n)$地求出$F(x)$的点值表达了。至此，我们不难想到分治，边界条件就是$n=1$，这时什么也不用做直接返回即可。\n\n简单地贴一下代码：\n\n```cpp\nvoid work(complex* F,int n){\n\tif(n==1)\n\t\treturn;\n\tcomplex F1[n>>1],F2[n>>1];\n    for(int i=0;i<n;i+=2){\n    \tF1[i]=F[2*i];\n        F2[i]=F[2*i+1];\n\t}\n    work(F1,n>>1);\n    work(F2,n>>1);\n    complex unit(cos(2*Pi/n),sin(2*Pi/n)),tmp=1;\n    for(int i=0;i<(n>>1);++i,tmp=tmp*unit){\n    \tcomplex w=F2[i+(n>>1)]*tmp;\n        F[i]=F1[i]+w;\n        F[i+(n>>1)]=F1[i]-w;\n\t}\n}\n```\n\n不过，以上代码是我现写出来的，~~保证其不正确性~~不保证其正确性。\n\n不过，这样递归运算效率还是太低了。我们来考虑一下，递归到底层后，`F`数组的每一个位置上实际存的是几次项：\n\n```plaintext\n0 1 2 3 4 5 6 7\n0 2 4 6|1 3 5 7\n0 4|2 6|1 5|3 7\n0|4|2|6|1|5|3|7\n```\n\n写成二进制看看：\n\n| 位置（十进制） | 位置（二进制） | 次数（十进制） | 次数（二进制） |\n| :-: | :-: | :-: | :-: |\n| $0$ | $000$ | $0$ | $000$ |\n| $1$ | $001$ | $4$ | $100$ |\n| $2$ | $010$ | $2$ | $010$ |\n| $3$ | $011$ | $6$ | $110$ |\n| $4$ | $100$ | $1$ | $001$ |\n| $5$ | $101$ | $5$ | $101$ |\n| $6$ | $110$ | $3$ | $011$ |\n| $7$ | $111$ | $7$ | $111$ |\n\n注意到两边的数字的二进制是镜像的。也就是说，我们只要把位置编号的二进制位的最后$\\operatorname{log}n$位左右镜像过来，就可以得到递归到最底层后，这个位置上的系数所对应的项的次数了。\n\n我们可以$O(n)$地处理处每个数的镜像：\n\n```cpp\nfor(int i=0;i<n;++i)\n\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n```\n\n中间有一个位或运算符，我们以它为分界线，将上面这行代码分成左右两部分。左边就是$i$这个数除了最后一位以外的所有位的镜像；右边特判了一下$i$的最后一位是否为$1$，如果是的话，就在最高位补一个$1$。\n\n接下来的步骤我不是很能解释得清楚，因为我也是背的板子。总之这个东西写出来差不多长这样：\n\n```cpp\nvoid work(complex* F,int n){\n\tfor(int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tcomplex unit(cos(Pi/p),sin(Pi/p));\n\t\tfor(int i=0;i<n;i+=len){\n\t\t\tcomplex cur(1,0);\n\t\t\tfor(int j=i;j<i+p;++j){\n\t\t\t\tcomplex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n那么现在还差最后一步，将点值表达转回系数表达。我们将$F(\\omega_{n}^{0}),F(\\omega_{n}^{1}),\\cdots,F(\\omega_{n}^{n-1})$分别记为$y_{0},y_{1},\\cdots,y_{n-1}$，我们求点值的过程可以用矩阵表达成这样：\n\n$$\\begin{bmatrix}\n&(\\omega_{n}^{0})^{0}&(\\omega_{n}^{0})^{1}&\\cdots&(\\omega_{n}^{0})^{n-1}&\\\\\n&(\\omega_{n}^{1})^{0}&(\\omega_{n}^{1})^{1}&\\cdots&(\\omega_{n}^{1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&(\\omega_{n}^{n-1})^{0}&(\\omega_{n}^{n-1})^{1}&\\cdots&(\\omega_{n}^{n-1})^{n-1}\\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n&F[0]&\\\\\n&F[1]\\\\\n&\\vdots\\\\\n&F[n-1]\n\\end{bmatrix}\n=\\begin{bmatrix}\n&y_{0}&\\\\\n&y_{1}\\\\\n&\\vdots\\\\\n&y_{n-1}\n\\end{bmatrix}$$\n\n我们可以试图寻找左边那个矩阵的逆矩阵。直接摆结论的话，它差不多长这样：\n\n$$\\begin{bmatrix}\n&\\frac{1}{n}(\\omega_{n}^{0})^{0}&\\frac{1}{n}(\\omega_{n}^{0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{0})^{n-1}&\\\\\n&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\n\\end{bmatrix}$$\n\n现在我们要证明这两个矩阵乘起来是单位矩阵。令第一个矩阵为$A$，第二个矩阵为$B$，$A\\times B=C$。不难发现$A[i][j]=\\omega_{n}^{ij}$，$B[i][j]=\\cfrac{1}{n}\\omega_{n}^{-ij}$，我们有\n\n$$\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}A[i][k]B[k][j]\\\\\n&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{ik-kj}\n\\end{aligned}$$\n\n若$i=j$，不难发现此时$C[i][j]=1$。\n\n否则，即$i\\neq j$，设$i-j=l$，我们有\n\n$$\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{lk}\\\\\n&=\\cfrac{\\omega_{n}^{ln}-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=\\cfrac{1-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=0\n\\end{aligned}$$\n\n综上所述，矩阵$C$是单位矩阵，因此矩阵$B$是矩阵$A$的逆矩阵。\n\n因此我们有\n\n$$\\begin{bmatrix}&\\frac{1}{n}(\\omega_{n}^{-0})^{0}&\\frac{1}{n}(\\omega_{n}^{-0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-0})^{n-1}&\\\\&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\\end{bmatrix}\\begin{bmatrix}&y_{0}&\\\\&y_{1}\\\\&\\vdots\\\\&y_{n-1}\\end{bmatrix}=\\begin{bmatrix}&F[0]&\\\\&F[1]\\\\&\\vdots\\\\&F[n-1]\\end{bmatrix}$$\n\n注意到这个过程和我们之前将系数转化为点值表达的过程极为相似。这就是在启示我们，如果说我们把之前用的$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$换成$\\omega_{n}^{0},\\omega_{n}^{-1},\\cdots,\\omega_{n}^{-n+1}$，然后对着点值表达来一遍FFT，然后再除以$n$，就得到了原多项式的系数了。\n\n注意到这两个过程只有用到的单位根不一样，我们可以将上面那段代码的\n\n```cpp\ncomplex unit(cos(Pi/p),sin(Pi/p));\n```\n\n改成\n\n```cpp\ncomplex unit(cos(Pi/p),tp*sin(Pi/p));\n```\n\n然后调用时再传一个参数`tp`进去。`tp=1`表示是系数转点值，`tp=-1`表示是点值转系数。\n\n完整代码如下：\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#define maxn 2097152\n\nconst double Pi=acos(-1.0);\n\nint n,m;\nint rev[maxn+1];\nstruct complex{\n\tdouble r,c;\n\n\tcomplex(double _r=0,double _c=0){\n\t\tr=_r;\n\t\tc=_c;\n\t}\n};\ncomplex F[maxn+1],G[maxn+1];\n\ninline complex operator+(complex& a,complex& b){\n\treturn complex(a.r+b.r,a.c+b.c);\n}\n\ninline complex operator-(complex& a,complex& b){\n\treturn complex(a.r-b.r,a.c-b.c);\n}\n\ninline complex operator*(complex& a,complex& b){\n\treturn complex(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);\n}\n\ntemplate<typename _tp>\ninline void swap(_tp& x,_tp& y){\n\t_tp tmp=x;\n\tx=y;\n\ty=tmp;\n}\n\ninline void FAQ(complex F[],int tp){\n\tfor(register int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(register int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tregister complex unit(cos(Pi/p),tp*sin(Pi/p));\n\t\tfor(register int i=0;i<n;i+=len){\n\t\t\tregister complex cur(1,0);\n\t\t\tfor(register int j=i;j<i+p;++j){\n\t\t\t\tregister complex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\t++n;\n\tfor(register int i=0;i<n;++i)\n\t\tscanf(\"%d\",&F[i].r);\n\t++m;\n\tfor(register int i=0;i<m;++i)\n\t\tscanf(\"%d\",&G[i].r);\n\tfor(m+=n-1,n=1;n<m;n<<=1);\n\tfor(register int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tFAQ(F,1);\n\tFAQ(G,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF[i]=F[i]*G[i];\n\tFAQ(F,-1);\n\tfor(register int i=0;i<m;++i)\n\t\tprintf(\"%0.0lf \",F[i].r/n);\n\treturn 0;\n}\n```\n\n~~不要问我`cltstream`哪去了（~~\n\n然后您就可以切掉这道[板子题](https://www.luogu.org/problemnew/show/P3803)了。\n\n其实上面的代码是我从另一道题里复制过来然后现改的，说不定会改出错（\n\n最好还是自己写吧（\n\n什么？想知道是哪道题？往下看（\n\n## 例题\n\n### [「ZJOI2014」力](https://www.luogu.org/problemnew/show/P3338)\n\n这是一道裸的卷积题。\n\n考虑两个长度为$n$的数组$F$和$G$，现在我们想求一个数组$H$，它满足\n\n$$H[i]=\\sum\\limits_{j=0}^{i}F[j]G[i-j]=\\sum\\limits_{0\\leqslant j<n,0\\leqslant k<n,j+k=i}F[j]G[k]$$\n\n在本页面往上翻，翻到这个式子：\n\n$$(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]$$\n\n发现了吗？这两个过程其实是一样的。\n\n于是，我们如下构造两个多项式\n\n$$F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}$$\n\n$$G(x)=\\sum\\limits_{i=0}^{n-1}G[i]x^{i}$$\n\n然后直接一波FFT套上去，输出次数最低的$n$项的系数就好。\n\n那么这题呢？首先我们把$j\\lt i$和$j\\gt i$分开计算。\n\n先考虑$j\\lt i$，令$F[i]=q_{i}$，$G[i]=\\begin{cases}&\\cfrac{1}{i^{2}}\\;\\;&(i\\gt 0)\\\\&0&(i=0)\\end{cases}$，那么\n\n$$\\begin{aligned}\nE_{i}&=\\sum_{j=0}^{i-1}F[j]G[i-j]\\\\\n&=\\sum_{j=0}^{i}F[j]G[i-j]\n\\end{aligned}$$\n\n直接套板子就行。\n\n对于$j>i$的情况，我们将数组$F$左右翻转，然后继续套板子就行（\n\n具体还是看代码吧：\n\n```cpp\n#include\\lt cstdio>\n#include<cmath>\n#define maxn 2097152\n\nconst double Pi=acos(-1.0);\n\nint n,m;\nint rev[maxn+1];\nstruct complex{\n\tdouble r,c;\n\n\tcomplex(double _r=0,double _c=0){\n\t\tr=_r;\n\t\tc=_c;\n\t}\n};\ncomplex F1[maxn+1],F2[maxn+1],G[maxn+1];\n\ninline complex operator+(complex& a,complex& b){\n\treturn complex(a.r+b.r,a.c+b.c);\n}\n\ninline complex operator-(complex& a,complex& b){\n\treturn complex(a.r-b.r,a.c-b.c);\n}\n\ninline complex operator*(complex& a,complex& b){\n\treturn complex(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);\n}\n\ntemplate<typename _tp>\ninline void swap(_tp& x,_tp& y){\n\t_tp tmp=x;\n\tx=y;\n\ty=tmp;\n}\n\ninline void FAQ(complex F[],int tp){\n\tfor(register int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(register int len=2,p=1;len<=n;len<<=1,p<<=1){\n\t\tregister complex unit(cos(Pi/p),tp*sin(Pi/p));\n\t\tfor(register int i=0;i<n;i+=len){\n\t\t\tregister complex cur(1,0);\n\t\t\tfor(register int j=i;j<i+p;++j){\n\t\t\t\tregister complex tmp=F[j+p]*cur;\n\t\t\t\tF[j+p]=F[j]-tmp;\n\t\t\t\tF[j]=F[j]+tmp;\n\t\t\t\tcur=cur*unit;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(register int i=0;i<n;++i){\n\t\tscanf(\"%lf\",&F1[i].r);\n\t\tF2[n-i-1].r=F1[i].r;\n\t}\n\tfor(register int i=1;i<n;++i)\n\t\tG[i]=1.0/i/i;\n\tfor(m=n,n=1;n<m;n<<=1);\n\tn<<=1;\n\tfor(register int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tFAQ(G,1);\n\tFAQ(F1,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF1[i]=F1[i]*G[i];\n\tFAQ(F1,-1);\n\tFAQ(F2,1);\n\tfor(register int i=0;i<n;++i)\n\t\tF2[i]=F2[i]*G[i];\n\tFAQ(F2,-1);\n\tfor(register int i=0;i<m;++i)\n\t\tprintf(\"%lf\\n\",(F1[i].r-F2[m-i-1].r)/n);\n\treturn 0;\n}\n```\n\n# 数论变换（Number-Theoretic Transformation）\n\n注意到朴素的FFT使用的是单位复根。然而它们有一个十分大的缺陷，就是必须要用`double`存。这会带来精度上的误差，一个直接的结果就是，对于只有整数参与的多项式乘法，跑完FFT却会出现小数。\n\n这就启示我们，能不能用其他的什么东西替换掉单位复根。\n\n设有两个互质的正整数$a$和$p$，最小的使得$a^{k}\\equiv 1\\pmod{p}$的$k$被称为$a$模$p$的阶，记作$\\delta_{p}(a)$。\n\n如果说$\\delta_{p}(a)=\\varphi(p)$，我们就称$a$是模$p$的一个原根。\n\n现在我们找一个质数$p=an+1$，其中$a$是一个正整数，$n$是$2$的非负整数次幂。然后我们找到它的原根$g$，并定义$\\omega_{n}=g^{a}$。让我们来看看单位复根有的性质现在的原根有没有：\n\n$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$互不相同。这是为了保证点值表达的合法。\n\n虽然我不会证，不过我们的确有$g^{0},g^{1},\\cdots,g^{n-1}$在模$p$意义下互不相同，$a$次幂自然也一样。\n\n> Updated on 2019-03-17\n>\n> 似乎这么证明有些问题？\n>\n> 原根的这个性质实际上是$g^{0},g^{1},\\cdots,g^{p-2}$在模$p$意义下互不相同。因此如果$(n-1)a<p-1$，那么上面的结论就是正确的。\n>\n> $$\\begin{aligned}\n> (n-1)a&=na-a\\\\\n> &=p-1-\\cfrac{p-1}{n}\\\\\n> &\\lt p-1\n> \\end{aligned}$$\n>\n> 以上。\n\n$\\omega_{2n}^{2k}=\\omega_{n}^{k}$。这是为了让我们可以分治。\n\n根据定义，$\\omega_{2n}=g^{\\frac{a}{2}}$，就是将现在的$p$进一步拆成$\\cfrac{a}{2}\\cdot2n+1$。不难发现\n\n$$\\omega_{2n}^{2k}=g^{\\frac{a}{2}\\cdot{2}k}=g^{ak}=\\omega_{n}^{k}$$\n\n因而原根有上述性质。\n\n$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$，或者说$\\omega_{n}^{\\frac{n}{2}}=-1$。这同样是为了让我们可以分治。\n\n因为$p=an+1$，根据费马小定理，我们有\n\n$$\\omega_{n}^{n}\\equiv g^{an}\\equiv g^{p-1}\\equiv 1\\pmod{p}$$\n\n因而$\\omega_{n}^{\\frac{n}{2}}\\equiv\\pm 1\\pmod{p}$。又因为$\\omega_{n}^{0}=1$，而$\\omega_{n}^{\\frac{n}{2}}\\not\\equiv\\omega_{n}^{0}\\pmod{p}$，我们就得到$\\omega_{n}^{\\frac{n}{2}}\\equiv -1\\pmod{p}$。\n\n若$k\\neq 0$，$\\sum_{i=0}^{n-1}(\\omega_{n}^{k})^{i}=0$。这是为了实现逆变换。不过这个很明显，就留作习题吧。\n\n以上，我们成功地用原根取代了单位复根。一般情况下，我们会取$p=998244353=7\\times 17\\times 2^{23}+1$，它的原根是$3$。\n\n需要注意的是，我们还有一个可以优化的小细节。注意到$\\omega_{n}=g^{a}=g^{\\frac{p-1}{n}}$，我们可以将这些值预处理出来，就不用每次都跑快速幂了。对于$998244353$来说，我们需要预处理$\\omega_{2},\\omega_{4},\\cdots,\\omega_{2^{23}}$。注意到\n\n$$\\omega_{2^{23}}=3^{7\\times 17}=3^{119}$$\n\n$$\\omega_{2^{k}}=\\omega_{2^{k+1}}^{2}$$\n\n我们一遍快速幂算出$\\omega_{2^{23}}$然后倒着推出剩下的即可。\n\n关于$\\omega_{n}^{-k}$，注意到它就是$\\omega_{n}^{k}$在模$998244353$意义下的逆元。那么我们把上面两个式子中的$3$换成它在模$998244353$意义下的逆元即可，这个数是$332748118$。\n\n然后我们把FFT板子里的单位复根全部换成原根，运算换成模意义下的就行了。\n\n代码：\n\n```cpp\n#include<cstdio>\n#define re register\n#define maxn 2097152\n#define mod 998244353\n#define swap(a,b) a^=b,b^=a,a^=b\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\nint unit[2][24],rev[maxn+1],F[maxn+1],G[maxn+1];\n\ninline int cltpow(re int x,re int y){\n\tre int res=1;\n\tfor(;y;){\n\t\tif(y&1)\n\t\t\tres=1LL*res*x%mod;\n\t\tx=1LL*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\n\ninline void NTT(int* F,re int tp){\n\tfor(re int i=0;i<n;++i)\n\t\tif(i<rev[i])\n\t\t\tswap(F[i],F[rev[i]]);\n\tfor(re int k=1,p=1;p<n;++k,p<<=1)\n\t\tfor(re int i=0;i<n;i+=p<<1)\n\t\t\tfor(re int j=i,tmp=1;j<i+p;++j,tmp=1LL*tmp*unit[tp][k]%mod){\n\t\t\t\tre int x=F[j],y=1LL*F[j+p]*tmp%mod;\n\t\t\t\tF[j]=(x+y)%mod;\n\t\t\t\tF[j+p]=(x-y+mod)%mod;\n\t\t\t}\n}\n\nint main(){\n\tunit[0][23]=cltpow(3,119);\n\tunit[1][23]=cltpow(332748118,119);\n\tfor(re int i=0;i<2;++i)\n\t\tfor(re int j=22;j>=0;--j)\n\t\t\tunit[i][j]=1LL*unit[i][j+1]*unit[i][j+1]%mod;\n\tcltstream::read(n);\n\tcltstream::read(m);\n\t++n;\n\tfor(re int i=0;i<n;++i)\n\t\tcltstream::read(F[i]);\n\t++m;\n\tfor(re int i=0;i<m;++i)\n\t\tcltstream::read(G[i]);\n\tfor(m+=n-1,n=1;n<m;n<<=1);\n\tfor(re int i=0;i<n;++i)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)?(n>>1):0);\n\tNTT(F,0);\n\tNTT(G,0);\n\tfor(re int i=0;i<n;++i)\n\t\tF[i]=1LL*F[i]*G[i]%mod;\n\tNTT(F,1);\n\tn=cltpow(n,mod-2);\n\tfor(re int i=0;i<m;++i)\n\t\tcltstream::write(1LL*F[i]*n%mod,i<m-1?32:-1);\n\tclop();\n\treturn 0;\n}\n```\n\n以上。\n","slug":"polynomial-learning-notes-pt1","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhnk008ymku9e24f9x4l","content":"<p>最近正好月考，然而并不想去月考，于是来颓blog吧。</p>\n<a id=\"more\"></a>\n<p>给你一个$n-1$次多项式$F(x)$和一个$m-1$次多项式$G(x)$，让你求$(F\\times G)(x)$的各项系数。$n,m\\leqslant 10^{6}$。</p>\n<p>我们不妨将$F(x)$的$i$次项系数记为$F[i]$</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}</script><script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{m-1}G[i]x^{i}</script><script type=\"math/tex; mode=display\">(F\\times G)(x)=\\sum\\limits_{i=0}^{n-1}\\sum\\limits_{j=0}^{m-1}F[i]G[j]x^{i+j}</script><script type=\"math/tex; mode=display\">(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]</script><p>不难发现直接暴力算是$O(n^{2})$的，因此我们需要优化。</p>\n<p>不过为了优化，我们得先扯远点。</p>\n<h1 id=\"点值表达\"><a href=\"#点值表达\" class=\"headerlink\" title=\"点值表达\"></a>点值表达</h1><p>如果我们选取$n$个点$(x_{0},y_{0}),(x_{1},y_{1}),\\cdots,(x_{n-1},y_{n-1})$，并且其中$x_{i}$两两不同，我们就可以唯一地确定出一个$n-1$次多项式。</p>\n<p>就比如说</p>\n<script type=\"math/tex; mode=display\">(0,2),(1,7),(2,4)</script><p><del>瞎写的（</del></p>\n<p>我们可以列出如下的三元一次方程组：</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&\\text{C}=2\\\\\n&\\text{A}+\\text{B}+\\text{C}=7\\\\\n&4\\text{A}+2\\text{B}+\\text{C}=4\n\\end{cases}</script><p>解得</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&\\text{A}=-4\\\\\n&\\text{B}=9\\\\\n&\\text{C}=2\n\\end{cases}</script><p>注意到$(F\\times G)(x)=F(x)G(x)$<del>（废话）</del>，我们只要知道了$F(x)$和$G(x)$的点值表达，就可以$O(n)$的计算出$(F\\times G)(x)$的点值表达了。因为$(F\\times G)(x)$的次数是$n+m-2$，我们选出前$n+m-1$个自然数即可。</p>\n<p>但是这还不够。注意到，如果我们选取的点的横坐标如果很普通，我们首先需要$O(n^{2})$转成点值表达，乘完之后又要转回系数表达，效率甚至不如暴力（</p>\n<p>于是我们还需要优化，于是我们还需要再扯远一点。</p>\n<h1 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h1><p>对，你没看错，扯到复数了。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>根据初中学习的数学知识，我们知道有些一元二次方程是没有实数根的。就比如说</p>\n<script type=\"math/tex; mode=display\">x^{2}+1=0</script><p>我们知道，它的判别式是$\\Delta=b^{2}-4ac=-4\\lt 0$，因此它没有实数根。</p>\n<p>于是我们就定义了虚数单位$i$，并规定$i^{2}=-1$。形如$x+yi$这样的数被称为复数。它的模长被定义为它到原点的距离，即$\\sqrt{x^{2}+y^{2}}$；幅角被定义为与$x$轴正半轴的夹角，即$\\operatorname{tan}^{-1}\\cfrac{y}{x}$。</p>\n<p>因为$i$不是实数，它不能被画在我们现有的数轴上。那我们就再拿来一条数轴，将两条数轴垂直放置，垂足为原点。或者说，我们可以将这理解成平面直角坐标系，$x$就是实轴，$y$轴就是虚轴，$x+yi$就对应了点$(x,y)$。</p>\n<p><img src=\"https://i.loli.net/2018/12/19/5c1a46b4d785b.png\" alt=\"\"></p>\n<p>上图展示了$4+i$和$3+4i$。</p>\n<p>复数的运算其实没什么出乎意料的：</p>\n<script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)+(x_{2}+y_{2}i)=(x_{1}+x_{2})+(y_{1}+y_{2})i</script><script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)-(x_{2}+y_{2}i)=(x_{1}-x_{2})+(y_{1}-y_{2})i</script><script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)(x_{2}+y_{2}i)=(x_{1}x_{2}-y_{1}y_{2})+(x_{1}y_{2}+x_{2}y_{1})i</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\cfrac{x_{1}+y_{1}i}{x_{2}+y_{2}i}&=\\cfrac{(x_{1}+y_{1}i)(x_{2}-y_{2}i)}{(x_{2}+y_{2}i)(x_{2}-y_{2}i)}\\\\\n&=\\cfrac{(x_{1}x_{2}+y_{1}y_{2})+(x_{2}y_{1}-x_{1}y_{2})i}{x_{2}^{2}+y_{2}^{2}}\\\\\n&=\\cfrac{x_{1}x_{2}+y_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}+\\cfrac{x_{2}y_{1}-x_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}i\n\\end{aligned}</script><p>我们来单独考虑一下复数相乘的几何意义。</p>\n<p>假设我们有两个复数$c_{1}$，$c_{2}$，它们的模长分别是$r_{1}$，$r_{2}$，幅角分别是$\\alpha_{1}$，$\\alpha_{2}$。不难发现我们有</p>\n<script type=\"math/tex; mode=display\">c_{1}=r_{1}(\\operatorname{cos}\\alpha_{1}+i\\operatorname{sin}\\alpha_{1})</script><script type=\"math/tex; mode=display\">c_{2}=r_{2}(\\operatorname{cos}\\alpha_{2}+i\\operatorname{sin}\\alpha_{2})</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nc_{1}c_{2}&=r_{1}r_{2}(\\cos\\alpha_{1}+i\\sin\\alpha_{1})(\\cos\\alpha_{2}+i\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}(\\cos\\alpha_{1}\\cos\\alpha_{2}+i\\cos\\alpha_{1}\\sin\\alpha_{2}+i\\sin\\alpha_{1}\\cos\\alpha_{2}-\\sin\\alpha_{1}\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}[\\cos(\\alpha_{1}+\\alpha_{2})+i\\sin(\\alpha_{1}+\\alpha_{2})]\n\\end{aligned}</script><p>总结成一句话，就是「模长相乘，幅角相加」。</p>\n<h2 id=\"单位圆与单位根\"><a href=\"#单位圆与单位根\" class=\"headerlink\" title=\"单位圆与单位根\"></a>单位圆与单位根</h2><p>单位圆就是指半径为$1$的圆。不过一般我们都是把它画在原点的。</p>\n<p><img src=\"https://i.loli.net/2018/12/20/5c1b06e5602fa.png\" alt=\"\"></p>\n<p>考虑这么一个方程</p>\n<script type=\"math/tex; mode=display\">x^{n}=1</script><p>它的所有复数根。</p>\n<p>因为复数相乘意味着模长相乘，如果一个复数的$n$次方等于$1$，它自身的模长也应该是$1$。如果它的幅角是$a$，我们应该有</p>\n<script type=\"math/tex; mode=display\">2\\pi\\mid na</script><script type=\"math/tex; mode=display\">\\cfrac{2\\pi}{n}\\mid a</script><p>不难想象出我们有$n$个这样的复数，它们的幅角通式是$\\cfrac{2k\\pi}{n}(k\\in[0,n)\\cap\\mathbb{Z})$。我们称其中幅角等于$\\cfrac{2\\pi}{n}$的复数，即$\\cos\\cfrac{2\\pi}{n}+i\\sin\\cfrac{2\\pi}{n}$为$n$次单位根$\\omega_{n}$，我们就可以把这$n$个复数表示为$\\omega_{n}^{k}(k\\in[0,n)\\cap\\mathbb{Z})$。</p>\n<p>它有如下的一些性质</p>\n<script type=\"math/tex; mode=display\">\\omega_{2n}^{2k}=\\omega_{n}^{k}</script><p>因为它们的模长都是$1$，幅角相等就相等了。</p>\n<p>然后就没了，读者自证不难（</p>\n<script type=\"math/tex; mode=display\">\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}</script><p>因为$\\omega_{n}^{\\frac{n}{2}}$的幅角是$\\cfrac{2\\times\\frac{n}{2}\\pi}{n}=\\pi$，不难发现它就是$-1$了。</p>\n<h1 id=\"快速傅里叶变换（Fast-Fourier-Transformation）\"><a href=\"#快速傅里叶变换（Fast-Fourier-Transformation）\" class=\"headerlink\" title=\"快速傅里叶变换（Fast Fourier Transformation）\"></a>快速傅里叶变换（Fast Fourier Transformation）</h1><h2 id=\"运行过程\"><a href=\"#运行过程\" class=\"headerlink\" title=\"运行过程\"></a>运行过程</h2><p>那么问题来了，我们刚才扯了这么些，有什么用呢？</p>\n<p>就是说，有个叫「让·巴普蒂斯·约瑟夫·傅里叶」（Jean Baptiste Joseph Fourier）的神仙有一天大开脑洞，掏出$n$次单位根想要求点值表达。</p>\n<p>首先，我们通过在高次补$0$的方式，将这个多项式的项数（也就是次数$+1$）补到$2$的非负整数次幂。</p>\n<p>然后一巴掌把这个多项式拍成两半，按奇偶性拼成两个多项式：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{1}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i]x^{i}\\\\\n&=F[0]x^{0}+F[2]x^{1}+\\cdots+F[n-2]x^{\\frac{n}{2}-1}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{2}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i+1]x^{i}\\\\\n&=F[1]x^{0}+F[3]x^{1}+\\cdots+F[n-1]x^{\\frac{n}{2}-1}\n\\end{aligned}</script><p>于是我们有</p>\n<script type=\"math/tex; mode=display\">F(x)=F_{1}(x^{2})+xF_{2}(x^{2})</script><p>现在我们假设$0\\leqslant k&lt;\\cfrac{n}{2}$，将$x=\\omega_{n}^{k}$和$x=\\omega_{n}^{k+\\frac{n}{2}}$代入</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(\\omega_{n}^{k})&=F_{1}(\\omega_{n}^{2k})+\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})+\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(\\omega_{n}^{k+\\frac{n}{2}})&=F_{1}(\\omega_{n}^{2k+n})+\\omega_{n}^{k+\\frac{n}{2}}F_{2}(\\omega_{n}^{2k+n})\\\\\n&=F_{1}(\\omega_{n}^{2k})-\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})-\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}</script><p>我们注意到，如果说我们求出了$F_{1}(x)$和$F_{2}(x)$的点值表达，我们就能够$O(n)$地求出$F(x)$的点值表达了。至此，我们不难想到分治，边界条件就是$n=1$，这时什么也不用做直接返回即可。</p>\n<p>简单地贴一下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"built_in\">complex</span>* F,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"built_in\">complex</span> F1[n&gt;&gt;<span class=\"number\">1</span>],F2[n&gt;&gt;<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">    \tF1[i]=F[<span class=\"number\">2</span>*i];</span><br><span class=\"line\">        F2[i]=F[<span class=\"number\">2</span>*i+<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    work(F1,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    work(F2,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    complex unit(cos(2*Pi/n),sin(2*Pi/n)),tmp=1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i,tmp=tmp*unit)&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">complex</span> w=F2[i+(n&gt;&gt;<span class=\"number\">1</span>)]*tmp;</span><br><span class=\"line\">        F[i]=F1[i]+w;</span><br><span class=\"line\">        F[i+(n&gt;&gt;<span class=\"number\">1</span>)]=F1[i]-w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不过，以上代码是我现写出来的，<del>保证其不正确性</del>不保证其正确性。</p>\n<p>不过，这样递归运算效率还是太低了。我们来考虑一下，递归到底层后，<code>F</code>数组的每一个位置上实际存的是几次项：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 2 3 4 5 6 7</span><br><span class=\"line\">0 2 4 6|1 3 5 7</span><br><span class=\"line\">0 4|2 6|1 5|3 7</span><br><span class=\"line\">0|4|2|6|1|5|3|7</span><br></pre></td></tr></table></figure>\n<p>写成二进制看看：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">位置（十进制）</th>\n<th style=\"text-align:center\">位置（二进制）</th>\n<th style=\"text-align:center\">次数（十进制）</th>\n<th style=\"text-align:center\">次数（二进制）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$000$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$000$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$001$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$100$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$010$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$010$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$011$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$110$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$100$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$001$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$101$</td>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$101$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$110$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$011$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$111$</td>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$111$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>注意到两边的数字的二进制是镜像的。也就是说，我们只要把位置编号的二进制位的最后$\\operatorname{log}n$位左右镜像过来，就可以得到递归到最底层后，这个位置上的系数所对应的项的次数了。</p>\n<p>我们可以$O(n)$地处理处每个数的镜像：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">    rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>中间有一个位或运算符，我们以它为分界线，将上面这行代码分成左右两部分。左边就是$i$这个数除了最后一位以外的所有位的镜像；右边特判了一下$i$的最后一位是否为$1$，如果是的话，就在最高位补一个$1$。</p>\n<p>接下来的步骤我不是很能解释得清楚，因为我也是背的板子。总之这个东西写出来差不多长这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"built_in\">complex</span>* F,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么现在还差最后一步，将点值表达转回系数表达。我们将$F(\\omega_{n}^{0}),F(\\omega_{n}^{1}),\\cdots,F(\\omega_{n}^{n-1})$分别记为$y_{0},y_{1},\\cdots,y_{n-1}$，我们求点值的过程可以用矩阵表达成这样：</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&(\\omega_{n}^{0})^{0}&(\\omega_{n}^{0})^{1}&\\cdots&(\\omega_{n}^{0})^{n-1}&\\\\\n&(\\omega_{n}^{1})^{0}&(\\omega_{n}^{1})^{1}&\\cdots&(\\omega_{n}^{1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&(\\omega_{n}^{n-1})^{0}&(\\omega_{n}^{n-1})^{1}&\\cdots&(\\omega_{n}^{n-1})^{n-1}\\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n&F[0]&\\\\\n&F[1]\\\\\n&\\vdots\\\\\n&F[n-1]\n\\end{bmatrix}\n=\\begin{bmatrix}\n&y_{0}&\\\\\n&y_{1}\\\\\n&\\vdots\\\\\n&y_{n-1}\n\\end{bmatrix}</script><p>我们可以试图寻找左边那个矩阵的逆矩阵。直接摆结论的话，它差不多长这样：</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&\\frac{1}{n}(\\omega_{n}^{0})^{0}&\\frac{1}{n}(\\omega_{n}^{0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{0})^{n-1}&\\\\\n&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\n\\end{bmatrix}</script><p>现在我们要证明这两个矩阵乘起来是单位矩阵。令第一个矩阵为$A$，第二个矩阵为$B$，$A\\times B=C$。不难发现$A[i][j]=\\omega_{n}^{ij}$，$B[i][j]=\\cfrac{1}{n}\\omega_{n}^{-ij}$，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}A[i][k]B[k][j]\\\\\n&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{ik-kj}\n\\end{aligned}</script><p>若$i=j$，不难发现此时$C[i][j]=1$。</p>\n<p>否则，即$i\\neq j$，设$i-j=l$，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{lk}\\\\\n&=\\cfrac{\\omega_{n}^{ln}-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=\\cfrac{1-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=0\n\\end{aligned}</script><p>综上所述，矩阵$C$是单位矩阵，因此矩阵$B$是矩阵$A$的逆矩阵。</p>\n<p>因此我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}&\\frac{1}{n}(\\omega_{n}^{-0})^{0}&\\frac{1}{n}(\\omega_{n}^{-0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-0})^{n-1}&\\\\&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\\end{bmatrix}\\begin{bmatrix}&y_{0}&\\\\&y_{1}\\\\&\\vdots\\\\&y_{n-1}\\end{bmatrix}=\\begin{bmatrix}&F[0]&\\\\&F[1]\\\\&\\vdots\\\\&F[n-1]\\end{bmatrix}</script><p>注意到这个过程和我们之前将系数转化为点值表达的过程极为相似。这就是在启示我们，如果说我们把之前用的$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$换成$\\omega_{n}^{0},\\omega_{n}^{-1},\\cdots,\\omega_{n}^{-n+1}$，然后对着点值表达来一遍FFT，然后再除以$n$，就得到了原多项式的系数了。</p>\n<p>注意到这两个过程只有用到的单位根不一样，我们可以将上面那段代码的</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br></pre></td></tr></table></figure>\n<p>然后调用时再传一个参数<code>tp</code>进去。<code>tp=1</code>表示是系数转点值，<code>tp=-1</code>表示是点值转系数。</p>\n<p>完整代码如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">double</span> Pi=<span class=\"built_in\">acos</span>(<span class=\"number\">-1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> rev[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">complex</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> r,c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">complex</span>(<span class=\"keyword\">double</span> _r=<span class=\"number\">0</span>,<span class=\"keyword\">double</span> _c=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        c=_c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">complex</span> F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>+(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r+b.r,a.c+b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>-(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r-b.r,a.c-b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>*(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">    _tp tmp=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FAQ</span><span class=\"params\">(<span class=\"built_in\">complex</span> F[],<span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    ++n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;F[i].r);</span><br><span class=\"line\">    ++m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;G[i].r);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m+=n<span class=\"number\">-1</span>,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    FAQ(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    FAQ(G,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=F[i]*G[i];</span><br><span class=\"line\">    FAQ(F,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%0.0lf \"</span>,F[i].r/n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>不要问我<code>cltstream</code>哪去了（</del></p>\n<p>然后您就可以切掉这道<a href=\"https://www.luogu.org/problemnew/show/P3803\">板子题</a>了。</p>\n<p>其实上面的代码是我从另一道题里复制过来然后现改的，说不定会改出错（</p>\n<p>最好还是自己写吧（</p>\n<p>什么？想知道是哪道题？往下看（</p>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><h3 id=\"「ZJOI2014」力\"><a href=\"#「ZJOI2014」力\" class=\"headerlink\" title=\"「ZJOI2014」力\"></a><a href=\"https://www.luogu.org/problemnew/show/P3338\">「ZJOI2014」力</a></h3><p>这是一道裸的卷积题。</p>\n<p>考虑两个长度为$n$的数组$F$和$G$，现在我们想求一个数组$H$，它满足</p>\n<script type=\"math/tex; mode=display\">H[i]=\\sum\\limits_{j=0}^{i}F[j]G[i-j]=\\sum\\limits_{0\\leqslant j<n,0\\leqslant k<n,j+k=i}F[j]G[k]</script><p>在本页面往上翻，翻到这个式子：</p>\n<script type=\"math/tex; mode=display\">(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]</script><p>发现了吗？这两个过程其实是一样的。</p>\n<p>于是，我们如下构造两个多项式</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}</script><script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{n-1}G[i]x^{i}</script><p>然后直接一波FFT套上去，输出次数最低的$n$项的系数就好。</p>\n<p>那么这题呢？首先我们把$j\\lt i$和$j\\gt i$分开计算。</p>\n<p>先考虑$j\\lt i$，令$F[i]=q_{i}$，$G[i]=\\begin{cases}&amp;\\cfrac{1}{i^{2}}\\;\\;&amp;(i\\gt 0)\\\\&amp;0&amp;(i=0)\\end{cases}$，那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nE_{i}&=\\sum_{j=0}^{i-1}F[j]G[i-j]\\\\\n&=\\sum_{j=0}^{i}F[j]G[i-j]\n\\end{aligned}</script><p>直接套板子就行。</p>\n<p>对于$j&gt;i$的情况，我们将数组$F$左右翻转，然后继续套板子就行（</p>\n<p>具体还是看代码吧：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>\\lt cstdio&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">double</span> Pi=<span class=\"built_in\">acos</span>(<span class=\"number\">-1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> rev[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">complex</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> r,c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">complex</span>(<span class=\"keyword\">double</span> _r=<span class=\"number\">0</span>,<span class=\"keyword\">double</span> _c=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        c=_c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">complex</span> F1[maxn+<span class=\"number\">1</span>],F2[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>+(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r+b.r,a.c+b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>-(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r-b.r,a.c-b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>*(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">    _tp tmp=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FAQ</span><span class=\"params\">(<span class=\"built_in\">complex</span> F[],<span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf\"</span>,&amp;F1[i].r);</span><br><span class=\"line\">        F2[n-i<span class=\"number\">-1</span>].r=F1[i].r;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1.0</span>/i/i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m=n,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    n&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    FAQ(G,<span class=\"number\">1</span>);</span><br><span class=\"line\">    FAQ(F1,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F1[i]=F1[i]*G[i];</span><br><span class=\"line\">    FAQ(F1,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    FAQ(F2,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F2[i]=F2[i]*G[i];</span><br><span class=\"line\">    FAQ(F2,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lf\\n\"</span>,(F1[i].r-F2[m-i<span class=\"number\">-1</span>].r)/n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"数论变换（Number-Theoretic-Transformation）\"><a href=\"#数论变换（Number-Theoretic-Transformation）\" class=\"headerlink\" title=\"数论变换（Number-Theoretic Transformation）\"></a>数论变换（Number-Theoretic Transformation）</h1><p>注意到朴素的FFT使用的是单位复根。然而它们有一个十分大的缺陷，就是必须要用<code>double</code>存。这会带来精度上的误差，一个直接的结果就是，对于只有整数参与的多项式乘法，跑完FFT却会出现小数。</p>\n<p>这就启示我们，能不能用其他的什么东西替换掉单位复根。</p>\n<p>设有两个互质的正整数$a$和$p$，最小的使得$a^{k}\\equiv 1\\pmod{p}$的$k$被称为$a$模$p$的阶，记作$\\delta_{p}(a)$。</p>\n<p>如果说$\\delta_{p}(a)=\\varphi(p)$，我们就称$a$是模$p$的一个原根。</p>\n<p>现在我们找一个质数$p=an+1$，其中$a$是一个正整数，$n$是$2$的非负整数次幂。然后我们找到它的原根$g$，并定义$\\omega_{n}=g^{a}$。让我们来看看单位复根有的性质现在的原根有没有：</p>\n<p>$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$互不相同。这是为了保证点值表达的合法。</p>\n<p>虽然我不会证，不过我们的确有$g^{0},g^{1},\\cdots,g^{n-1}$在模$p$意义下互不相同，$a$次幂自然也一样。</p>\n<blockquote>\n<p>Updated on 2019-03-17</p>\n<p>似乎这么证明有些问题？</p>\n<p>原根的这个性质实际上是$g^{0},g^{1},\\cdots,g^{p-2}$在模$p$意义下互不相同。因此如果$(n-1)a&lt;p-1$，那么上面的结论就是正确的。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(n-1)a&=na-a\\\\\n&=p-1-\\cfrac{p-1}{n}\\\\\n&\\lt p-1\n\\end{aligned}</script><p>以上。</p>\n</blockquote>\n<p>$\\omega_{2n}^{2k}=\\omega_{n}^{k}$。这是为了让我们可以分治。</p>\n<p>根据定义，$\\omega_{2n}=g^{\\frac{a}{2}}$，就是将现在的$p$进一步拆成$\\cfrac{a}{2}\\cdot2n+1$。不难发现</p>\n<script type=\"math/tex; mode=display\">\\omega_{2n}^{2k}=g^{\\frac{a}{2}\\cdot{2}k}=g^{ak}=\\omega_{n}^{k}</script><p>因而原根有上述性质。</p>\n<p>$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$，或者说$\\omega_{n}^{\\frac{n}{2}}=-1$。这同样是为了让我们可以分治。</p>\n<p>因为$p=an+1$，根据费马小定理，我们有</p>\n<script type=\"math/tex; mode=display\">\\omega_{n}^{n}\\equiv g^{an}\\equiv g^{p-1}\\equiv 1\\pmod{p}</script><p>因而$\\omega_{n}^{\\frac{n}{2}}\\equiv\\pm 1\\pmod{p}$。又因为$\\omega_{n}^{0}=1$，而$\\omega_{n}^{\\frac{n}{2}}\\not\\equiv\\omega_{n}^{0}\\pmod{p}$，我们就得到$\\omega_{n}^{\\frac{n}{2}}\\equiv -1\\pmod{p}$。</p>\n<p>若$k\\neq 0$，$\\sum_{i=0}^{n-1}(\\omega_{n}^{k})^{i}=0$。这是为了实现逆变换。不过这个很明显，就留作习题吧。</p>\n<p>以上，我们成功地用原根取代了单位复根。一般情况下，我们会取$p=998244353=7\\times 17\\times 2^{23}+1$，它的原根是$3$。</p>\n<p>需要注意的是，我们还有一个可以优化的小细节。注意到$\\omega_{n}=g^{a}=g^{\\frac{p-1}{n}}$，我们可以将这些值预处理出来，就不用每次都跑快速幂了。对于$998244353$来说，我们需要预处理$\\omega_{2},\\omega_{4},\\cdots,\\omega_{2^{23}}$。注意到</p>\n<script type=\"math/tex; mode=display\">\\omega_{2^{23}}=3^{7\\times 17}=3^{119}</script><script type=\"math/tex; mode=display\">\\omega_{2^{k}}=\\omega_{2^{k+1}}^{2}</script><p>我们一遍快速幂算出$\\omega_{2^{23}}$然后倒着推出剩下的即可。</p>\n<p>关于$\\omega_{n}^{-k}$，注意到它就是$\\omega_{n}^{k}$在模$998244353$意义下的逆元。那么我们把上面两个式子中的$3$换成它在模$998244353$意义下的逆元即可，这个数是$332748118$。</p>\n<p>然后我们把FFT板子里的单位复根全部换成原根，运算换成模意义下的就行了。</p>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(<span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    ++n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">    ++m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        cltstream::read(G[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m+=n<span class=\"number\">-1</span>,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(F,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(G,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">    NTT(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    n=cltpow(n,mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        cltstream::write(<span class=\"number\">1L</span>L*F[i]*n%mod,i&lt;m<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">-1</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上。</p>\n","site":{"data":{}},"excerpt":"<p>最近正好月考，然而并不想去月考，于是来颓blog吧。</p>","more":"<p>给你一个$n-1$次多项式$F(x)$和一个$m-1$次多项式$G(x)$，让你求$(F\\times G)(x)$的各项系数。$n,m\\leqslant 10^{6}$。</p>\n<p>我们不妨将$F(x)$的$i$次项系数记为$F[i]$</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}</script><script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{m-1}G[i]x^{i}</script><script type=\"math/tex; mode=display\">(F\\times G)(x)=\\sum\\limits_{i=0}^{n-1}\\sum\\limits_{j=0}^{m-1}F[i]G[j]x^{i+j}</script><script type=\"math/tex; mode=display\">(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]</script><p>不难发现直接暴力算是$O(n^{2})$的，因此我们需要优化。</p>\n<p>不过为了优化，我们得先扯远点。</p>\n<h1 id=\"点值表达\"><a href=\"#点值表达\" class=\"headerlink\" title=\"点值表达\"></a>点值表达</h1><p>如果我们选取$n$个点$(x_{0},y_{0}),(x_{1},y_{1}),\\cdots,(x_{n-1},y_{n-1})$，并且其中$x_{i}$两两不同，我们就可以唯一地确定出一个$n-1$次多项式。</p>\n<p>就比如说</p>\n<script type=\"math/tex; mode=display\">(0,2),(1,7),(2,4)</script><p><del>瞎写的（</del></p>\n<p>我们可以列出如下的三元一次方程组：</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&\\text{C}=2\\\\\n&\\text{A}+\\text{B}+\\text{C}=7\\\\\n&4\\text{A}+2\\text{B}+\\text{C}=4\n\\end{cases}</script><p>解得</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\n&\\text{A}=-4\\\\\n&\\text{B}=9\\\\\n&\\text{C}=2\n\\end{cases}</script><p>注意到$(F\\times G)(x)=F(x)G(x)$<del>（废话）</del>，我们只要知道了$F(x)$和$G(x)$的点值表达，就可以$O(n)$的计算出$(F\\times G)(x)$的点值表达了。因为$(F\\times G)(x)$的次数是$n+m-2$，我们选出前$n+m-1$个自然数即可。</p>\n<p>但是这还不够。注意到，如果我们选取的点的横坐标如果很普通，我们首先需要$O(n^{2})$转成点值表达，乘完之后又要转回系数表达，效率甚至不如暴力（</p>\n<p>于是我们还需要优化，于是我们还需要再扯远一点。</p>\n<h1 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h1><p>对，你没看错，扯到复数了。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>根据初中学习的数学知识，我们知道有些一元二次方程是没有实数根的。就比如说</p>\n<script type=\"math/tex; mode=display\">x^{2}+1=0</script><p>我们知道，它的判别式是$\\Delta=b^{2}-4ac=-4\\lt 0$，因此它没有实数根。</p>\n<p>于是我们就定义了虚数单位$i$，并规定$i^{2}=-1$。形如$x+yi$这样的数被称为复数。它的模长被定义为它到原点的距离，即$\\sqrt{x^{2}+y^{2}}$；幅角被定义为与$x$轴正半轴的夹角，即$\\operatorname{tan}^{-1}\\cfrac{y}{x}$。</p>\n<p>因为$i$不是实数，它不能被画在我们现有的数轴上。那我们就再拿来一条数轴，将两条数轴垂直放置，垂足为原点。或者说，我们可以将这理解成平面直角坐标系，$x$就是实轴，$y$轴就是虚轴，$x+yi$就对应了点$(x,y)$。</p>\n<p><img src=\"https://i.loli.net/2018/12/19/5c1a46b4d785b.png\" alt=\"\"></p>\n<p>上图展示了$4+i$和$3+4i$。</p>\n<p>复数的运算其实没什么出乎意料的：</p>\n<script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)+(x_{2}+y_{2}i)=(x_{1}+x_{2})+(y_{1}+y_{2})i</script><script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)-(x_{2}+y_{2}i)=(x_{1}-x_{2})+(y_{1}-y_{2})i</script><script type=\"math/tex; mode=display\">(x_{1}+y_{1}i)(x_{2}+y_{2}i)=(x_{1}x_{2}-y_{1}y_{2})+(x_{1}y_{2}+x_{2}y_{1})i</script><script type=\"math/tex; mode=display\">\\begin{aligned}\n\\cfrac{x_{1}+y_{1}i}{x_{2}+y_{2}i}&=\\cfrac{(x_{1}+y_{1}i)(x_{2}-y_{2}i)}{(x_{2}+y_{2}i)(x_{2}-y_{2}i)}\\\\\n&=\\cfrac{(x_{1}x_{2}+y_{1}y_{2})+(x_{2}y_{1}-x_{1}y_{2})i}{x_{2}^{2}+y_{2}^{2}}\\\\\n&=\\cfrac{x_{1}x_{2}+y_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}+\\cfrac{x_{2}y_{1}-x_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}i\n\\end{aligned}</script><p>我们来单独考虑一下复数相乘的几何意义。</p>\n<p>假设我们有两个复数$c_{1}$，$c_{2}$，它们的模长分别是$r_{1}$，$r_{2}$，幅角分别是$\\alpha_{1}$，$\\alpha_{2}$。不难发现我们有</p>\n<script type=\"math/tex; mode=display\">c_{1}=r_{1}(\\operatorname{cos}\\alpha_{1}+i\\operatorname{sin}\\alpha_{1})</script><script type=\"math/tex; mode=display\">c_{2}=r_{2}(\\operatorname{cos}\\alpha_{2}+i\\operatorname{sin}\\alpha_{2})</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nc_{1}c_{2}&=r_{1}r_{2}(\\cos\\alpha_{1}+i\\sin\\alpha_{1})(\\cos\\alpha_{2}+i\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}(\\cos\\alpha_{1}\\cos\\alpha_{2}+i\\cos\\alpha_{1}\\sin\\alpha_{2}+i\\sin\\alpha_{1}\\cos\\alpha_{2}-\\sin\\alpha_{1}\\sin\\alpha_{2})\\\\\n&=r_{1}r_{2}[\\cos(\\alpha_{1}+\\alpha_{2})+i\\sin(\\alpha_{1}+\\alpha_{2})]\n\\end{aligned}</script><p>总结成一句话，就是「模长相乘，幅角相加」。</p>\n<h2 id=\"单位圆与单位根\"><a href=\"#单位圆与单位根\" class=\"headerlink\" title=\"单位圆与单位根\"></a>单位圆与单位根</h2><p>单位圆就是指半径为$1$的圆。不过一般我们都是把它画在原点的。</p>\n<p><img src=\"https://i.loli.net/2018/12/20/5c1b06e5602fa.png\" alt=\"\"></p>\n<p>考虑这么一个方程</p>\n<script type=\"math/tex; mode=display\">x^{n}=1</script><p>它的所有复数根。</p>\n<p>因为复数相乘意味着模长相乘，如果一个复数的$n$次方等于$1$，它自身的模长也应该是$1$。如果它的幅角是$a$，我们应该有</p>\n<script type=\"math/tex; mode=display\">2\\pi\\mid na</script><script type=\"math/tex; mode=display\">\\cfrac{2\\pi}{n}\\mid a</script><p>不难想象出我们有$n$个这样的复数，它们的幅角通式是$\\cfrac{2k\\pi}{n}(k\\in[0,n)\\cap\\mathbb{Z})$。我们称其中幅角等于$\\cfrac{2\\pi}{n}$的复数，即$\\cos\\cfrac{2\\pi}{n}+i\\sin\\cfrac{2\\pi}{n}$为$n$次单位根$\\omega_{n}$，我们就可以把这$n$个复数表示为$\\omega_{n}^{k}(k\\in[0,n)\\cap\\mathbb{Z})$。</p>\n<p>它有如下的一些性质</p>\n<script type=\"math/tex; mode=display\">\\omega_{2n}^{2k}=\\omega_{n}^{k}</script><p>因为它们的模长都是$1$，幅角相等就相等了。</p>\n<p>然后就没了，读者自证不难（</p>\n<script type=\"math/tex; mode=display\">\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}</script><p>因为$\\omega_{n}^{\\frac{n}{2}}$的幅角是$\\cfrac{2\\times\\frac{n}{2}\\pi}{n}=\\pi$，不难发现它就是$-1$了。</p>\n<h1 id=\"快速傅里叶变换（Fast-Fourier-Transformation）\"><a href=\"#快速傅里叶变换（Fast-Fourier-Transformation）\" class=\"headerlink\" title=\"快速傅里叶变换（Fast Fourier Transformation）\"></a>快速傅里叶变换（Fast Fourier Transformation）</h1><h2 id=\"运行过程\"><a href=\"#运行过程\" class=\"headerlink\" title=\"运行过程\"></a>运行过程</h2><p>那么问题来了，我们刚才扯了这么些，有什么用呢？</p>\n<p>就是说，有个叫「让·巴普蒂斯·约瑟夫·傅里叶」（Jean Baptiste Joseph Fourier）的神仙有一天大开脑洞，掏出$n$次单位根想要求点值表达。</p>\n<p>首先，我们通过在高次补$0$的方式，将这个多项式的项数（也就是次数$+1$）补到$2$的非负整数次幂。</p>\n<p>然后一巴掌把这个多项式拍成两半，按奇偶性拼成两个多项式：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{1}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i]x^{i}\\\\\n&=F[0]x^{0}+F[2]x^{1}+\\cdots+F[n-2]x^{\\frac{n}{2}-1}\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF_{2}(x)&=\\sum\\limits_{i=0}^{\\frac{n}{2}-1}F[2i+1]x^{i}\\\\\n&=F[1]x^{0}+F[3]x^{1}+\\cdots+F[n-1]x^{\\frac{n}{2}-1}\n\\end{aligned}</script><p>于是我们有</p>\n<script type=\"math/tex; mode=display\">F(x)=F_{1}(x^{2})+xF_{2}(x^{2})</script><p>现在我们假设$0\\leqslant k&lt;\\cfrac{n}{2}$，将$x=\\omega_{n}^{k}$和$x=\\omega_{n}^{k+\\frac{n}{2}}$代入</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nF(\\omega_{n}^{k})&=F_{1}(\\omega_{n}^{2k})+\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})+\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}</script><script type=\"math/tex; mode=display\">\\begin{aligned}\nF(\\omega_{n}^{k+\\frac{n}{2}})&=F_{1}(\\omega_{n}^{2k+n})+\\omega_{n}^{k+\\frac{n}{2}}F_{2}(\\omega_{n}^{2k+n})\\\\\n&=F_{1}(\\omega_{n}^{2k})-\\omega_{n}^{k}F_{2}(\\omega_{n}^{2k})\\\\\n&=F_{1}(\\omega_{\\frac{n}{2}}^{k})-\\omega_{n}^{k}F_{2}(\\omega_{\\frac{n}{2}}^{k})\n\\end{aligned}</script><p>我们注意到，如果说我们求出了$F_{1}(x)$和$F_{2}(x)$的点值表达，我们就能够$O(n)$地求出$F(x)$的点值表达了。至此，我们不难想到分治，边界条件就是$n=1$，这时什么也不用做直接返回即可。</p>\n<p>简单地贴一下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"built_in\">complex</span>* F,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"built_in\">complex</span> F1[n&gt;&gt;<span class=\"number\">1</span>],F2[n&gt;&gt;<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">    \tF1[i]=F[<span class=\"number\">2</span>*i];</span><br><span class=\"line\">        F2[i]=F[<span class=\"number\">2</span>*i+<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    work(F1,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    work(F2,n&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    complex unit(cos(2*Pi/n),sin(2*Pi/n)),tmp=1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(n&gt;&gt;<span class=\"number\">1</span>);++i,tmp=tmp*unit)&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">complex</span> w=F2[i+(n&gt;&gt;<span class=\"number\">1</span>)]*tmp;</span><br><span class=\"line\">        F[i]=F1[i]+w;</span><br><span class=\"line\">        F[i+(n&gt;&gt;<span class=\"number\">1</span>)]=F1[i]-w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不过，以上代码是我现写出来的，<del>保证其不正确性</del>不保证其正确性。</p>\n<p>不过，这样递归运算效率还是太低了。我们来考虑一下，递归到底层后，<code>F</code>数组的每一个位置上实际存的是几次项：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 2 3 4 5 6 7</span><br><span class=\"line\">0 2 4 6|1 3 5 7</span><br><span class=\"line\">0 4|2 6|1 5|3 7</span><br><span class=\"line\">0|4|2|6|1|5|3|7</span><br></pre></td></tr></table></figure>\n<p>写成二进制看看：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">位置（十进制）</th>\n<th style=\"text-align:center\">位置（二进制）</th>\n<th style=\"text-align:center\">次数（十进制）</th>\n<th style=\"text-align:center\">次数（二进制）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$000$</td>\n<td style=\"text-align:center\">$0$</td>\n<td style=\"text-align:center\">$000$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$001$</td>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$100$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$010$</td>\n<td style=\"text-align:center\">$2$</td>\n<td style=\"text-align:center\">$010$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$011$</td>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$110$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$4$</td>\n<td style=\"text-align:center\">$100$</td>\n<td style=\"text-align:center\">$1$</td>\n<td style=\"text-align:center\">$001$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$101$</td>\n<td style=\"text-align:center\">$5$</td>\n<td style=\"text-align:center\">$101$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$6$</td>\n<td style=\"text-align:center\">$110$</td>\n<td style=\"text-align:center\">$3$</td>\n<td style=\"text-align:center\">$011$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$111$</td>\n<td style=\"text-align:center\">$7$</td>\n<td style=\"text-align:center\">$111$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>注意到两边的数字的二进制是镜像的。也就是说，我们只要把位置编号的二进制位的最后$\\operatorname{log}n$位左右镜像过来，就可以得到递归到最底层后，这个位置上的系数所对应的项的次数了。</p>\n<p>我们可以$O(n)$地处理处每个数的镜像：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">    rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>中间有一个位或运算符，我们以它为分界线，将上面这行代码分成左右两部分。左边就是$i$这个数除了最后一位以外的所有位的镜像；右边特判了一下$i$的最后一位是否为$1$，如果是的话，就在最高位补一个$1$。</p>\n<p>接下来的步骤我不是很能解释得清楚，因为我也是背的板子。总之这个东西写出来差不多长这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"built_in\">complex</span>* F,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么现在还差最后一步，将点值表达转回系数表达。我们将$F(\\omega_{n}^{0}),F(\\omega_{n}^{1}),\\cdots,F(\\omega_{n}^{n-1})$分别记为$y_{0},y_{1},\\cdots,y_{n-1}$，我们求点值的过程可以用矩阵表达成这样：</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&(\\omega_{n}^{0})^{0}&(\\omega_{n}^{0})^{1}&\\cdots&(\\omega_{n}^{0})^{n-1}&\\\\\n&(\\omega_{n}^{1})^{0}&(\\omega_{n}^{1})^{1}&\\cdots&(\\omega_{n}^{1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&(\\omega_{n}^{n-1})^{0}&(\\omega_{n}^{n-1})^{1}&\\cdots&(\\omega_{n}^{n-1})^{n-1}\\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n&F[0]&\\\\\n&F[1]\\\\\n&\\vdots\\\\\n&F[n-1]\n\\end{bmatrix}\n=\\begin{bmatrix}\n&y_{0}&\\\\\n&y_{1}\\\\\n&\\vdots\\\\\n&y_{n-1}\n\\end{bmatrix}</script><p>我们可以试图寻找左边那个矩阵的逆矩阵。直接摆结论的话，它差不多长这样：</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}\n&\\frac{1}{n}(\\omega_{n}^{0})^{0}&\\frac{1}{n}(\\omega_{n}^{0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{0})^{n-1}&\\\\\n&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\\n&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\n\\end{bmatrix}</script><p>现在我们要证明这两个矩阵乘起来是单位矩阵。令第一个矩阵为$A$，第二个矩阵为$B$，$A\\times B=C$。不难发现$A[i][j]=\\omega_{n}^{ij}$，$B[i][j]=\\cfrac{1}{n}\\omega_{n}^{-ij}$，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}A[i][k]B[k][j]\\\\\n&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{ik-kj}\n\\end{aligned}</script><p>若$i=j$，不难发现此时$C[i][j]=1$。</p>\n<p>否则，即$i\\neq j$，设$i-j=l$，我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nC[i][j]&=\\sum\\limits_{k=0}^{n-1}\\cfrac{1}{n}\\omega_{n}^{lk}\\\\\n&=\\cfrac{\\omega_{n}^{ln}-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=\\cfrac{1-1}{n(\\omega_{n}^{l}-1)}\\\\\n&=0\n\\end{aligned}</script><p>综上所述，矩阵$C$是单位矩阵，因此矩阵$B$是矩阵$A$的逆矩阵。</p>\n<p>因此我们有</p>\n<script type=\"math/tex; mode=display\">\\begin{bmatrix}&\\frac{1}{n}(\\omega_{n}^{-0})^{0}&\\frac{1}{n}(\\omega_{n}^{-0})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-0})^{n-1}&\\\\&\\frac{1}{n}(\\omega_{n}^{-1})^{0}&\\frac{1}{n}(\\omega_{n}^{-1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-1})^{n-1}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\frac{1}{n}(\\omega_{n}^{-n+1})^{0}&\\frac{1}{n}(\\omega_{n}^{-n+1})^{1}&\\cdots&\\frac{1}{n}(\\omega_{n}^{-n+1})^{n-1}\\\\\\end{bmatrix}\\begin{bmatrix}&y_{0}&\\\\&y_{1}\\\\&\\vdots\\\\&y_{n-1}\\end{bmatrix}=\\begin{bmatrix}&F[0]&\\\\&F[1]\\\\&\\vdots\\\\&F[n-1]\\end{bmatrix}</script><p>注意到这个过程和我们之前将系数转化为点值表达的过程极为相似。这就是在启示我们，如果说我们把之前用的$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$换成$\\omega_{n}^{0},\\omega_{n}^{-1},\\cdots,\\omega_{n}^{-n+1}$，然后对着点值表达来一遍FFT，然后再除以$n$，就得到了原多项式的系数了。</p>\n<p>注意到这两个过程只有用到的单位根不一样，我们可以将上面那段代码的</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br></pre></td></tr></table></figure>\n<p>然后调用时再传一个参数<code>tp</code>进去。<code>tp=1</code>表示是系数转点值，<code>tp=-1</code>表示是点值转系数。</p>\n<p>完整代码如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">double</span> Pi=<span class=\"built_in\">acos</span>(<span class=\"number\">-1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> rev[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">complex</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> r,c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">complex</span>(<span class=\"keyword\">double</span> _r=<span class=\"number\">0</span>,<span class=\"keyword\">double</span> _c=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        c=_c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">complex</span> F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>+(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r+b.r,a.c+b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>-(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r-b.r,a.c-b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>*(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">    _tp tmp=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FAQ</span><span class=\"params\">(<span class=\"built_in\">complex</span> F[],<span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    ++n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;F[i].r);</span><br><span class=\"line\">    ++m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;G[i].r);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m+=n<span class=\"number\">-1</span>,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    FAQ(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    FAQ(G,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=F[i]*G[i];</span><br><span class=\"line\">    FAQ(F,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%0.0lf \"</span>,F[i].r/n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>不要问我<code>cltstream</code>哪去了（</del></p>\n<p>然后您就可以切掉这道<a href=\"https://www.luogu.org/problemnew/show/P3803\">板子题</a>了。</p>\n<p>其实上面的代码是我从另一道题里复制过来然后现改的，说不定会改出错（</p>\n<p>最好还是自己写吧（</p>\n<p>什么？想知道是哪道题？往下看（</p>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><h3 id=\"「ZJOI2014」力\"><a href=\"#「ZJOI2014」力\" class=\"headerlink\" title=\"「ZJOI2014」力\"></a><a href=\"https://www.luogu.org/problemnew/show/P3338\">「ZJOI2014」力</a></h3><p>这是一道裸的卷积题。</p>\n<p>考虑两个长度为$n$的数组$F$和$G$，现在我们想求一个数组$H$，它满足</p>\n<script type=\"math/tex; mode=display\">H[i]=\\sum\\limits_{j=0}^{i}F[j]G[i-j]=\\sum\\limits_{0\\leqslant j<n,0\\leqslant k<n,j+k=i}F[j]G[k]</script><p>在本页面往上翻，翻到这个式子：</p>\n<script type=\"math/tex; mode=display\">(F\\times G)[k]=\\sum\\limits_{0\\leqslant i<n,0\\leqslant j<m,i+j=k}F[i]G[j]</script><p>发现了吗？这两个过程其实是一样的。</p>\n<p>于是，我们如下构造两个多项式</p>\n<script type=\"math/tex; mode=display\">F(x)=\\sum\\limits_{i=0}^{n-1}F[i]x^{i}</script><script type=\"math/tex; mode=display\">G(x)=\\sum\\limits_{i=0}^{n-1}G[i]x^{i}</script><p>然后直接一波FFT套上去，输出次数最低的$n$项的系数就好。</p>\n<p>那么这题呢？首先我们把$j\\lt i$和$j\\gt i$分开计算。</p>\n<p>先考虑$j\\lt i$，令$F[i]=q_{i}$，$G[i]=\\begin{cases}&amp;\\cfrac{1}{i^{2}}\\;\\;&amp;(i\\gt 0)\\\\&amp;0&amp;(i=0)\\end{cases}$，那么</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nE_{i}&=\\sum_{j=0}^{i-1}F[j]G[i-j]\\\\\n&=\\sum_{j=0}^{i}F[j]G[i-j]\n\\end{aligned}</script><p>直接套板子就行。</p>\n<p>对于$j&gt;i$的情况，我们将数组$F$左右翻转，然后继续套板子就行（</p>\n<p>具体还是看代码吧：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>\\lt cstdio&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">double</span> Pi=<span class=\"built_in\">acos</span>(<span class=\"number\">-1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> rev[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">complex</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> r,c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">complex</span>(<span class=\"keyword\">double</span> _r=<span class=\"number\">0</span>,<span class=\"keyword\">double</span> _c=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        c=_c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">complex</span> F1[maxn+<span class=\"number\">1</span>],F2[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>+(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r+b.r,a.c+b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>-(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r-b.r,a.c-b.c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"built_in\">complex</span> <span class=\"keyword\">operator</span>*(<span class=\"built_in\">complex</span>&amp; a,<span class=\"built_in\">complex</span>&amp; b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">complex</span>(a.r*b.r-a.c*b.c,a.r*b.c+a.c*b.r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(_tp&amp; x,_tp&amp; y)</span></span>&#123;</span><br><span class=\"line\">    _tp tmp=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">FAQ</span><span class=\"params\">(<span class=\"built_in\">complex</span> F[],<span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> len=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;len&lt;=n;len&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">unit</span><span class=\"params\">(<span class=\"built_in\">cos</span>(Pi/p),tp*<span class=\"built_in\">sin</span>(Pi/p))</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=len)&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> <span class=\"title\">cur</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> j=i;j&lt;i+p;++j)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">register</span> <span class=\"built_in\">complex</span> tmp=F[j+p]*cur;</span><br><span class=\"line\">                F[j+p]=F[j]-tmp;</span><br><span class=\"line\">                F[j]=F[j]+tmp;</span><br><span class=\"line\">                cur=cur*unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf\"</span>,&amp;F1[i].r);</span><br><span class=\"line\">        F2[n-i<span class=\"number\">-1</span>].r=F1[i].r;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">        G[i]=<span class=\"number\">1.0</span>/i/i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m=n,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    n&lt;&lt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    FAQ(G,<span class=\"number\">1</span>);</span><br><span class=\"line\">    FAQ(F1,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F1[i]=F1[i]*G[i];</span><br><span class=\"line\">    FAQ(F1,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    FAQ(F2,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F2[i]=F2[i]*G[i];</span><br><span class=\"line\">    FAQ(F2,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">register</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lf\\n\"</span>,(F1[i].r-F2[m-i<span class=\"number\">-1</span>].r)/n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"数论变换（Number-Theoretic-Transformation）\"><a href=\"#数论变换（Number-Theoretic-Transformation）\" class=\"headerlink\" title=\"数论变换（Number-Theoretic Transformation）\"></a>数论变换（Number-Theoretic Transformation）</h1><p>注意到朴素的FFT使用的是单位复根。然而它们有一个十分大的缺陷，就是必须要用<code>double</code>存。这会带来精度上的误差，一个直接的结果就是，对于只有整数参与的多项式乘法，跑完FFT却会出现小数。</p>\n<p>这就启示我们，能不能用其他的什么东西替换掉单位复根。</p>\n<p>设有两个互质的正整数$a$和$p$，最小的使得$a^{k}\\equiv 1\\pmod{p}$的$k$被称为$a$模$p$的阶，记作$\\delta_{p}(a)$。</p>\n<p>如果说$\\delta_{p}(a)=\\varphi(p)$，我们就称$a$是模$p$的一个原根。</p>\n<p>现在我们找一个质数$p=an+1$，其中$a$是一个正整数，$n$是$2$的非负整数次幂。然后我们找到它的原根$g$，并定义$\\omega_{n}=g^{a}$。让我们来看看单位复根有的性质现在的原根有没有：</p>\n<p>$\\omega_{n}^{0},\\omega_{n}^{1},\\cdots,\\omega_{n}^{n-1}$互不相同。这是为了保证点值表达的合法。</p>\n<p>虽然我不会证，不过我们的确有$g^{0},g^{1},\\cdots,g^{n-1}$在模$p$意义下互不相同，$a$次幂自然也一样。</p>\n<blockquote>\n<p>Updated on 2019-03-17</p>\n<p>似乎这么证明有些问题？</p>\n<p>原根的这个性质实际上是$g^{0},g^{1},\\cdots,g^{p-2}$在模$p$意义下互不相同。因此如果$(n-1)a&lt;p-1$，那么上面的结论就是正确的。</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n(n-1)a&=na-a\\\\\n&=p-1-\\cfrac{p-1}{n}\\\\\n&\\lt p-1\n\\end{aligned}</script><p>以上。</p>\n</blockquote>\n<p>$\\omega_{2n}^{2k}=\\omega_{n}^{k}$。这是为了让我们可以分治。</p>\n<p>根据定义，$\\omega_{2n}=g^{\\frac{a}{2}}$，就是将现在的$p$进一步拆成$\\cfrac{a}{2}\\cdot2n+1$。不难发现</p>\n<script type=\"math/tex; mode=display\">\\omega_{2n}^{2k}=g^{\\frac{a}{2}\\cdot{2}k}=g^{ak}=\\omega_{n}^{k}</script><p>因而原根有上述性质。</p>\n<p>$\\omega_{n}^{k+\\frac{n}{2}}=-\\omega_{n}^{k}$，或者说$\\omega_{n}^{\\frac{n}{2}}=-1$。这同样是为了让我们可以分治。</p>\n<p>因为$p=an+1$，根据费马小定理，我们有</p>\n<script type=\"math/tex; mode=display\">\\omega_{n}^{n}\\equiv g^{an}\\equiv g^{p-1}\\equiv 1\\pmod{p}</script><p>因而$\\omega_{n}^{\\frac{n}{2}}\\equiv\\pm 1\\pmod{p}$。又因为$\\omega_{n}^{0}=1$，而$\\omega_{n}^{\\frac{n}{2}}\\not\\equiv\\omega_{n}^{0}\\pmod{p}$，我们就得到$\\omega_{n}^{\\frac{n}{2}}\\equiv -1\\pmod{p}$。</p>\n<p>若$k\\neq 0$，$\\sum_{i=0}^{n-1}(\\omega_{n}^{k})^{i}=0$。这是为了实现逆变换。不过这个很明显，就留作习题吧。</p>\n<p>以上，我们成功地用原根取代了单位复根。一般情况下，我们会取$p=998244353=7\\times 17\\times 2^{23}+1$，它的原根是$3$。</p>\n<p>需要注意的是，我们还有一个可以优化的小细节。注意到$\\omega_{n}=g^{a}=g^{\\frac{p-1}{n}}$，我们可以将这些值预处理出来，就不用每次都跑快速幂了。对于$998244353$来说，我们需要预处理$\\omega_{2},\\omega_{4},\\cdots,\\omega_{2^{23}}$。注意到</p>\n<script type=\"math/tex; mode=display\">\\omega_{2^{23}}=3^{7\\times 17}=3^{119}</script><script type=\"math/tex; mode=display\">\\omega_{2^{k}}=\\omega_{2^{k+1}}^{2}</script><p>我们一遍快速幂算出$\\omega_{2^{23}}$然后倒着推出剩下的即可。</p>\n<p>关于$\\omega_{n}^{-k}$，注意到它就是$\\omega_{n}^{k}$在模$998244353$意义下的逆元。那么我们把上面两个式子中的$3$换成它在模$998244353$意义下的逆元即可，这个数是$332748118$。</p>\n<p>然后我们把FFT板子里的单位复根全部换成原根，运算换成模意义下的就行了。</p>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxn 2097152</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> swap(a,b) a^=b,b^=a,a^=b</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> unit[<span class=\"number\">2</span>][<span class=\"number\">24</span>],rev[maxn+<span class=\"number\">1</span>],F[maxn+<span class=\"number\">1</span>],G[maxn+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">cltpow</span><span class=\"params\">(re <span class=\"keyword\">int</span> x,re <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;y;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res=<span class=\"number\">1L</span>L*res*x%mod;</span><br><span class=\"line\">        x=<span class=\"number\">1L</span>L*x*x%mod;</span><br><span class=\"line\">        y&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">NTT</span><span class=\"params\">(<span class=\"keyword\">int</span>* F,re <span class=\"keyword\">int</span> tp)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;rev[i])</span><br><span class=\"line\">            swap(F[i],F[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,p=<span class=\"number\">1</span>;p&lt;n;++k,p&lt;&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=p&lt;&lt;<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=i,tmp=<span class=\"number\">1</span>;j&lt;i+p;++j,tmp=<span class=\"number\">1L</span>L*tmp*unit[tp][k]%mod)&#123;</span><br><span class=\"line\">                re <span class=\"keyword\">int</span> x=F[j],y=<span class=\"number\">1L</span>L*F[j+p]*tmp%mod;</span><br><span class=\"line\">                F[j]=(x+y)%mod;</span><br><span class=\"line\">                F[j+p]=(x-y+mod)%mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    unit[<span class=\"number\">0</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">3</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    unit[<span class=\"number\">1</span>][<span class=\"number\">23</span>]=cltpow(<span class=\"number\">332748118</span>,<span class=\"number\">119</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> j=<span class=\"number\">22</span>;j&gt;=<span class=\"number\">0</span>;--j)</span><br><span class=\"line\">            unit[i][j]=<span class=\"number\">1L</span>L*unit[i][j+<span class=\"number\">1</span>]*unit[i][j+<span class=\"number\">1</span>]%mod;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    ++n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        cltstream::read(F[i]);</span><br><span class=\"line\">    ++m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        cltstream::read(G[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(m+=n<span class=\"number\">-1</span>,n=<span class=\"number\">1</span>;n&lt;m;n&lt;&lt;=<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)?(n&gt;&gt;<span class=\"number\">1</span>):<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(F,<span class=\"number\">0</span>);</span><br><span class=\"line\">    NTT(G,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</span><br><span class=\"line\">        F[i]=<span class=\"number\">1L</span>L*F[i]*G[i]%mod;</span><br><span class=\"line\">    NTT(F,<span class=\"number\">1</span>);</span><br><span class=\"line\">    n=cltpow(n,mod<span class=\"number\">-2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;++i)</span><br><span class=\"line\">        cltstream::write(<span class=\"number\">1L</span>L*F[i]*n%mod,i&lt;m<span class=\"number\">-1</span>?<span class=\"number\">32</span>:<span class=\"number\">-1</span>);</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上。</p>"},{"mathjax":true,"abstract":"该文章已被加密","message":"输入密码继续阅读","date":"2019-01-10T05:37:33.000Z","title":"类欧几里得算法学习笔记","password":null,"_content":"其实我也不知道这个算法的英文名是啥（\n\n我就yy出来一个「Similar Euclid Algorithm」（\n\n<!-- more -->\n\n给你六个非负整数$n,a,b,c,k_{1},k_{2}$，你需要求出\n\n$$\\sum_{i=0}^{n}i^{k_{1}}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{k_{2}}\\pmod{1000000007}$$\n\n$n,a,b,c\\leqslant 10^{9}$，$k_{1}+k_{2}\\leqslant 10$。\n\n![](https://i.loli.net/2019/01/10/5c36dbda14c92.jpg)\n\n太难了，告辞（\n\n所以我们现在来研究简单一点的。\n\n给你四个非负整数$n,a,b,c$，你需要求出\n\n$$\\begin{aligned}\nf(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\ng(n,a,b,c)&\\equiv\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\nh(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\pmod{998244353}\n\\end{aligned}$$\n\n$n,a,b,c\\leqslant 10^{9}$，$10^{5}$组询问。\n\n[传送门](https://www.luogu.org/problemnew/show/P5170)\n\n于是我们开始愉快地推式子。首先我们暂不考虑取模，也就是下文中先用等号代替同余。\n\n首先考虑$f(n,a,b,c)$，假设$a\\geqslant c\\vee b\\geqslant c$\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n也就是说，我们只需要重点关注$a\\lt c\\wedge b\\lt c$时的情况即可。我们令$m=\\lfloor\\cfrac{an+b}{c}\\rfloor$，然后继续往下推\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\leqslant ai+b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\geqslant cj+c-b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\geqslant\\cfrac{cj+c-b}{a}\\right]\\\\\n\\end{aligned}$$\n\n然后我们发现，我们可能需要在$\\cfrac{cj+c-b}{a}$周围来一个上取整，然而上取整并没有什么比较好的性质。\n\n考虑转换一下思路。既然$cj+c\\leqslant ai+b$，我们就有$cj+c\\lt ai+b+1$，然后再往下\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\lt ai+b+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\gt cj+c-b-1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\\\\\n&=\\sum_{j=0}^{m-1}\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=mn-\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=mn-f(m-1,c,c-b-1,a)\n\\end{aligned}$$\n\n然后我们看到，这个函数它递归了！\n\n注意到$(a,b,c)$变成了$(c,c-b-1,a)$，虽然我不是很能理解，反正这个东西最多递归$\\log a$次，时间复杂度就是$O(\\log a)$了。\n\n然后考虑$g(n,a,b,c)$。\n\n$a\\geqslant c\\vee b\\geqslant c$：\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor+i\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n$a\\lt c\\wedge b\\lt c$，当然$m$还是$\\lfloor\\cfrac{an+b}{c}\\rfloor$：\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}i\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}i\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\n\\end{aligned}$$\n\n我们可以把上面这个式子理解成$\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor$且$\\leqslant n$的所有自然数之和，于是差分一下我们得到\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{j=0}^{m-1}\\left(\\cfrac{n(n+1)}{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)\n\\end{aligned}$$\n\n我们看到这个函数调用了$h(n,a,b,c)$，我们接下来就来研究一下这个函数。\n\n$a\\geqslant c\\vee b\\geqslant c$：\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\n\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\right)\\\\\n&=\n\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\\\\&\n+2\\lfloor\\cfrac{a}{c}\\rfloor\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\\\\n&=\nh(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n您绝对想象不到上面这一坨子东西的$\\TeX$源码长什么样（\n\n$a\\lt c\\wedge b\\lt c$：\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m^{2}}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[c^{2}j+c^{2}\\lt a^{2}i^{2}+2abi+b^{2}+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[i\\gt\\sqrt{\\lfloor\\cfrac{c^{2}j+c^{2}-2abi-b^{2}-1}{a^{2}}\\rfloor}\\right]\n\\end{aligned}$$\n\n![](https://i.loli.net/2019/01/10/5c36e7ca7de6a.jpg)\n\n然后我们发现推不下去了。\n\n不过办法总是有的。首先我们有一个看起来没啥用的式子\n\n$$x^{2}=2\\sum_{i=1}^{n}i-x$$\n\n套进去\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right)\\\\\n&=2\\sum_{i=0}^{n}\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=2\\sum_{j=1}^{m}j\\sum_{i=0}^{n}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\sum_{i=0}^{n}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)-f(n,a,b,c)\\\\\n&=m(m+1)n-2\\sum_{j=0}^{m-1}j\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-2\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-f(n,a,b,c)\\\\\n&=m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)\\\\\n\\end{aligned}$$\n\n然后我们看到它奇迹般地递归了！\n\n我们来总结一下。\n\n$$f(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&mn-f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n$$g(n,a,b,c)=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n$$h(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}=\\begin{cases}\n&h(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;\n&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n但是还有一个细节，如果说$n=0$或$a=0$，我们需要直接特判，大概像这样：\n\n$$f(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}$$\n\n$$g(n,a,b,c)=\\begin{cases}\n&0\\;\\;&(n=0)\\\\\n&\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}$$\n\n$$h(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(a=0)\n\\end{cases}$$\n\n另外写的时候注意三个函数值要套在结构体里一起算，不然还是会T。\n\n```cpp\n#include<cstdio>\n#define re register\n#define mod 998244353\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint t,a,b,c,n,I2=499122177,I6=166374059;\nstruct Query{\n\tint f,g,h;\n\n\tQuery(re int _f,re int _g,re int _h){\n\t\tf=_f;\n\t\tg=_g;\n\t\th=_h;\n\t}\n};\n\ninline Query query(re int a,re int b,re int c,re int n){\n\tif(!n){\n\t\tb/=c;\n\t\treturn Query(b,0,1LL*b*b%mod);\n\t}\n\tif(!a){\n\t\tb/=c;\n\t\treturn Query(1LL*(n+1)*b%mod,1LL*n*(n+1)%mod*I2%mod*b%mod,1LL*(n+1)*b%mod*b%mod);\n\t}\n\tif(a>=c||b>=c){\n\t\tre Query res=query(a%c,b%c,c,n);\n\t\ta/=c,\n\t\tb/=c;\n\t\treturn Query(\n\t\t\t(res.f+1LL*n*(n+1)%mod*I2%mod*a%mod+1LL*(n+1)*b%mod)%mod,\n\t\t\t(res.g+1LL*n*(n+1)%mod*(2*n+1)%mod*I6%mod*a%mod+1LL*n*(n+1)%mod*I2%mod*b%mod)%mod,\n\t\t\t(res.h+2LL*a*res.g%mod+2LL*b*res.f%mod\n\t\t\t\t  +1LL*n*(n+1)%mod*(2*n+1)%mod*I6%mod*a%mod*a%mod\n\t\t\t\t  +1LL*(n+1)*b%mod*b%mod+1LL*n*(n+1)%mod*a%mod*b%mod)%mod\n\t\t);\n\t}\n\telse{\n\t\tre int m=(1LL*a*n+b)/c;\n\t\tre Query res=query(c,c-b-1,a,m-1);\n\t\tre int tmp=((1LL*m*n%mod-res.f)%mod+mod)%mod;\n\t\treturn Query(\n\t\t\ttmp,\n\t\t\t((1LL*m*n%mod*(n+1)%mod-res.h-res.f)%mod+mod)*I2%mod,\n\t\t\t((1LL*m*(m+1)%mod*n%mod-2LL*res.g%mod-2LL*res.f%mod-tmp)%mod+mod)%mod\n\t\t);\n\t}\n}\n\nint main(){\n\tcltstream::read(t);\n\tfor(;t;--t){\n\t\tcltstream::read(n);\n\t\tcltstream::read(a);\n\t\tcltstream::read(b);\n\t\tcltstream::read(c);\n\t\tQuery ans=query(a,b,c,n);\n\t\tcltstream::write(ans.f,32);\n\t\tcltstream::write(ans.h,32);\n\t\tcltstream::write(ans.g,10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n那么问题来了，这个东西有什么用啊。\n\n~~没啥用（~~\n\n其他的模板题我就不举了，我们来看一下[这样一道题](https://www.luogu.org/problemnew/show/P4433)。\n\n看到推平操作我们可以直接往珂朵莉树上想了。\n\n那么对于被推平的一段区间，我们将其压成一个节点丢到珂朵莉树上，然后维护六个信息`l,r,L,R,a,b`，表示其对应原序列中的$[l,r]$这段区间，里面一共有$\\sum_{i=L}^{R}ai\\operatorname{mod}b$颗石头。注意这里的`l,r,L,R`一定不要搞混~~，我就是因为这样WA了整整四遍（~~。\n\n~~这三个样例一定是故意的。~~\n\n然后每次我们初始化一个节点的时候直接算出节点内的石头总数，像下面这样：\n\n$$\\sum_{i=L}^{R}ai\\operatorname{mod}b=\\sum_{i=L}^{R}\\left(ai-\\lfloor\\cfrac{ai}{b}\\rfloor b\\right)=\\cfrac{(R+L)(R-L+1)}{2}-\\sum_{i=0}^{R}\\lfloor\\cfrac{ai}{b}\\rfloor b+\\sum_{i=0}^{L-1}\\lfloor\\cfrac{ai}{b}\\rfloor b$$\n\n直接一波板子套上去。\n\n还有就是，这么算的话中间量会爆`long long`，我们可以考虑用`__int128_t`来存。不过这个类型在本地一般是编译不了的，虽然说交到OJ上基本没问题。我们可以\n\n```cpp\n#ifdef ONLINE_JUDGE\n\t#define int __int128_t\n#endif\n```\n\n然后把一些没必要用或者是不能用`__int128_t`的改成`signed`即可。\n\n代码还是有必要贴一下的。\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<set>\n#define re register\n#define _it std::set<node>::iterator\n#ifdef ONLINE_JUDGE\n\t#define int __int128_t\n#endif\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tsigned sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tsigned digit[50];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\n\ninline int simEuc(re int n,re int a,re int b,re int c){\n\tif(!n)\n\t\treturn b/c;\n\tif(!a)\n\t\treturn (n+1)*(b/c);\n\tif(a>=c||b>=c){\n\t\tre int res=simEuc(n,a%c,b%c,c);\n\t\treturn res+n*(n+1)*(a/c)/2+(n+1)*(b/c);\n\t}\n\telse{\n\t\tre int m=(a*n+b)/c;\n\t\treturn m*n-simEuc(m-1,c,c-b-1,a);\n\t}\n}\n\nstruct node{\n\tint l,r,L,R,a,b,sum;\n\n\tnode(re int _l,re int _r,re int _L,re int _R,re int _a,re int _b){\n\t\tl=_l;\n\t\tr=_r;\n\t\tL=_L;\n\t\tR=_R;\n\t\ta=_a;\n\t\tb=_b;\n\t\tsum=(R+L)*(R-L+1)*a/2-simEuc(R,a,0,b)*b+simEuc(L-1,a,0,b)*b;\n\t}\n};\nstd::set<node> s;\n\ninline bool operator<(re node p1,re node p2){\n\treturn p1.l<p2.l;\n}\n\ninline _it split(re int pos){\n\tre _it it=s.lower_bound(node(pos,0,1,0,0,1));\n\tif(it!=s.end()&&it->l==pos)\n\t\treturn it;\n\telse{\n\t\t--it;\n\t\tre int l=it->l,r=it->r,L=it->L,R=it->R,a=it->a,b=it->b;\n\t\ts.erase(it);\n\t\ts.insert(node(l,pos-1,L,L+pos-l-1,a,b));\n\t\treturn s.insert(node(pos,r,L+pos-l,R,a,b)).first;\n\t}\n}\n\ninline void modifyStone(re int l,re int r,re int a,re int b){\n\tre _it itr=split(r+1),itl=split(l);\n\ts.erase(itl,itr);\n\ts.insert(node(l,r,1,r-l+1,a,b));\n}\n\ninline int queryStone(re int l,re int r){\n\tre _it itr=split(r+1),itl=split(l);\n\tre int res=0;\n\tfor(;itl!=itr;res+=itl->sum,++itl);\n\treturn res;\n}\n\nsigned main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\ts.insert(node(1,n,1,0,0,1));\n\tfor(re int i=1;i<=m;++i){\n\t\tre int opt,l,r,a,b;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(l);\n\t\tcltstream::read(r);\n\t\tif(opt==1){\n\t\t\tcltstream::read(a);\n\t\t\tcltstream::read(b);\n\t\t\tmodifyStone(l,r,a,b);\n\t\t}\n\t\telse\n\t\t\tcltstream::write(queryStone(l,r),10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n","source":"_posts/2019-01-10-similar-euclid-algorithm-learning-notes.md","raw":"---\nmathjax: true\nabstract: 该文章已被加密\nmessage: 输入密码继续阅读\ndate: 2019-01-10 13:37:33\ntitle: 类欧几里得算法学习笔记\ntags:\n  - 数论\n  - 类欧几里得\ncategories:\n  - 学习笔记\npassword:\n---\n其实我也不知道这个算法的英文名是啥（\n\n我就yy出来一个「Similar Euclid Algorithm」（\n\n<!-- more -->\n\n给你六个非负整数$n,a,b,c,k_{1},k_{2}$，你需要求出\n\n$$\\sum_{i=0}^{n}i^{k_{1}}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{k_{2}}\\pmod{1000000007}$$\n\n$n,a,b,c\\leqslant 10^{9}$，$k_{1}+k_{2}\\leqslant 10$。\n\n![](https://i.loli.net/2019/01/10/5c36dbda14c92.jpg)\n\n太难了，告辞（\n\n所以我们现在来研究简单一点的。\n\n给你四个非负整数$n,a,b,c$，你需要求出\n\n$$\\begin{aligned}\nf(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\ng(n,a,b,c)&\\equiv\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\nh(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\pmod{998244353}\n\\end{aligned}$$\n\n$n,a,b,c\\leqslant 10^{9}$，$10^{5}$组询问。\n\n[传送门](https://www.luogu.org/problemnew/show/P5170)\n\n于是我们开始愉快地推式子。首先我们暂不考虑取模，也就是下文中先用等号代替同余。\n\n首先考虑$f(n,a,b,c)$，假设$a\\geqslant c\\vee b\\geqslant c$\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n也就是说，我们只需要重点关注$a\\lt c\\wedge b\\lt c$时的情况即可。我们令$m=\\lfloor\\cfrac{an+b}{c}\\rfloor$，然后继续往下推\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\leqslant ai+b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\geqslant cj+c-b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\geqslant\\cfrac{cj+c-b}{a}\\right]\\\\\n\\end{aligned}$$\n\n然后我们发现，我们可能需要在$\\cfrac{cj+c-b}{a}$周围来一个上取整，然而上取整并没有什么比较好的性质。\n\n考虑转换一下思路。既然$cj+c\\leqslant ai+b$，我们就有$cj+c\\lt ai+b+1$，然后再往下\n\n$$\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\lt ai+b+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\gt cj+c-b-1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\\\\\n&=\\sum_{j=0}^{m-1}\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=mn-\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=mn-f(m-1,c,c-b-1,a)\n\\end{aligned}$$\n\n然后我们看到，这个函数它递归了！\n\n注意到$(a,b,c)$变成了$(c,c-b-1,a)$，虽然我不是很能理解，反正这个东西最多递归$\\log a$次，时间复杂度就是$O(\\log a)$了。\n\n然后考虑$g(n,a,b,c)$。\n\n$a\\geqslant c\\vee b\\geqslant c$：\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor+i\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n$a\\lt c\\wedge b\\lt c$，当然$m$还是$\\lfloor\\cfrac{an+b}{c}\\rfloor$：\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}i\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}i\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\n\\end{aligned}$$\n\n我们可以把上面这个式子理解成$\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor$且$\\leqslant n$的所有自然数之和，于是差分一下我们得到\n\n$$\\begin{aligned}\ng(n,a,b,c)&=\\sum_{j=0}^{m-1}\\left(\\cfrac{n(n+1)}{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)\n\\end{aligned}$$\n\n我们看到这个函数调用了$h(n,a,b,c)$，我们接下来就来研究一下这个函数。\n\n$a\\geqslant c\\vee b\\geqslant c$：\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\n\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\right)\\\\\n&=\n\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\\\\&\n+2\\lfloor\\cfrac{a}{c}\\rfloor\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\\\\n&=\nh(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}$$\n\n您绝对想象不到上面这一坨子东西的$\\TeX$源码长什么样（\n\n$a\\lt c\\wedge b\\lt c$：\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m^{2}}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[c^{2}j+c^{2}\\lt a^{2}i^{2}+2abi+b^{2}+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[i\\gt\\sqrt{\\lfloor\\cfrac{c^{2}j+c^{2}-2abi-b^{2}-1}{a^{2}}\\rfloor}\\right]\n\\end{aligned}$$\n\n![](https://i.loli.net/2019/01/10/5c36e7ca7de6a.jpg)\n\n然后我们发现推不下去了。\n\n不过办法总是有的。首先我们有一个看起来没啥用的式子\n\n$$x^{2}=2\\sum_{i=1}^{n}i-x$$\n\n套进去\n\n$$\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right)\\\\\n&=2\\sum_{i=0}^{n}\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=2\\sum_{j=1}^{m}j\\sum_{i=0}^{n}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\sum_{i=0}^{n}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)-f(n,a,b,c)\\\\\n&=m(m+1)n-2\\sum_{j=0}^{m-1}j\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-2\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-f(n,a,b,c)\\\\\n&=m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)\\\\\n\\end{aligned}$$\n\n然后我们看到它奇迹般地递归了！\n\n我们来总结一下。\n\n$$f(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&mn-f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n$$g(n,a,b,c)=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n$$h(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}=\\begin{cases}\n&h(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;\n&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}$$\n\n但是还有一个细节，如果说$n=0$或$a=0$，我们需要直接特判，大概像这样：\n\n$$f(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}$$\n\n$$g(n,a,b,c)=\\begin{cases}\n&0\\;\\;&(n=0)\\\\\n&\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}$$\n\n$$h(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(a=0)\n\\end{cases}$$\n\n另外写的时候注意三个函数值要套在结构体里一起算，不然还是会T。\n\n```cpp\n#include<cstdio>\n#define re register\n#define mod 998244353\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tint sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tint digit[22];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint t,a,b,c,n,I2=499122177,I6=166374059;\nstruct Query{\n\tint f,g,h;\n\n\tQuery(re int _f,re int _g,re int _h){\n\t\tf=_f;\n\t\tg=_g;\n\t\th=_h;\n\t}\n};\n\ninline Query query(re int a,re int b,re int c,re int n){\n\tif(!n){\n\t\tb/=c;\n\t\treturn Query(b,0,1LL*b*b%mod);\n\t}\n\tif(!a){\n\t\tb/=c;\n\t\treturn Query(1LL*(n+1)*b%mod,1LL*n*(n+1)%mod*I2%mod*b%mod,1LL*(n+1)*b%mod*b%mod);\n\t}\n\tif(a>=c||b>=c){\n\t\tre Query res=query(a%c,b%c,c,n);\n\t\ta/=c,\n\t\tb/=c;\n\t\treturn Query(\n\t\t\t(res.f+1LL*n*(n+1)%mod*I2%mod*a%mod+1LL*(n+1)*b%mod)%mod,\n\t\t\t(res.g+1LL*n*(n+1)%mod*(2*n+1)%mod*I6%mod*a%mod+1LL*n*(n+1)%mod*I2%mod*b%mod)%mod,\n\t\t\t(res.h+2LL*a*res.g%mod+2LL*b*res.f%mod\n\t\t\t\t  +1LL*n*(n+1)%mod*(2*n+1)%mod*I6%mod*a%mod*a%mod\n\t\t\t\t  +1LL*(n+1)*b%mod*b%mod+1LL*n*(n+1)%mod*a%mod*b%mod)%mod\n\t\t);\n\t}\n\telse{\n\t\tre int m=(1LL*a*n+b)/c;\n\t\tre Query res=query(c,c-b-1,a,m-1);\n\t\tre int tmp=((1LL*m*n%mod-res.f)%mod+mod)%mod;\n\t\treturn Query(\n\t\t\ttmp,\n\t\t\t((1LL*m*n%mod*(n+1)%mod-res.h-res.f)%mod+mod)*I2%mod,\n\t\t\t((1LL*m*(m+1)%mod*n%mod-2LL*res.g%mod-2LL*res.f%mod-tmp)%mod+mod)%mod\n\t\t);\n\t}\n}\n\nint main(){\n\tcltstream::read(t);\n\tfor(;t;--t){\n\t\tcltstream::read(n);\n\t\tcltstream::read(a);\n\t\tcltstream::read(b);\n\t\tcltstream::read(c);\n\t\tQuery ans=query(a,b,c,n);\n\t\tcltstream::write(ans.f,32);\n\t\tcltstream::write(ans.h,32);\n\t\tcltstream::write(ans.g,10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n\n那么问题来了，这个东西有什么用啊。\n\n~~没啥用（~~\n\n其他的模板题我就不举了，我们来看一下[这样一道题](https://www.luogu.org/problemnew/show/P4433)。\n\n看到推平操作我们可以直接往珂朵莉树上想了。\n\n那么对于被推平的一段区间，我们将其压成一个节点丢到珂朵莉树上，然后维护六个信息`l,r,L,R,a,b`，表示其对应原序列中的$[l,r]$这段区间，里面一共有$\\sum_{i=L}^{R}ai\\operatorname{mod}b$颗石头。注意这里的`l,r,L,R`一定不要搞混~~，我就是因为这样WA了整整四遍（~~。\n\n~~这三个样例一定是故意的。~~\n\n然后每次我们初始化一个节点的时候直接算出节点内的石头总数，像下面这样：\n\n$$\\sum_{i=L}^{R}ai\\operatorname{mod}b=\\sum_{i=L}^{R}\\left(ai-\\lfloor\\cfrac{ai}{b}\\rfloor b\\right)=\\cfrac{(R+L)(R-L+1)}{2}-\\sum_{i=0}^{R}\\lfloor\\cfrac{ai}{b}\\rfloor b+\\sum_{i=0}^{L-1}\\lfloor\\cfrac{ai}{b}\\rfloor b$$\n\n直接一波板子套上去。\n\n还有就是，这么算的话中间量会爆`long long`，我们可以考虑用`__int128_t`来存。不过这个类型在本地一般是编译不了的，虽然说交到OJ上基本没问题。我们可以\n\n```cpp\n#ifdef ONLINE_JUDGE\n\t#define int __int128_t\n#endif\n```\n\n然后把一些没必要用或者是不能用`__int128_t`的改成`signed`即可。\n\n代码还是有必要贴一下的。\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<set>\n#define re register\n#define _it std::set<node>::iterator\n#ifdef ONLINE_JUDGE\n\t#define int __int128_t\n#endif\n\nnamespace cltstream{\n\t#define size 1048576\n\tchar cltin[size+1],*ih=cltin,*it=cltin;\n\tinline char gc(){\n\t\t#ifdef ONLINE_JUDGE\n\t\t\tif(ih==it){\n\t\t\t\tit=(ih=cltin)+fread(cltin,1,size,stdin);\n\t\t\t\tif(ih==it)\n\t\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\treturn *ih++;\n\t\t#else\n\t\t\treturn getchar();\n\t\t#endif\n\t}\n\n\tchar cltout[size+1],*oh=cltout,*ot=cltout+size;\n\tinline void pc(char c){\n\t\tif(oh==ot){\n\t\t\tfwrite(cltout,1,size,stdout);\n\t\t\toh=cltout;\n\t\t}\n\t\t*oh++=c;\n\t}\n\t#define clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout\n\t#undef size\n\n\ttemplate <typename _tp>\n\tinline void read(_tp& x){\n\t\tsigned sn=1;\n\t\tchar c=gc();\n\t\tfor(;c!=45&&(c<48||c>57)&&c!=EOF;c=gc());\n\t\tif(c==45&&c!=EOF)\n\t\t\tsn=-1,c=gc();\n\t\tfor(x=0;c>=48&&c<=57&&c!=EOF;x=(x<<3)+(x<<1)+(c^48),c=gc());\n\t\tx*=sn;\n\t}\n\n\ttemplate <typename _tp>\n\tinline void write(_tp x,char text=-1){\n\t\tif(x<0)\n\t\t\tpc(45),x=-x;\n\t\tif(!x)\n\t\t\tpc(48);\n\t\telse{\n\t\t\tsigned digit[50];\n\t\t\tfor(digit[0]=0;x;digit[++digit[0]]=x%10,x/=10);\n\t\t\tfor(;digit[0];pc(digit[digit[0]--]^48));\n\t\t}\n\t\tif(text>=0)\n\t\t\tpc(text);\n\t}\n}\n\nint n,m;\n\ninline int simEuc(re int n,re int a,re int b,re int c){\n\tif(!n)\n\t\treturn b/c;\n\tif(!a)\n\t\treturn (n+1)*(b/c);\n\tif(a>=c||b>=c){\n\t\tre int res=simEuc(n,a%c,b%c,c);\n\t\treturn res+n*(n+1)*(a/c)/2+(n+1)*(b/c);\n\t}\n\telse{\n\t\tre int m=(a*n+b)/c;\n\t\treturn m*n-simEuc(m-1,c,c-b-1,a);\n\t}\n}\n\nstruct node{\n\tint l,r,L,R,a,b,sum;\n\n\tnode(re int _l,re int _r,re int _L,re int _R,re int _a,re int _b){\n\t\tl=_l;\n\t\tr=_r;\n\t\tL=_L;\n\t\tR=_R;\n\t\ta=_a;\n\t\tb=_b;\n\t\tsum=(R+L)*(R-L+1)*a/2-simEuc(R,a,0,b)*b+simEuc(L-1,a,0,b)*b;\n\t}\n};\nstd::set<node> s;\n\ninline bool operator<(re node p1,re node p2){\n\treturn p1.l<p2.l;\n}\n\ninline _it split(re int pos){\n\tre _it it=s.lower_bound(node(pos,0,1,0,0,1));\n\tif(it!=s.end()&&it->l==pos)\n\t\treturn it;\n\telse{\n\t\t--it;\n\t\tre int l=it->l,r=it->r,L=it->L,R=it->R,a=it->a,b=it->b;\n\t\ts.erase(it);\n\t\ts.insert(node(l,pos-1,L,L+pos-l-1,a,b));\n\t\treturn s.insert(node(pos,r,L+pos-l,R,a,b)).first;\n\t}\n}\n\ninline void modifyStone(re int l,re int r,re int a,re int b){\n\tre _it itr=split(r+1),itl=split(l);\n\ts.erase(itl,itr);\n\ts.insert(node(l,r,1,r-l+1,a,b));\n}\n\ninline int queryStone(re int l,re int r){\n\tre _it itr=split(r+1),itl=split(l);\n\tre int res=0;\n\tfor(;itl!=itr;res+=itl->sum,++itl);\n\treturn res;\n}\n\nsigned main(){\n\tcltstream::read(n);\n\tcltstream::read(m);\n\ts.insert(node(1,n,1,0,0,1));\n\tfor(re int i=1;i<=m;++i){\n\t\tre int opt,l,r,a,b;\n\t\tcltstream::read(opt);\n\t\tcltstream::read(l);\n\t\tcltstream::read(r);\n\t\tif(opt==1){\n\t\t\tcltstream::read(a);\n\t\t\tcltstream::read(b);\n\t\t\tmodifyStone(l,r,a,b);\n\t\t}\n\t\telse\n\t\t\tcltstream::write(queryStone(l,r),10);\n\t}\n\tclop();\n\treturn 0;\n}\n```\n","slug":"similar-euclid-algorithm-learning-notes","published":1,"updated":"2020-05-17T12:07:04.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn32nhnl0091mku9g0qeajvw","content":"<p>其实我也不知道这个算法的英文名是啥（</p>\n<p>我就yy出来一个「Similar Euclid Algorithm」（</p>\n<a id=\"more\"></a>\n<p>给你六个非负整数$n,a,b,c,k_{1},k_{2}$，你需要求出</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}i^{k_{1}}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{k_{2}}\\pmod{1000000007}</script><p>$n,a,b,c\\leqslant 10^{9}$，$k_{1}+k_{2}\\leqslant 10$。</p>\n<p><img src=\"https://i.loli.net/2019/01/10/5c36dbda14c92.jpg\" alt=\"\"></p>\n<p>太难了，告辞（</p>\n<p>所以我们现在来研究简单一点的。</p>\n<p>给你四个非负整数$n,a,b,c$，你需要求出</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\ng(n,a,b,c)&\\equiv\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\nh(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\pmod{998244353}\n\\end{aligned}</script><p>$n,a,b,c\\leqslant 10^{9}$，$10^{5}$组询问。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P5170\">传送门</a></p>\n<p>于是我们开始愉快地推式子。首先我们暂不考虑取模，也就是下文中先用等号代替同余。</p>\n<p>首先考虑$f(n,a,b,c)$，假设$a\\geqslant c\\vee b\\geqslant c$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>也就是说，我们只需要重点关注$a\\lt c\\wedge b\\lt c$时的情况即可。我们令$m=\\lfloor\\cfrac{an+b}{c}\\rfloor$，然后继续往下推</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\leqslant ai+b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\geqslant cj+c-b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\geqslant\\cfrac{cj+c-b}{a}\\right]\\\\\n\\end{aligned}</script><p>然后我们发现，我们可能需要在$\\cfrac{cj+c-b}{a}$周围来一个上取整，然而上取整并没有什么比较好的性质。</p>\n<p>考虑转换一下思路。既然$cj+c\\leqslant ai+b$，我们就有$cj+c\\lt ai+b+1$，然后再往下</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\lt ai+b+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\gt cj+c-b-1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\\\\\n&=\\sum_{j=0}^{m-1}\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=mn-\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=mn-f(m-1,c,c-b-1,a)\n\\end{aligned}</script><p>然后我们看到，这个函数它递归了！</p>\n<p>注意到$(a,b,c)$变成了$(c,c-b-1,a)$，虽然我不是很能理解，反正这个东西最多递归$\\log a$次，时间复杂度就是$O(\\log a)$了。</p>\n<p>然后考虑$g(n,a,b,c)$。</p>\n<p>$a\\geqslant c\\vee b\\geqslant c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor+i\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>$a\\lt c\\wedge b\\lt c$，当然$m$还是$\\lfloor\\cfrac{an+b}{c}\\rfloor$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}i\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}i\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\n\\end{aligned}</script><p>我们可以把上面这个式子理解成$\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor$且$\\leqslant n$的所有自然数之和，于是差分一下我们得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{j=0}^{m-1}\\left(\\cfrac{n(n+1)}{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)\n\\end{aligned}</script><p>我们看到这个函数调用了$h(n,a,b,c)$，我们接下来就来研究一下这个函数。</p>\n<p>$a\\geqslant c\\vee b\\geqslant c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\n\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\right)\\\\\n&=\n\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\\\\&\n+2\\lfloor\\cfrac{a}{c}\\rfloor\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\\\\n&=\nh(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>您绝对想象不到上面这一坨子东西的$\\TeX$源码长什么样（</p>\n<p>$a\\lt c\\wedge b\\lt c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m^{2}}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[c^{2}j+c^{2}\\lt a^{2}i^{2}+2abi+b^{2}+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[i\\gt\\sqrt{\\lfloor\\cfrac{c^{2}j+c^{2}-2abi-b^{2}-1}{a^{2}}\\rfloor}\\right]\n\\end{aligned}</script><p><img src=\"https://i.loli.net/2019/01/10/5c36e7ca7de6a.jpg\" alt=\"\"></p>\n<p>然后我们发现推不下去了。</p>\n<p>不过办法总是有的。首先我们有一个看起来没啥用的式子</p>\n<script type=\"math/tex; mode=display\">x^{2}=2\\sum_{i=1}^{n}i-x</script><p>套进去</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right)\\\\\n&=2\\sum_{i=0}^{n}\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=2\\sum_{j=1}^{m}j\\sum_{i=0}^{n}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\sum_{i=0}^{n}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)-f(n,a,b,c)\\\\\n&=m(m+1)n-2\\sum_{j=0}^{m-1}j\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-2\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-f(n,a,b,c)\\\\\n&=m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)\\\\\n\\end{aligned}</script><p>然后我们看到它奇迹般地递归了！</p>\n<p>我们来总结一下。</p>\n<script type=\"math/tex; mode=display\">f(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&mn-f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><script type=\"math/tex; mode=display\">g(n,a,b,c)=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><script type=\"math/tex; mode=display\">h(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}=\\begin{cases}\n&h(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;\n&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><p>但是还有一个细节，如果说$n=0$或$a=0$，我们需要直接特判，大概像这样：</p>\n<script type=\"math/tex; mode=display\">f(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}</script><script type=\"math/tex; mode=display\">g(n,a,b,c)=\\begin{cases}\n&0\\;\\;&(n=0)\\\\\n&\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}</script><script type=\"math/tex; mode=display\">h(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(a=0)\n\\end{cases}</script><p>另外写的时候注意三个函数值要套在结构体里一起算，不然还是会T。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> t,a,b,c,n,I2=<span class=\"number\">499122177</span>,I6=<span class=\"number\">166374059</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Query</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> f,g,h;</span><br><span class=\"line\"></span><br><span class=\"line\">    Query(re <span class=\"keyword\">int</span> _f,re <span class=\"keyword\">int</span> _g,re <span class=\"keyword\">int</span> _h)&#123;</span><br><span class=\"line\">        f=_f;</span><br><span class=\"line\">        g=_g;</span><br><span class=\"line\">        h=_h;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> Query <span class=\"title\">query</span><span class=\"params\">(re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b,re <span class=\"keyword\">int</span> c,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!n)&#123;</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(b,<span class=\"number\">0</span>,<span class=\"number\">1L</span>L*b*b%mod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a)&#123;</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod,<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*b%mod,<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod*b%mod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c)&#123;</span><br><span class=\"line\">        re Query res=query(a%c,b%c,c,n);</span><br><span class=\"line\">        a/=c,</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(</span><br><span class=\"line\">            (res.f+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*a%mod+<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod)%mod,</span><br><span class=\"line\">            (res.g+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*(<span class=\"number\">2</span>*n+<span class=\"number\">1</span>)%mod*I6%mod*a%mod+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*b%mod)%mod,</span><br><span class=\"line\">            (res.h+<span class=\"number\">2L</span>L*a*res.g%mod+<span class=\"number\">2L</span>L*b*res.f%mod</span><br><span class=\"line\">                  +<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*(<span class=\"number\">2</span>*n+<span class=\"number\">1</span>)%mod*I6%mod*a%mod*a%mod</span><br><span class=\"line\">                  +<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod*b%mod+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*a%mod*b%mod)%mod</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> m=(<span class=\"number\">1L</span>L*a*n+b)/c;</span><br><span class=\"line\">        re Query res=query(c,c-b<span class=\"number\">-1</span>,a,m<span class=\"number\">-1</span>);</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> tmp=((<span class=\"number\">1L</span>L*m*n%mod-res.f)%mod+mod)%mod;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(</span><br><span class=\"line\">            tmp,</span><br><span class=\"line\">            ((<span class=\"number\">1L</span>L*m*n%mod*(n+<span class=\"number\">1</span>)%mod-res.h-res.f)%mod+mod)*I2%mod,</span><br><span class=\"line\">            ((<span class=\"number\">1L</span>L*m*(m+<span class=\"number\">1</span>)%mod*n%mod<span class=\"number\">-2L</span>L*res.g%mod<span class=\"number\">-2L</span>L*res.f%mod-tmp)%mod+mod)%mod</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;t;--t)&#123;</span><br><span class=\"line\">        cltstream::read(n);</span><br><span class=\"line\">        cltstream::read(a);</span><br><span class=\"line\">        cltstream::read(b);</span><br><span class=\"line\">        cltstream::read(c);</span><br><span class=\"line\">        Query ans=query(a,b,c,n);</span><br><span class=\"line\">        cltstream::write(ans.f,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(ans.h,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(ans.g,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么问题来了，这个东西有什么用啊。</p>\n<p><del>没啥用（</del></p>\n<p>其他的模板题我就不举了，我们来看一下<a href=\"https://www.luogu.org/problemnew/show/P4433\">这样一道题</a>。</p>\n<p>看到推平操作我们可以直接往珂朵莉树上想了。</p>\n<p>那么对于被推平的一段区间，我们将其压成一个节点丢到珂朵莉树上，然后维护六个信息<code>l,r,L,R,a,b</code>，表示其对应原序列中的$[l,r]$这段区间，里面一共有$\\sum_{i=L}^{R}ai\\operatorname{mod}b$颗石头。注意这里的<code>l,r,L,R</code>一定不要搞混<del>，我就是因为这样WA了整整四遍（</del>。</p>\n<p><del>这三个样例一定是故意的。</del></p>\n<p>然后每次我们初始化一个节点的时候直接算出节点内的石头总数，像下面这样：</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=L}^{R}ai\\operatorname{mod}b=\\sum_{i=L}^{R}\\left(ai-\\lfloor\\cfrac{ai}{b}\\rfloor b\\right)=\\cfrac{(R+L)(R-L+1)}{2}-\\sum_{i=0}^{R}\\lfloor\\cfrac{ai}{b}\\rfloor b+\\sum_{i=0}^{L-1}\\lfloor\\cfrac{ai}{b}\\rfloor b</script><p>直接一波板子套上去。</p>\n<p>还有就是，这么算的话中间量会爆<code>long long</code>，我们可以考虑用<code>__int128_t</code>来存。不过这个类型在本地一般是编译不了的，虽然说交到OJ上基本没问题。我们可以</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> int __int128_t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<p>然后把一些没必要用或者是不能用<code>__int128_t</code>的改成<code>signed</code>即可。</p>\n<p>代码还是有必要贴一下的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> int __int128_t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">signed</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">signed</span> digit[<span class=\"number\">50</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">simEuc</span><span class=\"params\">(re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b,re <span class=\"keyword\">int</span> c)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!n)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b/c;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=simEuc(n,a%c,b%c,c);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res+n*(n+<span class=\"number\">1</span>)*(a/c)/<span class=\"number\">2</span>+(n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> m=(a*n+b)/c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> m*n-simEuc(m<span class=\"number\">-1</span>,c,c-b<span class=\"number\">-1</span>,a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r,L,R,a,b,sum;</span><br><span class=\"line\"></span><br><span class=\"line\">    node(re <span class=\"keyword\">int</span> _l,re <span class=\"keyword\">int</span> _r,re <span class=\"keyword\">int</span> _L,re <span class=\"keyword\">int</span> _R,re <span class=\"keyword\">int</span> _a,re <span class=\"keyword\">int</span> _b)&#123;</span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        L=_L;</span><br><span class=\"line\">        R=_R;</span><br><span class=\"line\">        a=_a;</span><br><span class=\"line\">        b=_b;</span><br><span class=\"line\">        sum=(R+L)*(R-L+<span class=\"number\">1</span>)*a/<span class=\"number\">2</span>-simEuc(R,a,<span class=\"number\">0</span>,b)*b+simEuc(L<span class=\"number\">-1</span>,a,<span class=\"number\">0</span>,b)*b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(re node p1,re node p2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1.l&lt;p2.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(re <span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    re _it it=s.lower_bound(node(pos,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        --it;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r,L=it-&gt;L,R=it-&gt;R,a=it-&gt;a,b=it-&gt;b;</span><br><span class=\"line\">        s.erase(it);</span><br><span class=\"line\">        s.insert(node(l,pos<span class=\"number\">-1</span>,L,L+pos-l<span class=\"number\">-1</span>,a,b));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.insert(node(pos,r,L+pos-l,R,a,b)).first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">modifyStone</span><span class=\"params\">(re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r,re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    re _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    s.insert(node(l,r,<span class=\"number\">1</span>,r-l+<span class=\"number\">1</span>,a,b));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">queryStone</span><span class=\"params\">(re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    re _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;itl!=itr;res+=itl-&gt;sum,++itl);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    s.insert(node(<span class=\"number\">1</span>,n,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> opt,l,r,a,b;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(l);</span><br><span class=\"line\">        cltstream::read(r);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cltstream::read(a);</span><br><span class=\"line\">            cltstream::read(b);</span><br><span class=\"line\">            modifyStone(l,r,a,b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            cltstream::write(queryStone(l,r),<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>其实我也不知道这个算法的英文名是啥（</p>\n<p>我就yy出来一个「Similar Euclid Algorithm」（</p>","more":"<p>给你六个非负整数$n,a,b,c,k_{1},k_{2}$，你需要求出</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=0}^{n}i^{k_{1}}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{k_{2}}\\pmod{1000000007}</script><p>$n,a,b,c\\leqslant 10^{9}$，$k_{1}+k_{2}\\leqslant 10$。</p>\n<p><img src=\"https://i.loli.net/2019/01/10/5c36dbda14c92.jpg\" alt=\"\"></p>\n<p>太难了，告辞（</p>\n<p>所以我们现在来研究简单一点的。</p>\n<p>给你四个非负整数$n,a,b,c$，你需要求出</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\ng(n,a,b,c)&\\equiv\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\pmod{998244353}\\\\\nh(n,a,b,c)&\\equiv\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\pmod{998244353}\n\\end{aligned}</script><p>$n,a,b,c\\leqslant 10^{9}$，$10^{5}$组询问。</p>\n<p><a href=\"https://www.luogu.org/problemnew/show/P5170\">传送门</a></p>\n<p>于是我们开始愉快地推式子。首先我们暂不考虑取模，也就是下文中先用等号代替同余。</p>\n<p>首先考虑$f(n,a,b,c)$，假设$a\\geqslant c\\vee b\\geqslant c$</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>也就是说，我们只需要重点关注$a\\lt c\\wedge b\\lt c$时的情况即可。我们令$m=\\lfloor\\cfrac{an+b}{c}\\rfloor$，然后继续往下推</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\leqslant ai+b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\geqslant cj+c-b\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\geqslant\\cfrac{cj+c-b}{a}\\right]\\\\\n\\end{aligned}</script><p>然后我们发现，我们可能需要在$\\cfrac{cj+c-b}{a}$周围来一个上取整，然而上取整并没有什么比较好的性质。</p>\n<p>考虑转换一下思路。既然$cj+c\\leqslant ai+b$，我们就有$cj+c\\lt ai+b+1$，然后再往下</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nf(n,a,b,c)&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[cj+c\\lt ai+b+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[ai\\gt cj+c-b-1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\\\\\n&=\\sum_{j=0}^{m-1}\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=mn-\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=mn-f(m-1,c,c-b-1,a)\n\\end{aligned}</script><p>然后我们看到，这个函数它递归了！</p>\n<p>注意到$(a,b,c)$变成了$(c,c-b-1,a)$，虽然我不是很能理解，反正这个东西最多递归$\\log a$次，时间复杂度就是$O(\\log a)$了。</p>\n<p>然后考虑$g(n,a,b,c)$。</p>\n<p>$a\\geqslant c\\vee b\\geqslant c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\left(i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor+i\\lfloor\\cfrac{b}{c}\\rfloor\\right)\\\\\n&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\\\\n&=g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>$a\\lt c\\wedge b\\lt c$，当然$m$还是$\\lfloor\\cfrac{an+b}{c}\\rfloor$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m}i\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}i\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]\n\\end{aligned}</script><p>我们可以把上面这个式子理解成$\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor$且$\\leqslant n$的所有自然数之和，于是差分一下我们得到</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\ng(n,a,b,c)&=\\sum_{j=0}^{m-1}\\left(\\cfrac{n(n+1)}{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor^{2}-\\cfrac{1}{2}\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\\\\n&=\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)\n\\end{aligned}</script><p>我们看到这个函数调用了$h(n,a,b,c)$，我们接下来就来研究一下这个函数。</p>\n<p>$a\\geqslant c\\vee b\\geqslant c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor+i\\lfloor\\cfrac{a}{c}\\rfloor+\\lfloor\\cfrac{b}{c}\\rfloor\\right)^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(\n\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+i^{2}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2i\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\right)\\\\\n&=\n\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor^{2}\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\\\\&\n+2\\lfloor\\cfrac{a}{c}\\rfloor\\sum_{i=0}^{n}i\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+2\\lfloor\\cfrac{b}{c}\\rfloor\\sum_{i=0}^{n}\\lfloor\\cfrac{(a\\operatorname{mod}c)i+(b\\operatorname{mod}c)}{c}\\rfloor\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\\\\n&=\nh(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\n\\end{aligned}</script><p>您绝对想象不到上面这一坨子东西的$\\TeX$源码长什么样（</p>\n<p>$a\\lt c\\wedge b\\lt c$：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=1}^{m^{2}}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[c^{2}j+c^{2}\\lt a^{2}i^{2}+2abi+b^{2}+1\\right]\\\\\n&=\\sum_{i=0}^{n}\\sum_{j=0}^{m^{2}-1}\\left[i\\gt\\sqrt{\\lfloor\\cfrac{c^{2}j+c^{2}-2abi-b^{2}-1}{a^{2}}\\rfloor}\\right]\n\\end{aligned}</script><p><img src=\"https://i.loli.net/2019/01/10/5c36e7ca7de6a.jpg\" alt=\"\"></p>\n<p>然后我们发现推不下去了。</p>\n<p>不过办法总是有的。首先我们有一个看起来没啥用的式子</p>\n<script type=\"math/tex; mode=display\">x^{2}=2\\sum_{i=1}^{n}i-x</script><p>套进去</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nh(n,a,b,c)&=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}\\\\\n&=\\sum_{i=0}^{n}\\left(2\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right)\\\\\n&=2\\sum_{i=0}^{n}\\sum_{j=1}^{\\lfloor\\tfrac{ai+b}{c}\\rfloor}j-\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor\\\\\n&=2\\sum_{j=1}^{m}j\\sum_{i=0}^{n}\\left[j\\leqslant\\lfloor\\cfrac{ai+b}{c}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\sum_{i=0}^{n}\\left[i\\gt\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right]-f(n,a,b,c)\\\\\n&=2\\sum_{j=0}^{m-1}(j+1)\\left(n-\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor\\right)-f(n,a,b,c)\\\\\n&=m(m+1)n-2\\sum_{j=0}^{m-1}j\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-2\\sum_{j=0}^{m-1}\\lfloor\\cfrac{cj+c-b-1}{a}\\rfloor-f(n,a,b,c)\\\\\n&=m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)\\\\\n\\end{aligned}</script><p>然后我们看到它奇迹般地递归了！</p>\n<p>我们来总结一下。</p>\n<script type=\"math/tex; mode=display\">f(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{a}{c}\\rfloor+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&mn-f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><script type=\"math/tex; mode=display\">g(n,a,b,c)=\\sum_{i=0}^{n}i\\lfloor\\cfrac{ai+b}{c}\\rfloor=\\begin{cases}\n&g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor+\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&\\cfrac{mn(n+1)}{2}-\\cfrac{1}{2}h(m-1,c,c-b-1,a)-\\cfrac{1}{2}f(m-1,c,c-b-1,a)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><script type=\"math/tex; mode=display\">h(n,a,b,c)=\\sum_{i=0}^{n}\\lfloor\\cfrac{ai+b}{c}\\rfloor^{2}=\\begin{cases}\n&h(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{a}{c}\\rfloor g(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\n+2\\lfloor\\cfrac{b}{c}\\rfloor f(n,a\\operatorname{mod}c,b\\operatorname{mod}c,c)\\\\&\n+\\cfrac{n(n+1)(2n+1)}{6}\\lfloor\\cfrac{a}{c}\\rfloor^{2}\n+(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}\n+n(n+1)\\lfloor\\cfrac{a}{c}\\rfloor\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;\n&(a\\geqslant c\\vee b\\geqslant c)\\\\\n&m(m+1)n-2g(m-1,c,c-b-1,a)-2f(m-1,c,c-b-1,a)-f(n,a,b,c)&(a\\lt c\\wedge b\\lt c)\n\\end{cases}</script><p>但是还有一个细节，如果说$n=0$或$a=0$，我们需要直接特判，大概像这样：</p>\n<script type=\"math/tex; mode=display\">f(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor\\;\\;&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}</script><script type=\"math/tex; mode=display\">g(n,a,b,c)=\\begin{cases}\n&0\\;\\;&(n=0)\\\\\n&\\cfrac{n(n+1)}{2}\\lfloor\\cfrac{b}{c}\\rfloor&(a=0)\n\\end{cases}</script><script type=\"math/tex; mode=display\">h(n,a,b,c)=\\begin{cases}\n&\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(n=0)\\\\\n&(n+1)\\lfloor\\cfrac{b}{c}\\rfloor^{2}&(a=0)\n\\end{cases}</script><p>另外写的时候注意三个函数值要套在结构体里一起算，不然还是会T。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> digit[<span class=\"number\">22</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> t,a,b,c,n,I2=<span class=\"number\">499122177</span>,I6=<span class=\"number\">166374059</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Query</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> f,g,h;</span><br><span class=\"line\"></span><br><span class=\"line\">    Query(re <span class=\"keyword\">int</span> _f,re <span class=\"keyword\">int</span> _g,re <span class=\"keyword\">int</span> _h)&#123;</span><br><span class=\"line\">        f=_f;</span><br><span class=\"line\">        g=_g;</span><br><span class=\"line\">        h=_h;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> Query <span class=\"title\">query</span><span class=\"params\">(re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b,re <span class=\"keyword\">int</span> c,re <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!n)&#123;</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(b,<span class=\"number\">0</span>,<span class=\"number\">1L</span>L*b*b%mod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a)&#123;</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod,<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*b%mod,<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod*b%mod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c)&#123;</span><br><span class=\"line\">        re Query res=query(a%c,b%c,c,n);</span><br><span class=\"line\">        a/=c,</span><br><span class=\"line\">        b/=c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(</span><br><span class=\"line\">            (res.f+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*a%mod+<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod)%mod,</span><br><span class=\"line\">            (res.g+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*(<span class=\"number\">2</span>*n+<span class=\"number\">1</span>)%mod*I6%mod*a%mod+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*I2%mod*b%mod)%mod,</span><br><span class=\"line\">            (res.h+<span class=\"number\">2L</span>L*a*res.g%mod+<span class=\"number\">2L</span>L*b*res.f%mod</span><br><span class=\"line\">                  +<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*(<span class=\"number\">2</span>*n+<span class=\"number\">1</span>)%mod*I6%mod*a%mod*a%mod</span><br><span class=\"line\">                  +<span class=\"number\">1L</span>L*(n+<span class=\"number\">1</span>)*b%mod*b%mod+<span class=\"number\">1L</span>L*n*(n+<span class=\"number\">1</span>)%mod*a%mod*b%mod)%mod</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> m=(<span class=\"number\">1L</span>L*a*n+b)/c;</span><br><span class=\"line\">        re Query res=query(c,c-b<span class=\"number\">-1</span>,a,m<span class=\"number\">-1</span>);</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> tmp=((<span class=\"number\">1L</span>L*m*n%mod-res.f)%mod+mod)%mod;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Query(</span><br><span class=\"line\">            tmp,</span><br><span class=\"line\">            ((<span class=\"number\">1L</span>L*m*n%mod*(n+<span class=\"number\">1</span>)%mod-res.h-res.f)%mod+mod)*I2%mod,</span><br><span class=\"line\">            ((<span class=\"number\">1L</span>L*m*(m+<span class=\"number\">1</span>)%mod*n%mod<span class=\"number\">-2L</span>L*res.g%mod<span class=\"number\">-2L</span>L*res.f%mod-tmp)%mod+mod)%mod</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;t;--t)&#123;</span><br><span class=\"line\">        cltstream::read(n);</span><br><span class=\"line\">        cltstream::read(a);</span><br><span class=\"line\">        cltstream::read(b);</span><br><span class=\"line\">        cltstream::read(c);</span><br><span class=\"line\">        Query ans=query(a,b,c,n);</span><br><span class=\"line\">        cltstream::write(ans.f,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(ans.h,<span class=\"number\">32</span>);</span><br><span class=\"line\">        cltstream::write(ans.g,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么问题来了，这个东西有什么用啊。</p>\n<p><del>没啥用（</del></p>\n<p>其他的模板题我就不举了，我们来看一下<a href=\"https://www.luogu.org/problemnew/show/P4433\">这样一道题</a>。</p>\n<p>看到推平操作我们可以直接往珂朵莉树上想了。</p>\n<p>那么对于被推平的一段区间，我们将其压成一个节点丢到珂朵莉树上，然后维护六个信息<code>l,r,L,R,a,b</code>，表示其对应原序列中的$[l,r]$这段区间，里面一共有$\\sum_{i=L}^{R}ai\\operatorname{mod}b$颗石头。注意这里的<code>l,r,L,R</code>一定不要搞混<del>，我就是因为这样WA了整整四遍（</del>。</p>\n<p><del>这三个样例一定是故意的。</del></p>\n<p>然后每次我们初始化一个节点的时候直接算出节点内的石头总数，像下面这样：</p>\n<script type=\"math/tex; mode=display\">\\sum_{i=L}^{R}ai\\operatorname{mod}b=\\sum_{i=L}^{R}\\left(ai-\\lfloor\\cfrac{ai}{b}\\rfloor b\\right)=\\cfrac{(R+L)(R-L+1)}{2}-\\sum_{i=0}^{R}\\lfloor\\cfrac{ai}{b}\\rfloor b+\\sum_{i=0}^{L-1}\\lfloor\\cfrac{ai}{b}\\rfloor b</script><p>直接一波板子套上去。</p>\n<p>还有就是，这么算的话中间量会爆<code>long long</code>，我们可以考虑用<code>__int128_t</code>来存。不过这个类型在本地一般是编译不了的，虽然说交到OJ上基本没问题。我们可以</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> int __int128_t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<p>然后把一些没必要用或者是不能用<code>__int128_t</code>的改成<code>signed</code>即可。</p>\n<p>代码还是有必要贴一下的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> re register</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _it std::set<span class=\"meta-string\">&lt;node&gt;::iterator</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> int __int128_t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> cltstream&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> size 1048576</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltin[size+<span class=\"number\">1</span>],*ih=cltin,*it=cltin;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">char</span> <span class=\"title\">gc</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ih==it)&#123;</span><br><span class=\"line\">                it=(ih=cltin)+fread(cltin,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ih==it)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> *ih++;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> getchar();</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> cltout[size+<span class=\"number\">1</span>],*oh=cltout,*ot=cltout+size;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pc</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(oh==ot)&#123;</span><br><span class=\"line\">            fwrite(cltout,<span class=\"number\">1</span>,size,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">            oh=cltout;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *oh++=c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">define</span> clop() fwrite(cltstream::cltout,1,cltstream::oh-cltstream::cltout,stdout),cltstream::oh=cltstream::cltout</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">undef</span> size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">read</span><span class=\"params\">(_tp&amp; x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">signed</span> sn=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;c!=<span class=\"number\">45</span>&amp;&amp;(c&lt;<span class=\"number\">48</span>||c&gt;<span class=\"number\">57</span>)&amp;&amp;c!=EOF;c=gc());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c==<span class=\"number\">45</span>&amp;&amp;c!=EOF)</span><br><span class=\"line\">            sn=<span class=\"number\">-1</span>,c=gc();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(x=<span class=\"number\">0</span>;c&gt;=<span class=\"number\">48</span>&amp;&amp;c&lt;=<span class=\"number\">57</span>&amp;&amp;c!=EOF;x=(x&lt;&lt;<span class=\"number\">3</span>)+(x&lt;&lt;<span class=\"number\">1</span>)+(c^<span class=\"number\">48</span>),c=gc());</span><br><span class=\"line\">        x*=sn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> _tp&gt;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(_tp x,<span class=\"keyword\">char</span> text=<span class=\"number\">-1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(<span class=\"number\">45</span>),x=-x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!x)</span><br><span class=\"line\">            pc(<span class=\"number\">48</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">signed</span> digit[<span class=\"number\">50</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(digit[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;x;digit[++digit[<span class=\"number\">0</span>]]=x%<span class=\"number\">10</span>,x/=<span class=\"number\">10</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;digit[<span class=\"number\">0</span>];pc(digit[digit[<span class=\"number\">0</span>]--]^<span class=\"number\">48</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(text&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">            pc(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">simEuc</span><span class=\"params\">(re <span class=\"keyword\">int</span> n,re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b,re <span class=\"keyword\">int</span> c)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!n)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b/c;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> res=simEuc(n,a%c,b%c,c);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res+n*(n+<span class=\"number\">1</span>)*(a/c)/<span class=\"number\">2</span>+(n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> m=(a*n+b)/c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> m*n-simEuc(m<span class=\"number\">-1</span>,c,c-b<span class=\"number\">-1</span>,a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r,L,R,a,b,sum;</span><br><span class=\"line\"></span><br><span class=\"line\">    node(re <span class=\"keyword\">int</span> _l,re <span class=\"keyword\">int</span> _r,re <span class=\"keyword\">int</span> _L,re <span class=\"keyword\">int</span> _R,re <span class=\"keyword\">int</span> _a,re <span class=\"keyword\">int</span> _b)&#123;</span><br><span class=\"line\">        l=_l;</span><br><span class=\"line\">        r=_r;</span><br><span class=\"line\">        L=_L;</span><br><span class=\"line\">        R=_R;</span><br><span class=\"line\">        a=_a;</span><br><span class=\"line\">        b=_b;</span><br><span class=\"line\">        sum=(R+L)*(R-L+<span class=\"number\">1</span>)*a/<span class=\"number\">2</span>-simEuc(R,a,<span class=\"number\">0</span>,b)*b+simEuc(L<span class=\"number\">-1</span>,a,<span class=\"number\">0</span>,b)*b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">set</span>&lt;node&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(re node p1,re node p2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1.l&lt;p2.l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> _it <span class=\"title\">split</span><span class=\"params\">(re <span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    re _it it=s.lower_bound(node(pos,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it!=s.end()&amp;&amp;it-&gt;l==pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> it;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        --it;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> l=it-&gt;l,r=it-&gt;r,L=it-&gt;L,R=it-&gt;R,a=it-&gt;a,b=it-&gt;b;</span><br><span class=\"line\">        s.erase(it);</span><br><span class=\"line\">        s.insert(node(l,pos<span class=\"number\">-1</span>,L,L+pos-l<span class=\"number\">-1</span>,a,b));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.insert(node(pos,r,L+pos-l,R,a,b)).first;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">modifyStone</span><span class=\"params\">(re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r,re <span class=\"keyword\">int</span> a,re <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    re _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    s.erase(itl,itr);</span><br><span class=\"line\">    s.insert(node(l,r,<span class=\"number\">1</span>,r-l+<span class=\"number\">1</span>,a,b));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">queryStone</span><span class=\"params\">(re <span class=\"keyword\">int</span> l,re <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    re _it itr=split(r+<span class=\"number\">1</span>),itl=split(l);</span><br><span class=\"line\">    re <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;itl!=itr;res+=itl-&gt;sum,++itl);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cltstream::read(n);</span><br><span class=\"line\">    cltstream::read(m);</span><br><span class=\"line\">    s.insert(node(<span class=\"number\">1</span>,n,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(re <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        re <span class=\"keyword\">int</span> opt,l,r,a,b;</span><br><span class=\"line\">        cltstream::read(opt);</span><br><span class=\"line\">        cltstream::read(l);</span><br><span class=\"line\">        cltstream::read(r);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cltstream::read(a);</span><br><span class=\"line\">            cltstream::read(b);</span><br><span class=\"line\">            modifyStone(l,r,a,b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            cltstream::write(queryStone(l,r),<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clop();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckn32nfzj0001mku92x9d1lkn","category_id":"ckn32nfzq0004mku948du7dp6","_id":"ckn32nfzw000emku9ajmmdyjk"},{"post_id":"ckn32nfzo0003mku95fjab57d","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32nfzz000kmku9hnyxglko"},{"post_id":"ckn32nfzr0006mku9dzhlgpbe","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng01000qmku90szmajwb"},{"post_id":"ckn32ng00000mmku9dmh8eegy","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng03000vmku9ct2xhrkv"},{"post_id":"ckn32nfzs0007mku9frp32d06","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng04000zmku9gek79u41"},{"post_id":"ckn32ng01000omku9gpxc92qn","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng050011mku9hfik5idh"},{"post_id":"ckn32ng02000tmku9f1jxaitq","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng070014mku9ey65b893"},{"post_id":"ckn32nfzt0008mku9fbcbbgxn","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng070018mku95tiggf91"},{"post_id":"ckn32ng04000ymku9djscf8fn","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0a001cmku9c64i8x35"},{"post_id":"ckn32nfzu000cmku9a5xy4r6b","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32ng0b001gmku96yz25rhy"},{"post_id":"ckn32ng050010mku9af36f6it","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0c001imku9doip0z9k"},{"post_id":"ckn32ng060013mku98a7ge3gw","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0d001mmku9ee9sbr8t"},{"post_id":"ckn32nfzv000dmku98dyf3avz","category_id":"ckn32ng060012mku9czjycmbu","_id":"ckn32ng0i001omku9gq4n2wp4"},{"post_id":"ckn32ng070017mku97pw8goqx","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0k001smku95z926a4k"},{"post_id":"ckn32ng0a001bmku90ng1fi5w","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32ng0l001umku92hgu6180"},{"post_id":"ckn32ng0b001fmku9h3ndhfd5","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0m001xmku9gmow791h"},{"post_id":"ckn32nfzx000hmku9hgv1eugw","category_id":"ckn32ng080019mku997d3fe13","_id":"ckn32ng0m0020mku99epg916i"},{"post_id":"ckn32ng0c001lmku9cmkf9j2c","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0n0023mku9hassducs"},{"post_id":"ckn32nfzy000imku9h70369o1","category_id":"ckn32ng080019mku997d3fe13","_id":"ckn32ng0o0027mku99ilbd6v0"},{"post_id":"ckn32ng0d001nmku97b2h1yih","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32ng0o002amku970ae6n3v"},{"post_id":"ckn32ng0j001rmku9gyca0ur4","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32ng0p002fmku9hpyq5axw"},{"post_id":"ckn32ng03000umku9e0xhgqhb","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32ng0q002imku9318xgwvy"},{"post_id":"ckn32ng0k001tmku9bxpef9zx","category_id":"ckn32ng060012mku9czjycmbu","_id":"ckn32ng0r002mmku9c11e9bvf"},{"post_id":"ckn32ng0l001wmku91s7357be","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0r002pmku9cjrxfe9p"},{"post_id":"ckn32ng0b001hmku98y64g7f4","category_id":"ckn32ng0l001vmku9b0jzbrcq","_id":"ckn32ng0s002tmku9gmnebibs"},{"post_id":"ckn32ng0m001zmku92ivzh049","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0t002wmku92p6ogo1d"},{"post_id":"ckn32ng0n0022mku9e4r24z45","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0t002zmku96tdo933q"},{"post_id":"ckn32ng0o0029mku9dfpve9do","category_id":"ckn32ng060012mku9czjycmbu","_id":"ckn32ng0u0032mku9hzmd21tw"},{"post_id":"ckn32ng0p002emku93mqq3or5","category_id":"ckn32ng0l001vmku9b0jzbrcq","_id":"ckn32ng0v0035mku99kcvdviv"},{"post_id":"ckn32ng0p002hmku9bdad5kbx","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0v0038mku9807h85tw"},{"post_id":"ckn32ng0n0026mku9dzljded4","category_id":"ckn32ng0p002cmku98gs6dxst","_id":"ckn32ng0w003bmku9hwns5ro5"},{"post_id":"ckn32ng0q002lmku99cru1bmy","category_id":"ckn32ng0l001vmku9b0jzbrcq","_id":"ckn32ng0x003emku934e4bbiq"},{"post_id":"ckn32ng0r002omku93fqic0w8","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0y003hmku99zzwekgv"},{"post_id":"ckn32ng0s002smku91q7k15ro","category_id":"ckn32ng0l001vmku9b0jzbrcq","_id":"ckn32ng0y003kmku948zo5pph"},{"post_id":"ckn32ng0s002vmku9ey2v6xh9","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0z003nmku97yckhki9"},{"post_id":"ckn32ng0t002ymku9c0s69wdi","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32ng0z003pmku9aisvahfl"},{"post_id":"ckn32ng0u0031mku9d8s3d6t2","category_id":"ckn32ng0l001vmku9b0jzbrcq","_id":"ckn32ng0z003qmku9bp9y9foo"},{"post_id":"ckn32ng0x003dmku9bv1g7lwe","category_id":"ckn32ng0v0039mku97unac3c2","_id":"ckn32ng0z003smku99qnx3ct7"},{"post_id":"ckn32ng0u0034mku922w1aclo","category_id":"ckn32ng0v0039mku97unac3c2","_id":"ckn32ng0z003umku9a7zz9pzk"},{"post_id":"ckn32ng0v0037mku9e4bigugd","category_id":"ckn32ng0v0039mku97unac3c2","_id":"ckn32ng10003wmku9f2b09q7g"},{"post_id":"ckn32ng0w003amku95o2zbmeg","category_id":"ckn32ng0y003mmku96j6a2ivi","_id":"ckn32ng10003zmku98wvygho9"},{"post_id":"ckn32nhmo007dmku9bcmidsxr","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhmt007mmku97vdz3wel"},{"post_id":"ckn32nhmp007fmku91x1e0tyd","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32nhmu007pmku94qxfft1o"},{"post_id":"ckn32nhmt007lmku92vvm3iuy","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhmx007umku94u480vqr"},{"post_id":"ckn32nhmu007omku9f6ia9bfx","category_id":"ckn32nfzt0009mku917zr94dj","_id":"ckn32nhmy007xmku9bhca3zur"},{"post_id":"ckn32nhmv007qmku90kci1mh6","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhn00080mku956mp2g1j"},{"post_id":"ckn32nhmr007imku9bo1p2su3","category_id":"ckn32nhmt007nmku9fspa6vyh","_id":"ckn32nhn10083mku9dgs83n4v"},{"post_id":"ckn32nhmw007tmku9fulnajkq","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhn20087mku9a8605dix"},{"post_id":"ckn32nhmx007wmku93dpf09cc","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhn30089mku91vg64lq9"},{"post_id":"ckn32nhmz007zmku9c4f56ial","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhn3008cmku945oy9p3k"},{"post_id":"ckn32nhn10082mku997b8a9t9","category_id":"ckn32ng060012mku9czjycmbu","_id":"ckn32nhn4008emku98q1vbgg9"},{"post_id":"ckn32nhn20086mku900mlhyg0","category_id":"ckn32ng0v0039mku97unac3c2","_id":"ckn32nhn4008gmku9d56s1tso"},{"post_id":"ckn32nhnj008wmku91mi5a2ib","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhnn0094mku97t5s9bbp"},{"post_id":"ckn32nhnk008ymku9e24f9x4l","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhno0097mku9dn9xcrvj"},{"post_id":"ckn32nhnl0091mku9g0qeajvw","category_id":"ckn32ng04000wmku99a44fc3j","_id":"ckn32nhnp009bmku93l56c1kz"}],"PostTag":[{"post_id":"ckn32nfzj0001mku92x9d1lkn","tag_id":"ckn32nfzr0005mku92tf1dpx0","_id":"ckn32nfzu000bmku9hkaie5ac"},{"post_id":"ckn32nfzo0003mku95fjab57d","tag_id":"ckn32nfzu000amku9gh4ah6vy","_id":"ckn32ng00000nmku90t9h3b7t"},{"post_id":"ckn32nfzo0003mku95fjab57d","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32ng01000rmku9e3mudrhv"},{"post_id":"ckn32nfzr0006mku9dzhlgpbe","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32ng070016mku92c6c9wdp"},{"post_id":"ckn32nfzr0006mku9dzhlgpbe","tag_id":"ckn32ng02000smku98cvv60rq","_id":"ckn32ng09001amku94ob41mnp"},{"post_id":"ckn32nfzr0006mku9dzhlgpbe","tag_id":"ckn32ng04000xmku9adqx4nu0","_id":"ckn32ng0b001emku95m4r6dwn"},{"post_id":"ckn32ng0l001wmku91s7357be","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32ng0n0021mku9ap466oe7"},{"post_id":"ckn32ng0m001zmku92ivzh049","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32ng0n0025mku92cqr9zja"},{"post_id":"ckn32nfzs0007mku9frp32d06","tag_id":"ckn32ng070015mku917wc8tr6","_id":"ckn32ng0o0028mku9c28ghouf"},{"post_id":"ckn32nfzs0007mku9frp32d06","tag_id":"ckn32ng0a001dmku9d9mrdb6p","_id":"ckn32ng0p002dmku9270b7shv"},{"post_id":"ckn32nfzs0007mku9frp32d06","tag_id":"ckn32ng0c001kmku9gefu6wlp","_id":"ckn32ng0p002gmku93xrwc87q"},{"post_id":"ckn32nfzs0007mku9frp32d06","tag_id":"ckn32ng0j001qmku9fqr4fgrq","_id":"ckn32ng0q002kmku9d70b6p0y"},{"post_id":"ckn32nfzs0007mku9frp32d06","tag_id":"ckn32ng02000smku98cvv60rq","_id":"ckn32ng0r002nmku9b7yn93z1"},{"post_id":"ckn32nfzt0008mku9fbcbbgxn","tag_id":"ckn32nfzu000amku9gh4ah6vy","_id":"ckn32ng0s002rmku9cvs02qwe"},{"post_id":"ckn32nfzt0008mku9fbcbbgxn","tag_id":"ckn32ng0o002bmku94ht7hgjx","_id":"ckn32ng0s002umku94f3sbarz"},{"post_id":"ckn32nfzu000cmku9a5xy4r6b","tag_id":"ckn32ng0q002jmku99kregzso","_id":"ckn32ng0t0030mku9aqvh0m3f"},{"post_id":"ckn32nfzu000cmku9a5xy4r6b","tag_id":"ckn32ng0r002qmku9ffrh7dv4","_id":"ckn32ng0u0033mku93qsng0yu"},{"post_id":"ckn32nfzv000dmku98dyf3avz","tag_id":"ckn32ng0t002xmku94gmyebgm","_id":"ckn32ng0x003fmku91czxbvoy"},{"post_id":"ckn32nfzv000dmku98dyf3avz","tag_id":"ckn32ng0v0036mku94yg0821t","_id":"ckn32ng0y003imku9e1ghhduj"},{"post_id":"ckn32nfzx000hmku9hgv1eugw","tag_id":"ckn32ng0w003cmku944afdblq","_id":"ckn32ng0y003lmku9b23e4v8q"},{"post_id":"ckn32nfzy000imku9h70369o1","tag_id":"ckn32ng0w003cmku944afdblq","_id":"ckn32ng0z003tmku93u7l1uh7"},{"post_id":"ckn32nfzy000imku9h70369o1","tag_id":"ckn32ng0z003omku985lhhzog","_id":"ckn32ng10003vmku9dk3offnz"},{"post_id":"ckn32ng00000mmku9dmh8eegy","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng10003ymku9fild2rba"},{"post_id":"ckn32ng01000omku9gpxc92qn","tag_id":"ckn32ng10003xmku9dc21hvgl","_id":"ckn32ng110044mku9dffpg6l9"},{"post_id":"ckn32ng01000omku9gpxc92qn","tag_id":"ckn32ng100040mku9f21l5f8o","_id":"ckn32ng110045mku97vo2ghcr"},{"post_id":"ckn32ng01000omku9gpxc92qn","tag_id":"ckn32ng100041mku94nuqdav5","_id":"ckn32ng110047mku978wrhgx9"},{"post_id":"ckn32ng01000omku9gpxc92qn","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng110048mku940xicj3r"},{"post_id":"ckn32ng02000tmku9f1jxaitq","tag_id":"ckn32ng110043mku95jxg1o0m","_id":"ckn32ng12004dmku90wip3bxw"},{"post_id":"ckn32ng02000tmku9f1jxaitq","tag_id":"ckn32ng110046mku9hyph3g12","_id":"ckn32ng12004emku96tybdyje"},{"post_id":"ckn32ng02000tmku9f1jxaitq","tag_id":"ckn32ng0w003cmku944afdblq","_id":"ckn32ng13004gmku9cpb0czad"},{"post_id":"ckn32ng02000tmku9f1jxaitq","tag_id":"ckn32ng12004amku9hj9d3dd1","_id":"ckn32ng13004hmku96adyew93"},{"post_id":"ckn32ng02000tmku9f1jxaitq","tag_id":"ckn32ng0j001qmku9fqr4fgrq","_id":"ckn32ng13004jmku9fh1mc5mp"},{"post_id":"ckn32ng03000umku9e0xhgqhb","tag_id":"ckn32ng12004cmku9hvvlbmz7","_id":"ckn32ng13004lmku928jcdg0m"},{"post_id":"ckn32ng03000umku9e0xhgqhb","tag_id":"ckn32ng13004fmku93c228h4a","_id":"ckn32ng13004mmku9bbsihp3f"},{"post_id":"ckn32ng03000umku9e0xhgqhb","tag_id":"ckn32ng13004imku94g8m3bf2","_id":"ckn32ng14004omku9dwo3g87w"},{"post_id":"ckn32ng04000ymku9djscf8fn","tag_id":"ckn32ng110043mku95jxg1o0m","_id":"ckn32ng14004smku91tb5hopt"},{"post_id":"ckn32ng04000ymku9djscf8fn","tag_id":"ckn32ng13004nmku99zvihpgz","_id":"ckn32ng14004tmku94y4c945s"},{"post_id":"ckn32ng04000ymku9djscf8fn","tag_id":"ckn32ng14004pmku9hhqv3feh","_id":"ckn32ng15004vmku92j1p93nx"},{"post_id":"ckn32ng04000ymku9djscf8fn","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng15004wmku9bppi6fff"},{"post_id":"ckn32ng050010mku9af36f6it","tag_id":"ckn32ng14004rmku9djmj6q0o","_id":"ckn32ng15004ymku9gc91buw5"},{"post_id":"ckn32ng050010mku9af36f6it","tag_id":"ckn32ng14004umku9badhcp0k","_id":"ckn32ng15004zmku96vsn5prk"},{"post_id":"ckn32ng060013mku98a7ge3gw","tag_id":"ckn32ng15004xmku96pr8a7tu","_id":"ckn32ng150052mku93g9x1of3"},{"post_id":"ckn32ng060013mku98a7ge3gw","tag_id":"ckn32ng150050mku94jr2ciqk","_id":"ckn32ng150053mku9doqr1cox"},{"post_id":"ckn32ng070017mku97pw8goqx","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng160055mku93v2y0uy9"},{"post_id":"ckn32ng0a001bmku90ng1fi5w","tag_id":"ckn32ng12004cmku9hvvlbmz7","_id":"ckn32ng160057mku92k7me70w"},{"post_id":"ckn32ng0b001fmku9h3ndhfd5","tag_id":"ckn32ng160056mku9d9a6e3th","_id":"ckn32ng17005bmku90jrq9qfa"},{"post_id":"ckn32ng0b001fmku9h3ndhfd5","tag_id":"ckn32ng160058mku9eow49ud1","_id":"ckn32ng17005cmku9bofj8gpu"},{"post_id":"ckn32ng0b001fmku9h3ndhfd5","tag_id":"ckn32ng160059mku92kl07zs6","_id":"ckn32ng17005emku905bx3w6z"},{"post_id":"ckn32ng0b001hmku98y64g7f4","tag_id":"ckn32ng16005amku9b9x55c0b","_id":"ckn32ng17005gmku9gk65hqj1"},{"post_id":"ckn32ng0b001hmku98y64g7f4","tag_id":"ckn32ng17005dmku96s4f7d2q","_id":"ckn32ng17005hmku9dnkddnv7"},{"post_id":"ckn32ng0c001lmku9cmkf9j2c","tag_id":"ckn32ng12004amku9hj9d3dd1","_id":"ckn32ng18005kmku9b9pu83cc"},{"post_id":"ckn32ng0c001lmku9cmkf9j2c","tag_id":"ckn32ng02000smku98cvv60rq","_id":"ckn32ng18005lmku9bhu1d2hr"},{"post_id":"ckn32ng0c001lmku9cmkf9j2c","tag_id":"ckn32ng17005imku9eed84q1p","_id":"ckn32ng18005nmku90iga2406"},{"post_id":"ckn32ng0d001nmku97b2h1yih","tag_id":"ckn32ng17005jmku90n1q5afo","_id":"ckn32ng18005pmku90zjl95uy"},{"post_id":"ckn32ng0d001nmku97b2h1yih","tag_id":"ckn32ng18005mmku91to6565m","_id":"ckn32ng18005qmku9h7407tc3"},{"post_id":"ckn32ng0j001rmku9gyca0ur4","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32ng19005smku93avfd8kz"},{"post_id":"ckn32ng0j001rmku9gyca0ur4","tag_id":"ckn32ng18005omku918cn0cuv","_id":"ckn32ng19005tmku996eg9e6f"},{"post_id":"ckn32ng0k001tmku9bxpef9zx","tag_id":"ckn32ng070015mku917wc8tr6","_id":"ckn32ng19005vmku9d3ex7sn0"},{"post_id":"ckn32ng0k001tmku9bxpef9zx","tag_id":"ckn32ng18005rmku91pscg6iy","_id":"ckn32ng19005wmku9ey8bd1ct"},{"post_id":"ckn32ng0n0022mku9e4r24z45","tag_id":"ckn32ng19005umku931b66rp8","_id":"ckn32ng19005ymku92lvf8xcb"},{"post_id":"ckn32ng0n0026mku9dzljded4","tag_id":"ckn32ng19005xmku993ir6fif","_id":"ckn32ng1a0060mku99h9j2720"},{"post_id":"ckn32ng0o0029mku9dfpve9do","tag_id":"ckn32ng070015mku917wc8tr6","_id":"ckn32ng1b0062mku94khi7el9"},{"post_id":"ckn32ng0o0029mku9dfpve9do","tag_id":"ckn32ng18005rmku91pscg6iy","_id":"ckn32ng1b0063mku95jqa034c"},{"post_id":"ckn32ng0p002emku93mqq3or5","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng1c0065mku97qo67m2m"},{"post_id":"ckn32ng0p002hmku9bdad5kbx","tag_id":"ckn32ng1b0064mku92v5563my","_id":"ckn32ng1c0068mku92b52fl3t"},{"post_id":"ckn32ng0p002hmku9bdad5kbx","tag_id":"ckn32ng1c0066mku90rh25qia","_id":"ckn32ng1c0069mku9a5qs90ia"},{"post_id":"ckn32ng0q002lmku99cru1bmy","tag_id":"ckn32ng1c0067mku9fcg45ykx","_id":"ckn32ng1d006dmku96bteez0p"},{"post_id":"ckn32ng0q002lmku99cru1bmy","tag_id":"ckn32ng1c006amku934xx7j2y","_id":"ckn32ng1d006emku9hhkyf7uz"},{"post_id":"ckn32ng0q002lmku99cru1bmy","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng1d006gmku9h3ca8jsv"},{"post_id":"ckn32ng0r002omku93fqic0w8","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng1d006hmku9ezz3g9t6"},{"post_id":"ckn32ng0s002smku91q7k15ro","tag_id":"ckn32ng1d006fmku92wdjhdcc","_id":"ckn32ng1d006jmku9fto5eqgi"},{"post_id":"ckn32ng0s002vmku9ey2v6xh9","tag_id":"ckn32ng1d006imku9b0j843i1","_id":"ckn32ng1e006mmku94wa39z4y"},{"post_id":"ckn32ng0s002vmku9ey2v6xh9","tag_id":"ckn32ng1d006kmku9e2m2c2ta","_id":"ckn32ng1e006nmku958mzfyou"},{"post_id":"ckn32ng0t002ymku9c0s69wdi","tag_id":"ckn32ng1e006lmku9d71z6m3l","_id":"ckn32ng1f006rmku973regv0d"},{"post_id":"ckn32ng0t002ymku9c0s69wdi","tag_id":"ckn32ng150050mku94jr2ciqk","_id":"ckn32ng1f006smku91llza0uu"},{"post_id":"ckn32ng0t002ymku9c0s69wdi","tag_id":"ckn32ng1e006pmku9ae5b4502","_id":"ckn32ng1f006umku963hz4a82"},{"post_id":"ckn32ng0u0031mku9d8s3d6t2","tag_id":"ckn32ng1e006qmku95423a8hi","_id":"ckn32ng1f006vmku960nrbb8m"},{"post_id":"ckn32ng0u0034mku922w1aclo","tag_id":"ckn32ng1f006tmku9bj9m8nyn","_id":"ckn32ng1g006xmku91q40b2zc"},{"post_id":"ckn32ng0v0037mku9e4bigugd","tag_id":"ckn32ng1f006tmku9bj9m8nyn","_id":"ckn32ng1g006zmku9dexi3rvy"},{"post_id":"ckn32ng0w003amku95o2zbmeg","tag_id":"ckn32ng02000smku98cvv60rq","_id":"ckn32ng1h0073mku9d63t3z0h"},{"post_id":"ckn32ng0w003amku95o2zbmeg","tag_id":"ckn32ng1g006ymku9f1hh7ja9","_id":"ckn32ng1h0074mku91vsg7bwr"},{"post_id":"ckn32ng0w003amku95o2zbmeg","tag_id":"ckn32ng16005amku9b9x55c0b","_id":"ckn32ng1h0076mku9hopu65d0"},{"post_id":"ckn32ng0w003amku95o2zbmeg","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32ng1i0077mku972n58b1u"},{"post_id":"ckn32ng0x003dmku9bv1g7lwe","tag_id":"ckn32ng1f006tmku9bj9m8nyn","_id":"ckn32ng1i0079mku92zz35t3n"},{"post_id":"ckn32ng0x003dmku9bv1g7lwe","tag_id":"ckn32ng1h0075mku9fgw3f0ib","_id":"ckn32ng1i007amku93ams8afr"},{"post_id":"ckn32ng0x003dmku9bv1g7lwe","tag_id":"ckn32ng1i0078mku937qyh37t","_id":"ckn32ng1i007bmku91scfe0jw"},{"post_id":"ckn32nhmo007dmku9bcmidsxr","tag_id":"ckn32ng160056mku9d9a6e3th","_id":"ckn32nhmr007gmku9792z6gbc"},{"post_id":"ckn32nhmp007fmku91x1e0tyd","tag_id":"ckn32nfzu000amku9gh4ah6vy","_id":"ckn32nhmw007smku9c0x3581j"},{"post_id":"ckn32nhmp007fmku91x1e0tyd","tag_id":"ckn32nhms007jmku9cn6s985w","_id":"ckn32nhmx007vmku9hq484nhu"},{"post_id":"ckn32nhmr007imku9bo1p2su3","tag_id":"ckn32nhmv007rmku9bjlieyhl","_id":"ckn32nhn00081mku9egtq003y"},{"post_id":"ckn32nhmr007imku9bo1p2su3","tag_id":"ckn32ng0w003cmku944afdblq","_id":"ckn32nhn10084mku9aa9ihe99"},{"post_id":"ckn32nhmt007lmku92vvm3iuy","tag_id":"ckn32nhmy007ymku9h3cnahh0","_id":"ckn32nhn20088mku90swr3qho"},{"post_id":"ckn32nhmt007lmku92vvm3iuy","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32nhn3008amku99cxe532q"},{"post_id":"ckn32nhmu007omku9f6ia9bfx","tag_id":"ckn32nfzu000amku9gh4ah6vy","_id":"ckn32nhn4008dmku9cxad6grn"},{"post_id":"ckn32nhmu007omku9f6ia9bfx","tag_id":"ckn32nhn10085mku9bttygx0c","_id":"ckn32nhn4008fmku9a7ok1a2t"},{"post_id":"ckn32nhmu007omku9f6ia9bfx","tag_id":"ckn32ng160059mku92kl07zs6","_id":"ckn32nhn4008imku9gscib9l0"},{"post_id":"ckn32nhmv007qmku90kci1mh6","tag_id":"ckn32nhn3008bmku95sq7dgsz","_id":"ckn32nhn4008jmku9couofn45"},{"post_id":"ckn32nhmw007tmku9fulnajkq","tag_id":"ckn32nhn4008hmku9evorboxs","_id":"ckn32nhn5008lmku97gvl80rq"},{"post_id":"ckn32nhmw007tmku9fulnajkq","tag_id":"ckn32ng150050mku94jr2ciqk","_id":"ckn32nhn5008mmku9b1m00ffy"},{"post_id":"ckn32nhmx007wmku93dpf09cc","tag_id":"ckn32nhn5008kmku9b4l6dscn","_id":"ckn32nhn5008omku954em6ivz"},{"post_id":"ckn32nhmz007zmku9c4f56ial","tag_id":"ckn32nhn5008nmku98mtd13p1","_id":"ckn32nhn6008qmku9gk80bar8"},{"post_id":"ckn32nhn10082mku997b8a9t9","tag_id":"ckn32ng070015mku917wc8tr6","_id":"ckn32nhn7008smku9gf0gdb5b"},{"post_id":"ckn32nhn10082mku997b8a9t9","tag_id":"ckn32nhn5008pmku9acerh98g","_id":"ckn32nhn7008tmku9eqtvatyi"},{"post_id":"ckn32nhn20086mku900mlhyg0","tag_id":"ckn32ng1f006tmku9bj9m8nyn","_id":"ckn32nhn7008umku93sj7ho8m"},{"post_id":"ckn32nhn20086mku900mlhyg0","tag_id":"ckn32nhn7008rmku9220c58h1","_id":"ckn32nhn7008vmku97heu3vxb"},{"post_id":"ckn32nhnk008ymku9e24f9x4l","tag_id":"ckn32nhmy007ymku9h3cnahh0","_id":"ckn32nhnn0093mku9863c465w"},{"post_id":"ckn32nhnk008ymku9e24f9x4l","tag_id":"ckn32ng0z003rmku99ndvgj9c","_id":"ckn32nhno0096mku9hdy3da67"},{"post_id":"ckn32nhnj008wmku91mi5a2ib","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32nhnp009amku9akap9ehc"},{"post_id":"ckn32nhnj008wmku91mi5a2ib","tag_id":"ckn32nhnl0090mku90y1u4b72","_id":"ckn32nhnq009dmku95ye46ntg"},{"post_id":"ckn32nhnl0091mku9g0qeajvw","tag_id":"ckn32nfzw000gmku98lr49gd2","_id":"ckn32nhnq009fmku9gf7p0j7x"},{"post_id":"ckn32nhnl0091mku9g0qeajvw","tag_id":"ckn32nhno0098mku9h3jf8uei","_id":"ckn32nhnr009hmku9htcif551"}],"Tag":[{"name":"其它","_id":"ckn32nfzr0005mku92tf1dpx0"},{"name":"洛谷","_id":"ckn32nfzu000amku9gh4ah6vy"},{"name":"数论","_id":"ckn32nfzw000gmku98lr49gd2"},{"name":"组合数学","_id":"ckn32ng02000smku98cvv60rq"},{"name":"期望","_id":"ckn32ng04000xmku9adqx4nu0"},{"name":"SDOI","_id":"ckn32ng070015mku917wc8tr6"},{"name":"2009","_id":"ckn32ng0a001dmku9d9mrdb6p"},{"name":"离散化","_id":"ckn32ng0c001kmku9gefu6wlp"},{"name":"树状数组","_id":"ckn32ng0j001qmku9fqr4fgrq"},{"name":"差分","_id":"ckn32ng0o002bmku94ht7hgjx"},{"name":"状态压缩","_id":"ckn32ng0q002jmku99kregzso"},{"name":"动态规划","_id":"ckn32ng0r002qmku9ffrh7dv4"},{"name":"NOIp","_id":"ckn32ng0t002xmku94gmyebgm"},{"name":"2018","_id":"ckn32ng0v0036mku94yg0821t"},{"name":"分块","_id":"ckn32ng0w003cmku944afdblq"},{"name":"块状分块","_id":"ckn32ng0z003omku985lhhzog"},{"name":"NTT","_id":"ckn32ng0z003rmku99ndvgj9c"},{"name":"AHOI","_id":"ckn32ng10003xmku9dc21hvgl"},{"name":"HNOI","_id":"ckn32ng100040mku9f21l5f8o"},{"name":"2017","_id":"ckn32ng100041mku94nuqdav5"},{"name":"HEOI","_id":"ckn32ng110043mku95jxg1o0m"},{"name":"2012","_id":"ckn32ng110046mku9hyph3g12"},{"name":"莫队","_id":"ckn32ng12004amku9hj9d3dd1"},{"name":"网络流","_id":"ckn32ng12004cmku9hvvlbmz7"},{"name":"最大流","_id":"ckn32ng13004fmku93c228h4a"},{"name":"预留推进","_id":"ckn32ng13004imku94g8m3bf2"},{"name":"TJOI","_id":"ckn32ng13004nmku99zvihpgz"},{"name":"2016","_id":"ckn32ng14004pmku9hhqv3feh"},{"name":"loli","_id":"ckn32ng14004rmku9djmj6q0o"},{"name":"模拟赛","_id":"ckn32ng14004umku9badhcp0k"},{"name":"树链剖分","_id":"ckn32ng15004xmku96pr8a7tu"},{"name":"LCT","_id":"ckn32ng150050mku94jr2ciqk"},{"name":"珂朵莉树","_id":"ckn32ng160056mku9d9a6e3th"},{"name":"平衡树","_id":"ckn32ng160058mku9eow49ud1"},{"name":"毒瘤","_id":"ckn32ng160059mku92kl07zs6"},{"name":"多项式","_id":"ckn32ng16005amku9b9x55c0b"},{"name":"三角函数","_id":"ckn32ng17005dmku96s4f7d2q"},{"name":"玄学","_id":"ckn32ng17005imku9eed84q1p"},{"name":"字符串","_id":"ckn32ng17005jmku90n1q5afo"},{"name":"SA","_id":"ckn32ng18005mmku91to6565m"},{"name":"伯努利数","_id":"ckn32ng18005omku918cn0cuv"},{"name":"2019","_id":"ckn32ng18005rmku91pscg6iy"},{"name":"容斥","_id":"ckn32ng19005umku931b66rp8"},{"name":"提交答案","_id":"ckn32ng19005xmku993ir6fif"},{"name":"DFS序","_id":"ckn32ng1b0064mku92v5563my"},{"name":"BFS序","_id":"ckn32ng1c0066mku90rh25qia"},{"name":"向量","_id":"ckn32ng1c0067mku9fcg45ykx"},{"name":"矩阵乘法","_id":"ckn32ng1c006amku934xx7j2y"},{"name":"斯特林数","_id":"ckn32ng1d006fmku92wdjhdcc"},{"name":"交互","_id":"ckn32ng1d006imku9b0j843i1"},{"name":"随机算法","_id":"ckn32ng1d006kmku9e2m2c2ta"},{"name":"点分治","_id":"ckn32ng1e006lmku9d71z6m3l"},{"name":"虚树","_id":"ckn32ng1e006pmku9ae5b4502"},{"name":"杂题","_id":"ckn32ng1e006qmku95423a8hi"},{"name":"东方","_id":"ckn32ng1f006tmku9bj9m8nyn"},{"name":"矩阵","_id":"ckn32ng1g006ymku9f1hh7ja9"},{"name":"STG","_id":"ckn32ng1h0075mku9fgw3f0ib"},{"name":"RPG","_id":"ckn32ng1i0078mku937qyh37t"},{"name":"线段树","_id":"ckn32nhms007jmku9cn6s985w"},{"name":"树套树","_id":"ckn32nhmv007rmku9bjlieyhl"},{"name":"FFT","_id":"ckn32nhmy007ymku9h3cnahh0"},{"name":"题目组","_id":"ckn32nhn10085mku9bttygx0c"},{"name":"min_25筛","_id":"ckn32nhn3008bmku95sq7dgsz"},{"name":"Splay","_id":"ckn32nhn4008hmku9evorboxs"},{"name":"生成函数","_id":"ckn32nhn5008kmku9b4l6dscn"},{"name":"FWT","_id":"ckn32nhn5008nmku98mtd13p1"},{"name":"2020","_id":"ckn32nhn5008pmku9acerh98g"},{"name":"Nono 443","_id":"ckn32nhn7008rmku9220c58h1"},{"name":"杜教筛","_id":"ckn32nhnl0090mku90y1u4b72"},{"name":"类欧几里得","_id":"ckn32nhno0098mku9h3jf8uei"}]}}